{
    "pipes": [],
    "interfaces": [
        {
            "name": "AccountDto",
            "id": "interface-AccountDto-232da923a91849216b5bb6c7b5bdb2707da34ac13510ce9d14083915cf011a6c54d9500fc95e8d150a6012bf3cf3b140a254e8f34bd8f23e73e497d668af5462",
            "file": "src/dtos/budget/budget-types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type BudgetType = 'PERSONAL' | 'SHARED';\n\nexport type AccountType =\n  | 'CHECKING_ACCOUNT'\n  | 'SAVINGS_ACCOUNT'\n  | 'PHYSICAL_WALLET'\n  | 'DIGITAL_WALLET'\n  | 'INVESTMENT_ACCOUNT';\n\nexport interface BudgetParticipantDto {\n  id: string;\n  name: string;\n  email: string;\n}\n\nexport interface BudgetTotalsDto {\n  accountsBalance: number;\n  monthIncome: number;\n  monthExpense: number;\n  netMonth: number;\n}\n\nexport interface AccountDto {\n  id: string;\n  name: string;\n  type: AccountType;\n  balance: number;\n}\n\nexport interface BudgetDto {\n  id: string;\n  name: string;\n  type: BudgetType;\n  participantsCount: number;\n}\n\nexport interface BudgetOverviewDto {\n  id: string;\n  name: string;\n  type: BudgetType;\n  participants: BudgetParticipantDto[];\n  totals: BudgetTotalsDto;\n  accounts: AccountDto[];\n}\n",
            "properties": [
                {
                    "name": "balance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccountType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "ApiConfig",
            "id": "interface-ApiConfig-8a1bf3acd1c98c8cb754d798baab15f1d41b075df2db86c9ecaca69c8c677d5ab19c3b596782de800f16d6bb2c75255dd60e5b5e6c58479cd08bb7df18950a02",
            "file": "src/app/core/services/config/config.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, signal, computed } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\n\nexport interface ApiConfig {\n  baseUrl: string;\n  timeout: number;\n  retryAttempts: number;\n}\n\nexport interface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n  appId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private readonly _isDevelopment = signal(environment.production === false);\n  private readonly _apiConfig = signal<ApiConfig>({\n    baseUrl: environment.apiUrl || 'http://localhost:3000/api',\n    timeout: 30000,\n    retryAttempts: 3,\n  });\n  private readonly _firebaseConfig = signal<FirebaseConfig>({\n    apiKey: environment.firebase.apiKey,\n    authDomain: environment.firebase.authDomain,\n    projectId: environment.firebase.projectId,\n    storageBucket: environment.firebase.storageBucket,\n    messagingSenderId: environment.firebase.messagingSenderId,\n    appId: environment.firebase.appId,\n  });\n\n  readonly isDevelopment = this._isDevelopment.asReadonly();\n  readonly apiConfig = this._apiConfig.asReadonly();\n  readonly firebaseConfig = this._firebaseConfig.asReadonly();\n\n  readonly apiBaseUrl = computed(() => this.apiConfig().baseUrl);\n  readonly apiTimeout = computed(() => this.apiConfig().timeout);\n  readonly apiRetryAttempts = computed(() => this.apiConfig().retryAttempts);\n\n  getApiUrl(endpoint: string): string {\n    const baseUrl = this.apiBaseUrl();\n    const cleanEndpoint = endpoint.startsWith('/') ? endpoint.slice(1) : endpoint;\n    return `${baseUrl}/${cleanEndpoint}`;\n  }\n\n  isFeatureEnabled(feature: string): boolean {\n    if (this.isDevelopment()) {\n      return true;\n    }\n\n    return environment.features?.[feature] ?? false;\n  }\n\n  getEnvironmentVariable(key: string): string | undefined {\n    return (environment as unknown as Record<string, unknown>)[key] as string | undefined;\n  }\n}\n",
            "properties": [
                {
                    "name": "baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "retryAttempts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "timeout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "ApiError",
            "id": "interface-ApiError-c1aec96d23bc3529dda31669022e1b83028b03f6b93dc60a6c043dffc0c24bc7af88b3d2d0ccfae25a596df47b27a4aab8f2c5c52b70b4e4c43aff60143f0701",
            "file": "src/app/core/services/api/api.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, retry, timeout } from 'rxjs/operators';\n\nimport { ConfigService } from '../config/config.service';\nimport { NotificationService } from '../notification/notification.service';\n\nexport interface ApiResponse<T = unknown> {\n  data: T;\n  meta?: {\n    count?: number;\n    page?: number;\n    pageSize?: number;\n    hasNext?: boolean;\n  };\n}\n\nexport interface ApiError {\n  message: string;\n  status: number;\n  code?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private readonly http = inject(HttpClient);\n  private readonly configService = inject(ConfigService);\n  private readonly notificationService = inject(NotificationService);\n\n  private readonly _isLoading = signal<boolean>(false);\n  private readonly _error = signal<ApiError | null>(null);\n\n  readonly isLoading = this._isLoading.asReadonly();\n  readonly error = this._error.asReadonly();\n\n  private get timeout(): number {\n    return this.configService.apiTimeout();\n  }\n\n  private get retryAttempts(): number {\n    return this.configService.apiRetryAttempts();\n  }\n\n  private createHeaders(additionalHeaders?: Record<string, string>): HttpHeaders {\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n      ...additionalHeaders,\n    };\n\n    return new HttpHeaders(headers);\n  }\n\n  private handleError(error: HttpErrorResponse): Observable<never> {\n    const apiError: ApiError = {\n      message: error.message || 'Erro desconhecido',\n      status: error.status,\n      code: error.error?.code,\n    };\n\n    this._error.set(apiError);\n    return throwError(() => apiError);\n  }\n\n  private executeRequest<T>(request: Observable<T>, showLoading = true): Observable<T> {\n    if (showLoading) {\n      this._isLoading.set(true);\n      this.notificationService.setLoading(true);\n    }\n\n    return request.pipe(\n      timeout(this.timeout),\n      retry(this.retryAttempts),\n      catchError((error) => {\n        this._isLoading.set(false);\n        this.notificationService.setLoading(false);\n        return this.handleError(error);\n      }),\n      map((response) => {\n        this._isLoading.set(false);\n        this.notificationService.setLoading(false);\n        this._error.set(null);\n        return response;\n      })\n    );\n  }\n\n  get<T>(\n    endpoint: string,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.get<ApiResponse<T>>(url, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  post<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.post<ApiResponse<T>>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  put<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.put<ApiResponse<T>>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  patch<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.patch<ApiResponse<T>>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  delete<T>(\n    endpoint: string,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.delete<ApiResponse<T>>(url, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  getRaw<T>(endpoint: string, params?: Record<string, string | number | boolean>): Observable<T> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.get<T>(url, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  postRaw<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<T> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.post<T>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  clearError(): void {\n    this._error.set(null);\n  }\n\n  setLoading(loading: boolean): void {\n    this._isLoading.set(loading);\n  }\n}\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "ApiResponse",
            "id": "interface-ApiResponse-c1aec96d23bc3529dda31669022e1b83028b03f6b93dc60a6c043dffc0c24bc7af88b3d2d0ccfae25a596df47b27a4aab8f2c5c52b70b4e4c43aff60143f0701",
            "file": "src/app/core/services/api/api.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, retry, timeout } from 'rxjs/operators';\n\nimport { ConfigService } from '../config/config.service';\nimport { NotificationService } from '../notification/notification.service';\n\nexport interface ApiResponse<T = unknown> {\n  data: T;\n  meta?: {\n    count?: number;\n    page?: number;\n    pageSize?: number;\n    hasNext?: boolean;\n  };\n}\n\nexport interface ApiError {\n  message: string;\n  status: number;\n  code?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private readonly http = inject(HttpClient);\n  private readonly configService = inject(ConfigService);\n  private readonly notificationService = inject(NotificationService);\n\n  private readonly _isLoading = signal<boolean>(false);\n  private readonly _error = signal<ApiError | null>(null);\n\n  readonly isLoading = this._isLoading.asReadonly();\n  readonly error = this._error.asReadonly();\n\n  private get timeout(): number {\n    return this.configService.apiTimeout();\n  }\n\n  private get retryAttempts(): number {\n    return this.configService.apiRetryAttempts();\n  }\n\n  private createHeaders(additionalHeaders?: Record<string, string>): HttpHeaders {\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n      ...additionalHeaders,\n    };\n\n    return new HttpHeaders(headers);\n  }\n\n  private handleError(error: HttpErrorResponse): Observable<never> {\n    const apiError: ApiError = {\n      message: error.message || 'Erro desconhecido',\n      status: error.status,\n      code: error.error?.code,\n    };\n\n    this._error.set(apiError);\n    return throwError(() => apiError);\n  }\n\n  private executeRequest<T>(request: Observable<T>, showLoading = true): Observable<T> {\n    if (showLoading) {\n      this._isLoading.set(true);\n      this.notificationService.setLoading(true);\n    }\n\n    return request.pipe(\n      timeout(this.timeout),\n      retry(this.retryAttempts),\n      catchError((error) => {\n        this._isLoading.set(false);\n        this.notificationService.setLoading(false);\n        return this.handleError(error);\n      }),\n      map((response) => {\n        this._isLoading.set(false);\n        this.notificationService.setLoading(false);\n        this._error.set(null);\n        return response;\n      })\n    );\n  }\n\n  get<T>(\n    endpoint: string,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.get<ApiResponse<T>>(url, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  post<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.post<ApiResponse<T>>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  put<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.put<ApiResponse<T>>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  patch<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.patch<ApiResponse<T>>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  delete<T>(\n    endpoint: string,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.delete<ApiResponse<T>>(url, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  getRaw<T>(endpoint: string, params?: Record<string, string | number | boolean>): Observable<T> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.get<T>(url, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  postRaw<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<T> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.post<T>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  clearError(): void {\n    this._error.set(null);\n  }\n\n  setLoading(loading: boolean): void {\n    this._isLoading.set(loading);\n  }\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "meta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "AuthCredentials",
            "id": "interface-AuthCredentials-b3953c73f49a0d8228f9886b63209dc665a6efce03d4d21c27dbf48c350a38823b6d306537d8e0b2c350cc767517d8e43123184b033c38fd7d9a976e82a90915",
            "file": "src/app/core/adapters/external-auth-service.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\n\nexport interface AuthUser {\n  id: string;\n  email: string | null;\n  name: string | null;\n  avatar: string | null;\n  metadata?: Record<string, unknown>;\n}\n\nexport interface AuthCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResult {\n  user: AuthUser;\n  token?: string;\n  refreshToken?: string;\n}\n\nexport interface ExternalAuthServiceAdapter {\n  initializeAuthState(onAuthStateChanged: (user: AuthUser | null) => void): void;\n  signIn(credentials: AuthCredentials): Promise<AuthResult>;\n  signOut(): Promise<void>;\n  getToken(): Promise<string | null>;\n  refreshToken(): Promise<string | null>;\n  getCurrentUser(): AuthUser | null;\n  isAuthenticated(): boolean;\n}\n\nexport const EXTERNAL_AUTH_SERVICE_ADAPTER = new InjectionToken<ExternalAuthServiceAdapter>(\n  'ExternalAuthServiceAdapter'\n);\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "AuthResult",
            "id": "interface-AuthResult-b3953c73f49a0d8228f9886b63209dc665a6efce03d4d21c27dbf48c350a38823b6d306537d8e0b2c350cc767517d8e43123184b033c38fd7d9a976e82a90915",
            "file": "src/app/core/adapters/external-auth-service.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\n\nexport interface AuthUser {\n  id: string;\n  email: string | null;\n  name: string | null;\n  avatar: string | null;\n  metadata?: Record<string, unknown>;\n}\n\nexport interface AuthCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResult {\n  user: AuthUser;\n  token?: string;\n  refreshToken?: string;\n}\n\nexport interface ExternalAuthServiceAdapter {\n  initializeAuthState(onAuthStateChanged: (user: AuthUser | null) => void): void;\n  signIn(credentials: AuthCredentials): Promise<AuthResult>;\n  signOut(): Promise<void>;\n  getToken(): Promise<string | null>;\n  refreshToken(): Promise<string | null>;\n  getCurrentUser(): AuthUser | null;\n  isAuthenticated(): boolean;\n}\n\nexport const EXTERNAL_AUTH_SERVICE_ADAPTER = new InjectionToken<ExternalAuthServiceAdapter>(\n  'ExternalAuthServiceAdapter'\n);\n",
            "properties": [
                {
                    "name": "refreshToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthUser",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "AuthUser",
            "id": "interface-AuthUser-b3953c73f49a0d8228f9886b63209dc665a6efce03d4d21c27dbf48c350a38823b6d306537d8e0b2c350cc767517d8e43123184b033c38fd7d9a976e82a90915",
            "file": "src/app/core/adapters/external-auth-service.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\n\nexport interface AuthUser {\n  id: string;\n  email: string | null;\n  name: string | null;\n  avatar: string | null;\n  metadata?: Record<string, unknown>;\n}\n\nexport interface AuthCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResult {\n  user: AuthUser;\n  token?: string;\n  refreshToken?: string;\n}\n\nexport interface ExternalAuthServiceAdapter {\n  initializeAuthState(onAuthStateChanged: (user: AuthUser | null) => void): void;\n  signIn(credentials: AuthCredentials): Promise<AuthResult>;\n  signOut(): Promise<void>;\n  getToken(): Promise<string | null>;\n  refreshToken(): Promise<string | null>;\n  getCurrentUser(): AuthUser | null;\n  isAuthenticated(): boolean;\n}\n\nexport const EXTERNAL_AUTH_SERVICE_ADAPTER = new InjectionToken<ExternalAuthServiceAdapter>(\n  'ExternalAuthServiceAdapter'\n);\n",
            "properties": [
                {
                    "name": "avatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | >",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "BreadcrumbItem",
            "id": "interface-BreadcrumbItem-38ae10cab1312380b07aed5fc590dd34310eeaff52020b95f088e712388da6d70cc9a301f57e5b03fd181b806e6296bead7692fa4b88c7d178d4dd567a91ee1b",
            "file": "src/app/shared/ui-components/organisms/os-page-header/os-page-header.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, computed, input, output, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport interface BreadcrumbItem {\n  label: string;\n  route?: string;\n  disabled?: boolean;\n}\n\nexport interface PageHeaderAction {\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  size?: 'small' | 'medium' | 'large';\n  disabled?: boolean;\n  loading?: boolean;\n}\n\n@Component({\n  selector: 'os-page-header',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsButtonComponent, OsIconComponent],\n  template: `\n    <header class=\"os-page-header\" [class]=\"headerClasses()\" [attr.aria-label]=\"ariaLabel()\">\n      <div class=\"os-page-header__content\">\n        @if (breadcrumbs().length > 0) {\n        <nav class=\"os-page-header__breadcrumbs\" aria-label=\"Breadcrumb\">\n          <ol class=\"os-page-header__breadcrumb-list\">\n            @for (item of breadcrumbs(); track $index; let isLast = $last) {\n            <li class=\"os-page-header__breadcrumb-item\">\n              @if (item.route && !item.disabled && !isLast) {\n              <a\n                class=\"os-page-header__breadcrumb-link\"\n                [routerLink]=\"item.route\"\n                [attr.aria-current]=\"isLast ? 'page' : null\"\n              >\n                {{ item.label }}\n              </a>\n              } @else {\n              <span\n                class=\"os-page-header__breadcrumb-text\"\n                [class]=\"getBreadcrumbClasses(item, isLast)\"\n                [attr.aria-current]=\"isLast ? 'page' : null\"\n              >\n                {{ item.label }}\n              </span>\n              } @if (!isLast) {\n              <os-icon\n                name=\"chevron-right\"\n                size=\"sm\"\n                class=\"os-page-header__breadcrumb-separator\"\n                aria-hidden=\"true\"\n              />\n              }\n            </li>\n            }\n          </ol>\n        </nav>\n        }\n\n        <div class=\"os-page-header__main\">\n          <div class=\"os-page-header__title-section\">\n            @if (icon()) {\n            <os-icon\n              [name]=\"icon()!\"\n              [size]=\"iconSize()\"\n              class=\"os-page-header__icon\"\n              [attr.aria-hidden]=\"true\"\n            />\n            }\n            <div class=\"os-page-header__title-content\">\n              <h1 class=\"os-page-header__title\" [id]=\"titleId()\">\n                {{ title() }}\n              </h1>\n              @if (subtitle()) {\n              <p class=\"os-page-header__subtitle\" [id]=\"subtitleId()\">\n                {{ subtitle() }}\n              </p>\n              }\n            </div>\n          </div>\n\n          @if (actions().length > 0) {\n          <div class=\"os-page-header__actions\">\n            @for (action of actions(); track action.label) {\n            <os-button\n              [variant]=\"action.variant || 'secondary'\"\n              [size]=\"action.size || 'medium'\"\n              [disabled]=\"action.disabled || false\"\n              [loading]=\"action.loading || false\"\n              [icon]=\"action.icon || ''\"\n              (clicked)=\"onActionClick(action)\"\n            >\n              {{ action.label }}\n            </os-button>\n            }\n          </div>\n          }\n        </div>\n\n        @if (description()) {\n        <div class=\"os-page-header__description\" [id]=\"descriptionId()\">\n          {{ description() }}\n        </div>\n        }\n      </div>\n    </header>\n  `,\n  styleUrls: ['./os-page-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsPageHeaderComponent {\n  readonly title = input.required<string>();\n  readonly subtitle = input<string | null>(null);\n  readonly description = input<string | null>(null);\n  readonly icon = input<string | null>(null);\n  readonly breadcrumbs = input<BreadcrumbItem[]>([]);\n  readonly actions = input<PageHeaderAction[]>([]);\n  readonly variant = input<'default' | 'compact' | 'extended'>('default');\n  readonly size = input<'small' | 'medium' | 'large'>('medium');\n  readonly theme = input<'light' | 'dark'>('light');\n  readonly ariaLabel = input<string | null>(null);\n\n  readonly actionClick = output<PageHeaderAction>();\n\n  readonly titleId = signal(`page-title-${Math.random().toString(36).substr(2, 9)}`);\n  readonly subtitleId = signal(`page-subtitle-${Math.random().toString(36).substr(2, 9)}`);\n  readonly descriptionId = signal(`page-description-${Math.random().toString(36).substr(2, 9)}`);\n\n  readonly headerClasses = computed(() => {\n    const classes = ['os-page-header'];\n    classes.push(`os-page-header--${this.variant()}`);\n    classes.push(`os-page-header--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-page-header--dark');\n    }\n\n    if (this.breadcrumbs().length > 0) {\n      classes.push('os-page-header--with-breadcrumbs');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-page-header--with-actions');\n    }\n\n    if (this.description()) {\n      classes.push('os-page-header--with-description');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly iconSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  getBreadcrumbClasses(item: BreadcrumbItem, isLast: boolean): string {\n    const classes = ['os-page-header__breadcrumb-text'];\n\n    if (item.disabled) {\n      classes.push('os-page-header__breadcrumb-text--disabled');\n    }\n\n    if (isLast) {\n      classes.push('os-page-header__breadcrumb-text--current');\n    }\n\n    return classes.join(' ');\n  }\n\n  onActionClick(action: PageHeaderAction): void {\n    if (!action.disabled && !action.loading) {\n      this.actionClick.emit(action);\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "BudgetDto",
            "id": "interface-BudgetDto-232da923a91849216b5bb6c7b5bdb2707da34ac13510ce9d14083915cf011a6c54d9500fc95e8d150a6012bf3cf3b140a254e8f34bd8f23e73e497d668af5462",
            "file": "src/dtos/budget/budget-types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type BudgetType = 'PERSONAL' | 'SHARED';\n\nexport type AccountType =\n  | 'CHECKING_ACCOUNT'\n  | 'SAVINGS_ACCOUNT'\n  | 'PHYSICAL_WALLET'\n  | 'DIGITAL_WALLET'\n  | 'INVESTMENT_ACCOUNT';\n\nexport interface BudgetParticipantDto {\n  id: string;\n  name: string;\n  email: string;\n}\n\nexport interface BudgetTotalsDto {\n  accountsBalance: number;\n  monthIncome: number;\n  monthExpense: number;\n  netMonth: number;\n}\n\nexport interface AccountDto {\n  id: string;\n  name: string;\n  type: AccountType;\n  balance: number;\n}\n\nexport interface BudgetDto {\n  id: string;\n  name: string;\n  type: BudgetType;\n  participantsCount: number;\n}\n\nexport interface BudgetOverviewDto {\n  id: string;\n  name: string;\n  type: BudgetType;\n  participants: BudgetParticipantDto[];\n  totals: BudgetTotalsDto;\n  accounts: AccountDto[];\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "participantsCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "BudgetOverviewDto",
            "id": "interface-BudgetOverviewDto-232da923a91849216b5bb6c7b5bdb2707da34ac13510ce9d14083915cf011a6c54d9500fc95e8d150a6012bf3cf3b140a254e8f34bd8f23e73e497d668af5462",
            "file": "src/dtos/budget/budget-types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type BudgetType = 'PERSONAL' | 'SHARED';\n\nexport type AccountType =\n  | 'CHECKING_ACCOUNT'\n  | 'SAVINGS_ACCOUNT'\n  | 'PHYSICAL_WALLET'\n  | 'DIGITAL_WALLET'\n  | 'INVESTMENT_ACCOUNT';\n\nexport interface BudgetParticipantDto {\n  id: string;\n  name: string;\n  email: string;\n}\n\nexport interface BudgetTotalsDto {\n  accountsBalance: number;\n  monthIncome: number;\n  monthExpense: number;\n  netMonth: number;\n}\n\nexport interface AccountDto {\n  id: string;\n  name: string;\n  type: AccountType;\n  balance: number;\n}\n\nexport interface BudgetDto {\n  id: string;\n  name: string;\n  type: BudgetType;\n  participantsCount: number;\n}\n\nexport interface BudgetOverviewDto {\n  id: string;\n  name: string;\n  type: BudgetType;\n  participants: BudgetParticipantDto[];\n  totals: BudgetTotalsDto;\n  accounts: AccountDto[];\n}\n",
            "properties": [
                {
                    "name": "accounts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccountDto[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "participants",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetParticipantDto[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "totals",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetTotalsDto",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "BudgetParticipantDto",
            "id": "interface-BudgetParticipantDto-232da923a91849216b5bb6c7b5bdb2707da34ac13510ce9d14083915cf011a6c54d9500fc95e8d150a6012bf3cf3b140a254e8f34bd8f23e73e497d668af5462",
            "file": "src/dtos/budget/budget-types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type BudgetType = 'PERSONAL' | 'SHARED';\n\nexport type AccountType =\n  | 'CHECKING_ACCOUNT'\n  | 'SAVINGS_ACCOUNT'\n  | 'PHYSICAL_WALLET'\n  | 'DIGITAL_WALLET'\n  | 'INVESTMENT_ACCOUNT';\n\nexport interface BudgetParticipantDto {\n  id: string;\n  name: string;\n  email: string;\n}\n\nexport interface BudgetTotalsDto {\n  accountsBalance: number;\n  monthIncome: number;\n  monthExpense: number;\n  netMonth: number;\n}\n\nexport interface AccountDto {\n  id: string;\n  name: string;\n  type: AccountType;\n  balance: number;\n}\n\nexport interface BudgetDto {\n  id: string;\n  name: string;\n  type: BudgetType;\n  participantsCount: number;\n}\n\nexport interface BudgetOverviewDto {\n  id: string;\n  name: string;\n  type: BudgetType;\n  participants: BudgetParticipantDto[];\n  totals: BudgetTotalsDto;\n  accounts: AccountDto[];\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "BudgetSelection",
            "id": "interface-BudgetSelection-2f0daa74d88aeeb7faeea0eee70d0d6c6b177737266a24ad66437a5d3eaf4e9eb7d85f6e7760a84fa23361f6d547480f2a52374e63a4ab0208af39a2f417092d",
            "file": "src/app/features/dashboard/types/dashboard.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetDto, BudgetOverviewDto } from '../../../../dtos';\n\nexport interface BudgetSelection {\n  selectedBudgetId: string | null;\n  availableBudgets: BudgetDto[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface DashboardData {\n  budgetOverview: BudgetOverviewDto | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface WidgetConfiguration {\n  id: string;\n  type: WidgetType;\n  title: string;\n  size: WidgetSize;\n  position: WidgetPosition;\n  enabled: boolean;\n}\n\nexport type WidgetType =\n  | 'budget-summary'\n  | 'goal-progress'\n  | 'transaction-list'\n  | 'account-balance'\n  | 'monthly-trends'\n  | 'quick-actions';\n\nexport type WidgetSize = 'small' | 'medium' | 'large' | 'full-width';\n\nexport interface WidgetPosition {\n  row: number;\n  column: number;\n  rowSpan?: number;\n  columnSpan?: number;\n}\n\nexport interface DashboardState {\n  budgetSelection: BudgetSelection;\n  dashboardData: DashboardData;\n  widgetConfigurations: WidgetConfiguration[];\n  isInitialized: boolean;\n}\n\nexport interface QuickAction {\n  id: string;\n  label: string;\n  icon: string;\n  route: string;\n  variant: 'primary' | 'secondary' | 'outline';\n  disabled?: boolean;\n}\n\nexport interface DashboardMetrics {\n  totalAccounts: number;\n  totalBalance: number;\n  monthlyIncome: number;\n  monthlyExpense: number;\n  netMonthly: number;\n  goalsProgress: number;\n  recentTransactionsCount: number;\n}\n",
            "properties": [
                {
                    "name": "availableBudgets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetDto[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "selectedBudgetId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "BudgetSummaryData",
            "id": "interface-BudgetSummaryData-261c3659c4b2bf9e2dba3f98e01158af2ad2cf7ab308434e30b1c1788407de9c40bf3bad48490c5fd7c441083ff20351d9850bbde1f6381dbd549c41120129c2",
            "file": "src/app/shared/ui-components/organisms/os-budget-summary/os-budget-summary.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output, signal } from '@angular/core';\n\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsMoneyDisplayComponent } from '../../molecules/os-money-display/os-money-display.component';\n\nexport interface BudgetSummaryData {\n  id: string;\n  name: string;\n  totalBudget: number;\n  spentAmount: number;\n  remainingAmount: number;\n  percentage: number;\n  status: 'on-track' | 'over-budget' | 'under-budget' | 'completed';\n  category: string;\n  startDate: Date;\n  endDate: Date;\n  lastUpdated: Date;\n}\n\n@Component({\n  selector: 'os-budget-summary',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsCardComponent,\n    OsMoneyDisplayComponent,\n    OsBadgeComponent,\n    OsIconComponent,\n  ],\n  templateUrl: './os-budget-summary.component.html',\n  styleUrls: ['./os-budget-summary.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsBudgetSummaryComponent {\n  // Inputs\n  budgetData = input.required<BudgetSummaryData | null>();\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  showProgress = input<boolean>(true);\n  showStatus = input<boolean>(true);\n  showDates = input<boolean>(false);\n  clickable = input<boolean>(false);\n  showChart = input<boolean>(true);\n  loading = input<boolean>(false);\n  highlightTotals = input<boolean>(true);\n  animated = input<boolean>(true);\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n\n  // Outputs\n  cardClicked = output<BudgetSummaryData>();\n  chartClicked = output<{ type: 'pie' | 'bar'; data: BudgetSummaryData }>();\n\n  // Computed properties\n  readonly progressPercentage = computed(() => {\n    const data = this.budgetData();\n    return data ? Math.min(Math.max(data.percentage, 0), 100) : 0;\n  });\n\n  readonly statusInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'on-track':\n        return { type: 'success' as const, label: 'No Prazo', icon: 'check_circle' };\n      case 'over-budget':\n        return { type: 'error' as const, label: 'Acima do Orçamento', icon: 'warning' };\n      case 'under-budget':\n        return { type: 'warning' as const, label: 'Abaixo do Orçamento', icon: 'info' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  });\n\n  readonly isOverBudget = computed(() => {\n    const data = this.budgetData();\n    return data ? data.spentAmount > data.totalBudget : false;\n  });\n\n  readonly isCompleted = computed(() => {\n    const data = this.budgetData();\n    return data ? data.status === 'completed' : false;\n  });\n\n  readonly formattedDates = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showDates()) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      end: data.endDate.toLocaleDateString('pt-BR'),\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n    };\n  });\n\n  readonly chartData = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showChart()) return null;\n\n    const spent = data.spentAmount;\n    const remaining = Math.max(0, data.remainingAmount);\n    const overBudget = Math.max(0, data.spentAmount - data.totalBudget);\n\n    return {\n      spent: { value: spent, percentage: (spent / data.totalBudget) * 100, color: 'var(--os-color-primary)' },\n      remaining: { value: remaining, percentage: (remaining / data.totalBudget) * 100, color: 'var(--os-color-success)' },\n      overBudget: { value: overBudget, percentage: (overBudget / data.totalBudget) * 100, color: 'var(--os-color-error)' }\n    };\n  });\n\n  readonly effectiveAriaLabel = computed(() => {\n    const data = this.budgetData();\n    if (!data) return this.ariaLabel() || 'Resumo de orçamento';\n\n    const customLabel = this.ariaLabel();\n    if (customLabel) return customLabel;\n\n    return `Resumo do orçamento ${data.name}: ${data.percentage}% utilizado, ${data.status}`;\n  });\n\n  readonly cardClasses = computed(() => {\n    const variant = this.variant();\n    const size = this.size();\n    const clickable = this.clickable();\n    const loading = this.loading();\n    const animated = this.animated();\n\n    return [\n      'os-budget-summary',\n      `os-budget-summary--${variant}`,\n      `os-budget-summary--${size}`,\n      clickable ? 'os-budget-summary--clickable' : '',\n      loading ? 'os-budget-summary--loading' : '',\n      animated ? 'os-budget-summary--animated' : ''\n    ].filter(Boolean).join(' ');\n  });\n\n  // Methods\n  onCardClick(): void {\n    if (this.clickable() && this.budgetData()) {\n      this.cardClicked.emit(this.budgetData()!);\n    }\n  }\n\n  onChartClick(type: 'pie' | 'bar'): void {\n    if (this.budgetData()) {\n      this.chartClicked.emit({ type, data: this.budgetData()! });\n    }\n  }\n\n  getStatusColor(): string {\n    const status = this.statusInfo();\n    switch (status.type) {\n      case 'success':\n        return 'var(--os-color-success)';\n      case 'warning':\n        return 'var(--os-color-warning)';\n      case 'error':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n\n  getTotalHighlightClass(): string {\n    if (!this.highlightTotals()) return '';\n    return 'os-budget-summary__total--highlighted';\n  }\n\n  getChartType(): 'pie' | 'bar' {\n    return this.variant() === 'compact' ? 'pie' : 'bar';\n  }\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "lastUpdated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "percentage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "remainingAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "spentAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"on-track\" | \"over-budget\" | \"under-budget\" | \"completed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "totalBudget",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "BudgetTotalsDto",
            "id": "interface-BudgetTotalsDto-232da923a91849216b5bb6c7b5bdb2707da34ac13510ce9d14083915cf011a6c54d9500fc95e8d150a6012bf3cf3b140a254e8f34bd8f23e73e497d668af5462",
            "file": "src/dtos/budget/budget-types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type BudgetType = 'PERSONAL' | 'SHARED';\n\nexport type AccountType =\n  | 'CHECKING_ACCOUNT'\n  | 'SAVINGS_ACCOUNT'\n  | 'PHYSICAL_WALLET'\n  | 'DIGITAL_WALLET'\n  | 'INVESTMENT_ACCOUNT';\n\nexport interface BudgetParticipantDto {\n  id: string;\n  name: string;\n  email: string;\n}\n\nexport interface BudgetTotalsDto {\n  accountsBalance: number;\n  monthIncome: number;\n  monthExpense: number;\n  netMonth: number;\n}\n\nexport interface AccountDto {\n  id: string;\n  name: string;\n  type: AccountType;\n  balance: number;\n}\n\nexport interface BudgetDto {\n  id: string;\n  name: string;\n  type: BudgetType;\n  participantsCount: number;\n}\n\nexport interface BudgetOverviewDto {\n  id: string;\n  name: string;\n  type: BudgetType;\n  participants: BudgetParticipantDto[];\n  totals: BudgetTotalsDto;\n  accounts: AccountDto[];\n}\n",
            "properties": [
                {
                    "name": "accountsBalance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "monthExpense",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "monthIncome",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "netMonth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "BudgetTrackerData",
            "id": "interface-BudgetTrackerData-d345ac5e34787c9687b6b0592404f17afde997e52d3c5f0319e5c5c730c4a92e685c3a0359e322e031f0f2e711a913a8cc1d9cae9321d9eefbfe2ea3516a7239",
            "file": "src/app/shared/ui-components/organisms/os-budget-tracker/os-budget-tracker.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\n\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsMoneyDisplayComponent } from '../../molecules/os-money-display/os-money-display.component';\n\nexport interface BudgetTrackerData {\n  id: string;\n  name: string;\n  totalBudget: number;\n  spentAmount: number;\n  remainingAmount: number;\n  percentage: number;\n  status: 'on-track' | 'over-budget' | 'under-budget' | 'completed';\n  category: string;\n  startDate: Date;\n  endDate: Date;\n  lastUpdated: Date;\n  monthlySpending: MonthlySpending[];\n  trends: BudgetTrends;\n}\n\nexport interface MonthlySpending {\n  month: string;\n  year: number;\n  amount: number;\n  percentage: number;\n}\n\nexport interface BudgetTrends {\n  spendingTrend: 'increasing' | 'decreasing' | 'stable';\n  projection: number;\n  riskLevel: 'low' | 'medium' | 'high';\n}\n\n@Component({\n  selector: 'os-budget-tracker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsCardComponent,\n    OsMoneyDisplayComponent,\n    OsBadgeComponent,\n    OsIconComponent,\n    OsProgressBarComponent,\n    OsSpinnerComponent,\n  ],\n  templateUrl: './os-budget-tracker.component.html',\n  styleUrls: ['./os-budget-tracker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsBudgetTrackerComponent {\n  // Inputs\n  budgetData = input.required<BudgetTrackerData | null>();\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  showCharts = input<boolean>(true);\n  showTrends = input<boolean>(true);\n  showProjections = input<boolean>(true);\n  showStatus = input<boolean>(true);\n  loading = input<boolean>(false);\n  clickable = input<boolean>(false);\n\n  // Outputs\n  readonly budgetClick = output<BudgetTrackerData>();\n  readonly refreshClick = output<void>();\n  readonly exportClick = output<void>();\n\n  // Computed properties\n  readonly progressPercentage = computed(() => {\n    const data = this.budgetData();\n    return data ? Math.min(Math.max(data.percentage, 0), 100) : 0;\n  });\n\n  readonly statusInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'on-track':\n        return { type: 'success' as const, label: 'No Prazo', icon: 'check_circle' };\n      case 'over-budget':\n        return { type: 'error' as const, label: 'Acima do Orçamento', icon: 'warning' };\n      case 'under-budget':\n        return { type: 'warning' as const, label: 'Abaixo do Orçamento', icon: 'info' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  });\n\n  readonly isOverBudget = computed(() => {\n    const data = this.budgetData();\n    return data ? data.spentAmount > data.totalBudget : false;\n  });\n\n  readonly isCompleted = computed(() => {\n    const data = this.budgetData();\n    return data ? data.status === 'completed' : false;\n  });\n\n  readonly trendInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showTrends()) return null;\n\n    const trend = data.trends;\n    return {\n      icon: this.getTrendIcon(trend.spendingTrend),\n      label: this.getTrendLabel(trend.spendingTrend),\n      color: this.getTrendColor(trend.riskLevel),\n      riskLevel: trend.riskLevel,\n    };\n  });\n\n  readonly projectionInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showProjections()) return null;\n\n    const projection = data.trends.projection;\n    const remaining = data.remainingAmount;\n    const isProjectedOver = projection > remaining;\n\n    return {\n      value: projection,\n      isOver: isProjectedOver,\n      percentage: data.totalBudget > 0 ? (projection / data.totalBudget) * 100 : 0,\n    };\n  });\n\n  readonly monthlyData = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showCharts()) return [];\n\n    return data.monthlySpending.slice(-6); // Last 6 months\n  });\n\n  readonly formattedDates = computed(() => {\n    const data = this.budgetData();\n    if (!data) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      end: data.endDate.toLocaleDateString('pt-BR'),\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n    };\n  });\n\n  // Methods\n  onCardClick(): void {\n    const data = this.budgetData();\n    if (this.clickable() && data) {\n      this.budgetClick.emit(data);\n    }\n  }\n\n  onRefreshClick(): void {\n    this.refreshClick.emit();\n  }\n\n  onExportClick(): void {\n    this.exportClick.emit();\n  }\n\n  getStatusColor(): string {\n    const status = this.statusInfo();\n    switch (status.type) {\n      case 'success':\n        return 'var(--os-color-success)';\n      case 'warning':\n        return 'var(--os-color-warning)';\n      case 'error':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n\n  private getTrendIcon(trend: string): string {\n    switch (trend) {\n      case 'increasing':\n        return 'trending_up';\n      case 'decreasing':\n        return 'trending_down';\n      case 'stable':\n        return 'trending_flat';\n      default:\n        return 'trending_flat';\n    }\n  }\n\n  private getTrendLabel(trend: string): string {\n    switch (trend) {\n      case 'increasing':\n        return 'Crescendo';\n      case 'decreasing':\n        return 'Diminuindo';\n      case 'stable':\n        return 'Estável';\n      default:\n        return 'N/A';\n    }\n  }\n\n  private getTrendColor(riskLevel: string): string {\n    switch (riskLevel) {\n      case 'low':\n        return 'var(--os-color-success)';\n      case 'medium':\n        return 'var(--os-color-warning)';\n      case 'high':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n\n  getMonthName(month: string): string {\n    const months = {\n      '01': 'Jan',\n      '02': 'Fev',\n      '03': 'Mar',\n      '04': 'Abr',\n      '05': 'Mai',\n      '06': 'Jun',\n      '07': 'Jul',\n      '08': 'Ago',\n      '09': 'Set',\n      '10': 'Out',\n      '11': 'Nov',\n      '12': 'Dez',\n    };\n    return months[month as keyof typeof months] || month;\n  }\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "lastUpdated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "monthlySpending",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MonthlySpending[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "percentage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "remainingAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "spentAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"on-track\" | \"over-budget\" | \"under-budget\" | \"completed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "totalBudget",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "trends",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetTrends",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "BudgetTrends",
            "id": "interface-BudgetTrends-d345ac5e34787c9687b6b0592404f17afde997e52d3c5f0319e5c5c730c4a92e685c3a0359e322e031f0f2e711a913a8cc1d9cae9321d9eefbfe2ea3516a7239",
            "file": "src/app/shared/ui-components/organisms/os-budget-tracker/os-budget-tracker.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\n\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsMoneyDisplayComponent } from '../../molecules/os-money-display/os-money-display.component';\n\nexport interface BudgetTrackerData {\n  id: string;\n  name: string;\n  totalBudget: number;\n  spentAmount: number;\n  remainingAmount: number;\n  percentage: number;\n  status: 'on-track' | 'over-budget' | 'under-budget' | 'completed';\n  category: string;\n  startDate: Date;\n  endDate: Date;\n  lastUpdated: Date;\n  monthlySpending: MonthlySpending[];\n  trends: BudgetTrends;\n}\n\nexport interface MonthlySpending {\n  month: string;\n  year: number;\n  amount: number;\n  percentage: number;\n}\n\nexport interface BudgetTrends {\n  spendingTrend: 'increasing' | 'decreasing' | 'stable';\n  projection: number;\n  riskLevel: 'low' | 'medium' | 'high';\n}\n\n@Component({\n  selector: 'os-budget-tracker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsCardComponent,\n    OsMoneyDisplayComponent,\n    OsBadgeComponent,\n    OsIconComponent,\n    OsProgressBarComponent,\n    OsSpinnerComponent,\n  ],\n  templateUrl: './os-budget-tracker.component.html',\n  styleUrls: ['./os-budget-tracker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsBudgetTrackerComponent {\n  // Inputs\n  budgetData = input.required<BudgetTrackerData | null>();\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  showCharts = input<boolean>(true);\n  showTrends = input<boolean>(true);\n  showProjections = input<boolean>(true);\n  showStatus = input<boolean>(true);\n  loading = input<boolean>(false);\n  clickable = input<boolean>(false);\n\n  // Outputs\n  readonly budgetClick = output<BudgetTrackerData>();\n  readonly refreshClick = output<void>();\n  readonly exportClick = output<void>();\n\n  // Computed properties\n  readonly progressPercentage = computed(() => {\n    const data = this.budgetData();\n    return data ? Math.min(Math.max(data.percentage, 0), 100) : 0;\n  });\n\n  readonly statusInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'on-track':\n        return { type: 'success' as const, label: 'No Prazo', icon: 'check_circle' };\n      case 'over-budget':\n        return { type: 'error' as const, label: 'Acima do Orçamento', icon: 'warning' };\n      case 'under-budget':\n        return { type: 'warning' as const, label: 'Abaixo do Orçamento', icon: 'info' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  });\n\n  readonly isOverBudget = computed(() => {\n    const data = this.budgetData();\n    return data ? data.spentAmount > data.totalBudget : false;\n  });\n\n  readonly isCompleted = computed(() => {\n    const data = this.budgetData();\n    return data ? data.status === 'completed' : false;\n  });\n\n  readonly trendInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showTrends()) return null;\n\n    const trend = data.trends;\n    return {\n      icon: this.getTrendIcon(trend.spendingTrend),\n      label: this.getTrendLabel(trend.spendingTrend),\n      color: this.getTrendColor(trend.riskLevel),\n      riskLevel: trend.riskLevel,\n    };\n  });\n\n  readonly projectionInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showProjections()) return null;\n\n    const projection = data.trends.projection;\n    const remaining = data.remainingAmount;\n    const isProjectedOver = projection > remaining;\n\n    return {\n      value: projection,\n      isOver: isProjectedOver,\n      percentage: data.totalBudget > 0 ? (projection / data.totalBudget) * 100 : 0,\n    };\n  });\n\n  readonly monthlyData = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showCharts()) return [];\n\n    return data.monthlySpending.slice(-6); // Last 6 months\n  });\n\n  readonly formattedDates = computed(() => {\n    const data = this.budgetData();\n    if (!data) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      end: data.endDate.toLocaleDateString('pt-BR'),\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n    };\n  });\n\n  // Methods\n  onCardClick(): void {\n    const data = this.budgetData();\n    if (this.clickable() && data) {\n      this.budgetClick.emit(data);\n    }\n  }\n\n  onRefreshClick(): void {\n    this.refreshClick.emit();\n  }\n\n  onExportClick(): void {\n    this.exportClick.emit();\n  }\n\n  getStatusColor(): string {\n    const status = this.statusInfo();\n    switch (status.type) {\n      case 'success':\n        return 'var(--os-color-success)';\n      case 'warning':\n        return 'var(--os-color-warning)';\n      case 'error':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n\n  private getTrendIcon(trend: string): string {\n    switch (trend) {\n      case 'increasing':\n        return 'trending_up';\n      case 'decreasing':\n        return 'trending_down';\n      case 'stable':\n        return 'trending_flat';\n      default:\n        return 'trending_flat';\n    }\n  }\n\n  private getTrendLabel(trend: string): string {\n    switch (trend) {\n      case 'increasing':\n        return 'Crescendo';\n      case 'decreasing':\n        return 'Diminuindo';\n      case 'stable':\n        return 'Estável';\n      default:\n        return 'N/A';\n    }\n  }\n\n  private getTrendColor(riskLevel: string): string {\n    switch (riskLevel) {\n      case 'low':\n        return 'var(--os-color-success)';\n      case 'medium':\n        return 'var(--os-color-warning)';\n      case 'high':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n\n  getMonthName(month: string): string {\n    const months = {\n      '01': 'Jan',\n      '02': 'Fev',\n      '03': 'Mar',\n      '04': 'Abr',\n      '05': 'Mai',\n      '06': 'Jun',\n      '07': 'Jul',\n      '08': 'Ago',\n      '09': 'Set',\n      '10': 'Out',\n      '11': 'Nov',\n      '12': 'Dez',\n    };\n    return months[month as keyof typeof months] || month;\n  }\n}\n",
            "properties": [
                {
                    "name": "projection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "riskLevel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"low\" | \"medium\" | \"high\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "spendingTrend",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"increasing\" | \"decreasing\" | \"stable\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "Category",
            "id": "interface-Category-73907cd018e2c210042e745090330fc50ad91a75e64d2503351cbb2cfa2e5363ba55a8f2b3522ebe34f0b984d63143e1d65664782da04e77275597b83c82c107",
            "file": "src/app/shared/ui-components/organisms/os-category-manager/os-category-manager.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, computed, input, output, signal, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsInputComponent } from '../../atoms/os-input/os-input.component';\nimport { OsSelectComponent } from '../../atoms/os-select/os-select.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsLabelComponent } from '../../atoms/os-label/os-label.component';\nimport { OsFormGroupComponent } from '../../molecules/os-form-group/os-form-group.component';\nimport { OsFormFieldComponent } from '../../molecules/os-form-field/os-form-field.component';\nimport { FormsModule } from '@angular/forms';\n\nexport interface Category {\n  id: string;\n  name: string;\n  description?: string;\n  type: 'income' | 'expense' | 'transfer';\n  color?: string;\n  icon?: string;\n  active: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface CategoryFormData {\n  name: string;\n  description?: string;\n  type: 'income' | 'expense' | 'transfer';\n  color?: string;\n  icon?: string;\n  active: boolean;\n}\n\n@Component({\n  selector: 'os-category-manager',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    OsButtonComponent,\n    OsInputComponent,\n    OsSelectComponent,\n    OsIconComponent,\n    OsBadgeComponent,\n    OsLabelComponent,\n    OsFormGroupComponent,\n    OsFormFieldComponent,\n  ],\n  template: `\n    <div\n      class=\"os-category-manager\"\n      [class]=\"categoryManagerClasses()\"\n      [attr.aria-label]=\"ariaLabel()\"\n    >\n      <div class=\"os-category-manager__header\">\n        <h2 class=\"os-category-manager__title\">{{ title() }}</h2>\n        <div class=\"os-category-manager__actions\">\n          <os-button\n            variant=\"primary\"\n            size=\"small\"\n            (click)=\"onAddCategory()\"\n            [disabled]=\"loading()\"\n            [loading]=\"loading()\"\n          >\n            <os-icon name=\"plus\" size=\"sm\"></os-icon>\n            Adicionar Categoria\n          </os-button>\n        </div>\n      </div>\n\n      <div class=\"os-category-manager__content\">\n        <!-- Formulário de Categoria -->\n        <div class=\"os-category-manager__form\" *ngIf=\"showForm()\" [formGroup]=\"categoryForm\">\n          <os-form-group variant=\"default\" size=\"medium\">\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\" [required]=\"true\">\n                Nome da Categoria\n              </os-label>\n              <os-input\n                formControlName=\"name\"\n                variant=\"default\"\n                size=\"medium\"\n                placeholder=\"Digite o nome da categoria\"\n                [required]=\"true\"\n                [disabled]=\"loading()\"\n              ></os-input>\n              <div\n                class=\"os-category-manager__error\"\n                *ngIf=\"categoryForm.get('name')?.invalid && categoryForm.get('name')?.touched\"\n              >\n                <span *ngIf=\"categoryForm.get('name')?.errors?.['required']\"\n                  >Nome é obrigatório</span\n                >\n                <span *ngIf=\"categoryForm.get('name')?.errors?.['minlength']\"\n                  >Nome deve ter pelo menos 2 caracteres</span\n                >\n              </div>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\"> Descrição </os-label>\n              <os-input\n                formControlName=\"description\"\n                variant=\"default\"\n                size=\"medium\"\n                placeholder=\"Descrição opcional da categoria\"\n                [disabled]=\"loading()\"\n              ></os-input>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\" [required]=\"true\"> Tipo </os-label>\n              <os-select\n                formControlName=\"type\"\n                variant=\"default\"\n                size=\"medium\"\n                [options]=\"categoryTypeOptions\"\n                [required]=\"true\"\n                [disabled]=\"loading()\"\n              ></os-select>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\"> Cor </os-label>\n              <os-input\n                formControlName=\"color\"\n                variant=\"default\"\n                size=\"medium\"\n                type=\"text\"\n                [disabled]=\"loading()\"\n              ></os-input>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\"> Ícone </os-label>\n              <os-input\n                formControlName=\"icon\"\n                variant=\"default\"\n                size=\"medium\"\n                placeholder=\"Nome do ícone Font Awesome\"\n                [disabled]=\"loading()\"\n              ></os-input>\n            </os-form-field>\n\n            <div class=\"os-category-manager__form-actions\">\n              <os-button\n                variant=\"secondary\"\n                size=\"medium\"\n                (click)=\"onCancelEdit()\"\n                [disabled]=\"loading()\"\n              >\n                Cancelar\n              </os-button>\n              <os-button\n                variant=\"primary\"\n                size=\"medium\"\n                (click)=\"onSaveCategory()\"\n                [disabled]=\"categoryForm.invalid || loading()\"\n                [loading]=\"loading()\"\n              >\n                {{ editingCategory() ? 'Atualizar' : 'Criar' }}\n              </os-button>\n            </div>\n          </os-form-group>\n        </div>\n\n        <!-- Lista de Categorias -->\n        <div class=\"os-category-manager__list\">\n          <div class=\"os-category-manager__list-header\">\n            <h3 class=\"os-category-manager__list-title\">\n              Categorias ({{ filteredCategories().length }})\n            </h3>\n            <div class=\"os-category-manager__list-actions\">\n              <os-button\n                variant=\"tertiary\"\n                size=\"small\"\n                (click)=\"onToggleFilter()\"\n                [disabled]=\"loading()\"\n              >\n                <os-icon name=\"filter\" size=\"sm\"></os-icon>\n                {{ showFilter() ? 'Ocultar Filtros' : 'Mostrar Filtros' }}\n              </os-button>\n            </div>\n          </div>\n\n          <!-- Filtros -->\n          <div class=\"os-category-manager__filters\" *ngIf=\"showFilter()\">\n            <os-form-group variant=\"default\" size=\"small\">\n              <os-form-field variant=\"default\" size=\"small\">\n                <os-label variant=\"default\" size=\"small\"> Buscar </os-label>\n                <os-input\n                  [(ngModel)]=\"searchTerm\"\n                  variant=\"default\"\n                  size=\"small\"\n                  placeholder=\"Buscar por nome ou descrição\"\n                  [disabled]=\"loading()\"\n                ></os-input>\n              </os-form-field>\n\n              <os-form-field variant=\"default\" size=\"small\">\n                <os-label variant=\"default\" size=\"small\"> Tipo </os-label>\n                <os-select\n                  [(ngModel)]=\"filterType\"\n                  variant=\"default\"\n                  size=\"small\"\n                  [options]=\"filterTypeOptions\"\n                  [disabled]=\"loading()\"\n                ></os-select>\n              </os-form-field>\n\n              <os-form-field variant=\"default\" size=\"small\">\n                <os-label variant=\"default\" size=\"small\"> Status </os-label>\n                <os-select\n                  [(ngModel)]=\"filterStatus\"\n                  variant=\"default\"\n                  size=\"small\"\n                  [options]=\"filterStatusOptions\"\n                  [disabled]=\"loading()\"\n                ></os-select>\n              </os-form-field>\n            </os-form-group>\n          </div>\n\n          <!-- Lista -->\n          <div class=\"os-category-manager__items\">\n            <div\n              class=\"os-category-manager__item\"\n              *ngFor=\"let category of filteredCategories(); trackBy: trackByCategoryId\"\n              [class]=\"getCategoryItemClasses(category)\"\n            >\n              <div class=\"os-category-manager__item-content\">\n                <div class=\"os-category-manager__item-icon\" *ngIf=\"category.icon\">\n                  <os-icon [name]=\"category.icon\" size=\"md\"></os-icon>\n                </div>\n                <div class=\"os-category-manager__item-info\">\n                  <h4 class=\"os-category-manager__item-name\">{{ category.name }}</h4>\n                  <p class=\"os-category-manager__item-description\" *ngIf=\"category.description\">\n                    {{ category.description }}\n                  </p>\n                  <div class=\"os-category-manager__item-meta\">\n                    <os-badge [variant]=\"getCategoryTypeVariant(category.type)\" size=\"sm\">\n                      {{ getCategoryTypeLabel(category.type) }}\n                    </os-badge>\n                    <span class=\"os-category-manager__item-date\">\n                      {{ formatDate(category.updatedAt) }}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"os-category-manager__item-actions\">\n                <os-button\n                  variant=\"tertiary\"\n                  size=\"small\"\n                  (click)=\"onEditCategory(category)\"\n                  [disabled]=\"loading()\"\n                >\n                  <os-icon name=\"edit\" size=\"sm\"></os-icon>\n                </os-button>\n                <os-button\n                  variant=\"danger\"\n                  size=\"small\"\n                  (click)=\"onDeleteCategory(category)\"\n                  [disabled]=\"loading()\"\n                >\n                  <os-icon name=\"trash\" size=\"sm\"></os-icon>\n                </os-button>\n              </div>\n            </div>\n\n            <!-- Estado Vazio -->\n            <div class=\"os-category-manager__empty\" *ngIf=\"filteredCategories().length === 0\">\n              <os-icon name=\"folder-open\" size=\"lg\"></os-icon>\n              <h3>Nenhuma categoria encontrada</h3>\n              <p *ngIf=\"searchTerm || filterType || filterStatus\">\n                Tente ajustar os filtros para encontrar mais categorias.\n              </p>\n              <p *ngIf=\"!searchTerm && !filterType && !filterStatus\">\n                Comece criando sua primeira categoria.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./os-category-manager.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsCategoryManagerComponent {\n  // Inputs\n  title = input<string>('Gerenciador de Categorias');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n  categories = input<Category[]>([]);\n  loading = input<boolean>(false);\n  disabled = input<boolean>(false);\n\n  // Outputs\n  categoryAdded = output<CategoryFormData>();\n  categoryUpdated = output<{ id: string; data: CategoryFormData }>();\n  categoryDeleted = output<string>();\n  categorySelected = output<Category>();\n\n  // Signals\n  showFormSignal = signal<boolean>(false);\n  editingCategorySignal = signal<Category | null>(null);\n  showFilterSignal = signal<boolean>(false);\n  searchTermSignal = signal<string>('');\n  filterTypeSignal = signal<string>('');\n  filterStatusSignal = signal<string>('');\n\n  // Form\n  categoryForm: FormGroup;\n\n  // Options\n  categoryTypeOptions = [\n    { value: 'income', label: 'Receita' },\n    { value: 'expense', label: 'Despesa' },\n    { value: 'transfer', label: 'Transferência' },\n  ];\n\n  filterTypeOptions = [\n    { value: '', label: 'Todos os tipos' },\n    { value: 'income', label: 'Receita' },\n    { value: 'expense', label: 'Despesa' },\n    { value: 'transfer', label: 'Transferência' },\n  ];\n\n  filterStatusOptions = [\n    { value: '', label: 'Todos os status' },\n    { value: 'active', label: 'Ativas' },\n    { value: 'inactive', label: 'Inativas' },\n  ];\n\n  private fb = inject(FormBuilder);\n\n  constructor() {\n    this.categoryForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      description: [''],\n      type: ['expense', [Validators.required]],\n      color: ['#3B82F6'],\n      icon: [''],\n      active: [true],\n    });\n  }\n\n  // Computed properties\n  categoryManagerClasses = computed(() => {\n    return [\n      'os-category-manager',\n      `os-category-manager--${this.variant()}`,\n      `os-category-manager--${this.size()}`,\n      `os-category-manager--${this.theme()}`,\n      this.disabled() ? 'os-category-manager--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  ariaLabel = computed(() => {\n    return `Gerenciador de categorias ${this.variant()} ${this.size()}`;\n  });\n\n  showForm = computed(() => this.showFormSignal());\n\n  editingCategory = computed(() => this.editingCategorySignal());\n\n  showFilter = computed(() => this.showFilterSignal());\n\n  filteredCategories = computed(() => {\n    let filtered = this.categories();\n\n    // Filter by search term\n    const searchTerm = this.searchTermSignal().toLowerCase();\n    if (searchTerm) {\n      filtered = filtered.filter(\n        (category) =>\n          category.name.toLowerCase().includes(searchTerm) ||\n          (category.description && category.description.toLowerCase().includes(searchTerm))\n      );\n    }\n\n    // Filter by type\n    const filterType = this.filterTypeSignal();\n    if (filterType) {\n      filtered = filtered.filter((category) => category.type === filterType);\n    }\n\n    // Filter by status\n    const filterStatus = this.filterStatusSignal();\n    if (filterStatus) {\n      const isActive = filterStatus === 'active';\n      filtered = filtered.filter((category) => category.active === isActive);\n    }\n\n    return filtered;\n  });\n\n  // Getters for template\n  get searchTerm(): string {\n    return this.searchTermSignal();\n  }\n\n  set searchTerm(value: string) {\n    this.searchTermSignal.set(value);\n  }\n\n  get filterType(): string {\n    return this.filterTypeSignal();\n  }\n\n  set filterType(value: string) {\n    this.filterTypeSignal.set(value);\n  }\n\n  get filterStatus(): string {\n    return this.filterStatusSignal();\n  }\n\n  set filterStatus(value: string) {\n    this.filterStatusSignal.set(value);\n  }\n\n  // Methods\n  onAddCategory(): void {\n    this.editingCategorySignal.set(null);\n    this.categoryForm.reset({\n      name: '',\n      description: '',\n      type: 'expense',\n      color: '#3B82F6',\n      icon: '',\n      active: true,\n    });\n    this.showFormSignal.set(true);\n  }\n\n  onEditCategory(category: Category): void {\n    this.editingCategorySignal.set(category);\n    this.categoryForm.patchValue({\n      name: category.name,\n      description: category.description || '',\n      type: category.type,\n      color: category.color || '#3B82F6',\n      icon: category.icon || '',\n      active: category.active,\n    });\n    this.showFormSignal.set(true);\n  }\n\n  onSaveCategory(): void {\n    if (this.categoryForm.valid) {\n      const formData = this.categoryForm.value as CategoryFormData;\n\n      if (this.editingCategory()) {\n        this.categoryUpdated.emit({\n          id: this.editingCategory()!.id,\n          data: formData,\n        });\n      } else {\n        this.categoryAdded.emit(formData);\n      }\n\n      this.onCancelEdit();\n    }\n  }\n\n  onCancelEdit(): void {\n    this.showFormSignal.set(false);\n    this.editingCategorySignal.set(null);\n    this.categoryForm.reset();\n  }\n\n  onDeleteCategory(category: Category): void {\n    if (confirm(`Tem certeza que deseja excluir a categoria \"${category.name}\"?`)) {\n      this.categoryDeleted.emit(category.id);\n    }\n  }\n\n  onToggleFilter(): void {\n    this.showFilterSignal.set(!this.showFilterSignal());\n  }\n\n  onSelectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n  }\n\n  trackByCategoryId(index: number, category: Category): string {\n    return category.id;\n  }\n\n  getCategoryItemClasses(category: Category): string {\n    return [\n      'os-category-manager__item',\n      `os-category-manager__item--${category.type}`,\n      category.active ? 'os-category-manager__item--active' : 'os-category-manager__item--inactive',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  getCategoryTypeVariant(type: string): 'default' | 'success' | 'warning' | 'error' {\n    switch (type) {\n      case 'income':\n        return 'success';\n      case 'expense':\n        return 'error';\n      case 'transfer':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  }\n\n  getCategoryTypeLabel(type: string): string {\n    switch (type) {\n      case 'income':\n        return 'Receita';\n      case 'expense':\n        return 'Despesa';\n      case 'transfer':\n        return 'Transferência';\n      default:\n        return type;\n    }\n  }\n\n  formatDate(date: Date): string {\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    }).format(new Date(date));\n  }\n}\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"income\" | \"expense\" | \"transfer\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "updatedAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "CategoryFormData",
            "id": "interface-CategoryFormData-73907cd018e2c210042e745090330fc50ad91a75e64d2503351cbb2cfa2e5363ba55a8f2b3522ebe34f0b984d63143e1d65664782da04e77275597b83c82c107",
            "file": "src/app/shared/ui-components/organisms/os-category-manager/os-category-manager.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, computed, input, output, signal, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsInputComponent } from '../../atoms/os-input/os-input.component';\nimport { OsSelectComponent } from '../../atoms/os-select/os-select.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsLabelComponent } from '../../atoms/os-label/os-label.component';\nimport { OsFormGroupComponent } from '../../molecules/os-form-group/os-form-group.component';\nimport { OsFormFieldComponent } from '../../molecules/os-form-field/os-form-field.component';\nimport { FormsModule } from '@angular/forms';\n\nexport interface Category {\n  id: string;\n  name: string;\n  description?: string;\n  type: 'income' | 'expense' | 'transfer';\n  color?: string;\n  icon?: string;\n  active: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface CategoryFormData {\n  name: string;\n  description?: string;\n  type: 'income' | 'expense' | 'transfer';\n  color?: string;\n  icon?: string;\n  active: boolean;\n}\n\n@Component({\n  selector: 'os-category-manager',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    OsButtonComponent,\n    OsInputComponent,\n    OsSelectComponent,\n    OsIconComponent,\n    OsBadgeComponent,\n    OsLabelComponent,\n    OsFormGroupComponent,\n    OsFormFieldComponent,\n  ],\n  template: `\n    <div\n      class=\"os-category-manager\"\n      [class]=\"categoryManagerClasses()\"\n      [attr.aria-label]=\"ariaLabel()\"\n    >\n      <div class=\"os-category-manager__header\">\n        <h2 class=\"os-category-manager__title\">{{ title() }}</h2>\n        <div class=\"os-category-manager__actions\">\n          <os-button\n            variant=\"primary\"\n            size=\"small\"\n            (click)=\"onAddCategory()\"\n            [disabled]=\"loading()\"\n            [loading]=\"loading()\"\n          >\n            <os-icon name=\"plus\" size=\"sm\"></os-icon>\n            Adicionar Categoria\n          </os-button>\n        </div>\n      </div>\n\n      <div class=\"os-category-manager__content\">\n        <!-- Formulário de Categoria -->\n        <div class=\"os-category-manager__form\" *ngIf=\"showForm()\" [formGroup]=\"categoryForm\">\n          <os-form-group variant=\"default\" size=\"medium\">\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\" [required]=\"true\">\n                Nome da Categoria\n              </os-label>\n              <os-input\n                formControlName=\"name\"\n                variant=\"default\"\n                size=\"medium\"\n                placeholder=\"Digite o nome da categoria\"\n                [required]=\"true\"\n                [disabled]=\"loading()\"\n              ></os-input>\n              <div\n                class=\"os-category-manager__error\"\n                *ngIf=\"categoryForm.get('name')?.invalid && categoryForm.get('name')?.touched\"\n              >\n                <span *ngIf=\"categoryForm.get('name')?.errors?.['required']\"\n                  >Nome é obrigatório</span\n                >\n                <span *ngIf=\"categoryForm.get('name')?.errors?.['minlength']\"\n                  >Nome deve ter pelo menos 2 caracteres</span\n                >\n              </div>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\"> Descrição </os-label>\n              <os-input\n                formControlName=\"description\"\n                variant=\"default\"\n                size=\"medium\"\n                placeholder=\"Descrição opcional da categoria\"\n                [disabled]=\"loading()\"\n              ></os-input>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\" [required]=\"true\"> Tipo </os-label>\n              <os-select\n                formControlName=\"type\"\n                variant=\"default\"\n                size=\"medium\"\n                [options]=\"categoryTypeOptions\"\n                [required]=\"true\"\n                [disabled]=\"loading()\"\n              ></os-select>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\"> Cor </os-label>\n              <os-input\n                formControlName=\"color\"\n                variant=\"default\"\n                size=\"medium\"\n                type=\"text\"\n                [disabled]=\"loading()\"\n              ></os-input>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\"> Ícone </os-label>\n              <os-input\n                formControlName=\"icon\"\n                variant=\"default\"\n                size=\"medium\"\n                placeholder=\"Nome do ícone Font Awesome\"\n                [disabled]=\"loading()\"\n              ></os-input>\n            </os-form-field>\n\n            <div class=\"os-category-manager__form-actions\">\n              <os-button\n                variant=\"secondary\"\n                size=\"medium\"\n                (click)=\"onCancelEdit()\"\n                [disabled]=\"loading()\"\n              >\n                Cancelar\n              </os-button>\n              <os-button\n                variant=\"primary\"\n                size=\"medium\"\n                (click)=\"onSaveCategory()\"\n                [disabled]=\"categoryForm.invalid || loading()\"\n                [loading]=\"loading()\"\n              >\n                {{ editingCategory() ? 'Atualizar' : 'Criar' }}\n              </os-button>\n            </div>\n          </os-form-group>\n        </div>\n\n        <!-- Lista de Categorias -->\n        <div class=\"os-category-manager__list\">\n          <div class=\"os-category-manager__list-header\">\n            <h3 class=\"os-category-manager__list-title\">\n              Categorias ({{ filteredCategories().length }})\n            </h3>\n            <div class=\"os-category-manager__list-actions\">\n              <os-button\n                variant=\"tertiary\"\n                size=\"small\"\n                (click)=\"onToggleFilter()\"\n                [disabled]=\"loading()\"\n              >\n                <os-icon name=\"filter\" size=\"sm\"></os-icon>\n                {{ showFilter() ? 'Ocultar Filtros' : 'Mostrar Filtros' }}\n              </os-button>\n            </div>\n          </div>\n\n          <!-- Filtros -->\n          <div class=\"os-category-manager__filters\" *ngIf=\"showFilter()\">\n            <os-form-group variant=\"default\" size=\"small\">\n              <os-form-field variant=\"default\" size=\"small\">\n                <os-label variant=\"default\" size=\"small\"> Buscar </os-label>\n                <os-input\n                  [(ngModel)]=\"searchTerm\"\n                  variant=\"default\"\n                  size=\"small\"\n                  placeholder=\"Buscar por nome ou descrição\"\n                  [disabled]=\"loading()\"\n                ></os-input>\n              </os-form-field>\n\n              <os-form-field variant=\"default\" size=\"small\">\n                <os-label variant=\"default\" size=\"small\"> Tipo </os-label>\n                <os-select\n                  [(ngModel)]=\"filterType\"\n                  variant=\"default\"\n                  size=\"small\"\n                  [options]=\"filterTypeOptions\"\n                  [disabled]=\"loading()\"\n                ></os-select>\n              </os-form-field>\n\n              <os-form-field variant=\"default\" size=\"small\">\n                <os-label variant=\"default\" size=\"small\"> Status </os-label>\n                <os-select\n                  [(ngModel)]=\"filterStatus\"\n                  variant=\"default\"\n                  size=\"small\"\n                  [options]=\"filterStatusOptions\"\n                  [disabled]=\"loading()\"\n                ></os-select>\n              </os-form-field>\n            </os-form-group>\n          </div>\n\n          <!-- Lista -->\n          <div class=\"os-category-manager__items\">\n            <div\n              class=\"os-category-manager__item\"\n              *ngFor=\"let category of filteredCategories(); trackBy: trackByCategoryId\"\n              [class]=\"getCategoryItemClasses(category)\"\n            >\n              <div class=\"os-category-manager__item-content\">\n                <div class=\"os-category-manager__item-icon\" *ngIf=\"category.icon\">\n                  <os-icon [name]=\"category.icon\" size=\"md\"></os-icon>\n                </div>\n                <div class=\"os-category-manager__item-info\">\n                  <h4 class=\"os-category-manager__item-name\">{{ category.name }}</h4>\n                  <p class=\"os-category-manager__item-description\" *ngIf=\"category.description\">\n                    {{ category.description }}\n                  </p>\n                  <div class=\"os-category-manager__item-meta\">\n                    <os-badge [variant]=\"getCategoryTypeVariant(category.type)\" size=\"sm\">\n                      {{ getCategoryTypeLabel(category.type) }}\n                    </os-badge>\n                    <span class=\"os-category-manager__item-date\">\n                      {{ formatDate(category.updatedAt) }}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"os-category-manager__item-actions\">\n                <os-button\n                  variant=\"tertiary\"\n                  size=\"small\"\n                  (click)=\"onEditCategory(category)\"\n                  [disabled]=\"loading()\"\n                >\n                  <os-icon name=\"edit\" size=\"sm\"></os-icon>\n                </os-button>\n                <os-button\n                  variant=\"danger\"\n                  size=\"small\"\n                  (click)=\"onDeleteCategory(category)\"\n                  [disabled]=\"loading()\"\n                >\n                  <os-icon name=\"trash\" size=\"sm\"></os-icon>\n                </os-button>\n              </div>\n            </div>\n\n            <!-- Estado Vazio -->\n            <div class=\"os-category-manager__empty\" *ngIf=\"filteredCategories().length === 0\">\n              <os-icon name=\"folder-open\" size=\"lg\"></os-icon>\n              <h3>Nenhuma categoria encontrada</h3>\n              <p *ngIf=\"searchTerm || filterType || filterStatus\">\n                Tente ajustar os filtros para encontrar mais categorias.\n              </p>\n              <p *ngIf=\"!searchTerm && !filterType && !filterStatus\">\n                Comece criando sua primeira categoria.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./os-category-manager.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsCategoryManagerComponent {\n  // Inputs\n  title = input<string>('Gerenciador de Categorias');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n  categories = input<Category[]>([]);\n  loading = input<boolean>(false);\n  disabled = input<boolean>(false);\n\n  // Outputs\n  categoryAdded = output<CategoryFormData>();\n  categoryUpdated = output<{ id: string; data: CategoryFormData }>();\n  categoryDeleted = output<string>();\n  categorySelected = output<Category>();\n\n  // Signals\n  showFormSignal = signal<boolean>(false);\n  editingCategorySignal = signal<Category | null>(null);\n  showFilterSignal = signal<boolean>(false);\n  searchTermSignal = signal<string>('');\n  filterTypeSignal = signal<string>('');\n  filterStatusSignal = signal<string>('');\n\n  // Form\n  categoryForm: FormGroup;\n\n  // Options\n  categoryTypeOptions = [\n    { value: 'income', label: 'Receita' },\n    { value: 'expense', label: 'Despesa' },\n    { value: 'transfer', label: 'Transferência' },\n  ];\n\n  filterTypeOptions = [\n    { value: '', label: 'Todos os tipos' },\n    { value: 'income', label: 'Receita' },\n    { value: 'expense', label: 'Despesa' },\n    { value: 'transfer', label: 'Transferência' },\n  ];\n\n  filterStatusOptions = [\n    { value: '', label: 'Todos os status' },\n    { value: 'active', label: 'Ativas' },\n    { value: 'inactive', label: 'Inativas' },\n  ];\n\n  private fb = inject(FormBuilder);\n\n  constructor() {\n    this.categoryForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      description: [''],\n      type: ['expense', [Validators.required]],\n      color: ['#3B82F6'],\n      icon: [''],\n      active: [true],\n    });\n  }\n\n  // Computed properties\n  categoryManagerClasses = computed(() => {\n    return [\n      'os-category-manager',\n      `os-category-manager--${this.variant()}`,\n      `os-category-manager--${this.size()}`,\n      `os-category-manager--${this.theme()}`,\n      this.disabled() ? 'os-category-manager--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  ariaLabel = computed(() => {\n    return `Gerenciador de categorias ${this.variant()} ${this.size()}`;\n  });\n\n  showForm = computed(() => this.showFormSignal());\n\n  editingCategory = computed(() => this.editingCategorySignal());\n\n  showFilter = computed(() => this.showFilterSignal());\n\n  filteredCategories = computed(() => {\n    let filtered = this.categories();\n\n    // Filter by search term\n    const searchTerm = this.searchTermSignal().toLowerCase();\n    if (searchTerm) {\n      filtered = filtered.filter(\n        (category) =>\n          category.name.toLowerCase().includes(searchTerm) ||\n          (category.description && category.description.toLowerCase().includes(searchTerm))\n      );\n    }\n\n    // Filter by type\n    const filterType = this.filterTypeSignal();\n    if (filterType) {\n      filtered = filtered.filter((category) => category.type === filterType);\n    }\n\n    // Filter by status\n    const filterStatus = this.filterStatusSignal();\n    if (filterStatus) {\n      const isActive = filterStatus === 'active';\n      filtered = filtered.filter((category) => category.active === isActive);\n    }\n\n    return filtered;\n  });\n\n  // Getters for template\n  get searchTerm(): string {\n    return this.searchTermSignal();\n  }\n\n  set searchTerm(value: string) {\n    this.searchTermSignal.set(value);\n  }\n\n  get filterType(): string {\n    return this.filterTypeSignal();\n  }\n\n  set filterType(value: string) {\n    this.filterTypeSignal.set(value);\n  }\n\n  get filterStatus(): string {\n    return this.filterStatusSignal();\n  }\n\n  set filterStatus(value: string) {\n    this.filterStatusSignal.set(value);\n  }\n\n  // Methods\n  onAddCategory(): void {\n    this.editingCategorySignal.set(null);\n    this.categoryForm.reset({\n      name: '',\n      description: '',\n      type: 'expense',\n      color: '#3B82F6',\n      icon: '',\n      active: true,\n    });\n    this.showFormSignal.set(true);\n  }\n\n  onEditCategory(category: Category): void {\n    this.editingCategorySignal.set(category);\n    this.categoryForm.patchValue({\n      name: category.name,\n      description: category.description || '',\n      type: category.type,\n      color: category.color || '#3B82F6',\n      icon: category.icon || '',\n      active: category.active,\n    });\n    this.showFormSignal.set(true);\n  }\n\n  onSaveCategory(): void {\n    if (this.categoryForm.valid) {\n      const formData = this.categoryForm.value as CategoryFormData;\n\n      if (this.editingCategory()) {\n        this.categoryUpdated.emit({\n          id: this.editingCategory()!.id,\n          data: formData,\n        });\n      } else {\n        this.categoryAdded.emit(formData);\n      }\n\n      this.onCancelEdit();\n    }\n  }\n\n  onCancelEdit(): void {\n    this.showFormSignal.set(false);\n    this.editingCategorySignal.set(null);\n    this.categoryForm.reset();\n  }\n\n  onDeleteCategory(category: Category): void {\n    if (confirm(`Tem certeza que deseja excluir a categoria \"${category.name}\"?`)) {\n      this.categoryDeleted.emit(category.id);\n    }\n  }\n\n  onToggleFilter(): void {\n    this.showFilterSignal.set(!this.showFilterSignal());\n  }\n\n  onSelectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n  }\n\n  trackByCategoryId(index: number, category: Category): string {\n    return category.id;\n  }\n\n  getCategoryItemClasses(category: Category): string {\n    return [\n      'os-category-manager__item',\n      `os-category-manager__item--${category.type}`,\n      category.active ? 'os-category-manager__item--active' : 'os-category-manager__item--inactive',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  getCategoryTypeVariant(type: string): 'default' | 'success' | 'warning' | 'error' {\n    switch (type) {\n      case 'income':\n        return 'success';\n      case 'expense':\n        return 'error';\n      case 'transfer':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  }\n\n  getCategoryTypeLabel(type: string): string {\n    switch (type) {\n      case 'income':\n        return 'Receita';\n      case 'expense':\n        return 'Despesa';\n      case 'transfer':\n        return 'Transferência';\n      default:\n        return type;\n    }\n  }\n\n  formatDate(date: Date): string {\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    }).format(new Date(date));\n  }\n}\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"income\" | \"expense\" | \"transfer\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "CreateBudgetRequestDto",
            "id": "interface-CreateBudgetRequestDto-0bc19709a410e8094d082834554ff649fe9de285d656d7bad8b9324d2b8e5b60b89f327d0e1f34d3b1261e50fb90ff0cea31bbc016f6b67585a6d777481862c2",
            "file": "src/dtos/budget/create-budget-request-dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetType } from './budget-types';\n\nexport interface CreateBudgetRequestDto {\n  name: string;\n  ownerId: string;\n  type: BudgetType;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "ownerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "CreateBudgetResponseDto",
            "id": "interface-CreateBudgetResponseDto-e58ce39c854a03df74d89fb1c7a37ddbbd6f4e0b84ee752c5eae96655c825d9e127dd7ad0d440b80c0cc69b206b7dfb67b0f3403a2822702d95fb6a62ff0933a",
            "file": "src/dtos/budget/create-budget-response-dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CreateBudgetResponseDto {\n  id: string;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "DashboardData",
            "id": "interface-DashboardData-2f0daa74d88aeeb7faeea0eee70d0d6c6b177737266a24ad66437a5d3eaf4e9eb7d85f6e7760a84fa23361f6d547480f2a52374e63a4ab0208af39a2f417092d",
            "file": "src/app/features/dashboard/types/dashboard.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetDto, BudgetOverviewDto } from '../../../../dtos';\n\nexport interface BudgetSelection {\n  selectedBudgetId: string | null;\n  availableBudgets: BudgetDto[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface DashboardData {\n  budgetOverview: BudgetOverviewDto | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface WidgetConfiguration {\n  id: string;\n  type: WidgetType;\n  title: string;\n  size: WidgetSize;\n  position: WidgetPosition;\n  enabled: boolean;\n}\n\nexport type WidgetType =\n  | 'budget-summary'\n  | 'goal-progress'\n  | 'transaction-list'\n  | 'account-balance'\n  | 'monthly-trends'\n  | 'quick-actions';\n\nexport type WidgetSize = 'small' | 'medium' | 'large' | 'full-width';\n\nexport interface WidgetPosition {\n  row: number;\n  column: number;\n  rowSpan?: number;\n  columnSpan?: number;\n}\n\nexport interface DashboardState {\n  budgetSelection: BudgetSelection;\n  dashboardData: DashboardData;\n  widgetConfigurations: WidgetConfiguration[];\n  isInitialized: boolean;\n}\n\nexport interface QuickAction {\n  id: string;\n  label: string;\n  icon: string;\n  route: string;\n  variant: 'primary' | 'secondary' | 'outline';\n  disabled?: boolean;\n}\n\nexport interface DashboardMetrics {\n  totalAccounts: number;\n  totalBalance: number;\n  monthlyIncome: number;\n  monthlyExpense: number;\n  netMonthly: number;\n  goalsProgress: number;\n  recentTransactionsCount: number;\n}\n",
            "properties": [
                {
                    "name": "budgetOverview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetOverviewDto | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "DashboardLayout",
            "id": "interface-DashboardLayout-ad14cf1900516d48673867315a1fe3ac91d9218cca2a5d5befbbf5255f13b18b5b95837a50f51cf2124a5df50412715fd7e1f6348a18d13163b1b44192d997fc",
            "file": "src/app/shared/ui-components/templates/os-dashboard-template/os-dashboard-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ChangeDetectionStrategy, computed, input, output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  OsHeaderComponent,\n  HeaderNavigationItem,\n  HeaderAction,\n} from '../../organisms/os-header/os-header.component';\nimport { OsFooterComponent } from '../../organisms/os-footer/os-footer.component';\nimport { OsSidebarComponent, SidebarItem } from '../../organisms/os-sidebar/os-sidebar.component';\nimport {\n  OsBudgetSummaryComponent,\n  BudgetSummaryData,\n} from '../../organisms/os-budget-summary/os-budget-summary.component';\nimport {\n  OsGoalProgressComponent,\n  GoalProgressData,\n} from '../../organisms/os-goal-progress/os-goal-progress.component';\nimport { OsTransactionListComponent } from '../../organisms/os-transaction-list/os-transaction-list.component';\nimport { OsCategoryManagerComponent } from '../../organisms/os-category-manager/os-category-manager.component';\nimport {\n  OsBudgetTrackerComponent,\n  BudgetTrackerData,\n} from '../../organisms/os-budget-tracker/os-budget-tracker.component';\nimport {\n  OsGoalTrackerComponent,\n  GoalTrackerData,\n} from '../../organisms/os-goal-tracker/os-goal-tracker.component';\n\nexport interface DashboardWidget {\n  id: string;\n  title: string;\n  type:\n    | 'budget-summary'\n    | 'goal-progress'\n    | 'transaction-list'\n    | 'category-manager'\n    | 'budget-tracker'\n    | 'goal-tracker';\n  size: 'small' | 'medium' | 'large' | 'full';\n  position: { row: number; col: number };\n  data?: Record<string, unknown>;\n}\n\nexport interface DashboardLayout {\n  variant: 'default' | 'compact' | 'extended';\n  size: 'small' | 'medium' | 'large';\n  theme: 'light' | 'dark';\n  showHeader: boolean;\n  showSidebar: boolean;\n  showFooter: boolean;\n  sidebarCollapsed: boolean;\n}\n\n@Component({\n  selector: 'os-dashboard-template',\n  template: `\n    <div [class]=\"dashboardClass()\" [attr.aria-label]=\"ariaLabel()\">\n      @if (layout().showHeader) {\n      <os-header\n        [variant]=\"headerVariant()\"\n        [size]=\"layout().size\"\n        [theme]=\"layout().theme\"\n        [logo]=\"headerLogo()\"\n        (navigationClick)=\"onNavigationClick($event)\"\n        (userMenuItemClick)=\"onUserMenuClick($event)\"\n        (actionClick)=\"onActionClick($event)\"\n        (mobileMenuToggle)=\"onMobileMenuToggle($event)\"\n      />\n      }\n\n      <div class=\"os-dashboard-template__content\">\n        @if (layout().showSidebar) {\n        <os-sidebar\n          [items]=\"sidebarNavigation()\"\n          [variant]=\"sidebarVariant()\"\n          [size]=\"layout().size\"\n          [theme]=\"layout().theme\"\n          [collapsed]=\"layout().sidebarCollapsed\"\n          [title]=\"sidebarTitle()\"\n          [logo]=\"sidebarLogo()\"\n          [showHeader]=\"sidebarShowHeader()\"\n          [showFooter]=\"sidebarShowFooter()\"\n          [showToggleButton]=\"sidebarShowToggleButton()\"\n          (itemClick)=\"onSidebarNavigationClick($event)\"\n          (collapseChange)=\"onSidebarToggleClick($event)\"\n        />\n        }\n        <main class=\"os-dashboard-template__main\" [class]=\"mainClass()\">\n          @if (loading()) {\n          <div class=\"os-dashboard-template__loading\">\n            <div class=\"os-dashboard-template__spinner\"></div>\n            <p>Carregando dashboard...</p>\n          </div>\n          } @else if (emptyState() && widgets().length === 0) {\n          <div class=\"os-dashboard-template__empty\">\n            <div class=\"os-dashboard-template__empty-icon\">📊</div>\n            <h3>{{ emptyState()!.message }}</h3>\n            @if (emptyState()!.action) {\n            <button\n              class=\"os-dashboard-template__empty-action\"\n              (click)=\"onEmptyStateActionClick(emptyState()!.action!.action)\"\n            >\n              {{ emptyState()!.action!.label }}\n            </button>\n            }\n          </div>\n          } @else {\n          <div class=\"os-dashboard-template__grid\" [class]=\"gridClass()\">\n            @for (widget of widgets(); track widget.id) {\n            <div\n              class=\"os-dashboard-template__widget\"\n              [class]=\"widgetClass(widget)\"\n              [style.grid-column]=\"getWidgetGridColumn(widget)\"\n              [style.grid-row]=\"getWidgetGridRow(widget)\"\n              [attr.aria-label]=\"widget.title\"\n            >\n              @switch (widget.type) { @case ('budget-summary') {\n              <os-budget-summary\n                [variant]=\"getBudgetSummaryVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [budgetData]=\"getBudgetSummaryData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('goal-progress') {\n              <os-goal-progress\n                [variant]=\"getGoalProgressVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [goalData]=\"getGoalProgressData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('transaction-list') {\n              <os-transaction-list\n                [variant]=\"getTransactionListVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('category-manager') {\n              <os-category-manager\n                [variant]=\"getCategoryManagerVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('budget-tracker') {\n              <os-budget-tracker\n                [variant]=\"getBudgetTrackerVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [budgetData]=\"getBudgetTrackerData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('goal-tracker') {\n              <os-goal-tracker\n                [variant]=\"getGoalTrackerVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [goalData]=\"getGoalTrackerData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n          }\n        </main>\n      </div>\n\n      @if (layout().showFooter) {\n      <os-footer\n        [variant]=\"footerVariant()\"\n        [size]=\"layout().size\"\n        [theme]=\"layout().theme\"\n        (linkClick)=\"onFooterLinkClick()\"\n        (socialClick)=\"onFooterSocialClick()\"\n      />\n      }\n    </div>\n  `,\n  styleUrls: ['./os-dashboard-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsHeaderComponent,\n    OsFooterComponent,\n    OsSidebarComponent,\n    OsBudgetSummaryComponent,\n    OsGoalProgressComponent,\n    OsTransactionListComponent,\n    OsCategoryManagerComponent,\n    OsBudgetTrackerComponent,\n    OsGoalTrackerComponent,\n  ],\n})\nexport class OsDashboardTemplateComponent {\n  layout = input<DashboardLayout>({\n    variant: 'default',\n    size: 'medium',\n    theme: 'light',\n    showHeader: true,\n    showSidebar: true,\n    showFooter: true,\n    sidebarCollapsed: false,\n  });\n\n  widgets = input<DashboardWidget[]>([]);\n  loading = input<boolean>(false);\n  emptyState = input<{ message: string; action?: { label: string; action: string } } | null>(null);\n  headerLogo = input<string>('');\n  headerNavigation = input<{ label: string; route?: string; href?: string; icon?: string }[]>([]);\n  headerUser = input<{ name: string; avatar?: string; email?: string } | null>(null);\n  headerActions = input<{ label: string; icon?: string; action: string }[]>([]);\n  headerMobileMenu = input<{ label: string; route?: string; href?: string; icon?: string }[]>([]);\n  sidebarNavigation = input<SidebarItem[]>([]);\n  sidebarTitle = input<string>('');\n  sidebarLogo = input<string>('');\n  sidebarShowHeader = input<boolean>(true);\n  sidebarShowFooter = input<boolean>(false);\n  sidebarShowToggleButton = input<boolean>(true);\n  footerLinks = input<{ label: string; route?: string; href?: string; external?: boolean }[]>([]);\n  footerCopyright = input<string>('');\n  footerSocial = input<{ platform: string; url: string; icon?: string }[]>([]);\n\n  navigationClick = output<{ item: string; route?: string; href?: string }>();\n  userMenuClick = output<{ action: string; user: { name: string; email?: string } }>();\n  actionClick = output<{ action: string; label: string }>();\n  mobileMenuToggle = output<{ open: boolean }>();\n  sidebarNavigationClick = output<SidebarItem>();\n  sidebarToggleClick = output<{ collapsed: boolean }>();\n  sidebarHeaderClick = output<{ action: string }>();\n  sidebarFooterClick = output<{ action: string }>();\n  widgetClick = output<{ type: string; data: unknown; widget: DashboardWidget }>();\n  emptyStateActionClick = output<{ action: string }>();\n  footerLinkClick = output<{ label: string; route?: string; href?: string }>();\n  footerSocialClick = output<{ platform: string; url: string }>();\n\n  public dashboardClass = computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template',\n      `os-dashboard-template--${layout.variant}`,\n      `os-dashboard-template--${layout.size}`,\n      `os-dashboard-template--${layout.theme}`,\n      layout.sidebarCollapsed ? 'os-dashboard-template--sidebar-collapsed' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public mainClass = computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template__main',\n      layout.showSidebar ? 'os-dashboard-template__main--with-sidebar' : '',\n      layout.sidebarCollapsed ? 'os-dashboard-template__main--sidebar-collapsed' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public gridClass = computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template__grid',\n      `os-dashboard-template__grid--${layout.variant}`,\n      `os-dashboard-template__grid--${layout.size}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public ariaLabel = computed(() => {\n    return `Dashboard template with ${this.widgets().length} widgets`;\n  });\n\n  public headerVariant = computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'compact' : 'default';\n  });\n\n  public sidebarVariant = computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'minimal' : 'default';\n  });\n\n  public footerVariant = computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'minimal' : 'default';\n  });\n\n  public widgetClass = (widget: DashboardWidget) => {\n    return [\n      'os-dashboard-template__widget',\n      `os-dashboard-template__widget--${widget.type}`,\n      `os-dashboard-template__widget--${widget.size}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  };\n\n  public getWidgetVariant = (widget: DashboardWidget): string => {\n    return ((widget.data as Record<string, unknown>)?.['variant'] as string) || 'default';\n  };\n\n  public getWidgetSize = (widget: DashboardWidget): string => {\n    const sizeMap: Record<string, string> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n      full: 'large',\n    };\n    return sizeMap[widget.size] || 'medium';\n  };\n\n  public getWidgetData = (widget: DashboardWidget): Record<string, unknown> => {\n    return widget.data || {};\n  };\n\n  public getBudgetSummaryData = (widget: DashboardWidget): BudgetSummaryData => {\n    return widget.data as unknown as BudgetSummaryData;\n  };\n\n  public getGoalProgressData = (widget: DashboardWidget): GoalProgressData => {\n    return widget.data as unknown as GoalProgressData;\n  };\n\n  public getBudgetTrackerData = (widget: DashboardWidget): BudgetTrackerData => {\n    return widget.data as unknown as BudgetTrackerData;\n  };\n\n  public getGoalTrackerData = (widget: DashboardWidget): GoalTrackerData => {\n    return widget.data as unknown as GoalTrackerData;\n  };\n\n  public getBudgetSummaryVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getGoalProgressVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' | 'minimal' => {\n    return (\n      (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed' | 'minimal') || 'default'\n    );\n  };\n\n  public getTransactionListVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getCategoryManagerVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getBudgetTrackerVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getGoalTrackerVariant = (widget: DashboardWidget): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getWidgetSizeTyped = (widget: DashboardWidget): 'small' | 'medium' | 'large' => {\n    return (this.getWidgetSize(widget) as 'small' | 'medium' | 'large') || 'medium';\n  };\n\n  public getWidgetGridColumn = (widget: DashboardWidget): string => {\n    const colSpan = this.getWidgetColumnSpan(widget);\n    const startCol = widget.position.col;\n    const endCol = startCol + colSpan;\n    return `${startCol} / ${endCol}`;\n  };\n\n  public getWidgetGridRow = (widget: DashboardWidget): string => {\n    return `${widget.position.row}`;\n  };\n\n  private getWidgetColumnSpan = (widget: DashboardWidget): number => {\n    const sizeMap: Record<string, number> = {\n      small: 3, // 3 colunas\n      medium: 6, // 6 colunas\n      large: 9, // 9 colunas\n      full: 12, // 12 colunas (toda a largura)\n    };\n    return sizeMap[widget.size] || 6;\n  };\n\n  public onNavigationClick(event: { item: HeaderNavigationItem; event: MouseEvent }) {\n    this.navigationClick.emit({\n      item: event.item.label,\n      route: event.item.route,\n      href: undefined,\n    });\n  }\n\n  public onUserMenuClick(event: { item: { action?: string; label?: string }; event: MouseEvent }) {\n    this.userMenuClick.emit({\n      action: event.item.action || 'unknown',\n      user: { name: 'User', email: undefined },\n    });\n  }\n\n  public onActionClick(event: { action: HeaderAction; event: MouseEvent }) {\n    this.actionClick.emit({\n      action: event.action.label,\n      label: event.action.label,\n    });\n  }\n\n  public onMobileMenuToggle(open: boolean) {\n    this.mobileMenuToggle.emit({ open });\n  }\n\n  public onSidebarNavigationClick(event: SidebarItem) {\n    this.sidebarNavigationClick.emit(event);\n  }\n\n  public onSidebarToggleClick(collapsed: boolean) {\n    this.sidebarToggleClick.emit({ collapsed });\n  }\n\n  public onSidebarHeaderClick(event: { action: string }) {\n    this.sidebarHeaderClick.emit(event);\n  }\n\n  public onSidebarFooterClick(event: { action: string }) {\n    this.sidebarFooterClick.emit(event);\n  }\n\n  public onWidgetClick(type: string, event: MouseEvent) {\n    const widget = this.widgets().find((w) => w.type === type);\n    this.widgetClick.emit({ type, data: event, widget: widget! });\n  }\n\n  public onEmptyStateActionClick(action: string) {\n    this.emptyStateActionClick.emit({ action });\n  }\n\n  public onFooterLinkClick() {\n    this.footerLinkClick.emit({\n      label: 'Link',\n      route: undefined,\n      href: undefined,\n    });\n  }\n\n  public onFooterSocialClick() {\n    this.footerSocialClick.emit({\n      platform: 'social',\n      url: '#',\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "showFooter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "showHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "showSidebar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "sidebarCollapsed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"extended\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "DashboardMetrics",
            "id": "interface-DashboardMetrics-2f0daa74d88aeeb7faeea0eee70d0d6c6b177737266a24ad66437a5d3eaf4e9eb7d85f6e7760a84fa23361f6d547480f2a52374e63a4ab0208af39a2f417092d",
            "file": "src/app/features/dashboard/types/dashboard.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetDto, BudgetOverviewDto } from '../../../../dtos';\n\nexport interface BudgetSelection {\n  selectedBudgetId: string | null;\n  availableBudgets: BudgetDto[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface DashboardData {\n  budgetOverview: BudgetOverviewDto | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface WidgetConfiguration {\n  id: string;\n  type: WidgetType;\n  title: string;\n  size: WidgetSize;\n  position: WidgetPosition;\n  enabled: boolean;\n}\n\nexport type WidgetType =\n  | 'budget-summary'\n  | 'goal-progress'\n  | 'transaction-list'\n  | 'account-balance'\n  | 'monthly-trends'\n  | 'quick-actions';\n\nexport type WidgetSize = 'small' | 'medium' | 'large' | 'full-width';\n\nexport interface WidgetPosition {\n  row: number;\n  column: number;\n  rowSpan?: number;\n  columnSpan?: number;\n}\n\nexport interface DashboardState {\n  budgetSelection: BudgetSelection;\n  dashboardData: DashboardData;\n  widgetConfigurations: WidgetConfiguration[];\n  isInitialized: boolean;\n}\n\nexport interface QuickAction {\n  id: string;\n  label: string;\n  icon: string;\n  route: string;\n  variant: 'primary' | 'secondary' | 'outline';\n  disabled?: boolean;\n}\n\nexport interface DashboardMetrics {\n  totalAccounts: number;\n  totalBalance: number;\n  monthlyIncome: number;\n  monthlyExpense: number;\n  netMonthly: number;\n  goalsProgress: number;\n  recentTransactionsCount: number;\n}\n",
            "properties": [
                {
                    "name": "goalsProgress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "monthlyExpense",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "monthlyIncome",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "netMonthly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "recentTransactionsCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "totalAccounts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "totalBalance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "DashboardState",
            "id": "interface-DashboardState-2f0daa74d88aeeb7faeea0eee70d0d6c6b177737266a24ad66437a5d3eaf4e9eb7d85f6e7760a84fa23361f6d547480f2a52374e63a4ab0208af39a2f417092d",
            "file": "src/app/features/dashboard/types/dashboard.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetDto, BudgetOverviewDto } from '../../../../dtos';\n\nexport interface BudgetSelection {\n  selectedBudgetId: string | null;\n  availableBudgets: BudgetDto[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface DashboardData {\n  budgetOverview: BudgetOverviewDto | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface WidgetConfiguration {\n  id: string;\n  type: WidgetType;\n  title: string;\n  size: WidgetSize;\n  position: WidgetPosition;\n  enabled: boolean;\n}\n\nexport type WidgetType =\n  | 'budget-summary'\n  | 'goal-progress'\n  | 'transaction-list'\n  | 'account-balance'\n  | 'monthly-trends'\n  | 'quick-actions';\n\nexport type WidgetSize = 'small' | 'medium' | 'large' | 'full-width';\n\nexport interface WidgetPosition {\n  row: number;\n  column: number;\n  rowSpan?: number;\n  columnSpan?: number;\n}\n\nexport interface DashboardState {\n  budgetSelection: BudgetSelection;\n  dashboardData: DashboardData;\n  widgetConfigurations: WidgetConfiguration[];\n  isInitialized: boolean;\n}\n\nexport interface QuickAction {\n  id: string;\n  label: string;\n  icon: string;\n  route: string;\n  variant: 'primary' | 'secondary' | 'outline';\n  disabled?: boolean;\n}\n\nexport interface DashboardMetrics {\n  totalAccounts: number;\n  totalBalance: number;\n  monthlyIncome: number;\n  monthlyExpense: number;\n  netMonthly: number;\n  goalsProgress: number;\n  recentTransactionsCount: number;\n}\n",
            "properties": [
                {
                    "name": "budgetSelection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetSelection",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "dashboardData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DashboardData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "isInitialized",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "widgetConfigurations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WidgetConfiguration[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "DashboardWidget",
            "id": "interface-DashboardWidget-ad14cf1900516d48673867315a1fe3ac91d9218cca2a5d5befbbf5255f13b18b5b95837a50f51cf2124a5df50412715fd7e1f6348a18d13163b1b44192d997fc",
            "file": "src/app/shared/ui-components/templates/os-dashboard-template/os-dashboard-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ChangeDetectionStrategy, computed, input, output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  OsHeaderComponent,\n  HeaderNavigationItem,\n  HeaderAction,\n} from '../../organisms/os-header/os-header.component';\nimport { OsFooterComponent } from '../../organisms/os-footer/os-footer.component';\nimport { OsSidebarComponent, SidebarItem } from '../../organisms/os-sidebar/os-sidebar.component';\nimport {\n  OsBudgetSummaryComponent,\n  BudgetSummaryData,\n} from '../../organisms/os-budget-summary/os-budget-summary.component';\nimport {\n  OsGoalProgressComponent,\n  GoalProgressData,\n} from '../../organisms/os-goal-progress/os-goal-progress.component';\nimport { OsTransactionListComponent } from '../../organisms/os-transaction-list/os-transaction-list.component';\nimport { OsCategoryManagerComponent } from '../../organisms/os-category-manager/os-category-manager.component';\nimport {\n  OsBudgetTrackerComponent,\n  BudgetTrackerData,\n} from '../../organisms/os-budget-tracker/os-budget-tracker.component';\nimport {\n  OsGoalTrackerComponent,\n  GoalTrackerData,\n} from '../../organisms/os-goal-tracker/os-goal-tracker.component';\n\nexport interface DashboardWidget {\n  id: string;\n  title: string;\n  type:\n    | 'budget-summary'\n    | 'goal-progress'\n    | 'transaction-list'\n    | 'category-manager'\n    | 'budget-tracker'\n    | 'goal-tracker';\n  size: 'small' | 'medium' | 'large' | 'full';\n  position: { row: number; col: number };\n  data?: Record<string, unknown>;\n}\n\nexport interface DashboardLayout {\n  variant: 'default' | 'compact' | 'extended';\n  size: 'small' | 'medium' | 'large';\n  theme: 'light' | 'dark';\n  showHeader: boolean;\n  showSidebar: boolean;\n  showFooter: boolean;\n  sidebarCollapsed: boolean;\n}\n\n@Component({\n  selector: 'os-dashboard-template',\n  template: `\n    <div [class]=\"dashboardClass()\" [attr.aria-label]=\"ariaLabel()\">\n      @if (layout().showHeader) {\n      <os-header\n        [variant]=\"headerVariant()\"\n        [size]=\"layout().size\"\n        [theme]=\"layout().theme\"\n        [logo]=\"headerLogo()\"\n        (navigationClick)=\"onNavigationClick($event)\"\n        (userMenuItemClick)=\"onUserMenuClick($event)\"\n        (actionClick)=\"onActionClick($event)\"\n        (mobileMenuToggle)=\"onMobileMenuToggle($event)\"\n      />\n      }\n\n      <div class=\"os-dashboard-template__content\">\n        @if (layout().showSidebar) {\n        <os-sidebar\n          [items]=\"sidebarNavigation()\"\n          [variant]=\"sidebarVariant()\"\n          [size]=\"layout().size\"\n          [theme]=\"layout().theme\"\n          [collapsed]=\"layout().sidebarCollapsed\"\n          [title]=\"sidebarTitle()\"\n          [logo]=\"sidebarLogo()\"\n          [showHeader]=\"sidebarShowHeader()\"\n          [showFooter]=\"sidebarShowFooter()\"\n          [showToggleButton]=\"sidebarShowToggleButton()\"\n          (itemClick)=\"onSidebarNavigationClick($event)\"\n          (collapseChange)=\"onSidebarToggleClick($event)\"\n        />\n        }\n        <main class=\"os-dashboard-template__main\" [class]=\"mainClass()\">\n          @if (loading()) {\n          <div class=\"os-dashboard-template__loading\">\n            <div class=\"os-dashboard-template__spinner\"></div>\n            <p>Carregando dashboard...</p>\n          </div>\n          } @else if (emptyState() && widgets().length === 0) {\n          <div class=\"os-dashboard-template__empty\">\n            <div class=\"os-dashboard-template__empty-icon\">📊</div>\n            <h3>{{ emptyState()!.message }}</h3>\n            @if (emptyState()!.action) {\n            <button\n              class=\"os-dashboard-template__empty-action\"\n              (click)=\"onEmptyStateActionClick(emptyState()!.action!.action)\"\n            >\n              {{ emptyState()!.action!.label }}\n            </button>\n            }\n          </div>\n          } @else {\n          <div class=\"os-dashboard-template__grid\" [class]=\"gridClass()\">\n            @for (widget of widgets(); track widget.id) {\n            <div\n              class=\"os-dashboard-template__widget\"\n              [class]=\"widgetClass(widget)\"\n              [style.grid-column]=\"getWidgetGridColumn(widget)\"\n              [style.grid-row]=\"getWidgetGridRow(widget)\"\n              [attr.aria-label]=\"widget.title\"\n            >\n              @switch (widget.type) { @case ('budget-summary') {\n              <os-budget-summary\n                [variant]=\"getBudgetSummaryVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [budgetData]=\"getBudgetSummaryData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('goal-progress') {\n              <os-goal-progress\n                [variant]=\"getGoalProgressVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [goalData]=\"getGoalProgressData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('transaction-list') {\n              <os-transaction-list\n                [variant]=\"getTransactionListVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('category-manager') {\n              <os-category-manager\n                [variant]=\"getCategoryManagerVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('budget-tracker') {\n              <os-budget-tracker\n                [variant]=\"getBudgetTrackerVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [budgetData]=\"getBudgetTrackerData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('goal-tracker') {\n              <os-goal-tracker\n                [variant]=\"getGoalTrackerVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [goalData]=\"getGoalTrackerData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n          }\n        </main>\n      </div>\n\n      @if (layout().showFooter) {\n      <os-footer\n        [variant]=\"footerVariant()\"\n        [size]=\"layout().size\"\n        [theme]=\"layout().theme\"\n        (linkClick)=\"onFooterLinkClick()\"\n        (socialClick)=\"onFooterSocialClick()\"\n      />\n      }\n    </div>\n  `,\n  styleUrls: ['./os-dashboard-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsHeaderComponent,\n    OsFooterComponent,\n    OsSidebarComponent,\n    OsBudgetSummaryComponent,\n    OsGoalProgressComponent,\n    OsTransactionListComponent,\n    OsCategoryManagerComponent,\n    OsBudgetTrackerComponent,\n    OsGoalTrackerComponent,\n  ],\n})\nexport class OsDashboardTemplateComponent {\n  layout = input<DashboardLayout>({\n    variant: 'default',\n    size: 'medium',\n    theme: 'light',\n    showHeader: true,\n    showSidebar: true,\n    showFooter: true,\n    sidebarCollapsed: false,\n  });\n\n  widgets = input<DashboardWidget[]>([]);\n  loading = input<boolean>(false);\n  emptyState = input<{ message: string; action?: { label: string; action: string } } | null>(null);\n  headerLogo = input<string>('');\n  headerNavigation = input<{ label: string; route?: string; href?: string; icon?: string }[]>([]);\n  headerUser = input<{ name: string; avatar?: string; email?: string } | null>(null);\n  headerActions = input<{ label: string; icon?: string; action: string }[]>([]);\n  headerMobileMenu = input<{ label: string; route?: string; href?: string; icon?: string }[]>([]);\n  sidebarNavigation = input<SidebarItem[]>([]);\n  sidebarTitle = input<string>('');\n  sidebarLogo = input<string>('');\n  sidebarShowHeader = input<boolean>(true);\n  sidebarShowFooter = input<boolean>(false);\n  sidebarShowToggleButton = input<boolean>(true);\n  footerLinks = input<{ label: string; route?: string; href?: string; external?: boolean }[]>([]);\n  footerCopyright = input<string>('');\n  footerSocial = input<{ platform: string; url: string; icon?: string }[]>([]);\n\n  navigationClick = output<{ item: string; route?: string; href?: string }>();\n  userMenuClick = output<{ action: string; user: { name: string; email?: string } }>();\n  actionClick = output<{ action: string; label: string }>();\n  mobileMenuToggle = output<{ open: boolean }>();\n  sidebarNavigationClick = output<SidebarItem>();\n  sidebarToggleClick = output<{ collapsed: boolean }>();\n  sidebarHeaderClick = output<{ action: string }>();\n  sidebarFooterClick = output<{ action: string }>();\n  widgetClick = output<{ type: string; data: unknown; widget: DashboardWidget }>();\n  emptyStateActionClick = output<{ action: string }>();\n  footerLinkClick = output<{ label: string; route?: string; href?: string }>();\n  footerSocialClick = output<{ platform: string; url: string }>();\n\n  public dashboardClass = computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template',\n      `os-dashboard-template--${layout.variant}`,\n      `os-dashboard-template--${layout.size}`,\n      `os-dashboard-template--${layout.theme}`,\n      layout.sidebarCollapsed ? 'os-dashboard-template--sidebar-collapsed' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public mainClass = computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template__main',\n      layout.showSidebar ? 'os-dashboard-template__main--with-sidebar' : '',\n      layout.sidebarCollapsed ? 'os-dashboard-template__main--sidebar-collapsed' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public gridClass = computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template__grid',\n      `os-dashboard-template__grid--${layout.variant}`,\n      `os-dashboard-template__grid--${layout.size}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public ariaLabel = computed(() => {\n    return `Dashboard template with ${this.widgets().length} widgets`;\n  });\n\n  public headerVariant = computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'compact' : 'default';\n  });\n\n  public sidebarVariant = computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'minimal' : 'default';\n  });\n\n  public footerVariant = computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'minimal' : 'default';\n  });\n\n  public widgetClass = (widget: DashboardWidget) => {\n    return [\n      'os-dashboard-template__widget',\n      `os-dashboard-template__widget--${widget.type}`,\n      `os-dashboard-template__widget--${widget.size}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  };\n\n  public getWidgetVariant = (widget: DashboardWidget): string => {\n    return ((widget.data as Record<string, unknown>)?.['variant'] as string) || 'default';\n  };\n\n  public getWidgetSize = (widget: DashboardWidget): string => {\n    const sizeMap: Record<string, string> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n      full: 'large',\n    };\n    return sizeMap[widget.size] || 'medium';\n  };\n\n  public getWidgetData = (widget: DashboardWidget): Record<string, unknown> => {\n    return widget.data || {};\n  };\n\n  public getBudgetSummaryData = (widget: DashboardWidget): BudgetSummaryData => {\n    return widget.data as unknown as BudgetSummaryData;\n  };\n\n  public getGoalProgressData = (widget: DashboardWidget): GoalProgressData => {\n    return widget.data as unknown as GoalProgressData;\n  };\n\n  public getBudgetTrackerData = (widget: DashboardWidget): BudgetTrackerData => {\n    return widget.data as unknown as BudgetTrackerData;\n  };\n\n  public getGoalTrackerData = (widget: DashboardWidget): GoalTrackerData => {\n    return widget.data as unknown as GoalTrackerData;\n  };\n\n  public getBudgetSummaryVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getGoalProgressVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' | 'minimal' => {\n    return (\n      (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed' | 'minimal') || 'default'\n    );\n  };\n\n  public getTransactionListVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getCategoryManagerVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getBudgetTrackerVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getGoalTrackerVariant = (widget: DashboardWidget): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getWidgetSizeTyped = (widget: DashboardWidget): 'small' | 'medium' | 'large' => {\n    return (this.getWidgetSize(widget) as 'small' | 'medium' | 'large') || 'medium';\n  };\n\n  public getWidgetGridColumn = (widget: DashboardWidget): string => {\n    const colSpan = this.getWidgetColumnSpan(widget);\n    const startCol = widget.position.col;\n    const endCol = startCol + colSpan;\n    return `${startCol} / ${endCol}`;\n  };\n\n  public getWidgetGridRow = (widget: DashboardWidget): string => {\n    return `${widget.position.row}`;\n  };\n\n  private getWidgetColumnSpan = (widget: DashboardWidget): number => {\n    const sizeMap: Record<string, number> = {\n      small: 3, // 3 colunas\n      medium: 6, // 6 colunas\n      large: 9, // 9 colunas\n      full: 12, // 12 colunas (toda a largura)\n    };\n    return sizeMap[widget.size] || 6;\n  };\n\n  public onNavigationClick(event: { item: HeaderNavigationItem; event: MouseEvent }) {\n    this.navigationClick.emit({\n      item: event.item.label,\n      route: event.item.route,\n      href: undefined,\n    });\n  }\n\n  public onUserMenuClick(event: { item: { action?: string; label?: string }; event: MouseEvent }) {\n    this.userMenuClick.emit({\n      action: event.item.action || 'unknown',\n      user: { name: 'User', email: undefined },\n    });\n  }\n\n  public onActionClick(event: { action: HeaderAction; event: MouseEvent }) {\n    this.actionClick.emit({\n      action: event.action.label,\n      label: event.action.label,\n    });\n  }\n\n  public onMobileMenuToggle(open: boolean) {\n    this.mobileMenuToggle.emit({ open });\n  }\n\n  public onSidebarNavigationClick(event: SidebarItem) {\n    this.sidebarNavigationClick.emit(event);\n  }\n\n  public onSidebarToggleClick(collapsed: boolean) {\n    this.sidebarToggleClick.emit({ collapsed });\n  }\n\n  public onSidebarHeaderClick(event: { action: string }) {\n    this.sidebarHeaderClick.emit(event);\n  }\n\n  public onSidebarFooterClick(event: { action: string }) {\n    this.sidebarFooterClick.emit(event);\n  }\n\n  public onWidgetClick(type: string, event: MouseEvent) {\n    const widget = this.widgets().find((w) => w.type === type);\n    this.widgetClick.emit({ type, data: event, widget: widget! });\n  }\n\n  public onEmptyStateActionClick(action: string) {\n    this.emptyStateActionClick.emit({ action });\n  }\n\n  public onFooterLinkClick() {\n    this.footerLinkClick.emit({\n      label: 'Link',\n      route: undefined,\n      href: undefined,\n    });\n  }\n\n  public onFooterSocialClick() {\n    this.footerSocialClick.emit({\n      platform: 'social',\n      url: '#',\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | >",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\" | \"full\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"budget-summary\" | \"goal-progress\" | \"transaction-list\" | \"category-manager\" | \"budget-tracker\" | \"goal-tracker\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "DetailTemplateAction",
            "id": "interface-DetailTemplateAction-409df63515b3bcb768b0c412bf59bee3ca6ea2a282e92ae18cb1c92b2e63d10842e950b487384ebcecdf32db5f9ec7fbcca7cad16a1727488572ca35d0b8f831",
            "file": "src/app/shared/ui-components/templates/os-detail-template/os-detail-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport {\n  OsPageHeaderComponent,\n  PageHeaderAction,\n} from '../../organisms/os-page-header/os-page-header.component';\n\nexport interface DetailTemplateAction {\n  id: string;\n  label: string;\n  variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  icon?: string;\n  disabled?: boolean;\n}\n\nexport interface DetailTemplateField {\n  label: string;\n  value: string | number | Date;\n  type: 'text' | 'number' | 'date' | 'currency' | 'percentage';\n  variant?: 'default' | 'highlight' | 'muted';\n}\n\nexport interface DetailTemplateSection {\n  title: string;\n  fields: DetailTemplateField[];\n  collapsible?: boolean;\n  expanded?: boolean;\n}\n\n@Component({\n  selector: 'os-detail-template',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsButtonComponent, OsCardComponent, OsPageHeaderComponent],\n  template: `\n    <div [class]=\"templateClass()\">\n      @if (showHeader()) {\n      <os-page-header\n        [title]=\"title()\"\n        [subtitle]=\"subtitle()\"\n        [variant]=\"headerVariant()\"\n        [size]=\"size()\"\n        [actions]=\"headerActions()\"\n        (actionClick)=\"handleHeaderActionClick($event)\"\n      />\n      }\n\n      <div class=\"os-detail-template__content\">\n        @for (section of sections(); track section.title) {\n        <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"getSectionClass(section)\">\n          <div class=\"os-detail-template__section-header\">\n            <h3 class=\"os-detail-template__section-title\">{{ section.title }}</h3>\n            @if (section.collapsible) {\n            <os-button\n              variant=\"tertiary\"\n              size=\"small\"\n              [icon]=\"section.expanded ? 'chevron-up' : 'chevron-down'\"\n              (click)=\"toggleSection(section)\"\n            />\n            }\n          </div>\n\n          @if (!section.collapsible || section.expanded) {\n          <div class=\"os-detail-template__fields\">\n            @for (field of section.fields; track field.label) {\n            <div class=\"os-detail-template__field\">\n              <label [for]=\"'field-' + field.label\" class=\"os-detail-template__field-label\">{{\n                field.label\n              }}</label>\n              <div [id]=\"'field-' + field.label\" [class]=\"getFieldClass(field)\">\n                @switch (field.type) { @case ('currency') {\n                <span class=\"os-detail-template__currency\">\n                  R$ {{ formatCurrency(field.value) }}\n                </span>\n                } @case ('percentage') {\n                <span class=\"os-detail-template__percentage\">\n                  {{ formatPercentage(field.value) }}%\n                </span>\n                } @case ('date') {\n                <span class=\"os-detail-template__date\">\n                  {{ formatDate(field.value) }}\n                </span>\n                } @default {\n                <span class=\"os-detail-template__text\">{{ field.value }}</span>\n                } }\n              </div>\n            </div>\n            }\n          </div>\n          }\n        </os-card>\n        }\n      </div>\n\n      @if (actions().length > 0) {\n      <div class=\"os-detail-template__actions\">\n        @for (action of actions(); track action.id) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"size()\"\n          [icon]=\"action.icon || ''\"\n          [disabled]=\"action.disabled || disabled()\"\n          (click)=\"actionClicked.emit(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-detail-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsDetailTemplateComponent {\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n\n  title = input<string>('');\n  subtitle = input<string>('');\n  showHeader = input(true);\n  showBreadcrumb = input(false);\n  breadcrumbItems = input<{ label: string; route?: string }[]>([]);\n  headerActions = input<DetailTemplateAction[]>([]);\n\n  sections = input<DetailTemplateSection[]>([]);\n  actions = input<DetailTemplateAction[]>([]);\n\n  headerActionClicked = output<{ action: DetailTemplateAction; event: MouseEvent }>();\n  actionClicked = output<DetailTemplateAction>();\n  sectionToggled = output<{ section: DetailTemplateSection; expanded: boolean }>();\n\n  protected templateClass = computed(() => {\n    return [\n      'os-detail-template',\n      `os-detail-template--${this.variant()}`,\n      `os-detail-template--${this.size()}`,\n      `os-detail-template--${this.theme()}`,\n      this.disabled() ? 'os-detail-template--disabled' : '',\n      this.loading() ? 'os-detail-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public headerVariant = computed(() => {\n    const sizeMap = {\n      small: 'compact' as const,\n      medium: 'default' as const,\n      large: 'extended' as const,\n    };\n    return sizeMap[this.size()];\n  });\n\n  public cardVariant = computed(() => {\n    const variantMap = {\n      default: 'default' as const,\n      compact: 'outlined' as const,\n      detailed: 'elevated' as const,\n    };\n    return variantMap[this.variant()];\n  });\n\n  public getSectionClass(section: DetailTemplateSection): string {\n    return [\n      'os-detail-template__section',\n      section.collapsible ? 'os-detail-template__section--collapsible' : '',\n      section.expanded ? 'os-detail-template__section--expanded' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  public getFieldClass(field: DetailTemplateField): string {\n    return [\n      'os-detail-template__field-value',\n      `os-detail-template__field-value--${field.variant || 'default'}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  public formatCurrency(value: string | number | Date): string {\n    const numValue = typeof value === 'number' ? value : parseFloat(value.toString());\n    return new Intl.NumberFormat('pt-BR', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(numValue);\n  }\n\n  public formatPercentage(value: string | number | Date): string {\n    const numValue = typeof value === 'number' ? value : parseFloat(value.toString());\n    return new Intl.NumberFormat('pt-BR', {\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 2,\n    }).format(numValue);\n  }\n\n  public formatDate(value: string | number | Date): string {\n    const dateValue = value instanceof Date ? value : new Date(value);\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    }).format(dateValue);\n  }\n\n  public toggleSection(section: DetailTemplateSection): void {\n    if (section.collapsible) {\n      section.expanded = !section.expanded;\n      this.sectionToggled.emit({ section, expanded: section.expanded });\n    }\n  }\n\n  public handleHeaderActionClick(event: PageHeaderAction): void {\n    const detailAction: DetailTemplateAction = {\n      id: event.label.toLowerCase().replace(/\\s+/g, '-'),\n      label: event.label,\n      variant: event.variant || 'primary',\n      icon: event.icon,\n      disabled: event.disabled,\n    };\n    this.headerActionClicked.emit({ action: detailAction, event: new MouseEvent('click') });\n  }\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"secondary\" | \"tertiary\" | \"danger\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "DetailTemplateField",
            "id": "interface-DetailTemplateField-409df63515b3bcb768b0c412bf59bee3ca6ea2a282e92ae18cb1c92b2e63d10842e950b487384ebcecdf32db5f9ec7fbcca7cad16a1727488572ca35d0b8f831",
            "file": "src/app/shared/ui-components/templates/os-detail-template/os-detail-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport {\n  OsPageHeaderComponent,\n  PageHeaderAction,\n} from '../../organisms/os-page-header/os-page-header.component';\n\nexport interface DetailTemplateAction {\n  id: string;\n  label: string;\n  variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  icon?: string;\n  disabled?: boolean;\n}\n\nexport interface DetailTemplateField {\n  label: string;\n  value: string | number | Date;\n  type: 'text' | 'number' | 'date' | 'currency' | 'percentage';\n  variant?: 'default' | 'highlight' | 'muted';\n}\n\nexport interface DetailTemplateSection {\n  title: string;\n  fields: DetailTemplateField[];\n  collapsible?: boolean;\n  expanded?: boolean;\n}\n\n@Component({\n  selector: 'os-detail-template',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsButtonComponent, OsCardComponent, OsPageHeaderComponent],\n  template: `\n    <div [class]=\"templateClass()\">\n      @if (showHeader()) {\n      <os-page-header\n        [title]=\"title()\"\n        [subtitle]=\"subtitle()\"\n        [variant]=\"headerVariant()\"\n        [size]=\"size()\"\n        [actions]=\"headerActions()\"\n        (actionClick)=\"handleHeaderActionClick($event)\"\n      />\n      }\n\n      <div class=\"os-detail-template__content\">\n        @for (section of sections(); track section.title) {\n        <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"getSectionClass(section)\">\n          <div class=\"os-detail-template__section-header\">\n            <h3 class=\"os-detail-template__section-title\">{{ section.title }}</h3>\n            @if (section.collapsible) {\n            <os-button\n              variant=\"tertiary\"\n              size=\"small\"\n              [icon]=\"section.expanded ? 'chevron-up' : 'chevron-down'\"\n              (click)=\"toggleSection(section)\"\n            />\n            }\n          </div>\n\n          @if (!section.collapsible || section.expanded) {\n          <div class=\"os-detail-template__fields\">\n            @for (field of section.fields; track field.label) {\n            <div class=\"os-detail-template__field\">\n              <label [for]=\"'field-' + field.label\" class=\"os-detail-template__field-label\">{{\n                field.label\n              }}</label>\n              <div [id]=\"'field-' + field.label\" [class]=\"getFieldClass(field)\">\n                @switch (field.type) { @case ('currency') {\n                <span class=\"os-detail-template__currency\">\n                  R$ {{ formatCurrency(field.value) }}\n                </span>\n                } @case ('percentage') {\n                <span class=\"os-detail-template__percentage\">\n                  {{ formatPercentage(field.value) }}%\n                </span>\n                } @case ('date') {\n                <span class=\"os-detail-template__date\">\n                  {{ formatDate(field.value) }}\n                </span>\n                } @default {\n                <span class=\"os-detail-template__text\">{{ field.value }}</span>\n                } }\n              </div>\n            </div>\n            }\n          </div>\n          }\n        </os-card>\n        }\n      </div>\n\n      @if (actions().length > 0) {\n      <div class=\"os-detail-template__actions\">\n        @for (action of actions(); track action.id) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"size()\"\n          [icon]=\"action.icon || ''\"\n          [disabled]=\"action.disabled || disabled()\"\n          (click)=\"actionClicked.emit(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-detail-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsDetailTemplateComponent {\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n\n  title = input<string>('');\n  subtitle = input<string>('');\n  showHeader = input(true);\n  showBreadcrumb = input(false);\n  breadcrumbItems = input<{ label: string; route?: string }[]>([]);\n  headerActions = input<DetailTemplateAction[]>([]);\n\n  sections = input<DetailTemplateSection[]>([]);\n  actions = input<DetailTemplateAction[]>([]);\n\n  headerActionClicked = output<{ action: DetailTemplateAction; event: MouseEvent }>();\n  actionClicked = output<DetailTemplateAction>();\n  sectionToggled = output<{ section: DetailTemplateSection; expanded: boolean }>();\n\n  protected templateClass = computed(() => {\n    return [\n      'os-detail-template',\n      `os-detail-template--${this.variant()}`,\n      `os-detail-template--${this.size()}`,\n      `os-detail-template--${this.theme()}`,\n      this.disabled() ? 'os-detail-template--disabled' : '',\n      this.loading() ? 'os-detail-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public headerVariant = computed(() => {\n    const sizeMap = {\n      small: 'compact' as const,\n      medium: 'default' as const,\n      large: 'extended' as const,\n    };\n    return sizeMap[this.size()];\n  });\n\n  public cardVariant = computed(() => {\n    const variantMap = {\n      default: 'default' as const,\n      compact: 'outlined' as const,\n      detailed: 'elevated' as const,\n    };\n    return variantMap[this.variant()];\n  });\n\n  public getSectionClass(section: DetailTemplateSection): string {\n    return [\n      'os-detail-template__section',\n      section.collapsible ? 'os-detail-template__section--collapsible' : '',\n      section.expanded ? 'os-detail-template__section--expanded' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  public getFieldClass(field: DetailTemplateField): string {\n    return [\n      'os-detail-template__field-value',\n      `os-detail-template__field-value--${field.variant || 'default'}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  public formatCurrency(value: string | number | Date): string {\n    const numValue = typeof value === 'number' ? value : parseFloat(value.toString());\n    return new Intl.NumberFormat('pt-BR', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(numValue);\n  }\n\n  public formatPercentage(value: string | number | Date): string {\n    const numValue = typeof value === 'number' ? value : parseFloat(value.toString());\n    return new Intl.NumberFormat('pt-BR', {\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 2,\n    }).format(numValue);\n  }\n\n  public formatDate(value: string | number | Date): string {\n    const dateValue = value instanceof Date ? value : new Date(value);\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    }).format(dateValue);\n  }\n\n  public toggleSection(section: DetailTemplateSection): void {\n    if (section.collapsible) {\n      section.expanded = !section.expanded;\n      this.sectionToggled.emit({ section, expanded: section.expanded });\n    }\n  }\n\n  public handleHeaderActionClick(event: PageHeaderAction): void {\n    const detailAction: DetailTemplateAction = {\n      id: event.label.toLowerCase().replace(/\\s+/g, '-'),\n      label: event.label,\n      variant: event.variant || 'primary',\n      icon: event.icon,\n      disabled: event.disabled,\n    };\n    this.headerActionClicked.emit({ action: detailAction, event: new MouseEvent('click') });\n  }\n}\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"text\" | \"number\" | \"date\" | \"currency\" | \"percentage\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"highlight\" | \"muted\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "DetailTemplateSection",
            "id": "interface-DetailTemplateSection-409df63515b3bcb768b0c412bf59bee3ca6ea2a282e92ae18cb1c92b2e63d10842e950b487384ebcecdf32db5f9ec7fbcca7cad16a1727488572ca35d0b8f831",
            "file": "src/app/shared/ui-components/templates/os-detail-template/os-detail-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport {\n  OsPageHeaderComponent,\n  PageHeaderAction,\n} from '../../organisms/os-page-header/os-page-header.component';\n\nexport interface DetailTemplateAction {\n  id: string;\n  label: string;\n  variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  icon?: string;\n  disabled?: boolean;\n}\n\nexport interface DetailTemplateField {\n  label: string;\n  value: string | number | Date;\n  type: 'text' | 'number' | 'date' | 'currency' | 'percentage';\n  variant?: 'default' | 'highlight' | 'muted';\n}\n\nexport interface DetailTemplateSection {\n  title: string;\n  fields: DetailTemplateField[];\n  collapsible?: boolean;\n  expanded?: boolean;\n}\n\n@Component({\n  selector: 'os-detail-template',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsButtonComponent, OsCardComponent, OsPageHeaderComponent],\n  template: `\n    <div [class]=\"templateClass()\">\n      @if (showHeader()) {\n      <os-page-header\n        [title]=\"title()\"\n        [subtitle]=\"subtitle()\"\n        [variant]=\"headerVariant()\"\n        [size]=\"size()\"\n        [actions]=\"headerActions()\"\n        (actionClick)=\"handleHeaderActionClick($event)\"\n      />\n      }\n\n      <div class=\"os-detail-template__content\">\n        @for (section of sections(); track section.title) {\n        <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"getSectionClass(section)\">\n          <div class=\"os-detail-template__section-header\">\n            <h3 class=\"os-detail-template__section-title\">{{ section.title }}</h3>\n            @if (section.collapsible) {\n            <os-button\n              variant=\"tertiary\"\n              size=\"small\"\n              [icon]=\"section.expanded ? 'chevron-up' : 'chevron-down'\"\n              (click)=\"toggleSection(section)\"\n            />\n            }\n          </div>\n\n          @if (!section.collapsible || section.expanded) {\n          <div class=\"os-detail-template__fields\">\n            @for (field of section.fields; track field.label) {\n            <div class=\"os-detail-template__field\">\n              <label [for]=\"'field-' + field.label\" class=\"os-detail-template__field-label\">{{\n                field.label\n              }}</label>\n              <div [id]=\"'field-' + field.label\" [class]=\"getFieldClass(field)\">\n                @switch (field.type) { @case ('currency') {\n                <span class=\"os-detail-template__currency\">\n                  R$ {{ formatCurrency(field.value) }}\n                </span>\n                } @case ('percentage') {\n                <span class=\"os-detail-template__percentage\">\n                  {{ formatPercentage(field.value) }}%\n                </span>\n                } @case ('date') {\n                <span class=\"os-detail-template__date\">\n                  {{ formatDate(field.value) }}\n                </span>\n                } @default {\n                <span class=\"os-detail-template__text\">{{ field.value }}</span>\n                } }\n              </div>\n            </div>\n            }\n          </div>\n          }\n        </os-card>\n        }\n      </div>\n\n      @if (actions().length > 0) {\n      <div class=\"os-detail-template__actions\">\n        @for (action of actions(); track action.id) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"size()\"\n          [icon]=\"action.icon || ''\"\n          [disabled]=\"action.disabled || disabled()\"\n          (click)=\"actionClicked.emit(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-detail-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsDetailTemplateComponent {\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n\n  title = input<string>('');\n  subtitle = input<string>('');\n  showHeader = input(true);\n  showBreadcrumb = input(false);\n  breadcrumbItems = input<{ label: string; route?: string }[]>([]);\n  headerActions = input<DetailTemplateAction[]>([]);\n\n  sections = input<DetailTemplateSection[]>([]);\n  actions = input<DetailTemplateAction[]>([]);\n\n  headerActionClicked = output<{ action: DetailTemplateAction; event: MouseEvent }>();\n  actionClicked = output<DetailTemplateAction>();\n  sectionToggled = output<{ section: DetailTemplateSection; expanded: boolean }>();\n\n  protected templateClass = computed(() => {\n    return [\n      'os-detail-template',\n      `os-detail-template--${this.variant()}`,\n      `os-detail-template--${this.size()}`,\n      `os-detail-template--${this.theme()}`,\n      this.disabled() ? 'os-detail-template--disabled' : '',\n      this.loading() ? 'os-detail-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public headerVariant = computed(() => {\n    const sizeMap = {\n      small: 'compact' as const,\n      medium: 'default' as const,\n      large: 'extended' as const,\n    };\n    return sizeMap[this.size()];\n  });\n\n  public cardVariant = computed(() => {\n    const variantMap = {\n      default: 'default' as const,\n      compact: 'outlined' as const,\n      detailed: 'elevated' as const,\n    };\n    return variantMap[this.variant()];\n  });\n\n  public getSectionClass(section: DetailTemplateSection): string {\n    return [\n      'os-detail-template__section',\n      section.collapsible ? 'os-detail-template__section--collapsible' : '',\n      section.expanded ? 'os-detail-template__section--expanded' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  public getFieldClass(field: DetailTemplateField): string {\n    return [\n      'os-detail-template__field-value',\n      `os-detail-template__field-value--${field.variant || 'default'}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  public formatCurrency(value: string | number | Date): string {\n    const numValue = typeof value === 'number' ? value : parseFloat(value.toString());\n    return new Intl.NumberFormat('pt-BR', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(numValue);\n  }\n\n  public formatPercentage(value: string | number | Date): string {\n    const numValue = typeof value === 'number' ? value : parseFloat(value.toString());\n    return new Intl.NumberFormat('pt-BR', {\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 2,\n    }).format(numValue);\n  }\n\n  public formatDate(value: string | number | Date): string {\n    const dateValue = value instanceof Date ? value : new Date(value);\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    }).format(dateValue);\n  }\n\n  public toggleSection(section: DetailTemplateSection): void {\n    if (section.collapsible) {\n      section.expanded = !section.expanded;\n      this.sectionToggled.emit({ section, expanded: section.expanded });\n    }\n  }\n\n  public handleHeaderActionClick(event: PageHeaderAction): void {\n    const detailAction: DetailTemplateAction = {\n      id: event.label.toLowerCase().replace(/\\s+/g, '-'),\n      label: event.label,\n      variant: event.variant || 'primary',\n      icon: event.icon,\n      disabled: event.disabled,\n    };\n    this.headerActionClicked.emit({ action: detailAction, event: new MouseEvent('click') });\n  }\n}\n",
            "properties": [
                {
                    "name": "collapsible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "fields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DetailTemplateField[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "DrawerTemplateConfig",
            "id": "interface-DrawerTemplateConfig-6a71960546424f2ccaeb251cdf8ebff9b58aadab2328a10e9da3b2aede5fc8254ee5757b303bd3ee099fe049b739a868d3d7a5fbcb219c73e7f4a43967f08035",
            "file": "src/app/shared/ui-components/templates/os-drawer-template/os-drawer-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, input, output, ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport interface DrawerTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showCloseButton?: boolean;\n  showHeader?: boolean;\n  showFooter?: boolean;\n  showActions?: boolean;\n  closeButtonText?: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  showConfirmButton?: boolean;\n  showCancelButton?: boolean;\n  actions?: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }[];\n}\n\n@Component({\n  selector: 'os-drawer-template',\n  template: `\n    <div [class]=\"drawerClass()\" [attr.aria-label]=\"ariaLabel()\">\n      @if (config().showHeader ?? true) {\n      <div class=\"os-drawer-template__header\" [class]=\"headerClass()\">\n        <div class=\"os-drawer-template__header-content\">\n          <h2 class=\"os-drawer-template__title\">{{ config().title }}</h2>\n          @if (config().subtitle) {\n          <p class=\"os-drawer-template__subtitle\">{{ config().subtitle }}</p>\n          }\n        </div>\n        @if (config().showCloseButton ?? true) {\n        <os-button\n          [variant]=\"'tertiary'\"\n          [size]=\"size()\"\n          [icon]=\"'close'\"\n          (click)=\"onClose()\"\n          [attr.aria-label]=\"'Fechar drawer'\"\n        />\n        }\n      </div>\n      }\n\n      <div class=\"os-drawer-template__content\" [class]=\"contentClass()\">\n        <ng-content />\n      </div>\n\n      @if (config().showActions ?? true) {\n      <div class=\"os-drawer-template__actions\" [class]=\"actionsClass()\">\n        @if (config().showCancelButton ?? true) {\n        <os-button\n          [variant]=\"'secondary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled()\"\n          (click)=\"onCancel()\"\n        >\n          {{ config().cancelButtonText || 'Cancelar' }}\n        </os-button>\n        } @if (config().showConfirmButton ?? true) {\n        <os-button\n          [variant]=\"'primary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled() || !isValid()\"\n          [loading]=\"loading()\"\n          (click)=\"onConfirm()\"\n        >\n          {{ config().confirmButtonText || 'Confirmar' }}\n        </os-button>\n        } @for (action of config().actions || []; track action.label) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"action.size\"\n          [disabled]=\"action.disabled || disabled()\"\n          [loading]=\"action.loading || false\"\n          [icon]=\"action.icon || ''\"\n          (click)=\"onActionClick(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-drawer-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, OsButtonComponent],\n})\nexport class OsDrawerTemplateComponent {\n  config = input.required<DrawerTemplateConfig>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  position = input<'left' | 'right' | 'top' | 'bottom'>('right');\n  disabled = input(false);\n  loading = input(false);\n  valid = input(true);\n\n  closed = output<void>();\n  confirmed = output<void>();\n  cancelled = output<void>();\n  actionClick = output<{\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }>();\n\n  drawerClass = computed(() => {\n    return [\n      'os-drawer-template',\n      `os-drawer-template--${this.variant()}`,\n      `os-drawer-template--${this.size()}`,\n      `os-drawer-template--${this.theme()}`,\n      `os-drawer-template--${this.position()}`,\n      this.disabled() ? 'os-drawer-template--disabled' : '',\n      this.loading() ? 'os-drawer-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  headerClass = computed(() => {\n    return [\n      'os-drawer-template__header',\n      `os-drawer-template__header--${this.variant()}`,\n      `os-drawer-template__header--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  contentClass = computed(() => {\n    return [\n      'os-drawer-template__content',\n      `os-drawer-template__content--${this.variant()}`,\n      `os-drawer-template__content--${this.size()}`,\n      this.disabled() ? 'os-drawer-template__content--disabled' : '',\n      this.loading() ? 'os-drawer-template__content--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  actionsClass = computed(() => {\n    return [\n      'os-drawer-template__actions',\n      `os-drawer-template__actions--${this.variant()}`,\n      `os-drawer-template__actions--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  isValid = computed(() => {\n    return this.valid();\n  });\n\n  ariaLabel = computed(() => {\n    return `Drawer: ${this.config().title}`;\n  });\n\n  onClose(): void {\n    this.closed.emit();\n  }\n\n  onConfirm(): void {\n    this.confirmed.emit();\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n\n  onActionClick(action: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }): void {\n    this.actionClick.emit(action);\n  }\n}\n",
            "properties": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "cancelButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "closeButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "confirmButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "showActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "showCancelButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "showCloseButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "showConfirmButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "showFooter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "showHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "Environment",
            "id": "interface-Environment-74c963d8e21807fdc8bc8322ad1fd8408437c8e41621ce89691579562c3583042f39acbab5335c40fa8e1f61b603ff09b300c789cc5bd9d7485e42052a2c3be8",
            "file": "src/environments/environment.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Environment {\n  production: boolean;\n  apiUrl: string;\n  version: string;\n  debug: boolean;\n  enableLogging: boolean;\n  authBypass: boolean;\n  firebase: {\n    apiKey: string;\n    authDomain: string;\n    projectId: string;\n    storageBucket: string;\n    messagingSenderId: string;\n    appId: string;\n  };\n  features: Record<string, boolean>;\n}\n",
            "properties": [
                {
                    "name": "apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "authBypass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "debug",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "enableLogging",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "features",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "firebase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "production",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "version",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "ExternalAuthServiceAdapter",
            "id": "interface-ExternalAuthServiceAdapter-b3953c73f49a0d8228f9886b63209dc665a6efce03d4d21c27dbf48c350a38823b6d306537d8e0b2c350cc767517d8e43123184b033c38fd7d9a976e82a90915",
            "file": "src/app/core/adapters/external-auth-service.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\n\nexport interface AuthUser {\n  id: string;\n  email: string | null;\n  name: string | null;\n  avatar: string | null;\n  metadata?: Record<string, unknown>;\n}\n\nexport interface AuthCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResult {\n  user: AuthUser;\n  token?: string;\n  refreshToken?: string;\n}\n\nexport interface ExternalAuthServiceAdapter {\n  initializeAuthState(onAuthStateChanged: (user: AuthUser | null) => void): void;\n  signIn(credentials: AuthCredentials): Promise<AuthResult>;\n  signOut(): Promise<void>;\n  getToken(): Promise<string | null>;\n  refreshToken(): Promise<string | null>;\n  getCurrentUser(): AuthUser | null;\n  isAuthenticated(): boolean;\n}\n\nexport const EXTERNAL_AUTH_SERVICE_ADAPTER = new InjectionToken<ExternalAuthServiceAdapter>(\n  'ExternalAuthServiceAdapter'\n);\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 174,
            "methods": [
                {
                    "name": "getCurrentUser",
                    "args": [],
                    "optional": false,
                    "returnType": "AuthUser | null",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeAuthState",
                    "args": [
                        {
                            "name": "onAuthStateChanged",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "user",
                                    "type": "AuthUser | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "onAuthStateChanged",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "user",
                                    "type": "AuthUser | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "refreshToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "credentials",
                            "type": "AuthCredentials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<AuthResult>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "credentials",
                            "type": "AuthCredentials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": []
        },
        {
            "name": "FirebaseConfig",
            "id": "interface-FirebaseConfig-8a1bf3acd1c98c8cb754d798baab15f1d41b075df2db86c9ecaca69c8c677d5ab19c3b596782de800f16d6bb2c75255dd60e5b5e6c58479cd08bb7df18950a02",
            "file": "src/app/core/services/config/config.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, signal, computed } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\n\nexport interface ApiConfig {\n  baseUrl: string;\n  timeout: number;\n  retryAttempts: number;\n}\n\nexport interface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n  appId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private readonly _isDevelopment = signal(environment.production === false);\n  private readonly _apiConfig = signal<ApiConfig>({\n    baseUrl: environment.apiUrl || 'http://localhost:3000/api',\n    timeout: 30000,\n    retryAttempts: 3,\n  });\n  private readonly _firebaseConfig = signal<FirebaseConfig>({\n    apiKey: environment.firebase.apiKey,\n    authDomain: environment.firebase.authDomain,\n    projectId: environment.firebase.projectId,\n    storageBucket: environment.firebase.storageBucket,\n    messagingSenderId: environment.firebase.messagingSenderId,\n    appId: environment.firebase.appId,\n  });\n\n  readonly isDevelopment = this._isDevelopment.asReadonly();\n  readonly apiConfig = this._apiConfig.asReadonly();\n  readonly firebaseConfig = this._firebaseConfig.asReadonly();\n\n  readonly apiBaseUrl = computed(() => this.apiConfig().baseUrl);\n  readonly apiTimeout = computed(() => this.apiConfig().timeout);\n  readonly apiRetryAttempts = computed(() => this.apiConfig().retryAttempts);\n\n  getApiUrl(endpoint: string): string {\n    const baseUrl = this.apiBaseUrl();\n    const cleanEndpoint = endpoint.startsWith('/') ? endpoint.slice(1) : endpoint;\n    return `${baseUrl}/${cleanEndpoint}`;\n  }\n\n  isFeatureEnabled(feature: string): boolean {\n    if (this.isDevelopment()) {\n      return true;\n    }\n\n    return environment.features?.[feature] ?? false;\n  }\n\n  getEnvironmentVariable(key: string): string | undefined {\n    return (environment as unknown as Record<string, unknown>)[key] as string | undefined;\n  }\n}\n",
            "properties": [
                {
                    "name": "apiKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "appId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "authDomain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "messagingSenderId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "projectId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "storageBucket",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "FooterLink",
            "id": "interface-FooterLink-b79ef76162d81483a8e2b928634f8aa2fb6d881ee28b4505eff1532c3388e93d82906d5053db85f3d532cb5fdc77bbe0dff0214b5329c4dff3b3f63ba3b8638e",
            "file": "src/app/shared/ui-components/organisms/os-footer/os-footer.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nexport interface FooterLink {\n  label: string;\n  href?: string;\n  routerLink?: string;\n  external?: boolean;\n  icon?: string;\n}\n\nexport interface FooterSection {\n  title: string;\n  links: FooterLink[];\n}\n\n@Component({\n  selector: 'os-footer',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: `\n    <footer class=\"os-footer\" [class]=\"footerClasses()\">\n      <div class=\"os-footer__container\">\n        <div class=\"os-footer__content\">\n          @for (section of sections(); track section.title) {\n          <div class=\"os-footer__section\">\n            <h3 class=\"os-footer__section-title\">{{ section.title }}</h3>\n            <ul class=\"os-footer__links\">\n              @for (link of section.links; track link.label) {\n              <li class=\"os-footer__link-item\">\n                @if (link.routerLink) {\n                <a [routerLink]=\"link.routerLink\" class=\"os-footer__link\" [class]=\"linkClasses()\">\n                  {{ link.label }}\n                </a>\n                } @else {\n                <a\n                  [href]=\"link.href\"\n                  class=\"os-footer__link\"\n                  [class]=\"linkClasses()\"\n                  [target]=\"link.external ? '_blank' : null\"\n                  [rel]=\"link.external ? 'noopener noreferrer' : null\"\n                >\n                  {{ link.label }}\n                </a>\n                }\n              </li>\n              }\n            </ul>\n          </div>\n          }\n        </div>\n\n        <div class=\"os-footer__bottom\">\n          <div class=\"os-footer__copyright\">\n            <p class=\"os-footer__copyright-text\">{{ copyrightText() }}</p>\n          </div>\n\n          @if (socialLinks().length > 0) {\n          <div class=\"os-footer__social\">\n            <ul class=\"os-footer__social-links\">\n              @for (social of socialLinks(); track social.label) {\n              <li class=\"os-footer__social-item\">\n                <a\n                  [href]=\"social.href\"\n                  class=\"os-footer__social-link\"\n                  [class]=\"socialLinkClasses()\"\n                  [target]=\"social.external ? '_blank' : null\"\n                  [rel]=\"social.external ? 'noopener noreferrer' : null\"\n                  [attr.aria-label]=\"social.label\"\n                >\n                  <span class=\"os-footer__social-icon\" [attr.aria-hidden]=\"true\">\n                    {{ social.icon }}\n                  </span>\n                </a>\n              </li>\n              }\n            </ul>\n          </div>\n          }\n        </div>\n      </div>\n    </footer>\n  `,\n  styleUrls: ['./os-footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[attr.role]': '\"contentinfo\"',\n    '[attr.aria-label]': '\"Footer\"',\n  },\n})\nexport class OsFooterComponent {\n  // Inputs\n  sections = input<FooterSection[]>([]);\n  copyrightText = input('© 2024 OrçaSonhos. Todos os direitos reservados.');\n  socialLinks = input<FooterLink[]>([]);\n  variant = input<'default' | 'minimal' | 'extended'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n\n  // Computed properties\n  footerClasses = computed(() => {\n    return [\n      `os-footer--${this.variant()}`,\n      `os-footer--${this.size()}`,\n      `os-footer--${this.theme()}`,\n    ].join(' ');\n  });\n\n  linkClasses = computed(() => {\n    return [`os-footer__link--${this.variant()}`, `os-footer__link--${this.size()}`].join(' ');\n  });\n\n  socialLinkClasses = computed(() => {\n    return [\n      `os-footer__social-link--${this.variant()}`,\n      `os-footer__social-link--${this.size()}`,\n    ].join(' ');\n  });\n}\n",
            "properties": [
                {
                    "name": "external",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "FooterSection",
            "id": "interface-FooterSection-b79ef76162d81483a8e2b928634f8aa2fb6d881ee28b4505eff1532c3388e93d82906d5053db85f3d532cb5fdc77bbe0dff0214b5329c4dff3b3f63ba3b8638e",
            "file": "src/app/shared/ui-components/organisms/os-footer/os-footer.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nexport interface FooterLink {\n  label: string;\n  href?: string;\n  routerLink?: string;\n  external?: boolean;\n  icon?: string;\n}\n\nexport interface FooterSection {\n  title: string;\n  links: FooterLink[];\n}\n\n@Component({\n  selector: 'os-footer',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: `\n    <footer class=\"os-footer\" [class]=\"footerClasses()\">\n      <div class=\"os-footer__container\">\n        <div class=\"os-footer__content\">\n          @for (section of sections(); track section.title) {\n          <div class=\"os-footer__section\">\n            <h3 class=\"os-footer__section-title\">{{ section.title }}</h3>\n            <ul class=\"os-footer__links\">\n              @for (link of section.links; track link.label) {\n              <li class=\"os-footer__link-item\">\n                @if (link.routerLink) {\n                <a [routerLink]=\"link.routerLink\" class=\"os-footer__link\" [class]=\"linkClasses()\">\n                  {{ link.label }}\n                </a>\n                } @else {\n                <a\n                  [href]=\"link.href\"\n                  class=\"os-footer__link\"\n                  [class]=\"linkClasses()\"\n                  [target]=\"link.external ? '_blank' : null\"\n                  [rel]=\"link.external ? 'noopener noreferrer' : null\"\n                >\n                  {{ link.label }}\n                </a>\n                }\n              </li>\n              }\n            </ul>\n          </div>\n          }\n        </div>\n\n        <div class=\"os-footer__bottom\">\n          <div class=\"os-footer__copyright\">\n            <p class=\"os-footer__copyright-text\">{{ copyrightText() }}</p>\n          </div>\n\n          @if (socialLinks().length > 0) {\n          <div class=\"os-footer__social\">\n            <ul class=\"os-footer__social-links\">\n              @for (social of socialLinks(); track social.label) {\n              <li class=\"os-footer__social-item\">\n                <a\n                  [href]=\"social.href\"\n                  class=\"os-footer__social-link\"\n                  [class]=\"socialLinkClasses()\"\n                  [target]=\"social.external ? '_blank' : null\"\n                  [rel]=\"social.external ? 'noopener noreferrer' : null\"\n                  [attr.aria-label]=\"social.label\"\n                >\n                  <span class=\"os-footer__social-icon\" [attr.aria-hidden]=\"true\">\n                    {{ social.icon }}\n                  </span>\n                </a>\n              </li>\n              }\n            </ul>\n          </div>\n          }\n        </div>\n      </div>\n    </footer>\n  `,\n  styleUrls: ['./os-footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[attr.role]': '\"contentinfo\"',\n    '[attr.aria-label]': '\"Footer\"',\n  },\n})\nexport class OsFooterComponent {\n  // Inputs\n  sections = input<FooterSection[]>([]);\n  copyrightText = input('© 2024 OrçaSonhos. Todos os direitos reservados.');\n  socialLinks = input<FooterLink[]>([]);\n  variant = input<'default' | 'minimal' | 'extended'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n\n  // Computed properties\n  footerClasses = computed(() => {\n    return [\n      `os-footer--${this.variant()}`,\n      `os-footer--${this.size()}`,\n      `os-footer--${this.theme()}`,\n    ].join(' ');\n  });\n\n  linkClasses = computed(() => {\n    return [`os-footer__link--${this.variant()}`, `os-footer__link--${this.size()}`].join(' ');\n  });\n\n  socialLinkClasses = computed(() => {\n    return [\n      `os-footer__social-link--${this.variant()}`,\n      `os-footer__social-link--${this.size()}`,\n    ].join(' ');\n  });\n}\n",
            "properties": [
                {
                    "name": "links",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FooterLink[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "FormSectionField",
            "id": "interface-FormSectionField-4f8e0861363fb3fb157a932e24b71e57f14adcc42168e2547ba17472a14df1e8d8eeea93f099ad2ba01f35b4270fa126802539495b54414aed582212615cce75",
            "file": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OsFormGroupComponent } from '../../molecules/os-form-group/os-form-group.component';\n\nexport type OsFormSectionVariant = 'default' | 'card' | 'outlined' | 'minimal';\nexport type OsFormSectionSize = 'small' | 'medium' | 'large';\nexport type OsFormSectionTheme = 'light' | 'dark';\n\nexport interface FormSectionField {\n  id: string;\n  label: string;\n  type:\n    | 'text'\n    | 'email'\n    | 'password'\n    | 'number'\n    | 'tel'\n    | 'url'\n    | 'textarea'\n    | 'select'\n    | 'checkbox'\n    | 'radio';\n  required?: boolean;\n  placeholder?: string;\n  options?: { value: string; label: string }[];\n  validation?: {\n    min?: number;\n    max?: number;\n    pattern?: string;\n    message?: string;\n  };\n}\n\n@Component({\n  selector: 'os-form-section',\n  imports: [CommonModule, OsFormGroupComponent],\n  template: `\n    <section [class]=\"sectionClasses()\" [attr.aria-labelledby]=\"titleId()\">\n      @if (title()) {\n      <header class=\"os-form-section__header\">\n        <h2 [id]=\"titleId()\" class=\"os-form-section__title\">\n          {{ title() }}\n        </h2>\n        @if (description()) {\n        <p [id]=\"descriptionId()\" class=\"os-form-section__description\">\n          {{ description() }}\n        </p>\n        }\n      </header>\n      }\n\n      <div class=\"os-form-section__content\">\n        @if (fields().length > 0) {\n        <os-form-group\n          [title]=\"groupTitle()\"\n          [description]=\"groupDescription()\"\n          [variant]=\"groupVariant()\"\n          [size]=\"size()\"\n          [required]=\"required()\"\n        >\n          <ng-content></ng-content>\n        </os-form-group>\n        } @else {\n        <ng-content></ng-content>\n        }\n      </div>\n\n      @if (actions().length > 0) {\n      <footer class=\"os-form-section__actions\">\n        <ng-content select=\"[slot=actions]\"></ng-content>\n      </footer>\n      }\n    </section>\n  `,\n  styleUrl: './os-form-section.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[attr.role]': '\"region\"',\n    '[attr.aria-labelledby]': 'titleId()',\n  },\n})\nexport class OsFormSectionComponent {\n  title = input<string>('');\n  description = input<string>('');\n  groupTitle = input<string>('');\n  groupDescription = input<string>('');\n  fields = input<FormSectionField[]>([]);\n  actions = input<{ label: string; variant?: string; disabled?: boolean }[]>([]);\n  variant = input<OsFormSectionVariant>('default');\n  size = input<OsFormSectionSize>('medium');\n  theme = input<OsFormSectionTheme>('light');\n  required = input(false);\n  collapsible = input(false);\n  collapsed = input(false);\n\n  readonly titleId = computed(\n    () => `form-section-title-${Math.random().toString(36).substr(2, 9)}`\n  );\n  readonly descriptionId = computed(\n    () => `form-section-description-${Math.random().toString(36).substr(2, 9)}`\n  );\n\n  readonly sectionClasses = computed(() => {\n    const classes = ['os-form-section'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-form-section--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-form-section--${this.size()}`);\n    }\n\n    if (this.theme() === 'dark') {\n      classes.push('os-form-section--dark');\n    }\n\n    if (this.collapsible()) {\n      classes.push('os-form-section--collapsible');\n    }\n\n    if (this.collapsed()) {\n      classes.push('os-form-section--collapsed');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-form-section--with-actions');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly groupVariant = computed(() => {\n    const sizeMap: Record<string, 'default' | 'compact' | 'spaced'> = {\n      small: 'compact',\n      medium: 'default',\n      large: 'spaced',\n    };\n    return sizeMap[this.size()];\n  });\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"text\" | \"email\" | \"password\" | \"number\" | \"tel\" | \"url\" | \"textarea\" | \"select\" | \"checkbox\" | \"radio\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "validation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "FormTemplateConfig",
            "id": "interface-FormTemplateConfig-2cb1763f4a7013ba9b2987c1d8979abdfb2658b5c8e6f196459c204f55d66d2f5e61cb4cb1430f0b28e9e8b68e6a7a4700ce6e70663649ba2e4bb2ca4f8aa28e",
            "file": "src/app/shared/ui-components/templates/os-form-template/os-form-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, input, output, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormGroup } from '@angular/forms';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsPageHeaderComponent } from '../../organisms/os-page-header/os-page-header.component';\n\nexport interface FormTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showBackButton?: boolean;\n  backUrl?: string;\n  showSaveButton?: boolean;\n  showCancelButton?: boolean;\n  saveButtonText?: string;\n  cancelButtonText?: string;\n  showProgress?: boolean;\n  progressValue?: number;\n  showActions?: boolean;\n  actions?: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }[];\n}\n\n@Component({\n  selector: 'os-form-template',\n  template: `\n    <div [class]=\"templateClass()\">\n      @if (showHeader()) {\n      <os-page-header\n        [variant]=\"headerVariant()\"\n        [size]=\"size()\"\n        [title]=\"config().title\"\n        [subtitle]=\"config().subtitle || null\"\n        [actions]=\"headerActions()\"\n      />\n      }\n\n      <div class=\"os-form-template__content\">\n        <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"cardClass()\">\n          @if (showProgress() && progressValue() !== undefined) {\n          <div class=\"os-form-template__progress\">\n            <os-progress-bar\n              [variant]=\"'primary'\"\n              [size]=\"size()\"\n              [value]=\"progressValue()\"\n              [label]=\"'Progresso: ' + progressValue() + '%'\"\n            />\n          </div>\n          }\n\n          <div class=\"os-form-template__form\">\n            <ng-content />\n          </div>\n\n          @if (showActions()) {\n          <div class=\"os-form-template__actions\">\n            @if (config().showCancelButton) {\n            <os-button\n              [variant]=\"'secondary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled()\"\n              (click)=\"cancelClick.emit()\"\n            >\n              {{ config().cancelButtonText || 'Cancelar' }}\n            </os-button>\n            } @if (config().showSaveButton) {\n            <os-button\n              [variant]=\"'primary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled() || !isFormValid()\"\n              [loading]=\"loading()\"\n              (click)=\"save.emit()\"\n            >\n              {{ config().saveButtonText || 'Salvar' }}\n            </os-button>\n            } @for (action of config().actions; track action.label) {\n            <os-button\n              [variant]=\"action.variant\"\n              [size]=\"action.size\"\n              [disabled]=\"action.disabled || disabled()\"\n              [loading]=\"action.loading || false\"\n              [icon]=\"action.icon || ''\"\n              (click)=\"actionClick.emit(action)\"\n            >\n              {{ action.label }}\n            </os-button>\n            }\n          </div>\n          }\n        </os-card>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./os-form-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    OsButtonComponent,\n    OsCardComponent,\n    OsProgressBarComponent,\n    OsPageHeaderComponent,\n  ],\n})\nexport class OsFormTemplateComponent {\n  config = input.required<FormTemplateConfig>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n  form = input<FormGroup | null>(null);\n  showHeader = input(true);\n  showProgress = input(true);\n  showActions = input(true);\n\n  save = output<void>();\n  cancelClick = output<void>();\n  actionClick = output<{\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }>();\n\n  protected templateClass = computed(() => {\n    return [\n      'os-form-template',\n      `os-form-template--${this.variant()}`,\n      `os-form-template--${this.size()}`,\n      `os-form-template--${this.theme()}`,\n      this.disabled() ? 'os-form-template--disabled' : '',\n      this.loading() ? 'os-form-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected cardClass = computed(() => {\n    return ['os-form-template__card', `os-form-template__card--${this.variant()}`]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected headerVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'compact' ? 'compact' : 'default';\n  });\n\n  protected cardVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'detailed' ? 'elevated' : 'default';\n  });\n\n  protected headerActions = computed(() => {\n    if (!this.showHeader()) return [];\n\n    const actions = [];\n\n    if (this.config().showBackButton && this.config().backUrl) {\n      actions.push({\n        label: 'Voltar',\n        variant: 'secondary' as const,\n        size: this.size(),\n        icon: 'arrow-left',\n      });\n    }\n\n    return actions;\n  });\n\n  protected progressValue = computed(() => {\n    return this.config().progressValue || 0;\n  });\n\n  protected isFormValid = computed(() => {\n    const form = this.form();\n    return form ? form.valid : true;\n  });\n}\n",
            "properties": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "backUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "cancelButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "progressValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "saveButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "showActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "showBackButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "showCancelButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "showProgress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "showSaveButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "GetBudgetOverviewResponseDto",
            "id": "interface-GetBudgetOverviewResponseDto-fda502208d9a84229f204f4b2bdd890b57aabafe10fc921d76d9178e0e5cdb80b09c02c223a81743a43d60b69d2769296e3fb5d566033da3c0e1f97c18276751",
            "file": "src/dtos/budget/get-budget-overview-response-dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetOverviewDto } from './budget-types';\n\nexport interface GetBudgetOverviewResponseDto {\n  data: BudgetOverviewDto;\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetOverviewDto",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "GetBudgetsResponseDto",
            "id": "interface-GetBudgetsResponseDto-dfadafb11894b56c3b2a1c0a5e296de8f32b7ea89bdc204eebdcd45f36bf9e94fbe8dc0487c67bf69ba9f4a0d17356d4c60508a01aa27b80b80fd3f47f3c3514",
            "file": "src/dtos/budget/get-budgets-response-dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetDto } from './budget-types';\n\nexport interface GetBudgetsResponseDto {\n  data: BudgetDto[];\n  meta: {\n    count: number;\n  };\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetDto[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "meta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "GoalProgressData",
            "id": "interface-GoalProgressData-d791e4462d9252a8bc30754ef19d58bed84481cd962c9a132fa47e39bebec1d75ab5b1611dfaeaf14d5ff1f57762470a9b922cb015e681395d51e1fb343dd7e5",
            "file": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  computed,\n  input,\n  output,\n  signal,\n  ChangeDetectionStrategy,\n  effect,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport {\n  OsMoneyDisplayComponent,\n  OsMoneyDisplayVariant,\n} from '../../molecules/os-money-display/os-money-display.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport interface GoalProgressData {\n  id: string;\n  title: string;\n  description?: string;\n  targetAmount: number;\n  currentAmount: number;\n  currency: string;\n  deadline?: Date;\n  category?: string;\n  priority?: 'low' | 'medium' | 'high';\n}\n\nexport type GoalProgressVariant = 'default' | 'compact' | 'detailed' | 'minimal';\nexport type GoalProgressSize = 'small' | 'medium' | 'large';\nexport type GoalProgressTheme = 'light' | 'dark';\nexport type GoalProgressMilestone = 25 | 50 | 75 | 90 | 100;\n\n@Component({\n  selector: 'os-goal-progress',\n  standalone: true,\n  imports: [CommonModule, OsProgressBarComponent, OsMoneyDisplayComponent, OsIconComponent],\n  template: `\n    <div class=\"os-goal-progress\" [class]=\"goalClasses()\" [attr.aria-label]=\"ariaLabel()\">\n      <div class=\"os-goal-progress__header\">\n        @if (showIcon()) {\n        <div class=\"os-goal-progress__icon\">\n          <os-icon [name]=\"iconName()\" [size]=\"iconSize()\" [attr.aria-hidden]=\"true\" />\n        </div>\n        }\n\n        <div class=\"os-goal-progress__title-section\">\n          <h3 class=\"os-goal-progress__title\" [id]=\"titleId()\">\n            {{ goalData().title }}\n          </h3>\n          @if (goalData().description && showDescription()) {\n          <p class=\"os-goal-progress__description\" [id]=\"descriptionId()\">\n            {{ goalData().description }}\n          </p>\n          }\n        </div>\n\n        @if (showCategory() && goalData().category) {\n        <div class=\"os-goal-progress__category\">\n          <span class=\"os-goal-progress__category-text\">{{ goalData().category }}</span>\n        </div>\n        }\n      </div>\n\n      <div class=\"os-goal-progress__content\">\n        <div class=\"os-goal-progress__amounts\">\n          <div class=\"os-goal-progress__current\">\n            <os-money-display\n              [value]=\"goalData().currentAmount\"\n              [currency]=\"goalData().currency\"\n              [variant]=\"currentAmountVariant()\"\n              [size]=\"amountSize()\"\n            />\n            <span class=\"os-goal-progress__current-label\">Arrecadado</span>\n          </div>\n\n          <div class=\"os-goal-progress__target\">\n            <os-money-display\n              [value]=\"goalData().targetAmount\"\n              [currency]=\"goalData().currency\"\n              [variant]=\"targetAmountVariant()\"\n              [size]=\"amountSize()\"\n            />\n            <span class=\"os-goal-progress__target-label\">Meta</span>\n          </div>\n        </div>\n\n        <div class=\"os-goal-progress__progress\">\n          <os-progress-bar\n            [value]=\"progressPercentage()\"\n            [variant]=\"progressVariant()\"\n            [size]=\"progressSize()\"\n            [showPercentage]=\"showPercentage()\"\n            [animated]=\"animated()\"\n            [showCelebration]=\"shouldShowCelebration()\"\n            [celebrationText]=\"celebrationText()\"\n          />\n\n          @if (shouldShowMilestone()) {\n          <div class=\"os-goal-progress__milestone\" [attr.aria-live]=\"'polite'\">\n            <os-icon name=\"celebration\" size=\"sm\" [attr.aria-hidden]=\"true\" />\n            <span class=\"os-goal-progress__milestone-text\">\n              {{ currentMilestone() }}% alcançado! 🎯\n            </span>\n          </div>\n          }\n        </div>\n\n        @if (showStats()) {\n        <div class=\"os-goal-progress__stats\">\n          <div class=\"os-goal-progress__stat\">\n            <span class=\"os-goal-progress__stat-label\">Progresso</span>\n            <span class=\"os-goal-progress__stat-value\">{{ progressPercentage() }}%</span>\n          </div>\n\n          @if (remainingAmount() > 0) {\n          <div class=\"os-goal-progress__stat\">\n            <span class=\"os-goal-progress__stat-label\">Restante</span>\n            <span class=\"os-goal-progress__stat-value\">\n              <os-money-display\n                [value]=\"remainingAmount()\"\n                [currency]=\"goalData().currency\"\n                [variant]=\"'default'\"\n                [size]=\"'small'\"\n              />\n            </span>\n          </div>\n          } @if (goalData().deadline && showDeadline()) {\n          <div class=\"os-goal-progress__stat\">\n            <span class=\"os-goal-progress__stat-label\">Prazo</span>\n            <span class=\"os-goal-progress__stat-value\">{{ formattedDeadline() }}</span>\n          </div>\n          }\n        </div>\n        }\n      </div>\n\n      @if (showActions() && actions().length > 0) {\n      <div class=\"os-goal-progress__actions\">\n        <ng-content select=\"[slot=actions]\"></ng-content>\n      </div>\n      } @if (shouldShowCelebration()) {\n      <div class=\"os-goal-progress__celebration\" [attr.aria-live]=\"'assertive'\">\n        <div class=\"os-goal-progress__celebration-content\">\n          <os-icon name=\"celebration\" size=\"lg\" [attr.aria-hidden]=\"true\" />\n          <span class=\"os-goal-progress__celebration-text\">{{ celebrationText() }}</span>\n        </div>\n        <div class=\"os-goal-progress__confetti\">\n          <div\n            class=\"os-goal-progress__confetti-piece\"\n            *ngFor=\"let piece of [1, 2, 3, 4, 5, 6, 7, 8]\"\n          ></div>\n        </div>\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-goal-progress.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[attr.role]': '\"region\"',\n    '[attr.aria-labelledby]': 'titleId()',\n  },\n})\nexport class OsGoalProgressComponent {\n  readonly goalData = input.required<GoalProgressData>();\n  readonly variant = input<GoalProgressVariant>('default');\n  readonly size = input<GoalProgressSize>('medium');\n  readonly theme = input<GoalProgressTheme>('light');\n  readonly showIcon = input(true);\n  readonly showDescription = input(true);\n  readonly showCategory = input(true);\n  readonly showStats = input(true);\n  readonly showPercentage = input(true);\n  readonly showDeadline = input(true);\n  readonly showActions = input(false);\n  readonly animated = input(true);\n  readonly actions = input<{ label: string; variant?: string; disabled?: boolean }[]>([]);\n  readonly ariaLabel = input<string | null>(null);\n  readonly showCelebration = input(true);\n  readonly showMilestones = input(true);\n  readonly celebrationText = input('Meta alcançada! 🎉');\n  readonly enableHapticFeedback = input(false);\n\n  readonly goalClick = output<GoalProgressData>();\n  readonly actionClick = output<{\n    action: { label: string; variant?: string; disabled?: boolean };\n    goal: GoalProgressData;\n  }>();\n  readonly milestoneReached = output<{\n    milestone: GoalProgressMilestone;\n    goal: GoalProgressData;\n  }>();\n  readonly goalCompleted = output<GoalProgressData>();\n\n  readonly titleId = signal(`goal-title-${Math.random().toString(36).substr(2, 9)}`);\n  readonly descriptionId = signal(`goal-description-${Math.random().toString(36).substr(2, 9)}`);\n  readonly isCelebrating = signal(false);\n  readonly reachedMilestones = signal<Set<GoalProgressMilestone>>(new Set());\n\n  readonly progressPercentage = computed(() => {\n    const data = this.goalData();\n    if (data.targetAmount <= 0) return 0;\n    return Math.min(Math.round((data.currentAmount / data.targetAmount) * 100), 100);\n  });\n\n  readonly remainingAmount = computed(() => {\n    const data = this.goalData();\n    return Math.max(data.targetAmount - data.currentAmount, 0);\n  });\n\n  readonly isCompleted = computed(() => {\n    return this.progressPercentage() >= 100;\n  });\n\n  readonly isOverdue = computed(() => {\n    const data = this.goalData();\n    if (!data.deadline) return false;\n    return new Date() > data.deadline && !this.isCompleted();\n  });\n\n  readonly currentMilestone = computed((): GoalProgressMilestone | null => {\n    const percentage = this.progressPercentage();\n    if (percentage >= 100) return 100;\n    if (percentage >= 90) return 90;\n    if (percentage >= 75) return 75;\n    if (percentage >= 50) return 50;\n    if (percentage >= 25) return 25;\n    return null;\n  });\n\n  readonly shouldShowCelebration = computed(() => {\n    return this.showCelebration() && this.isCompleted() && !this.isCelebrating();\n  });\n\n  readonly shouldShowMilestone = computed(() => {\n    if (!this.showMilestones()) return false;\n    const current = this.currentMilestone();\n    const reached = this.reachedMilestones();\n    return current !== null && !reached.has(current);\n  });\n\n  readonly goalClasses = computed(() => {\n    const classes = ['os-goal-progress'];\n    classes.push(`os-goal-progress--${this.variant()}`);\n    classes.push(`os-goal-progress--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-goal-progress--dark');\n    }\n\n    if (this.isCompleted()) {\n      classes.push('os-goal-progress--completed');\n    }\n\n    if (this.isOverdue()) {\n      classes.push('os-goal-progress--overdue');\n    }\n\n    if (this.goalData().priority) {\n      classes.push(`os-goal-progress--priority-${this.goalData().priority}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly iconName = computed(() => {\n    if (this.isCompleted()) return 'check-circle';\n    if (this.isOverdue()) return 'alert-circle';\n    return 'target';\n  });\n\n  readonly iconSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly progressVariant = computed(() => {\n    if (this.isCompleted()) return 'success';\n    if (this.isOverdue()) return 'danger';\n    if (this.goalData().priority === 'high') return 'warning';\n    return 'primary';\n  });\n\n  readonly progressSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly currentAmountVariant = computed((): OsMoneyDisplayVariant => {\n    if (this.isCompleted()) return 'success';\n    if (this.isOverdue()) return 'error';\n    return 'default';\n  });\n\n  readonly targetAmountVariant = computed((): OsMoneyDisplayVariant => {\n    return 'default';\n  });\n\n  readonly amountSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly formattedDeadline = computed(() => {\n    const deadline = this.goalData().deadline;\n    if (!deadline) return '';\n\n    const now = new Date();\n    const diffTime = deadline.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays < 0) return 'Vencido';\n    if (diffDays === 0) return 'Hoje';\n    if (diffDays === 1) return 'Amanhã';\n    if (diffDays <= 7) return `${diffDays} dias`;\n    if (diffDays <= 30) return `${Math.ceil(diffDays / 7)} semanas`;\n    return `${Math.ceil(diffDays / 30)} meses`;\n  });\n\n  constructor() {\n    effect(() => {\n      const currentMilestone = this.currentMilestone();\n      const reachedMilestones = this.reachedMilestones();\n      const shouldShowMilestone = this.shouldShowMilestone();\n      const shouldShowCelebration = this.shouldShowCelebration();\n\n      if (shouldShowMilestone && currentMilestone !== null) {\n        const newReached = new Set(reachedMilestones);\n        newReached.add(currentMilestone);\n        this.reachedMilestones.set(newReached);\n\n        this.milestoneReached.emit({\n          milestone: currentMilestone,\n          goal: this.goalData(),\n        });\n\n        if (this.enableHapticFeedback() && 'vibrate' in navigator) {\n          navigator.vibrate(100);\n        }\n      }\n\n      if (shouldShowCelebration) {\n        this.isCelebrating.set(true);\n        this.goalCompleted.emit(this.goalData());\n\n        if (this.enableHapticFeedback() && 'vibrate' in navigator) {\n          navigator.vibrate([100, 50, 100]);\n        }\n\n        setTimeout(() => {\n          this.isCelebrating.set(false);\n        }, 3000);\n      }\n    });\n  }\n\n  onGoalClick(): void {\n    this.goalClick.emit(this.goalData());\n  }\n\n  onActionClick(action: { label: string; variant?: string; disabled?: boolean }): void {\n    this.actionClick.emit({ action, goal: this.goalData() });\n  }\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "currentAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "deadline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "priority",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"low\" | \"medium\" | \"high\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "targetAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "GoalTrackerData",
            "id": "interface-GoalTrackerData-466600ea9790e69cbb4c5fdf2c212e1588bf8dea3c0334e5afbee8768b27ce46818507bb899a57fc38d34d9b1d61abad048dc9d2b576cc446f59628193e8a1fb",
            "file": "src/app/shared/ui-components/organisms/os-goal-tracker/os-goal-tracker.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\n\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsMoneyDisplayComponent } from '../../molecules/os-money-display/os-money-display.component';\n\nexport interface GoalTrackerData {\n  id: string;\n  title: string;\n  description?: string;\n  targetAmount: number;\n  currentAmount: number;\n  currency: string;\n  deadline?: Date;\n  startDate: Date;\n  lastUpdated: Date;\n  status: 'active' | 'completed' | 'paused' | 'cancelled';\n  priority: 'low' | 'medium' | 'high';\n  category?: string;\n  monthlyContribution?: number;\n  progressHistory: ProgressHistory[];\n}\n\nexport interface ProgressHistory {\n  date: Date;\n  amount: number;\n  percentage: number;\n  note?: string;\n}\n\n@Component({\n  selector: 'os-goal-tracker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsCardComponent,\n    OsMoneyDisplayComponent,\n    OsBadgeComponent,\n    OsIconComponent,\n    OsProgressBarComponent,\n    OsSpinnerComponent,\n  ],\n  templateUrl: './os-goal-tracker.component.html',\n  styleUrls: ['./os-goal-tracker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsGoalTrackerComponent {\n  // Inputs\n  goalData = input.required<GoalTrackerData | null>();\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n  showTimeline = input<boolean>(true);\n  showHistory = input<boolean>(true);\n  showContribution = input<boolean>(true);\n  showStatus = input<boolean>(true);\n  loading = input<boolean>(false);\n  clickable = input<boolean>(false);\n\n  // Outputs\n  readonly goalClick = output<GoalTrackerData>();\n  readonly refreshClick = output<void>();\n  readonly actionClick = output<{ action: string; goal: GoalTrackerData }>();\n\n  // Additional properties for template\n  readonly ariaLabel = input<string | null>(null);\n\n  // Computed properties\n  readonly progressPercentage = computed(() => {\n    const data = this.goalData();\n    if (!data || data.targetAmount <= 0) return 0;\n    return Math.min(Math.round((data.currentAmount / data.targetAmount) * 100), 100);\n  });\n\n  readonly remainingAmount = computed(() => {\n    const data = this.goalData();\n    if (!data) return 0;\n    return Math.max(data.targetAmount - data.currentAmount, 0);\n  });\n\n  readonly isCompleted = computed(() => {\n    const data = this.goalData();\n    return data ? data.status === 'completed' || this.progressPercentage() >= 100 : false;\n  });\n\n  readonly isOverdue = computed(() => {\n    const data = this.goalData();\n    if (!data || !data.deadline || this.isCompleted()) return false;\n    return new Date() > data.deadline;\n  });\n\n  readonly statusInfo = computed(() => {\n    const data = this.goalData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'active':\n        return this.isOverdue()\n          ? { type: 'error' as const, label: 'Atrasado', icon: 'warning' }\n          : { type: 'success' as const, label: 'Ativo', icon: 'play_circle' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check_circle' };\n      case 'paused':\n        return { type: 'warning' as const, label: 'Pausado', icon: 'pause_circle' };\n      case 'cancelled':\n        return { type: 'error' as const, label: 'Cancelado', icon: 'cancel' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  });\n\n  readonly priorityInfo = computed(() => {\n    const data = this.goalData();\n    if (!data) return { type: 'info' as const, label: 'N/A', color: 'var(--os-color-info)' };\n\n    switch (data.priority) {\n      case 'high':\n        return { type: 'error' as const, label: 'Alta', color: 'var(--os-color-error)' };\n      case 'medium':\n        return { type: 'warning' as const, label: 'Média', color: 'var(--os-color-warning)' };\n      case 'low':\n        return { type: 'success' as const, label: 'Baixa', color: 'var(--os-color-success)' };\n      default:\n        return { type: 'info' as const, label: 'N/A', color: 'var(--os-color-info)' };\n    }\n  });\n\n  readonly timelineInfo = computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showTimeline()) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      deadline: data.deadline ? data.deadline.toLocaleDateString('pt-BR') : 'Sem prazo',\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n      daysRemaining: this.getDaysRemaining(),\n    };\n  });\n\n  readonly recentHistory = computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showHistory()) return [];\n\n    return data.progressHistory.slice(-3).reverse(); // Last 3 entries\n  });\n\n  readonly contributionInfo = computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showContribution() || !data.monthlyContribution) return null;\n\n    const remaining = this.remainingAmount();\n    const monthsNeeded = Math.ceil(remaining / data.monthlyContribution);\n\n    return {\n      monthly: data.monthlyContribution,\n      monthsNeeded,\n      isFeasible: monthsNeeded <= 12, // Consider feasible if less than 1 year\n    };\n  });\n\n  readonly progressVariant = computed(() => {\n    if (this.isCompleted()) return 'success';\n    if (this.isOverdue()) return 'danger';\n    const data = this.goalData();\n    if (data?.priority === 'high') return 'warning';\n    return 'primary';\n  });\n\n  readonly progressSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly iconSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly badgeSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly moneySize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly goalClasses = computed(() => {\n    const classes = ['os-goal-tracker'];\n    classes.push(`os-goal-tracker--${this.variant()}`);\n    classes.push(`os-goal-tracker--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-goal-tracker--dark');\n    }\n\n    if (this.isCompleted()) {\n      classes.push('os-goal-tracker--completed');\n    }\n\n    if (this.isOverdue()) {\n      classes.push('os-goal-tracker--overdue');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly cardVariant = computed(() => {\n    const data = this.goalData();\n    if (!data) return 'default';\n\n    if (this.isCompleted()) return 'elevated';\n    if (this.isOverdue()) return 'outlined';\n    if (data.priority === 'high') return 'elevated';\n    return 'default';\n  });\n\n  // Methods\n  onCardClick(): void {\n    const data = this.goalData();\n    if (this.clickable() && data) {\n      this.goalClick.emit(data);\n    }\n  }\n\n  onRefreshClick(): void {\n    this.refreshClick.emit();\n  }\n\n  onActionClick(action: string): void {\n    const data = this.goalData();\n    if (data) {\n      this.actionClick.emit({ action, goal: data });\n    }\n  }\n\n  getDaysRemaining(): number {\n    const data = this.goalData();\n    if (!data || !data.deadline) return 0;\n\n    const now = new Date();\n    const diffTime = data.deadline.getTime() - now.getTime();\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  formatHistoryDate(date: Date): string {\n    return date.toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    });\n  }\n\n  getStatusColor(): string {\n    const status = this.statusInfo();\n    switch (status.type) {\n      case 'success':\n        return 'var(--os-color-success)';\n      case 'warning':\n        return 'var(--os-color-warning)';\n      case 'error':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "currentAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "deadline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "lastUpdated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "monthlyContribution",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "priority",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"low\" | \"medium\" | \"high\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "progressHistory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProgressHistory[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "startDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"active\" | \"completed\" | \"paused\" | \"cancelled\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "targetAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "HeaderAction",
            "id": "interface-HeaderAction-840731b53ed87350615e318359d1965504863599715bd91e183711efeec37e0c4f2ed728fd2f75c131b76302bf020aa88fa1fb48687c9277bae99f39cac14bed",
            "file": "src/app/shared/ui-components/organisms/os-header/os-header.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, computed, input, output, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsAvatarComponent } from '../../atoms/os-avatar/os-avatar.component';\nimport { OsNavigationItemComponent } from '../../molecules/os-navigation-item/os-navigation-item.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport interface HeaderNavigationItem {\n  label: string;\n  icon?: string;\n  route?: string;\n  active?: boolean;\n  badge?: number;\n  disabled?: boolean;\n}\n\nexport interface HeaderUserMenu {\n  label: string;\n  icon?: string;\n  route?: string;\n  action?: string;\n  disabled?: boolean;\n  divider?: boolean;\n}\n\nexport interface HeaderAction {\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  size?: 'small' | 'medium' | 'large';\n  disabled?: boolean;\n  loading?: boolean;\n}\n\n@Component({\n  selector: 'os-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsButtonComponent,\n    OsAvatarComponent,\n    OsNavigationItemComponent,\n    OsIconComponent,\n  ],\n  template: `\n    <header class=\"os-header\" [class]=\"headerClasses()\" [attr.aria-label]=\"ariaLabel()\">\n      <div class=\"os-header__container\">\n        <!-- Logo/Brand Section -->\n        <div class=\"os-header__brand\">\n          @if (logo()) {\n          <a\n            class=\"os-header__logo\"\n            [routerLink]=\"logoRoute()\"\n            [attr.aria-label]=\"logoAlt()\"\n            (click)=\"onLogoClick($event)\"\n          >\n            @if (logoImage()) {\n            <img [src]=\"logoImage()\" [alt]=\"logoAlt()\" class=\"os-header__logo-image\" />\n            } @else {\n            <span class=\"os-header__logo-text\">{{ logoText() }}</span>\n            }\n          </a>\n          } @else if (logoText()) {\n          <div class=\"os-header__logo-text-only\">{{ logoText() }}</div>\n          }\n        </div>\n\n        <!-- Navigation Section -->\n        @if (navigationItems().length > 0) {\n        <nav class=\"os-header__navigation\" [attr.aria-label]=\"navigationAriaLabel()\">\n          <ul class=\"os-header__nav-list\">\n            @for (item of navigationItems(); track item.label) {\n            <li class=\"os-header__nav-item\">\n              <os-navigation-item\n                [label]=\"item.label\"\n                [icon]=\"item.icon || ''\"\n                [routerLink]=\"item.route\"\n                [active]=\"item.active || false\"\n                [badge]=\"item.badge || null\"\n                [disabled]=\"item.disabled || false\"\n                [variant]=\"getNavigationVariant()\"\n                [size]=\"getNavigationSize()\"\n                (itemClick)=\"onNavigationClick(item, $event)\"\n              />\n            </li>\n            }\n          </ul>\n        </nav>\n        }\n\n        <!-- Actions Section -->\n        <div class=\"os-header__actions\">\n          @if (actions().length > 0) {\n          <div class=\"os-header__action-buttons\">\n            @for (action of actions(); track action.label) {\n            <os-button\n              [variant]=\"action.variant || 'secondary'\"\n              [size]=\"action.size || 'medium'\"\n              [disabled]=\"action.disabled || false\"\n              [loading]=\"action.loading || false\"\n              [icon]=\"action.icon || ''\"\n              (buttonClick)=\"onActionClick(action, $event)\"\n            >\n              {{ action.label }}\n            </os-button>\n            }\n          </div>\n          }\n\n          <!-- User Menu -->\n          @if (showUserMenu()) {\n          <div class=\"os-header__user-menu\">\n            <button\n              class=\"os-header__user-trigger\"\n              [class]=\"userTriggerClasses()\"\n              [disabled]=\"userMenuDisabled()\"\n              [attr.aria-label]=\"userMenuAriaLabel()\"\n              [attr.aria-expanded]=\"userMenuOpen()\"\n              [attr.aria-haspopup]=\"'menu'\"\n              (click)=\"toggleUserMenu()\"\n            >\n              <os-avatar\n                [image]=\"userAvatar() || ''\"\n                [initials]=\"userInitials() || ''\"\n                [size]=\"getAvatarSize()\"\n                [variant]=\"'circle'\"\n                [ariaLabel]=\"userName() || 'User'\"\n              />\n              @if (showUserInfo()) {\n              <div class=\"os-header__user-info\">\n                <span class=\"os-header__user-name\">{{ userName() }}</span>\n                @if (userRole()) {\n                <span class=\"os-header__user-role\">{{ userRole() }}</span>\n                }\n              </div>\n              }\n              <os-icon\n                name=\"chevron-down\"\n                size=\"sm\"\n                class=\"os-header__user-chevron\"\n                [class]=\"userChevronClasses()\"\n                [attr.aria-hidden]=\"true\"\n              />\n            </button>\n\n            @if (userMenuOpen()) {\n            <div class=\"os-header__user-dropdown\" [attr.role]=\"'menu'\">\n              @for (menuItem of userMenuItems(); track menuItem.label) { @if (menuItem.divider) {\n              <div class=\"os-header__user-divider\" role=\"separator\"></div>\n              } @else {\n              <button\n                class=\"os-header__user-menu-item\"\n                [class]=\"getUserMenuItemClasses(menuItem)\"\n                [disabled]=\"menuItem.disabled || false\"\n                [attr.aria-label]=\"menuItem.label\"\n                (click)=\"onUserMenuItemClick(menuItem, $event)\"\n              >\n                @if (menuItem.icon) {\n                <os-icon\n                  [name]=\"menuItem.icon\"\n                  size=\"sm\"\n                  class=\"os-header__user-menu-icon\"\n                  [attr.aria-hidden]=\"true\"\n                />\n                }\n                <span class=\"os-header__user-menu-text\">{{ menuItem.label }}</span>\n              </button>\n              } }\n            </div>\n            }\n          </div>\n          }\n\n          <!-- Mobile Menu Toggle -->\n          @if (showMobileMenu()) {\n          <button\n            class=\"os-header__mobile-toggle\"\n            [class]=\"mobileToggleClasses()\"\n            [attr.aria-label]=\"mobileMenuAriaLabel()\"\n            [attr.aria-expanded]=\"mobileMenuOpen()\"\n            (click)=\"toggleMobileMenu()\"\n          >\n            <os-icon\n              [name]=\"mobileMenuOpen() ? 'close' : 'menu'\"\n              size=\"md\"\n              [attr.aria-hidden]=\"true\"\n            />\n          </button>\n          }\n        </div>\n      </div>\n\n      <!-- Mobile Navigation -->\n      @if (showMobileMenu() && mobileMenuOpen()) {\n      <div class=\"os-header__mobile-navigation\" [attr.role]=\"'navigation'\">\n        <nav class=\"os-header__mobile-nav\" [attr.aria-label]=\"mobileNavigationAriaLabel()\">\n          <ul class=\"os-header__mobile-nav-list\">\n            @for (item of navigationItems(); track item.label) {\n            <li class=\"os-header__mobile-nav-item\">\n              <os-navigation-item\n                [label]=\"item.label\"\n                [icon]=\"item.icon || ''\"\n                [routerLink]=\"item.route\"\n                [active]=\"item.active || false\"\n                [badge]=\"item.badge || null\"\n                [disabled]=\"item.disabled || false\"\n                [variant]=\"getMobileNavigationVariant()\"\n                [size]=\"getMobileNavigationSize()\"\n                (itemClick)=\"onMobileNavigationClick(item, $event)\"\n              />\n            </li>\n            }\n          </ul>\n        </nav>\n      </div>\n      }\n    </header>\n  `,\n  styleUrls: ['./os-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsHeaderComponent {\n  // Logo/Brand inputs\n  readonly logo = input<string | null>(null);\n  readonly logoText = input<string | null>(null);\n  readonly logoImage = input<string | null>(null);\n  readonly logoRoute = input<string>('/');\n  readonly logoAlt = input<string>('Logo');\n\n  // Navigation inputs\n  readonly navigationItems = input<HeaderNavigationItem[]>([]);\n  readonly navigationAriaLabel = input<string>('Main navigation');\n\n  // User menu inputs\n  readonly showUserMenu = input(false);\n  readonly userName = input<string | null>(null);\n  readonly userRole = input<string | null>(null);\n  readonly userAvatar = input<string | null>(null);\n  readonly userInitials = input<string | null>(null);\n  readonly userMenuItems = input<HeaderUserMenu[]>([]);\n  readonly userMenuDisabled = input(false);\n  readonly userMenuAriaLabel = input<string>('User menu');\n\n  // Actions inputs\n  readonly actions = input<HeaderAction[]>([]);\n\n  // Mobile menu inputs\n  readonly showMobileMenu = input(false);\n  readonly mobileMenuAriaLabel = input<string>('Mobile menu');\n  readonly mobileNavigationAriaLabel = input<string>('Mobile navigation');\n\n  // Styling inputs\n  readonly variant = input<'default' | 'compact' | 'extended' | 'minimal'>('default');\n  readonly size = input<'small' | 'medium' | 'large'>('medium');\n  readonly theme = input<'light' | 'dark'>('light');\n  readonly sticky = input(false);\n  readonly ariaLabel = input<string | null>(null);\n\n  // State signals\n  readonly userMenuOpen = signal(false);\n  readonly mobileMenuOpen = signal(false);\n\n  // Outputs\n  readonly logoClick = output<MouseEvent>();\n  readonly navigationClick = output<{ item: HeaderNavigationItem; event: MouseEvent }>();\n  readonly actionClick = output<{ action: HeaderAction; event: MouseEvent }>();\n  readonly userMenuItemClick = output<{ item: HeaderUserMenu; event: MouseEvent }>();\n  readonly mobileNavigationClick = output<{ item: HeaderNavigationItem; event: MouseEvent }>();\n  readonly mobileMenuToggle = output<boolean>();\n\n  readonly headerClasses = computed(() => {\n    const classes = ['os-header'];\n    classes.push(`os-header--${this.variant()}`);\n    classes.push(`os-header--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-header--dark');\n    }\n\n    if (this.sticky()) {\n      classes.push('os-header--sticky');\n    }\n\n    if (this.navigationItems().length > 0) {\n      classes.push('os-header--with-navigation');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-header--with-actions');\n    }\n\n    if (this.showUserMenu()) {\n      classes.push('os-header--with-user-menu');\n    }\n\n    if (this.showMobileMenu()) {\n      classes.push('os-header--with-mobile-menu');\n    }\n\n    if (this.mobileMenuOpen()) {\n      classes.push('os-header--mobile-open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly userTriggerClasses = computed(() => {\n    const classes = ['os-header__user-trigger'];\n\n    if (this.userMenuOpen()) {\n      classes.push('os-header__user-trigger--open');\n    }\n\n    if (this.userMenuDisabled()) {\n      classes.push('os-header__user-trigger--disabled');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly userChevronClasses = computed(() => {\n    const classes = ['os-header__user-chevron'];\n\n    if (this.userMenuOpen()) {\n      classes.push('os-header__user-chevron--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly mobileToggleClasses = computed(() => {\n    const classes = ['os-header__mobile-toggle'];\n\n    if (this.mobileMenuOpen()) {\n      classes.push('os-header__mobile-toggle--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly showUserInfo = computed(() => {\n    return this.variant() === 'extended' && (this.userName() || this.userRole());\n  });\n\n  readonly getAvatarSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly getNavigationVariant = computed(() => {\n    return this.theme() === 'dark' ? ('accent' as const) : ('default' as const);\n  });\n\n  readonly getNavigationSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  readonly getMobileNavigationVariant = computed(() => {\n    return 'primary' as const;\n  });\n\n  readonly getMobileNavigationSize = computed(() => {\n    return 'large' as const;\n  });\n\n  getUserMenuItemClasses(menuItem: HeaderUserMenu): string {\n    const classes = ['os-header__user-menu-item'];\n\n    if (menuItem.disabled) {\n      classes.push('os-header__user-menu-item--disabled');\n    }\n\n    return classes.join(' ');\n  }\n\n  onLogoClick(event: MouseEvent): void {\n    this.logoClick.emit(event);\n  }\n\n  onNavigationClick(item: HeaderNavigationItem, event: MouseEvent): void {\n    this.navigationClick.emit({ item, event });\n  }\n\n  onActionClick(action: HeaderAction, event: MouseEvent): void {\n    this.actionClick.emit({ action, event });\n  }\n\n  onUserMenuItemClick(menuItem: HeaderUserMenu, event: MouseEvent): void {\n    if (!menuItem.disabled) {\n      this.userMenuItemClick.emit({ item: menuItem, event });\n      this.userMenuOpen.set(false);\n    }\n  }\n\n  onMobileNavigationClick(item: HeaderNavigationItem, event: MouseEvent): void {\n    this.mobileNavigationClick.emit({ item, event });\n    this.mobileMenuOpen.set(false);\n  }\n\n  toggleUserMenu(): void {\n    if (!this.userMenuDisabled()) {\n      this.userMenuOpen.update((open) => !open);\n    }\n  }\n\n  toggleMobileMenu(): void {\n    this.mobileMenuOpen.update((open) => !open);\n    this.mobileMenuToggle.emit(this.mobileMenuOpen());\n  }\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"secondary\" | \"tertiary\" | \"danger\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "HeaderNavigationItem",
            "id": "interface-HeaderNavigationItem-840731b53ed87350615e318359d1965504863599715bd91e183711efeec37e0c4f2ed728fd2f75c131b76302bf020aa88fa1fb48687c9277bae99f39cac14bed",
            "file": "src/app/shared/ui-components/organisms/os-header/os-header.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, computed, input, output, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsAvatarComponent } from '../../atoms/os-avatar/os-avatar.component';\nimport { OsNavigationItemComponent } from '../../molecules/os-navigation-item/os-navigation-item.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport interface HeaderNavigationItem {\n  label: string;\n  icon?: string;\n  route?: string;\n  active?: boolean;\n  badge?: number;\n  disabled?: boolean;\n}\n\nexport interface HeaderUserMenu {\n  label: string;\n  icon?: string;\n  route?: string;\n  action?: string;\n  disabled?: boolean;\n  divider?: boolean;\n}\n\nexport interface HeaderAction {\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  size?: 'small' | 'medium' | 'large';\n  disabled?: boolean;\n  loading?: boolean;\n}\n\n@Component({\n  selector: 'os-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsButtonComponent,\n    OsAvatarComponent,\n    OsNavigationItemComponent,\n    OsIconComponent,\n  ],\n  template: `\n    <header class=\"os-header\" [class]=\"headerClasses()\" [attr.aria-label]=\"ariaLabel()\">\n      <div class=\"os-header__container\">\n        <!-- Logo/Brand Section -->\n        <div class=\"os-header__brand\">\n          @if (logo()) {\n          <a\n            class=\"os-header__logo\"\n            [routerLink]=\"logoRoute()\"\n            [attr.aria-label]=\"logoAlt()\"\n            (click)=\"onLogoClick($event)\"\n          >\n            @if (logoImage()) {\n            <img [src]=\"logoImage()\" [alt]=\"logoAlt()\" class=\"os-header__logo-image\" />\n            } @else {\n            <span class=\"os-header__logo-text\">{{ logoText() }}</span>\n            }\n          </a>\n          } @else if (logoText()) {\n          <div class=\"os-header__logo-text-only\">{{ logoText() }}</div>\n          }\n        </div>\n\n        <!-- Navigation Section -->\n        @if (navigationItems().length > 0) {\n        <nav class=\"os-header__navigation\" [attr.aria-label]=\"navigationAriaLabel()\">\n          <ul class=\"os-header__nav-list\">\n            @for (item of navigationItems(); track item.label) {\n            <li class=\"os-header__nav-item\">\n              <os-navigation-item\n                [label]=\"item.label\"\n                [icon]=\"item.icon || ''\"\n                [routerLink]=\"item.route\"\n                [active]=\"item.active || false\"\n                [badge]=\"item.badge || null\"\n                [disabled]=\"item.disabled || false\"\n                [variant]=\"getNavigationVariant()\"\n                [size]=\"getNavigationSize()\"\n                (itemClick)=\"onNavigationClick(item, $event)\"\n              />\n            </li>\n            }\n          </ul>\n        </nav>\n        }\n\n        <!-- Actions Section -->\n        <div class=\"os-header__actions\">\n          @if (actions().length > 0) {\n          <div class=\"os-header__action-buttons\">\n            @for (action of actions(); track action.label) {\n            <os-button\n              [variant]=\"action.variant || 'secondary'\"\n              [size]=\"action.size || 'medium'\"\n              [disabled]=\"action.disabled || false\"\n              [loading]=\"action.loading || false\"\n              [icon]=\"action.icon || ''\"\n              (buttonClick)=\"onActionClick(action, $event)\"\n            >\n              {{ action.label }}\n            </os-button>\n            }\n          </div>\n          }\n\n          <!-- User Menu -->\n          @if (showUserMenu()) {\n          <div class=\"os-header__user-menu\">\n            <button\n              class=\"os-header__user-trigger\"\n              [class]=\"userTriggerClasses()\"\n              [disabled]=\"userMenuDisabled()\"\n              [attr.aria-label]=\"userMenuAriaLabel()\"\n              [attr.aria-expanded]=\"userMenuOpen()\"\n              [attr.aria-haspopup]=\"'menu'\"\n              (click)=\"toggleUserMenu()\"\n            >\n              <os-avatar\n                [image]=\"userAvatar() || ''\"\n                [initials]=\"userInitials() || ''\"\n                [size]=\"getAvatarSize()\"\n                [variant]=\"'circle'\"\n                [ariaLabel]=\"userName() || 'User'\"\n              />\n              @if (showUserInfo()) {\n              <div class=\"os-header__user-info\">\n                <span class=\"os-header__user-name\">{{ userName() }}</span>\n                @if (userRole()) {\n                <span class=\"os-header__user-role\">{{ userRole() }}</span>\n                }\n              </div>\n              }\n              <os-icon\n                name=\"chevron-down\"\n                size=\"sm\"\n                class=\"os-header__user-chevron\"\n                [class]=\"userChevronClasses()\"\n                [attr.aria-hidden]=\"true\"\n              />\n            </button>\n\n            @if (userMenuOpen()) {\n            <div class=\"os-header__user-dropdown\" [attr.role]=\"'menu'\">\n              @for (menuItem of userMenuItems(); track menuItem.label) { @if (menuItem.divider) {\n              <div class=\"os-header__user-divider\" role=\"separator\"></div>\n              } @else {\n              <button\n                class=\"os-header__user-menu-item\"\n                [class]=\"getUserMenuItemClasses(menuItem)\"\n                [disabled]=\"menuItem.disabled || false\"\n                [attr.aria-label]=\"menuItem.label\"\n                (click)=\"onUserMenuItemClick(menuItem, $event)\"\n              >\n                @if (menuItem.icon) {\n                <os-icon\n                  [name]=\"menuItem.icon\"\n                  size=\"sm\"\n                  class=\"os-header__user-menu-icon\"\n                  [attr.aria-hidden]=\"true\"\n                />\n                }\n                <span class=\"os-header__user-menu-text\">{{ menuItem.label }}</span>\n              </button>\n              } }\n            </div>\n            }\n          </div>\n          }\n\n          <!-- Mobile Menu Toggle -->\n          @if (showMobileMenu()) {\n          <button\n            class=\"os-header__mobile-toggle\"\n            [class]=\"mobileToggleClasses()\"\n            [attr.aria-label]=\"mobileMenuAriaLabel()\"\n            [attr.aria-expanded]=\"mobileMenuOpen()\"\n            (click)=\"toggleMobileMenu()\"\n          >\n            <os-icon\n              [name]=\"mobileMenuOpen() ? 'close' : 'menu'\"\n              size=\"md\"\n              [attr.aria-hidden]=\"true\"\n            />\n          </button>\n          }\n        </div>\n      </div>\n\n      <!-- Mobile Navigation -->\n      @if (showMobileMenu() && mobileMenuOpen()) {\n      <div class=\"os-header__mobile-navigation\" [attr.role]=\"'navigation'\">\n        <nav class=\"os-header__mobile-nav\" [attr.aria-label]=\"mobileNavigationAriaLabel()\">\n          <ul class=\"os-header__mobile-nav-list\">\n            @for (item of navigationItems(); track item.label) {\n            <li class=\"os-header__mobile-nav-item\">\n              <os-navigation-item\n                [label]=\"item.label\"\n                [icon]=\"item.icon || ''\"\n                [routerLink]=\"item.route\"\n                [active]=\"item.active || false\"\n                [badge]=\"item.badge || null\"\n                [disabled]=\"item.disabled || false\"\n                [variant]=\"getMobileNavigationVariant()\"\n                [size]=\"getMobileNavigationSize()\"\n                (itemClick)=\"onMobileNavigationClick(item, $event)\"\n              />\n            </li>\n            }\n          </ul>\n        </nav>\n      </div>\n      }\n    </header>\n  `,\n  styleUrls: ['./os-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsHeaderComponent {\n  // Logo/Brand inputs\n  readonly logo = input<string | null>(null);\n  readonly logoText = input<string | null>(null);\n  readonly logoImage = input<string | null>(null);\n  readonly logoRoute = input<string>('/');\n  readonly logoAlt = input<string>('Logo');\n\n  // Navigation inputs\n  readonly navigationItems = input<HeaderNavigationItem[]>([]);\n  readonly navigationAriaLabel = input<string>('Main navigation');\n\n  // User menu inputs\n  readonly showUserMenu = input(false);\n  readonly userName = input<string | null>(null);\n  readonly userRole = input<string | null>(null);\n  readonly userAvatar = input<string | null>(null);\n  readonly userInitials = input<string | null>(null);\n  readonly userMenuItems = input<HeaderUserMenu[]>([]);\n  readonly userMenuDisabled = input(false);\n  readonly userMenuAriaLabel = input<string>('User menu');\n\n  // Actions inputs\n  readonly actions = input<HeaderAction[]>([]);\n\n  // Mobile menu inputs\n  readonly showMobileMenu = input(false);\n  readonly mobileMenuAriaLabel = input<string>('Mobile menu');\n  readonly mobileNavigationAriaLabel = input<string>('Mobile navigation');\n\n  // Styling inputs\n  readonly variant = input<'default' | 'compact' | 'extended' | 'minimal'>('default');\n  readonly size = input<'small' | 'medium' | 'large'>('medium');\n  readonly theme = input<'light' | 'dark'>('light');\n  readonly sticky = input(false);\n  readonly ariaLabel = input<string | null>(null);\n\n  // State signals\n  readonly userMenuOpen = signal(false);\n  readonly mobileMenuOpen = signal(false);\n\n  // Outputs\n  readonly logoClick = output<MouseEvent>();\n  readonly navigationClick = output<{ item: HeaderNavigationItem; event: MouseEvent }>();\n  readonly actionClick = output<{ action: HeaderAction; event: MouseEvent }>();\n  readonly userMenuItemClick = output<{ item: HeaderUserMenu; event: MouseEvent }>();\n  readonly mobileNavigationClick = output<{ item: HeaderNavigationItem; event: MouseEvent }>();\n  readonly mobileMenuToggle = output<boolean>();\n\n  readonly headerClasses = computed(() => {\n    const classes = ['os-header'];\n    classes.push(`os-header--${this.variant()}`);\n    classes.push(`os-header--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-header--dark');\n    }\n\n    if (this.sticky()) {\n      classes.push('os-header--sticky');\n    }\n\n    if (this.navigationItems().length > 0) {\n      classes.push('os-header--with-navigation');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-header--with-actions');\n    }\n\n    if (this.showUserMenu()) {\n      classes.push('os-header--with-user-menu');\n    }\n\n    if (this.showMobileMenu()) {\n      classes.push('os-header--with-mobile-menu');\n    }\n\n    if (this.mobileMenuOpen()) {\n      classes.push('os-header--mobile-open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly userTriggerClasses = computed(() => {\n    const classes = ['os-header__user-trigger'];\n\n    if (this.userMenuOpen()) {\n      classes.push('os-header__user-trigger--open');\n    }\n\n    if (this.userMenuDisabled()) {\n      classes.push('os-header__user-trigger--disabled');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly userChevronClasses = computed(() => {\n    const classes = ['os-header__user-chevron'];\n\n    if (this.userMenuOpen()) {\n      classes.push('os-header__user-chevron--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly mobileToggleClasses = computed(() => {\n    const classes = ['os-header__mobile-toggle'];\n\n    if (this.mobileMenuOpen()) {\n      classes.push('os-header__mobile-toggle--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly showUserInfo = computed(() => {\n    return this.variant() === 'extended' && (this.userName() || this.userRole());\n  });\n\n  readonly getAvatarSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly getNavigationVariant = computed(() => {\n    return this.theme() === 'dark' ? ('accent' as const) : ('default' as const);\n  });\n\n  readonly getNavigationSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  readonly getMobileNavigationVariant = computed(() => {\n    return 'primary' as const;\n  });\n\n  readonly getMobileNavigationSize = computed(() => {\n    return 'large' as const;\n  });\n\n  getUserMenuItemClasses(menuItem: HeaderUserMenu): string {\n    const classes = ['os-header__user-menu-item'];\n\n    if (menuItem.disabled) {\n      classes.push('os-header__user-menu-item--disabled');\n    }\n\n    return classes.join(' ');\n  }\n\n  onLogoClick(event: MouseEvent): void {\n    this.logoClick.emit(event);\n  }\n\n  onNavigationClick(item: HeaderNavigationItem, event: MouseEvent): void {\n    this.navigationClick.emit({ item, event });\n  }\n\n  onActionClick(action: HeaderAction, event: MouseEvent): void {\n    this.actionClick.emit({ action, event });\n  }\n\n  onUserMenuItemClick(menuItem: HeaderUserMenu, event: MouseEvent): void {\n    if (!menuItem.disabled) {\n      this.userMenuItemClick.emit({ item: menuItem, event });\n      this.userMenuOpen.set(false);\n    }\n  }\n\n  onMobileNavigationClick(item: HeaderNavigationItem, event: MouseEvent): void {\n    this.mobileNavigationClick.emit({ item, event });\n    this.mobileMenuOpen.set(false);\n  }\n\n  toggleUserMenu(): void {\n    if (!this.userMenuDisabled()) {\n      this.userMenuOpen.update((open) => !open);\n    }\n  }\n\n  toggleMobileMenu(): void {\n    this.mobileMenuOpen.update((open) => !open);\n    this.mobileMenuToggle.emit(this.mobileMenuOpen());\n  }\n}\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "HeaderUserMenu",
            "id": "interface-HeaderUserMenu-840731b53ed87350615e318359d1965504863599715bd91e183711efeec37e0c4f2ed728fd2f75c131b76302bf020aa88fa1fb48687c9277bae99f39cac14bed",
            "file": "src/app/shared/ui-components/organisms/os-header/os-header.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, computed, input, output, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsAvatarComponent } from '../../atoms/os-avatar/os-avatar.component';\nimport { OsNavigationItemComponent } from '../../molecules/os-navigation-item/os-navigation-item.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport interface HeaderNavigationItem {\n  label: string;\n  icon?: string;\n  route?: string;\n  active?: boolean;\n  badge?: number;\n  disabled?: boolean;\n}\n\nexport interface HeaderUserMenu {\n  label: string;\n  icon?: string;\n  route?: string;\n  action?: string;\n  disabled?: boolean;\n  divider?: boolean;\n}\n\nexport interface HeaderAction {\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  size?: 'small' | 'medium' | 'large';\n  disabled?: boolean;\n  loading?: boolean;\n}\n\n@Component({\n  selector: 'os-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsButtonComponent,\n    OsAvatarComponent,\n    OsNavigationItemComponent,\n    OsIconComponent,\n  ],\n  template: `\n    <header class=\"os-header\" [class]=\"headerClasses()\" [attr.aria-label]=\"ariaLabel()\">\n      <div class=\"os-header__container\">\n        <!-- Logo/Brand Section -->\n        <div class=\"os-header__brand\">\n          @if (logo()) {\n          <a\n            class=\"os-header__logo\"\n            [routerLink]=\"logoRoute()\"\n            [attr.aria-label]=\"logoAlt()\"\n            (click)=\"onLogoClick($event)\"\n          >\n            @if (logoImage()) {\n            <img [src]=\"logoImage()\" [alt]=\"logoAlt()\" class=\"os-header__logo-image\" />\n            } @else {\n            <span class=\"os-header__logo-text\">{{ logoText() }}</span>\n            }\n          </a>\n          } @else if (logoText()) {\n          <div class=\"os-header__logo-text-only\">{{ logoText() }}</div>\n          }\n        </div>\n\n        <!-- Navigation Section -->\n        @if (navigationItems().length > 0) {\n        <nav class=\"os-header__navigation\" [attr.aria-label]=\"navigationAriaLabel()\">\n          <ul class=\"os-header__nav-list\">\n            @for (item of navigationItems(); track item.label) {\n            <li class=\"os-header__nav-item\">\n              <os-navigation-item\n                [label]=\"item.label\"\n                [icon]=\"item.icon || ''\"\n                [routerLink]=\"item.route\"\n                [active]=\"item.active || false\"\n                [badge]=\"item.badge || null\"\n                [disabled]=\"item.disabled || false\"\n                [variant]=\"getNavigationVariant()\"\n                [size]=\"getNavigationSize()\"\n                (itemClick)=\"onNavigationClick(item, $event)\"\n              />\n            </li>\n            }\n          </ul>\n        </nav>\n        }\n\n        <!-- Actions Section -->\n        <div class=\"os-header__actions\">\n          @if (actions().length > 0) {\n          <div class=\"os-header__action-buttons\">\n            @for (action of actions(); track action.label) {\n            <os-button\n              [variant]=\"action.variant || 'secondary'\"\n              [size]=\"action.size || 'medium'\"\n              [disabled]=\"action.disabled || false\"\n              [loading]=\"action.loading || false\"\n              [icon]=\"action.icon || ''\"\n              (buttonClick)=\"onActionClick(action, $event)\"\n            >\n              {{ action.label }}\n            </os-button>\n            }\n          </div>\n          }\n\n          <!-- User Menu -->\n          @if (showUserMenu()) {\n          <div class=\"os-header__user-menu\">\n            <button\n              class=\"os-header__user-trigger\"\n              [class]=\"userTriggerClasses()\"\n              [disabled]=\"userMenuDisabled()\"\n              [attr.aria-label]=\"userMenuAriaLabel()\"\n              [attr.aria-expanded]=\"userMenuOpen()\"\n              [attr.aria-haspopup]=\"'menu'\"\n              (click)=\"toggleUserMenu()\"\n            >\n              <os-avatar\n                [image]=\"userAvatar() || ''\"\n                [initials]=\"userInitials() || ''\"\n                [size]=\"getAvatarSize()\"\n                [variant]=\"'circle'\"\n                [ariaLabel]=\"userName() || 'User'\"\n              />\n              @if (showUserInfo()) {\n              <div class=\"os-header__user-info\">\n                <span class=\"os-header__user-name\">{{ userName() }}</span>\n                @if (userRole()) {\n                <span class=\"os-header__user-role\">{{ userRole() }}</span>\n                }\n              </div>\n              }\n              <os-icon\n                name=\"chevron-down\"\n                size=\"sm\"\n                class=\"os-header__user-chevron\"\n                [class]=\"userChevronClasses()\"\n                [attr.aria-hidden]=\"true\"\n              />\n            </button>\n\n            @if (userMenuOpen()) {\n            <div class=\"os-header__user-dropdown\" [attr.role]=\"'menu'\">\n              @for (menuItem of userMenuItems(); track menuItem.label) { @if (menuItem.divider) {\n              <div class=\"os-header__user-divider\" role=\"separator\"></div>\n              } @else {\n              <button\n                class=\"os-header__user-menu-item\"\n                [class]=\"getUserMenuItemClasses(menuItem)\"\n                [disabled]=\"menuItem.disabled || false\"\n                [attr.aria-label]=\"menuItem.label\"\n                (click)=\"onUserMenuItemClick(menuItem, $event)\"\n              >\n                @if (menuItem.icon) {\n                <os-icon\n                  [name]=\"menuItem.icon\"\n                  size=\"sm\"\n                  class=\"os-header__user-menu-icon\"\n                  [attr.aria-hidden]=\"true\"\n                />\n                }\n                <span class=\"os-header__user-menu-text\">{{ menuItem.label }}</span>\n              </button>\n              } }\n            </div>\n            }\n          </div>\n          }\n\n          <!-- Mobile Menu Toggle -->\n          @if (showMobileMenu()) {\n          <button\n            class=\"os-header__mobile-toggle\"\n            [class]=\"mobileToggleClasses()\"\n            [attr.aria-label]=\"mobileMenuAriaLabel()\"\n            [attr.aria-expanded]=\"mobileMenuOpen()\"\n            (click)=\"toggleMobileMenu()\"\n          >\n            <os-icon\n              [name]=\"mobileMenuOpen() ? 'close' : 'menu'\"\n              size=\"md\"\n              [attr.aria-hidden]=\"true\"\n            />\n          </button>\n          }\n        </div>\n      </div>\n\n      <!-- Mobile Navigation -->\n      @if (showMobileMenu() && mobileMenuOpen()) {\n      <div class=\"os-header__mobile-navigation\" [attr.role]=\"'navigation'\">\n        <nav class=\"os-header__mobile-nav\" [attr.aria-label]=\"mobileNavigationAriaLabel()\">\n          <ul class=\"os-header__mobile-nav-list\">\n            @for (item of navigationItems(); track item.label) {\n            <li class=\"os-header__mobile-nav-item\">\n              <os-navigation-item\n                [label]=\"item.label\"\n                [icon]=\"item.icon || ''\"\n                [routerLink]=\"item.route\"\n                [active]=\"item.active || false\"\n                [badge]=\"item.badge || null\"\n                [disabled]=\"item.disabled || false\"\n                [variant]=\"getMobileNavigationVariant()\"\n                [size]=\"getMobileNavigationSize()\"\n                (itemClick)=\"onMobileNavigationClick(item, $event)\"\n              />\n            </li>\n            }\n          </ul>\n        </nav>\n      </div>\n      }\n    </header>\n  `,\n  styleUrls: ['./os-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsHeaderComponent {\n  // Logo/Brand inputs\n  readonly logo = input<string | null>(null);\n  readonly logoText = input<string | null>(null);\n  readonly logoImage = input<string | null>(null);\n  readonly logoRoute = input<string>('/');\n  readonly logoAlt = input<string>('Logo');\n\n  // Navigation inputs\n  readonly navigationItems = input<HeaderNavigationItem[]>([]);\n  readonly navigationAriaLabel = input<string>('Main navigation');\n\n  // User menu inputs\n  readonly showUserMenu = input(false);\n  readonly userName = input<string | null>(null);\n  readonly userRole = input<string | null>(null);\n  readonly userAvatar = input<string | null>(null);\n  readonly userInitials = input<string | null>(null);\n  readonly userMenuItems = input<HeaderUserMenu[]>([]);\n  readonly userMenuDisabled = input(false);\n  readonly userMenuAriaLabel = input<string>('User menu');\n\n  // Actions inputs\n  readonly actions = input<HeaderAction[]>([]);\n\n  // Mobile menu inputs\n  readonly showMobileMenu = input(false);\n  readonly mobileMenuAriaLabel = input<string>('Mobile menu');\n  readonly mobileNavigationAriaLabel = input<string>('Mobile navigation');\n\n  // Styling inputs\n  readonly variant = input<'default' | 'compact' | 'extended' | 'minimal'>('default');\n  readonly size = input<'small' | 'medium' | 'large'>('medium');\n  readonly theme = input<'light' | 'dark'>('light');\n  readonly sticky = input(false);\n  readonly ariaLabel = input<string | null>(null);\n\n  // State signals\n  readonly userMenuOpen = signal(false);\n  readonly mobileMenuOpen = signal(false);\n\n  // Outputs\n  readonly logoClick = output<MouseEvent>();\n  readonly navigationClick = output<{ item: HeaderNavigationItem; event: MouseEvent }>();\n  readonly actionClick = output<{ action: HeaderAction; event: MouseEvent }>();\n  readonly userMenuItemClick = output<{ item: HeaderUserMenu; event: MouseEvent }>();\n  readonly mobileNavigationClick = output<{ item: HeaderNavigationItem; event: MouseEvent }>();\n  readonly mobileMenuToggle = output<boolean>();\n\n  readonly headerClasses = computed(() => {\n    const classes = ['os-header'];\n    classes.push(`os-header--${this.variant()}`);\n    classes.push(`os-header--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-header--dark');\n    }\n\n    if (this.sticky()) {\n      classes.push('os-header--sticky');\n    }\n\n    if (this.navigationItems().length > 0) {\n      classes.push('os-header--with-navigation');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-header--with-actions');\n    }\n\n    if (this.showUserMenu()) {\n      classes.push('os-header--with-user-menu');\n    }\n\n    if (this.showMobileMenu()) {\n      classes.push('os-header--with-mobile-menu');\n    }\n\n    if (this.mobileMenuOpen()) {\n      classes.push('os-header--mobile-open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly userTriggerClasses = computed(() => {\n    const classes = ['os-header__user-trigger'];\n\n    if (this.userMenuOpen()) {\n      classes.push('os-header__user-trigger--open');\n    }\n\n    if (this.userMenuDisabled()) {\n      classes.push('os-header__user-trigger--disabled');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly userChevronClasses = computed(() => {\n    const classes = ['os-header__user-chevron'];\n\n    if (this.userMenuOpen()) {\n      classes.push('os-header__user-chevron--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly mobileToggleClasses = computed(() => {\n    const classes = ['os-header__mobile-toggle'];\n\n    if (this.mobileMenuOpen()) {\n      classes.push('os-header__mobile-toggle--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly showUserInfo = computed(() => {\n    return this.variant() === 'extended' && (this.userName() || this.userRole());\n  });\n\n  readonly getAvatarSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly getNavigationVariant = computed(() => {\n    return this.theme() === 'dark' ? ('accent' as const) : ('default' as const);\n  });\n\n  readonly getNavigationSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  readonly getMobileNavigationVariant = computed(() => {\n    return 'primary' as const;\n  });\n\n  readonly getMobileNavigationSize = computed(() => {\n    return 'large' as const;\n  });\n\n  getUserMenuItemClasses(menuItem: HeaderUserMenu): string {\n    const classes = ['os-header__user-menu-item'];\n\n    if (menuItem.disabled) {\n      classes.push('os-header__user-menu-item--disabled');\n    }\n\n    return classes.join(' ');\n  }\n\n  onLogoClick(event: MouseEvent): void {\n    this.logoClick.emit(event);\n  }\n\n  onNavigationClick(item: HeaderNavigationItem, event: MouseEvent): void {\n    this.navigationClick.emit({ item, event });\n  }\n\n  onActionClick(action: HeaderAction, event: MouseEvent): void {\n    this.actionClick.emit({ action, event });\n  }\n\n  onUserMenuItemClick(menuItem: HeaderUserMenu, event: MouseEvent): void {\n    if (!menuItem.disabled) {\n      this.userMenuItemClick.emit({ item: menuItem, event });\n      this.userMenuOpen.set(false);\n    }\n  }\n\n  onMobileNavigationClick(item: HeaderNavigationItem, event: MouseEvent): void {\n    this.mobileNavigationClick.emit({ item, event });\n    this.mobileMenuOpen.set(false);\n  }\n\n  toggleUserMenu(): void {\n    if (!this.userMenuDisabled()) {\n      this.userMenuOpen.update((open) => !open);\n    }\n  }\n\n  toggleMobileMenu(): void {\n    this.mobileMenuOpen.update((open) => !open);\n    this.mobileMenuToggle.emit(this.mobileMenuOpen());\n  }\n}\n",
            "properties": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "divider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "ListTemplateAction",
            "id": "interface-ListTemplateAction-7bf8166141936f292e1c93671ddce1e1dc224819835fb9c3de5e9f3f191e60223a337d844e8ab6652495887a7f2846ebe91caba2013c3e5476325611ed236ace",
            "file": "src/app/shared/ui-components/templates/os-list-template/os-list-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsFilterBarComponent } from '../../molecules/os-filter-bar/os-filter-bar.component';\nimport { OsDataGridComponent } from '../../organisms/os-data-grid/os-data-grid.component';\nimport { OsPageHeaderComponent } from '../../organisms/os-page-header/os-page-header.component';\n\nexport interface ListTemplateData {\n  id: string;\n  title: string;\n  subtitle?: string;\n  status?: string;\n  date?: Date;\n  amount?: number;\n  category?: string;\n  tags?: string[];\n  [key: string]: unknown;\n}\n\nexport interface ListTemplateFilter {\n  field: string;\n  operator:\n    | 'equals'\n    | 'contains'\n    | 'startsWith'\n    | 'endsWith'\n    | 'greaterThan'\n    | 'lessThan'\n    | 'between';\n  value: string | number | Date | { from: Date; to: Date };\n}\n\nexport interface ListTemplateAction {\n  id: string;\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'os-list-template',\n  template: `\n    <div [class]=\"templateClass()\">\n      <!-- Header Section -->\n      <os-page-header\n        [variant]=\"headerVariant()\"\n        [size]=\"headerSize()\"\n        [title]=\"title()\"\n        [subtitle]=\"subtitle()\"\n        [breadcrumbs]=\"breadcrumbs()\"\n        [actions]=\"headerActions()\"\n        (actionClick)=\"onHeaderActionClick($event)\"\n      />\n\n      <!-- Filters Section -->\n      @if (showFilters()) {\n      <div class=\"os-list-template__filters\">\n        <os-filter-bar\n          [variant]=\"filterVariant()\"\n          [size]=\"filterSize()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        />\n      </div>\n      }\n\n      <!-- Content Section -->\n      <div class=\"os-list-template__content\">\n        @if (loading()) {\n        <div class=\"os-list-template__loading\">\n          <os-spinner [variant]=\"spinnerVariant()\" [size]=\"spinnerSize()\" />\n          <span class=\"os-list-template__loading-text\">{{ loadingText() }}</span>\n        </div>\n        } @else if (isEmpty()) {\n        <div class=\"os-list-template__empty\">\n          <os-icon [name]=\"emptyIcon()\" [variant]=\"emptyIconVariant()\" [size]=\"emptyIconSize()\" />\n          <h3 class=\"os-list-template__empty-title\">{{ emptyTitle() }}</h3>\n          <p class=\"os-list-template__empty-description\">{{ emptyDescription() }}</p>\n          @if (emptyAction()) {\n          <os-button\n            [variant]=\"emptyActionVariant()\"\n            [size]=\"emptyActionSize()\"\n            [icon]=\"emptyActionIcon()\"\n            (click)=\"onEmptyActionClick($event)\"\n          >\n            {{ emptyAction()!.label }}\n          </os-button>\n          }\n        </div>\n        } @else {\n        <os-data-grid\n          [variant]=\"gridVariant()\"\n          [size]=\"gridSize()\"\n          [data]=\"data()\"\n          [columns]=\"columns()\"\n          [filterOptions]=\"filterOptions()\"\n          [tableActions]=\"gridActions()\"\n          [title]=\"title()\"\n          [subtitle]=\"subtitle()\"\n          [showHeaderActions]=\"showGridHeader()\"\n          [showFooter]=\"showGridFooter()\"\n          [isLoading]=\"loading()\"\n          (rowClick)=\"onRowClick($event)\"\n          (tableActionClick)=\"onGridActionClick($event)\"\n          (filterChange)=\"onFilterChange($event)\"\n          (sortChange)=\"onSortChange($event)\"\n          (pageChange)=\"onPageChange($event)\"\n          (refresh)=\"onRefresh()\"\n          (export)=\"onExport()\"\n          (add)=\"onAdd()\"\n        />\n        }\n      </div>\n\n      <!-- Footer Section -->\n      @if (showFooter()) {\n      <div class=\"os-list-template__footer\">\n        <div class=\"os-list-template__footer-info\">\n          <span class=\"os-list-template__footer-text\">{{ footerText() }}</span>\n          @if (showLastUpdate()) {\n          <span class=\"os-list-template__footer-update\">\n            Última atualização: {{ lastUpdate() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n        <div class=\"os-list-template__footer-actions\">\n          @for (action of footerActions(); track action.id) {\n          <os-button\n            [variant]=\"action.variant || 'tertiary'\"\n            [size]=\"footerActionSize()\"\n            [icon]=\"action.icon || ''\"\n            [disabled]=\"action.disabled || disabled()\"\n            (click)=\"onFooterActionClick(action, $event)\"\n          >\n            {{ action.label }}\n          </os-button>\n          }\n        </div>\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-list-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsPageHeaderComponent,\n    OsDataGridComponent,\n    OsFilterBarComponent,\n    OsButtonComponent,\n    OsIconComponent,\n    OsSpinnerComponent,\n  ],\n})\nexport class OsListTemplateComponent {\n  // Inputs\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n\n  // Header\n  title = input<string>('');\n  subtitle = input<string>('');\n  breadcrumbs = input<{ label: string; url?: string }[]>([]);\n  showBackButton = input<boolean>(false);\n  backUrl = input<string>('');\n\n  // Data\n  data = input<ListTemplateData[]>([]);\n  columns = input<{ key: string; label: string; sortable?: boolean }[]>([]);\n  filters = input<ListTemplateFilter[]>([]);\n  sort = input<{ field: string; direction: 'asc' | 'desc' } | null>(null);\n  page = input<number>(1);\n  pageSize = input<number>(10);\n  totalItems = input<number>(0);\n\n  // States\n  loading = input<boolean>(false);\n  disabled = input<boolean>(false);\n  loadingText = input<string>('Carregando...');\n\n  // Empty State\n  emptyTitle = input<string>('Nenhum item encontrado');\n  emptyDescription = input<string>('Não há dados para exibir no momento.');\n  emptyIcon = input<string>('list');\n  emptyAction = input<{\n    id: string;\n    label: string;\n    icon?: string;\n    variant?: string;\n    size?: string;\n  } | null>(null);\n\n  // Visibility\n  showFilters = input<boolean>(true);\n  showFooter = input<boolean>(true);\n  showGridHeader = input<boolean>(true);\n  showGridFooter = input<boolean>(true);\n  showLastUpdate = input<boolean>(true);\n\n  // Actions\n  headerActions = input<\n    {\n      label: string;\n      icon?: string;\n      variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n      size?: 'small' | 'medium' | 'large';\n      disabled?: boolean;\n      loading?: boolean;\n    }[]\n  >([]);\n  gridActions = input<\n    { key: string; label: string; icon?: string; color?: 'primary' | 'secondary' | 'warn' }[]\n  >([]);\n  footerActions = input<ListTemplateAction[]>([]);\n\n  // Footer\n  footerText = input<string>('');\n  lastUpdate = input<Date>(new Date());\n\n  // Outputs\n  rowClick = output<{ item: ListTemplateData; index: number; event: MouseEvent }>();\n  headerActionClick = output<{\n    label: string;\n    icon?: string;\n    variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size?: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n  }>();\n  gridActionClick = output<{\n    key: string;\n    label: string;\n    icon?: string;\n    color?: 'primary' | 'secondary' | 'warn';\n  }>();\n  footerActionClick = output<{ action: ListTemplateAction; event: MouseEvent }>();\n  filterChange = output<ListTemplateFilter[]>();\n  sortChange = output<{ field: string; direction: 'asc' | 'desc' }>();\n  pageChange = output<{ page: number; pageSize: number }>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  backClick = output<MouseEvent>();\n  emptyActionClick = output<MouseEvent>();\n\n  // Computed Properties\n  templateClass = computed(() => {\n    return [\n      'os-list-template',\n      `os-list-template--${this.variant()}`,\n      `os-list-template--${this.size()}`,\n      `os-list-template--${this.theme()}`,\n      this.loading() ? 'os-list-template--loading' : '',\n      this.disabled() ? 'os-list-template--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  headerVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'extended' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'extended';\n  });\n\n  headerSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  filterVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'expanded' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'expanded';\n  });\n\n  filterSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  gridVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'detailed' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'detailed';\n  });\n\n  gridSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  spinnerVariant = computed(() => {\n    return this.theme() === 'dark' ? 'secondary' : 'default';\n  });\n\n  spinnerSize = computed(() => {\n    const sizeMap = { small: 'sm', medium: 'md', large: 'lg' };\n    return sizeMap[this.size()] as 'sm' | 'md' | 'lg';\n  });\n\n  emptyIconVariant = computed(() => {\n    return this.theme() === 'dark' ? 'secondary' : 'default';\n  });\n\n  emptyIconSize = computed(() => {\n    const sizeMap = { small: 'md', medium: 'lg', large: 'xl' };\n    return sizeMap[this.size()] as 'md' | 'lg' | 'xl';\n  });\n\n  footerActionSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  isEmpty = computed(() => {\n    return !this.loading() && this.data().length === 0;\n  });\n\n  emptyActionVariant = computed(() => {\n    const action = this.emptyAction();\n    if (!action) return 'primary';\n    return (action.variant as 'primary' | 'secondary' | 'tertiary' | 'danger') || 'primary';\n  });\n\n  emptyActionSize = computed(() => {\n    const action = this.emptyAction();\n    if (!action) return 'medium';\n    return (action.size as 'small' | 'medium' | 'large') || 'medium';\n  });\n\n  emptyActionIcon = computed(() => {\n    const action = this.emptyAction();\n    return action?.icon || '';\n  });\n\n  // Convert ListTemplateFilter[] to OsFilterOption[]\n  filterOptions = computed(() => {\n    return this.filters().map((filter) => ({\n      key: filter.field,\n      label: filter.field,\n      value:\n        typeof filter.value === 'object' && 'from' in filter.value\n          ? filter.value.from\n          : filter.value,\n      type: this.getFilterType(filter.value),\n    }));\n  });\n\n  private getFilterType(\n    value:\n      | string\n      | number\n      | Date\n      | {\n          from: Date;\n          to: Date;\n        }\n  ): 'text' | 'select' | 'date' | 'number' {\n    if (typeof value === 'number') return 'number';\n    if (value instanceof Date) return 'date';\n    if (typeof value === 'object' && value.from && value.to) return 'date';\n    return 'text';\n  }\n\n  // Event Handlers\n  onRowClick(item: Record<string, unknown>) {\n    this.rowClick.emit({\n      item: item as ListTemplateData,\n      index: 0,\n      event: new MouseEvent('click'),\n    });\n  }\n\n  onHeaderActionClick(action: {\n    label: string;\n    icon?: string;\n    variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size?: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n  }) {\n    this.headerActionClick.emit(action);\n  }\n\n  onGridActionClick(action: {\n    key: string;\n    label: string;\n    icon?: string;\n    color?: 'primary' | 'secondary' | 'warn';\n  }) {\n    this.gridActionClick.emit(action);\n  }\n\n  onFooterActionClick(action: ListTemplateAction, event: MouseEvent) {\n    this.footerActionClick.emit({ action, event });\n  }\n\n  onFilterChange(filters: { field?: string; operator?: string; value?: unknown }[]) {\n    // Convert OsDataGridFilter[] to ListTemplateFilter[]\n    const convertedFilters: ListTemplateFilter[] = filters.map((filter) => ({\n      field: filter.field || '',\n      operator: (filter.operator as ListTemplateFilter['operator']) || 'equals',\n      value: (filter.value as ListTemplateFilter['value']) || '',\n    }));\n    this.filterChange.emit(convertedFilters);\n  }\n\n  onSortChange(sort: { field?: string; direction?: 'asc' | 'desc' }) {\n    // Convert OsDataGridSort to our format\n    const convertedSort = {\n      field: sort.field || '',\n      direction: sort.direction || 'asc',\n    } as { field: string; direction: 'asc' | 'desc' };\n    this.sortChange.emit(convertedSort);\n  }\n\n  onPageChange(page: { page: number; pageSize: number }) {\n    this.pageChange.emit(page);\n  }\n\n  onRefresh() {\n    this.refresh.emit();\n  }\n\n  onExport() {\n    this.export.emit();\n  }\n\n  onAdd() {\n    this.add.emit();\n  }\n\n  onBackClick(event: MouseEvent) {\n    this.backClick.emit(event);\n  }\n\n  onEmptyActionClick(event: MouseEvent) {\n    this.emptyActionClick.emit(event);\n  }\n\n  onClearFilters() {\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters() {\n    // Filter application logic can be implemented here\n    // For now, just emit the current filters\n    this.filterChange.emit(this.filters());\n  }\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"secondary\" | \"tertiary\" | \"danger\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 41
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "ListTemplateData",
            "id": "interface-ListTemplateData-7bf8166141936f292e1c93671ddce1e1dc224819835fb9c3de5e9f3f191e60223a337d844e8ab6652495887a7f2846ebe91caba2013c3e5476325611ed236ace",
            "file": "src/app/shared/ui-components/templates/os-list-template/os-list-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsFilterBarComponent } from '../../molecules/os-filter-bar/os-filter-bar.component';\nimport { OsDataGridComponent } from '../../organisms/os-data-grid/os-data-grid.component';\nimport { OsPageHeaderComponent } from '../../organisms/os-page-header/os-page-header.component';\n\nexport interface ListTemplateData {\n  id: string;\n  title: string;\n  subtitle?: string;\n  status?: string;\n  date?: Date;\n  amount?: number;\n  category?: string;\n  tags?: string[];\n  [key: string]: unknown;\n}\n\nexport interface ListTemplateFilter {\n  field: string;\n  operator:\n    | 'equals'\n    | 'contains'\n    | 'startsWith'\n    | 'endsWith'\n    | 'greaterThan'\n    | 'lessThan'\n    | 'between';\n  value: string | number | Date | { from: Date; to: Date };\n}\n\nexport interface ListTemplateAction {\n  id: string;\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'os-list-template',\n  template: `\n    <div [class]=\"templateClass()\">\n      <!-- Header Section -->\n      <os-page-header\n        [variant]=\"headerVariant()\"\n        [size]=\"headerSize()\"\n        [title]=\"title()\"\n        [subtitle]=\"subtitle()\"\n        [breadcrumbs]=\"breadcrumbs()\"\n        [actions]=\"headerActions()\"\n        (actionClick)=\"onHeaderActionClick($event)\"\n      />\n\n      <!-- Filters Section -->\n      @if (showFilters()) {\n      <div class=\"os-list-template__filters\">\n        <os-filter-bar\n          [variant]=\"filterVariant()\"\n          [size]=\"filterSize()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        />\n      </div>\n      }\n\n      <!-- Content Section -->\n      <div class=\"os-list-template__content\">\n        @if (loading()) {\n        <div class=\"os-list-template__loading\">\n          <os-spinner [variant]=\"spinnerVariant()\" [size]=\"spinnerSize()\" />\n          <span class=\"os-list-template__loading-text\">{{ loadingText() }}</span>\n        </div>\n        } @else if (isEmpty()) {\n        <div class=\"os-list-template__empty\">\n          <os-icon [name]=\"emptyIcon()\" [variant]=\"emptyIconVariant()\" [size]=\"emptyIconSize()\" />\n          <h3 class=\"os-list-template__empty-title\">{{ emptyTitle() }}</h3>\n          <p class=\"os-list-template__empty-description\">{{ emptyDescription() }}</p>\n          @if (emptyAction()) {\n          <os-button\n            [variant]=\"emptyActionVariant()\"\n            [size]=\"emptyActionSize()\"\n            [icon]=\"emptyActionIcon()\"\n            (click)=\"onEmptyActionClick($event)\"\n          >\n            {{ emptyAction()!.label }}\n          </os-button>\n          }\n        </div>\n        } @else {\n        <os-data-grid\n          [variant]=\"gridVariant()\"\n          [size]=\"gridSize()\"\n          [data]=\"data()\"\n          [columns]=\"columns()\"\n          [filterOptions]=\"filterOptions()\"\n          [tableActions]=\"gridActions()\"\n          [title]=\"title()\"\n          [subtitle]=\"subtitle()\"\n          [showHeaderActions]=\"showGridHeader()\"\n          [showFooter]=\"showGridFooter()\"\n          [isLoading]=\"loading()\"\n          (rowClick)=\"onRowClick($event)\"\n          (tableActionClick)=\"onGridActionClick($event)\"\n          (filterChange)=\"onFilterChange($event)\"\n          (sortChange)=\"onSortChange($event)\"\n          (pageChange)=\"onPageChange($event)\"\n          (refresh)=\"onRefresh()\"\n          (export)=\"onExport()\"\n          (add)=\"onAdd()\"\n        />\n        }\n      </div>\n\n      <!-- Footer Section -->\n      @if (showFooter()) {\n      <div class=\"os-list-template__footer\">\n        <div class=\"os-list-template__footer-info\">\n          <span class=\"os-list-template__footer-text\">{{ footerText() }}</span>\n          @if (showLastUpdate()) {\n          <span class=\"os-list-template__footer-update\">\n            Última atualização: {{ lastUpdate() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n        <div class=\"os-list-template__footer-actions\">\n          @for (action of footerActions(); track action.id) {\n          <os-button\n            [variant]=\"action.variant || 'tertiary'\"\n            [size]=\"footerActionSize()\"\n            [icon]=\"action.icon || ''\"\n            [disabled]=\"action.disabled || disabled()\"\n            (click)=\"onFooterActionClick(action, $event)\"\n          >\n            {{ action.label }}\n          </os-button>\n          }\n        </div>\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-list-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsPageHeaderComponent,\n    OsDataGridComponent,\n    OsFilterBarComponent,\n    OsButtonComponent,\n    OsIconComponent,\n    OsSpinnerComponent,\n  ],\n})\nexport class OsListTemplateComponent {\n  // Inputs\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n\n  // Header\n  title = input<string>('');\n  subtitle = input<string>('');\n  breadcrumbs = input<{ label: string; url?: string }[]>([]);\n  showBackButton = input<boolean>(false);\n  backUrl = input<string>('');\n\n  // Data\n  data = input<ListTemplateData[]>([]);\n  columns = input<{ key: string; label: string; sortable?: boolean }[]>([]);\n  filters = input<ListTemplateFilter[]>([]);\n  sort = input<{ field: string; direction: 'asc' | 'desc' } | null>(null);\n  page = input<number>(1);\n  pageSize = input<number>(10);\n  totalItems = input<number>(0);\n\n  // States\n  loading = input<boolean>(false);\n  disabled = input<boolean>(false);\n  loadingText = input<string>('Carregando...');\n\n  // Empty State\n  emptyTitle = input<string>('Nenhum item encontrado');\n  emptyDescription = input<string>('Não há dados para exibir no momento.');\n  emptyIcon = input<string>('list');\n  emptyAction = input<{\n    id: string;\n    label: string;\n    icon?: string;\n    variant?: string;\n    size?: string;\n  } | null>(null);\n\n  // Visibility\n  showFilters = input<boolean>(true);\n  showFooter = input<boolean>(true);\n  showGridHeader = input<boolean>(true);\n  showGridFooter = input<boolean>(true);\n  showLastUpdate = input<boolean>(true);\n\n  // Actions\n  headerActions = input<\n    {\n      label: string;\n      icon?: string;\n      variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n      size?: 'small' | 'medium' | 'large';\n      disabled?: boolean;\n      loading?: boolean;\n    }[]\n  >([]);\n  gridActions = input<\n    { key: string; label: string; icon?: string; color?: 'primary' | 'secondary' | 'warn' }[]\n  >([]);\n  footerActions = input<ListTemplateAction[]>([]);\n\n  // Footer\n  footerText = input<string>('');\n  lastUpdate = input<Date>(new Date());\n\n  // Outputs\n  rowClick = output<{ item: ListTemplateData; index: number; event: MouseEvent }>();\n  headerActionClick = output<{\n    label: string;\n    icon?: string;\n    variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size?: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n  }>();\n  gridActionClick = output<{\n    key: string;\n    label: string;\n    icon?: string;\n    color?: 'primary' | 'secondary' | 'warn';\n  }>();\n  footerActionClick = output<{ action: ListTemplateAction; event: MouseEvent }>();\n  filterChange = output<ListTemplateFilter[]>();\n  sortChange = output<{ field: string; direction: 'asc' | 'desc' }>();\n  pageChange = output<{ page: number; pageSize: number }>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  backClick = output<MouseEvent>();\n  emptyActionClick = output<MouseEvent>();\n\n  // Computed Properties\n  templateClass = computed(() => {\n    return [\n      'os-list-template',\n      `os-list-template--${this.variant()}`,\n      `os-list-template--${this.size()}`,\n      `os-list-template--${this.theme()}`,\n      this.loading() ? 'os-list-template--loading' : '',\n      this.disabled() ? 'os-list-template--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  headerVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'extended' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'extended';\n  });\n\n  headerSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  filterVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'expanded' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'expanded';\n  });\n\n  filterSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  gridVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'detailed' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'detailed';\n  });\n\n  gridSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  spinnerVariant = computed(() => {\n    return this.theme() === 'dark' ? 'secondary' : 'default';\n  });\n\n  spinnerSize = computed(() => {\n    const sizeMap = { small: 'sm', medium: 'md', large: 'lg' };\n    return sizeMap[this.size()] as 'sm' | 'md' | 'lg';\n  });\n\n  emptyIconVariant = computed(() => {\n    return this.theme() === 'dark' ? 'secondary' : 'default';\n  });\n\n  emptyIconSize = computed(() => {\n    const sizeMap = { small: 'md', medium: 'lg', large: 'xl' };\n    return sizeMap[this.size()] as 'md' | 'lg' | 'xl';\n  });\n\n  footerActionSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  isEmpty = computed(() => {\n    return !this.loading() && this.data().length === 0;\n  });\n\n  emptyActionVariant = computed(() => {\n    const action = this.emptyAction();\n    if (!action) return 'primary';\n    return (action.variant as 'primary' | 'secondary' | 'tertiary' | 'danger') || 'primary';\n  });\n\n  emptyActionSize = computed(() => {\n    const action = this.emptyAction();\n    if (!action) return 'medium';\n    return (action.size as 'small' | 'medium' | 'large') || 'medium';\n  });\n\n  emptyActionIcon = computed(() => {\n    const action = this.emptyAction();\n    return action?.icon || '';\n  });\n\n  // Convert ListTemplateFilter[] to OsFilterOption[]\n  filterOptions = computed(() => {\n    return this.filters().map((filter) => ({\n      key: filter.field,\n      label: filter.field,\n      value:\n        typeof filter.value === 'object' && 'from' in filter.value\n          ? filter.value.from\n          : filter.value,\n      type: this.getFilterType(filter.value),\n    }));\n  });\n\n  private getFilterType(\n    value:\n      | string\n      | number\n      | Date\n      | {\n          from: Date;\n          to: Date;\n        }\n  ): 'text' | 'select' | 'date' | 'number' {\n    if (typeof value === 'number') return 'number';\n    if (value instanceof Date) return 'date';\n    if (typeof value === 'object' && value.from && value.to) return 'date';\n    return 'text';\n  }\n\n  // Event Handlers\n  onRowClick(item: Record<string, unknown>) {\n    this.rowClick.emit({\n      item: item as ListTemplateData,\n      index: 0,\n      event: new MouseEvent('click'),\n    });\n  }\n\n  onHeaderActionClick(action: {\n    label: string;\n    icon?: string;\n    variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size?: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n  }) {\n    this.headerActionClick.emit(action);\n  }\n\n  onGridActionClick(action: {\n    key: string;\n    label: string;\n    icon?: string;\n    color?: 'primary' | 'secondary' | 'warn';\n  }) {\n    this.gridActionClick.emit(action);\n  }\n\n  onFooterActionClick(action: ListTemplateAction, event: MouseEvent) {\n    this.footerActionClick.emit({ action, event });\n  }\n\n  onFilterChange(filters: { field?: string; operator?: string; value?: unknown }[]) {\n    // Convert OsDataGridFilter[] to ListTemplateFilter[]\n    const convertedFilters: ListTemplateFilter[] = filters.map((filter) => ({\n      field: filter.field || '',\n      operator: (filter.operator as ListTemplateFilter['operator']) || 'equals',\n      value: (filter.value as ListTemplateFilter['value']) || '',\n    }));\n    this.filterChange.emit(convertedFilters);\n  }\n\n  onSortChange(sort: { field?: string; direction?: 'asc' | 'desc' }) {\n    // Convert OsDataGridSort to our format\n    const convertedSort = {\n      field: sort.field || '',\n      direction: sort.direction || 'asc',\n    } as { field: string; direction: 'asc' | 'desc' };\n    this.sortChange.emit(convertedSort);\n  }\n\n  onPageChange(page: { page: number; pageSize: number }) {\n    this.pageChange.emit(page);\n  }\n\n  onRefresh() {\n    this.refresh.emit();\n  }\n\n  onExport() {\n    this.export.emit();\n  }\n\n  onAdd() {\n    this.add.emit();\n  }\n\n  onBackClick(event: MouseEvent) {\n    this.backClick.emit(event);\n  }\n\n  onEmptyActionClick(event: MouseEvent) {\n    this.emptyActionClick.emit(event);\n  }\n\n  onClearFilters() {\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters() {\n    // Filter application logic can be implemented here\n    // For now, just emit the current filters\n    this.filterChange.emit(this.filters());\n  }\n}\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [
                {
                    "id": "index-declaration-7bf8166141936f292e1c93671ddce1e1dc224819835fb9c3de5e9f3f191e60223a337d844e8ab6652495887a7f2846ebe91caba2013c3e5476325611ed236ace",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "",
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 182,
            "methods": [],
            "extends": []
        },
        {
            "name": "ListTemplateFilter",
            "id": "interface-ListTemplateFilter-7bf8166141936f292e1c93671ddce1e1dc224819835fb9c3de5e9f3f191e60223a337d844e8ab6652495887a7f2846ebe91caba2013c3e5476325611ed236ace",
            "file": "src/app/shared/ui-components/templates/os-list-template/os-list-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsFilterBarComponent } from '../../molecules/os-filter-bar/os-filter-bar.component';\nimport { OsDataGridComponent } from '../../organisms/os-data-grid/os-data-grid.component';\nimport { OsPageHeaderComponent } from '../../organisms/os-page-header/os-page-header.component';\n\nexport interface ListTemplateData {\n  id: string;\n  title: string;\n  subtitle?: string;\n  status?: string;\n  date?: Date;\n  amount?: number;\n  category?: string;\n  tags?: string[];\n  [key: string]: unknown;\n}\n\nexport interface ListTemplateFilter {\n  field: string;\n  operator:\n    | 'equals'\n    | 'contains'\n    | 'startsWith'\n    | 'endsWith'\n    | 'greaterThan'\n    | 'lessThan'\n    | 'between';\n  value: string | number | Date | { from: Date; to: Date };\n}\n\nexport interface ListTemplateAction {\n  id: string;\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'os-list-template',\n  template: `\n    <div [class]=\"templateClass()\">\n      <!-- Header Section -->\n      <os-page-header\n        [variant]=\"headerVariant()\"\n        [size]=\"headerSize()\"\n        [title]=\"title()\"\n        [subtitle]=\"subtitle()\"\n        [breadcrumbs]=\"breadcrumbs()\"\n        [actions]=\"headerActions()\"\n        (actionClick)=\"onHeaderActionClick($event)\"\n      />\n\n      <!-- Filters Section -->\n      @if (showFilters()) {\n      <div class=\"os-list-template__filters\">\n        <os-filter-bar\n          [variant]=\"filterVariant()\"\n          [size]=\"filterSize()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        />\n      </div>\n      }\n\n      <!-- Content Section -->\n      <div class=\"os-list-template__content\">\n        @if (loading()) {\n        <div class=\"os-list-template__loading\">\n          <os-spinner [variant]=\"spinnerVariant()\" [size]=\"spinnerSize()\" />\n          <span class=\"os-list-template__loading-text\">{{ loadingText() }}</span>\n        </div>\n        } @else if (isEmpty()) {\n        <div class=\"os-list-template__empty\">\n          <os-icon [name]=\"emptyIcon()\" [variant]=\"emptyIconVariant()\" [size]=\"emptyIconSize()\" />\n          <h3 class=\"os-list-template__empty-title\">{{ emptyTitle() }}</h3>\n          <p class=\"os-list-template__empty-description\">{{ emptyDescription() }}</p>\n          @if (emptyAction()) {\n          <os-button\n            [variant]=\"emptyActionVariant()\"\n            [size]=\"emptyActionSize()\"\n            [icon]=\"emptyActionIcon()\"\n            (click)=\"onEmptyActionClick($event)\"\n          >\n            {{ emptyAction()!.label }}\n          </os-button>\n          }\n        </div>\n        } @else {\n        <os-data-grid\n          [variant]=\"gridVariant()\"\n          [size]=\"gridSize()\"\n          [data]=\"data()\"\n          [columns]=\"columns()\"\n          [filterOptions]=\"filterOptions()\"\n          [tableActions]=\"gridActions()\"\n          [title]=\"title()\"\n          [subtitle]=\"subtitle()\"\n          [showHeaderActions]=\"showGridHeader()\"\n          [showFooter]=\"showGridFooter()\"\n          [isLoading]=\"loading()\"\n          (rowClick)=\"onRowClick($event)\"\n          (tableActionClick)=\"onGridActionClick($event)\"\n          (filterChange)=\"onFilterChange($event)\"\n          (sortChange)=\"onSortChange($event)\"\n          (pageChange)=\"onPageChange($event)\"\n          (refresh)=\"onRefresh()\"\n          (export)=\"onExport()\"\n          (add)=\"onAdd()\"\n        />\n        }\n      </div>\n\n      <!-- Footer Section -->\n      @if (showFooter()) {\n      <div class=\"os-list-template__footer\">\n        <div class=\"os-list-template__footer-info\">\n          <span class=\"os-list-template__footer-text\">{{ footerText() }}</span>\n          @if (showLastUpdate()) {\n          <span class=\"os-list-template__footer-update\">\n            Última atualização: {{ lastUpdate() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n        <div class=\"os-list-template__footer-actions\">\n          @for (action of footerActions(); track action.id) {\n          <os-button\n            [variant]=\"action.variant || 'tertiary'\"\n            [size]=\"footerActionSize()\"\n            [icon]=\"action.icon || ''\"\n            [disabled]=\"action.disabled || disabled()\"\n            (click)=\"onFooterActionClick(action, $event)\"\n          >\n            {{ action.label }}\n          </os-button>\n          }\n        </div>\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-list-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsPageHeaderComponent,\n    OsDataGridComponent,\n    OsFilterBarComponent,\n    OsButtonComponent,\n    OsIconComponent,\n    OsSpinnerComponent,\n  ],\n})\nexport class OsListTemplateComponent {\n  // Inputs\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n\n  // Header\n  title = input<string>('');\n  subtitle = input<string>('');\n  breadcrumbs = input<{ label: string; url?: string }[]>([]);\n  showBackButton = input<boolean>(false);\n  backUrl = input<string>('');\n\n  // Data\n  data = input<ListTemplateData[]>([]);\n  columns = input<{ key: string; label: string; sortable?: boolean }[]>([]);\n  filters = input<ListTemplateFilter[]>([]);\n  sort = input<{ field: string; direction: 'asc' | 'desc' } | null>(null);\n  page = input<number>(1);\n  pageSize = input<number>(10);\n  totalItems = input<number>(0);\n\n  // States\n  loading = input<boolean>(false);\n  disabled = input<boolean>(false);\n  loadingText = input<string>('Carregando...');\n\n  // Empty State\n  emptyTitle = input<string>('Nenhum item encontrado');\n  emptyDescription = input<string>('Não há dados para exibir no momento.');\n  emptyIcon = input<string>('list');\n  emptyAction = input<{\n    id: string;\n    label: string;\n    icon?: string;\n    variant?: string;\n    size?: string;\n  } | null>(null);\n\n  // Visibility\n  showFilters = input<boolean>(true);\n  showFooter = input<boolean>(true);\n  showGridHeader = input<boolean>(true);\n  showGridFooter = input<boolean>(true);\n  showLastUpdate = input<boolean>(true);\n\n  // Actions\n  headerActions = input<\n    {\n      label: string;\n      icon?: string;\n      variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n      size?: 'small' | 'medium' | 'large';\n      disabled?: boolean;\n      loading?: boolean;\n    }[]\n  >([]);\n  gridActions = input<\n    { key: string; label: string; icon?: string; color?: 'primary' | 'secondary' | 'warn' }[]\n  >([]);\n  footerActions = input<ListTemplateAction[]>([]);\n\n  // Footer\n  footerText = input<string>('');\n  lastUpdate = input<Date>(new Date());\n\n  // Outputs\n  rowClick = output<{ item: ListTemplateData; index: number; event: MouseEvent }>();\n  headerActionClick = output<{\n    label: string;\n    icon?: string;\n    variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size?: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n  }>();\n  gridActionClick = output<{\n    key: string;\n    label: string;\n    icon?: string;\n    color?: 'primary' | 'secondary' | 'warn';\n  }>();\n  footerActionClick = output<{ action: ListTemplateAction; event: MouseEvent }>();\n  filterChange = output<ListTemplateFilter[]>();\n  sortChange = output<{ field: string; direction: 'asc' | 'desc' }>();\n  pageChange = output<{ page: number; pageSize: number }>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  backClick = output<MouseEvent>();\n  emptyActionClick = output<MouseEvent>();\n\n  // Computed Properties\n  templateClass = computed(() => {\n    return [\n      'os-list-template',\n      `os-list-template--${this.variant()}`,\n      `os-list-template--${this.size()}`,\n      `os-list-template--${this.theme()}`,\n      this.loading() ? 'os-list-template--loading' : '',\n      this.disabled() ? 'os-list-template--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  headerVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'extended' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'extended';\n  });\n\n  headerSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  filterVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'expanded' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'expanded';\n  });\n\n  filterSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  gridVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'detailed' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'detailed';\n  });\n\n  gridSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  spinnerVariant = computed(() => {\n    return this.theme() === 'dark' ? 'secondary' : 'default';\n  });\n\n  spinnerSize = computed(() => {\n    const sizeMap = { small: 'sm', medium: 'md', large: 'lg' };\n    return sizeMap[this.size()] as 'sm' | 'md' | 'lg';\n  });\n\n  emptyIconVariant = computed(() => {\n    return this.theme() === 'dark' ? 'secondary' : 'default';\n  });\n\n  emptyIconSize = computed(() => {\n    const sizeMap = { small: 'md', medium: 'lg', large: 'xl' };\n    return sizeMap[this.size()] as 'md' | 'lg' | 'xl';\n  });\n\n  footerActionSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  isEmpty = computed(() => {\n    return !this.loading() && this.data().length === 0;\n  });\n\n  emptyActionVariant = computed(() => {\n    const action = this.emptyAction();\n    if (!action) return 'primary';\n    return (action.variant as 'primary' | 'secondary' | 'tertiary' | 'danger') || 'primary';\n  });\n\n  emptyActionSize = computed(() => {\n    const action = this.emptyAction();\n    if (!action) return 'medium';\n    return (action.size as 'small' | 'medium' | 'large') || 'medium';\n  });\n\n  emptyActionIcon = computed(() => {\n    const action = this.emptyAction();\n    return action?.icon || '';\n  });\n\n  // Convert ListTemplateFilter[] to OsFilterOption[]\n  filterOptions = computed(() => {\n    return this.filters().map((filter) => ({\n      key: filter.field,\n      label: filter.field,\n      value:\n        typeof filter.value === 'object' && 'from' in filter.value\n          ? filter.value.from\n          : filter.value,\n      type: this.getFilterType(filter.value),\n    }));\n  });\n\n  private getFilterType(\n    value:\n      | string\n      | number\n      | Date\n      | {\n          from: Date;\n          to: Date;\n        }\n  ): 'text' | 'select' | 'date' | 'number' {\n    if (typeof value === 'number') return 'number';\n    if (value instanceof Date) return 'date';\n    if (typeof value === 'object' && value.from && value.to) return 'date';\n    return 'text';\n  }\n\n  // Event Handlers\n  onRowClick(item: Record<string, unknown>) {\n    this.rowClick.emit({\n      item: item as ListTemplateData,\n      index: 0,\n      event: new MouseEvent('click'),\n    });\n  }\n\n  onHeaderActionClick(action: {\n    label: string;\n    icon?: string;\n    variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size?: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n  }) {\n    this.headerActionClick.emit(action);\n  }\n\n  onGridActionClick(action: {\n    key: string;\n    label: string;\n    icon?: string;\n    color?: 'primary' | 'secondary' | 'warn';\n  }) {\n    this.gridActionClick.emit(action);\n  }\n\n  onFooterActionClick(action: ListTemplateAction, event: MouseEvent) {\n    this.footerActionClick.emit({ action, event });\n  }\n\n  onFilterChange(filters: { field?: string; operator?: string; value?: unknown }[]) {\n    // Convert OsDataGridFilter[] to ListTemplateFilter[]\n    const convertedFilters: ListTemplateFilter[] = filters.map((filter) => ({\n      field: filter.field || '',\n      operator: (filter.operator as ListTemplateFilter['operator']) || 'equals',\n      value: (filter.value as ListTemplateFilter['value']) || '',\n    }));\n    this.filterChange.emit(convertedFilters);\n  }\n\n  onSortChange(sort: { field?: string; direction?: 'asc' | 'desc' }) {\n    // Convert OsDataGridSort to our format\n    const convertedSort = {\n      field: sort.field || '',\n      direction: sort.direction || 'asc',\n    } as { field: string; direction: 'asc' | 'desc' };\n    this.sortChange.emit(convertedSort);\n  }\n\n  onPageChange(page: { page: number; pageSize: number }) {\n    this.pageChange.emit(page);\n  }\n\n  onRefresh() {\n    this.refresh.emit();\n  }\n\n  onExport() {\n    this.export.emit();\n  }\n\n  onAdd() {\n    this.add.emit();\n  }\n\n  onBackClick(event: MouseEvent) {\n    this.backClick.emit(event);\n  }\n\n  onEmptyActionClick(event: MouseEvent) {\n    this.emptyActionClick.emit(event);\n  }\n\n  onClearFilters() {\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters() {\n    // Filter application logic can be implemented here\n    // For now, just emit the current filters\n    this.filterChange.emit(this.filters());\n  }\n}\n",
            "properties": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "operator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"equals\" | \"contains\" | \"startsWith\" | \"endsWith\" | \"greaterThan\" | \"lessThan\" | \"between\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | Date | literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "ModalTemplateConfig",
            "id": "interface-ModalTemplateConfig-918131dbce807a41680baaa6316843e6d6e2ffeca23af6c61c965c845aab98ff9b6015fb0b0d1d16475b085600b0203d9f355498a863c4cd33aabdfebcb3644c",
            "file": "src/app/shared/ui-components/templates/os-modal-template/os-modal-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, input, output, ChangeDetectionStrategy } from '@angular/core';\nimport { OsModalComponent } from '../../organisms/os-modal/os-modal.component';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport interface ModalTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showCloseButton?: boolean;\n  showHeader?: boolean;\n  showFooter?: boolean;\n  showActions?: boolean;\n  closeButtonText?: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  showConfirmButton?: boolean;\n  showCancelButton?: boolean;\n  actions?: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }[];\n}\n\n@Component({\n  selector: 'os-modal-template',\n  template: `\n    <os-modal\n      [variant]=\"modalVariant()\"\n      [size]=\"size()\"\n      [title]=\"config().title\"\n      [subtitle]=\"config().subtitle || null\"\n      (close)=\"onClose()\"\n      (backdropClick)=\"onBackdropClick()\"\n      (escapeKey)=\"onEscapeKey()\"\n    >\n      <div class=\"os-modal-template__content\" [class]=\"contentClass()\">\n        <ng-content />\n      </div>\n\n      @if (config().showActions ?? true) {\n      <div class=\"os-modal-template__actions\" [class]=\"actionsClass()\">\n        @if (config().showCancelButton ?? true) {\n        <os-button\n          [variant]=\"'secondary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled()\"\n          (click)=\"onCancel()\"\n        >\n          {{ config().cancelButtonText || 'Cancelar' }}\n        </os-button>\n        } @if (config().showConfirmButton ?? true) {\n        <os-button\n          [variant]=\"'primary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled() || !isValid()\"\n          [loading]=\"loading()\"\n          (click)=\"onConfirm()\"\n        >\n          {{ config().confirmButtonText || 'Confirmar' }}\n        </os-button>\n        } @for (action of config().actions || []; track action.label) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"action.size\"\n          [disabled]=\"action.disabled || disabled()\"\n          [loading]=\"action.loading || false\"\n          [icon]=\"action.icon || ''\"\n          (click)=\"onActionClick(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </os-modal>\n  `,\n  styleUrls: ['./os-modal-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, OsModalComponent, OsButtonComponent],\n})\nexport class OsModalTemplateComponent {\n  config = input.required<ModalTemplateConfig>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n  valid = input(true);\n\n  closed = output<void>();\n  confirmed = output<void>();\n  cancelled = output<void>();\n  actionClick = output<{\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }>();\n  backdropClick = output<void>();\n  escapeKey = output<void>();\n\n  modalVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'compact' ? 'confirmation' : 'default';\n  });\n\n  contentClass = computed(() => {\n    return [\n      'os-modal-template__content',\n      `os-modal-template__content--${this.variant()}`,\n      `os-modal-template__content--${this.size()}`,\n      this.disabled() ? 'os-modal-template__content--disabled' : '',\n      this.loading() ? 'os-modal-template__content--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  actionsClass = computed(() => {\n    return [\n      'os-modal-template__actions',\n      `os-modal-template__actions--${this.variant()}`,\n      `os-modal-template__actions--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  isValid = computed(() => {\n    return this.valid();\n  });\n\n  onClose(): void {\n    this.closed.emit();\n  }\n\n  onConfirm(): void {\n    this.confirmed.emit();\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n\n  onActionClick(action: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }): void {\n    this.actionClick.emit(action);\n  }\n\n  onBackdropClick(): void {\n    this.backdropClick.emit();\n  }\n\n  onEscapeKey(): void {\n    this.escapeKey.emit();\n  }\n}\n",
            "properties": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "cancelButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "closeButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "confirmButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "showActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "showCancelButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "showCloseButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "showConfirmButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "showFooter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "showHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "MonthlySpending",
            "id": "interface-MonthlySpending-d345ac5e34787c9687b6b0592404f17afde997e52d3c5f0319e5c5c730c4a92e685c3a0359e322e031f0f2e711a913a8cc1d9cae9321d9eefbfe2ea3516a7239",
            "file": "src/app/shared/ui-components/organisms/os-budget-tracker/os-budget-tracker.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\n\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsMoneyDisplayComponent } from '../../molecules/os-money-display/os-money-display.component';\n\nexport interface BudgetTrackerData {\n  id: string;\n  name: string;\n  totalBudget: number;\n  spentAmount: number;\n  remainingAmount: number;\n  percentage: number;\n  status: 'on-track' | 'over-budget' | 'under-budget' | 'completed';\n  category: string;\n  startDate: Date;\n  endDate: Date;\n  lastUpdated: Date;\n  monthlySpending: MonthlySpending[];\n  trends: BudgetTrends;\n}\n\nexport interface MonthlySpending {\n  month: string;\n  year: number;\n  amount: number;\n  percentage: number;\n}\n\nexport interface BudgetTrends {\n  spendingTrend: 'increasing' | 'decreasing' | 'stable';\n  projection: number;\n  riskLevel: 'low' | 'medium' | 'high';\n}\n\n@Component({\n  selector: 'os-budget-tracker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsCardComponent,\n    OsMoneyDisplayComponent,\n    OsBadgeComponent,\n    OsIconComponent,\n    OsProgressBarComponent,\n    OsSpinnerComponent,\n  ],\n  templateUrl: './os-budget-tracker.component.html',\n  styleUrls: ['./os-budget-tracker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsBudgetTrackerComponent {\n  // Inputs\n  budgetData = input.required<BudgetTrackerData | null>();\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  showCharts = input<boolean>(true);\n  showTrends = input<boolean>(true);\n  showProjections = input<boolean>(true);\n  showStatus = input<boolean>(true);\n  loading = input<boolean>(false);\n  clickable = input<boolean>(false);\n\n  // Outputs\n  readonly budgetClick = output<BudgetTrackerData>();\n  readonly refreshClick = output<void>();\n  readonly exportClick = output<void>();\n\n  // Computed properties\n  readonly progressPercentage = computed(() => {\n    const data = this.budgetData();\n    return data ? Math.min(Math.max(data.percentage, 0), 100) : 0;\n  });\n\n  readonly statusInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'on-track':\n        return { type: 'success' as const, label: 'No Prazo', icon: 'check_circle' };\n      case 'over-budget':\n        return { type: 'error' as const, label: 'Acima do Orçamento', icon: 'warning' };\n      case 'under-budget':\n        return { type: 'warning' as const, label: 'Abaixo do Orçamento', icon: 'info' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  });\n\n  readonly isOverBudget = computed(() => {\n    const data = this.budgetData();\n    return data ? data.spentAmount > data.totalBudget : false;\n  });\n\n  readonly isCompleted = computed(() => {\n    const data = this.budgetData();\n    return data ? data.status === 'completed' : false;\n  });\n\n  readonly trendInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showTrends()) return null;\n\n    const trend = data.trends;\n    return {\n      icon: this.getTrendIcon(trend.spendingTrend),\n      label: this.getTrendLabel(trend.spendingTrend),\n      color: this.getTrendColor(trend.riskLevel),\n      riskLevel: trend.riskLevel,\n    };\n  });\n\n  readonly projectionInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showProjections()) return null;\n\n    const projection = data.trends.projection;\n    const remaining = data.remainingAmount;\n    const isProjectedOver = projection > remaining;\n\n    return {\n      value: projection,\n      isOver: isProjectedOver,\n      percentage: data.totalBudget > 0 ? (projection / data.totalBudget) * 100 : 0,\n    };\n  });\n\n  readonly monthlyData = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showCharts()) return [];\n\n    return data.monthlySpending.slice(-6); // Last 6 months\n  });\n\n  readonly formattedDates = computed(() => {\n    const data = this.budgetData();\n    if (!data) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      end: data.endDate.toLocaleDateString('pt-BR'),\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n    };\n  });\n\n  // Methods\n  onCardClick(): void {\n    const data = this.budgetData();\n    if (this.clickable() && data) {\n      this.budgetClick.emit(data);\n    }\n  }\n\n  onRefreshClick(): void {\n    this.refreshClick.emit();\n  }\n\n  onExportClick(): void {\n    this.exportClick.emit();\n  }\n\n  getStatusColor(): string {\n    const status = this.statusInfo();\n    switch (status.type) {\n      case 'success':\n        return 'var(--os-color-success)';\n      case 'warning':\n        return 'var(--os-color-warning)';\n      case 'error':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n\n  private getTrendIcon(trend: string): string {\n    switch (trend) {\n      case 'increasing':\n        return 'trending_up';\n      case 'decreasing':\n        return 'trending_down';\n      case 'stable':\n        return 'trending_flat';\n      default:\n        return 'trending_flat';\n    }\n  }\n\n  private getTrendLabel(trend: string): string {\n    switch (trend) {\n      case 'increasing':\n        return 'Crescendo';\n      case 'decreasing':\n        return 'Diminuindo';\n      case 'stable':\n        return 'Estável';\n      default:\n        return 'N/A';\n    }\n  }\n\n  private getTrendColor(riskLevel: string): string {\n    switch (riskLevel) {\n      case 'low':\n        return 'var(--os-color-success)';\n      case 'medium':\n        return 'var(--os-color-warning)';\n      case 'high':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n\n  getMonthName(month: string): string {\n    const months = {\n      '01': 'Jan',\n      '02': 'Fev',\n      '03': 'Mar',\n      '04': 'Abr',\n      '05': 'Mai',\n      '06': 'Jun',\n      '07': 'Jul',\n      '08': 'Ago',\n      '09': 'Set',\n      '10': 'Out',\n      '11': 'Nov',\n      '12': 'Dez',\n    };\n    return months[month as keyof typeof months] || month;\n  }\n}\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "month",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "percentage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "NavigationItem",
            "id": "interface-NavigationItem-c786b2d6eb8b986227047b79a096604d38c7e44dce14e9f37ada93c50830fbed85b10af8c5de32fc65044199f46373ac5eafab4f300ca2cf3d6d38bfbbcad873",
            "file": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  signal,\n  computed,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  OsNavigationItemComponent,\n  OsNavigationItemVariant,\n  OsNavigationItemSize,\n} from '../../molecules/os-navigation-item/os-navigation-item.component';\n\nexport interface NavigationItem {\n  id: string;\n  label: string;\n  icon?: string;\n  route?: string;\n  href?: string;\n  badge?: string | number;\n  disabled?: boolean;\n  children?: NavigationItem[];\n}\n\nexport type NavigationVariant = 'default' | 'minimal' | 'sidebar' | 'tabs';\nexport type NavigationSize = 'small' | 'medium' | 'large';\nexport type NavigationOrientation = 'horizontal' | 'vertical';\n\n@Component({\n  selector: 'os-navigation',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsNavigationItemComponent],\n  template: `\n    <nav [class]=\"navigationClasses()\" [attr.aria-label]=\"ariaLabel\" role=\"navigation\">\n      <!-- Navigation Items -->\n      <ul [class]=\"listClasses()\" role=\"list\">\n        @for (item of items(); track item.id) {\n        <li role=\"none\">\n          <os-navigation-item\n            [label]=\"item.label\"\n            [icon]=\"item.icon || ''\"\n            [routerLink]=\"item.route\"\n            [variant]=\"itemVariant()\"\n            [size]=\"itemSize()\"\n            [active]=\"isActiveItem(item)\"\n            [disabled]=\"item.disabled || false\"\n            [badge]=\"item.badge ? +item.badge : null\"\n            [ariaLabel]=\"item.label\"\n            (itemClick)=\"onItemClick(item)\"\n          >\n            {{ item.label }}\n          </os-navigation-item>\n        </li>\n        }\n      </ul>\n\n      <!-- Custom Content -->\n      @if (showCustomContent()) {\n      <div class=\"os-navigation__custom\">\n        <ng-content select=\"[slot=custom]\"></ng-content>\n      </div>\n      }\n    </nav>\n  `,\n  styleUrls: ['./os-navigation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsNavigationComponent {\n  // Inputs\n  @Input({ required: true }) items = signal<NavigationItem[]>([]);\n  @Input() variant = signal<NavigationVariant>('default');\n  @Input() size = signal<NavigationSize>('medium');\n  @Input() orientation = signal<NavigationOrientation>('horizontal');\n  @Input() activeItemId = signal<string | null>(null);\n  @Input() ariaLabel = 'Navegação principal';\n  @Input() showCustomContent = signal(false);\n\n  // Outputs\n  @Output() itemClick = new EventEmitter<NavigationItem>();\n  @Output() navigate = new EventEmitter<{ item: NavigationItem; route?: string; href?: string }>();\n\n  // Computed properties\n  navigationClasses = computed(() => {\n    const base = 'os-navigation';\n    const variant = `os-navigation--${this.variant()}`;\n    const size = `os-navigation--${this.size()}`;\n    const orientation = `os-navigation--${this.orientation()}`;\n\n    return `${base} ${variant} ${size} ${orientation}`;\n  });\n\n  listClasses = computed(() => {\n    const base = 'os-navigation__list';\n    const orientation = `os-navigation__list--${this.orientation()}`;\n    const variant = `os-navigation__list--${this.variant()}`;\n\n    return `${base} ${orientation} ${variant}`;\n  });\n\n  itemVariant = computed(() => {\n    const variantMap: Record<NavigationVariant, OsNavigationItemVariant> = {\n      default: 'default',\n      minimal: 'secondary',\n      sidebar: 'primary',\n      tabs: 'accent',\n    };\n    return variantMap[this.variant()];\n  });\n\n  itemSize = computed(() => {\n    const sizeMap: Record<NavigationSize, OsNavigationItemSize> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  // Methods\n  isActiveItem(item: NavigationItem): boolean {\n    const activeId = this.activeItemId();\n    return activeId === item.id;\n  }\n\n  onItemClick(item: NavigationItem): void {\n    if (item.disabled) return;\n\n    this.itemClick.emit(item);\n\n    // Auto-navigate if route or href is provided\n    if (item.route || item.href) {\n      this.navigate.emit({ item, route: item.route, href: item.href });\n    }\n  }\n\n  onNavigate(event: { item: NavigationItem; route?: string; href?: string }): void {\n    this.navigate.emit(event);\n  }\n}\n",
            "properties": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavigationItem[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "Notification",
            "id": "interface-Notification-c80610359902e60b2fca1cea6a5bd148af67a6a2a6a4869161d63b7b8b8fdc01967f94825f8cd2384c75e303a578e39742aa02826782b02800613e2e14075ac8",
            "file": "src/app/core/services/notification/notification.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, signal, computed } from '@angular/core';\nimport { OsAlertType } from '../../../shared/ui-components/molecules/os-alert/os-alert.component';\n\nexport interface Notification {\n  id: string;\n  type: OsAlertType;\n  title?: string;\n  message: string;\n  dismissible?: boolean;\n  duration?: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationService {\n  private readonly _notifications = signal<Notification[]>([]);\n  private readonly _isLoading = signal<boolean>(false);\n\n  readonly notifications = this._notifications.asReadonly();\n  readonly isLoading = this._isLoading.asReadonly();\n  readonly hasNotifications = computed(() => this._notifications().length > 0);\n\n  showSuccess(message: string, title?: string, duration = 5000): string {\n    return this.addNotification({\n      type: 'success',\n      message,\n      title,\n      dismissible: true,\n      duration,\n    });\n  }\n\n  showError(message: string, title?: string, duration = 8000): string {\n    return this.addNotification({\n      type: 'error',\n      message,\n      title,\n      dismissible: true,\n      duration,\n    });\n  }\n\n  showWarning(message: string, title?: string, duration = 6000): string {\n    return this.addNotification({\n      type: 'warning',\n      message,\n      title,\n      dismissible: true,\n      duration,\n    });\n  }\n\n  showInfo(message: string, title?: string, duration = 4000): string {\n    return this.addNotification({\n      type: 'info',\n      message,\n      title,\n      dismissible: true,\n      duration,\n    });\n  }\n\n  setLoading(loading: boolean): void {\n    this._isLoading.set(loading);\n  }\n\n  dismissNotification(id: string): void {\n    this._notifications.update((notifications) =>\n      notifications.filter((notification) => notification.id !== id)\n    );\n  }\n\n  clearAll(): void {\n    this._notifications.set([]);\n  }\n\n  private addNotification(notification: Omit<Notification, 'id'>): string {\n    const id = `notification-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    const newNotification: Notification = {\n      ...notification,\n      id,\n    };\n\n    this._notifications.update((notifications) => [...notifications, newNotification]);\n\n    if (notification.duration && notification.duration > 0) {\n      setTimeout(() => {\n        this.dismissNotification(id);\n      }, notification.duration);\n    }\n\n    return id;\n  }\n}\n",
            "properties": [
                {
                    "name": "dismissible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsAlertType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsDataGridFilter",
            "id": "interface-OsDataGridFilter-a4be0db578bd437bed30d42dcecea47506433023cece76ddadb15d6f06c1fc7e9ee42513b5a7a6ec14e191784b37b585828645a9bbe8735a475b212f079060dc",
            "file": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output, signal } from '@angular/core';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport {\n  OsDataTableAction,\n  OsDataTableColumn,\n  OsDataTableComponent,\n} from '../../molecules/os-data-table/os-data-table.component';\nimport {\n  OsFilterBarComponent,\n  OsFilterOption,\n} from '../../molecules/os-filter-bar/os-filter-bar.component';\n\nexport type OsDataGridSize = 'small' | 'medium' | 'large';\nexport type OsDataGridVariant = 'default' | 'compact' | 'detailed';\n\nexport interface OsDataGridFilter {\n  key: string;\n  value: string | number | Date | boolean;\n  operator?: 'equals' | 'contains' | 'startsWith' | 'endsWith' | 'gt' | 'lt' | 'gte' | 'lte';\n}\n\nexport interface OsDataGridSort {\n  column: string;\n  direction: 'asc' | 'desc';\n}\n\nexport interface OsDataGridPagination {\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\n@Component({\n  selector: 'os-data-grid',\n  standalone: true,\n  imports: [CommonModule, OsDataTableComponent, OsFilterBarComponent, OsButtonComponent],\n  template: `\n    <div class=\"os-data-grid\" [class]=\"dataGridClasses()\">\n      <!-- Header -->\n      @if (title() || showHeaderActions()) {\n      <div class=\"os-data-grid__header\">\n        @if (title()) {\n        <div class=\"os-data-grid__title-section\">\n          <h2 class=\"os-data-grid__title\">{{ title() }}</h2>\n          @if (subtitle()) {\n          <p class=\"os-data-grid__subtitle\">{{ subtitle() }}</p>\n          }\n        </div>\n        } @if (showHeaderActions()) {\n        <div class=\"os-data-grid__header-actions\">\n          @if (showRefreshButton()) {\n          <os-button\n            variant=\"tertiary\"\n            [size]=\"getButtonSize()\"\n            icon=\"refresh\"\n            [loading]=\"isLoading()\"\n            (buttonClick)=\"onRefresh()\"\n            [attr.aria-label]=\"'Atualizar dados'\"\n          >\n            Atualizar\n          </os-button>\n          } @if (showExportButton()) {\n          <os-button\n            variant=\"secondary\"\n            [size]=\"getButtonSize()\"\n            icon=\"download\"\n            (buttonClick)=\"onExport()\"\n            [attr.aria-label]=\"'Exportar dados'\"\n          >\n            Exportar\n          </os-button>\n          } @if (showAddButton()) {\n          <os-button\n            variant=\"primary\"\n            [size]=\"getButtonSize()\"\n            icon=\"add\"\n            (buttonClick)=\"onAdd()\"\n            [attr.aria-label]=\"'Adicionar novo item'\"\n          >\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <!-- Filters -->\n      @if (showFilters() && filterOptions().length > 0) {\n      <div class=\"os-data-grid__filters\">\n        <os-filter-bar\n          [variant]=\"getFilterBarVariant()\"\n          [size]=\"getFilterBarSize()\"\n          [hasActiveFilters]=\"hasActiveFilters()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        >\n          <div class=\"os-data-grid__filter-content\">\n            @for (option of filterOptions(); track option.key) {\n            <div class=\"os-data-grid__filter-item\">\n              <label [for]=\"'filter-' + option.key\" class=\"os-data-grid__filter-label\">{{\n                option.label\n              }}</label>\n              @switch (option.type) { @case ('text') {\n              <input\n                [id]=\"'filter-' + option.key\"\n                type=\"text\"\n                class=\"os-data-grid__filter-input\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('select') {\n              <select\n                class=\"os-data-grid__filter-select\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              >\n                <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n                @for (opt of option.options; track opt.value) {\n                <option [value]=\"opt.value\">{{ opt.label }}</option>\n                }\n              </select>\n              } @case ('date') {\n              <input\n                type=\"date\"\n                class=\"os-data-grid__filter-input\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('number') {\n              <input\n                type=\"number\"\n                class=\"os-data-grid__filter-input\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n        </os-filter-bar>\n      </div>\n      }\n\n      <!-- Data Table -->\n      <div class=\"os-data-grid__table\">\n        <os-data-table\n          [data]=\"filteredData()\"\n          [columns]=\"columns()\"\n          [actions]=\"tableActions()\"\n          [size]=\"getTableSize()\"\n          [variant]=\"getTableVariant()\"\n          [showPagination]=\"showPagination()\"\n          [showNoData]=\"showNoData()\"\n          [noDataText]=\"noDataText()\"\n          [pageSize]=\"pagination().pageSize\"\n          [pageIndex]=\"pagination().page\"\n          [totalItems]=\"totalItems()\"\n          [pageSizeOptions]=\"pageSizeOptions()\"\n          [showFirstLastButtons]=\"showFirstLastButtons()\"\n          (rowClick)=\"onRowClick($event)\"\n          (actionClick)=\"onTableActionClick($event)\"\n          (sortChange)=\"onSortChange($event)\"\n          (pageChange)=\"onPageChange($event)\"\n        />\n      </div>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-data-grid__footer\">\n        <div class=\"os-data-grid__footer-info\">\n          @if (showItemCount()) {\n          <span class=\"os-data-grid__item-count\">\n            {{ getItemCountText() }}\n          </span>\n          } @if (showLastUpdated()) {\n          <span class=\"os-data-grid__last-updated\">\n            Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n\n        @if (showFooterActions()) {\n        <div class=\"os-data-grid__footer-actions\">\n          <ng-content select=\"[slot=footer-actions]\"></ng-content>\n        </div>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-data-grid.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-data-grid-host',\n  },\n})\nexport class OsDataGridComponent {\n  // Inputs\n  data = input<Record<string, unknown>[]>([]);\n  columns = input<OsDataTableColumn[]>([]);\n  filterOptions = input<OsFilterOption[]>([]);\n  tableActions = input<OsDataTableAction[]>([]);\n  title = input<string>('');\n  subtitle = input<string>('');\n  size = input<OsDataGridSize>('medium');\n  variant = input<OsDataGridVariant>('default');\n\n  // Display options\n  showHeaderActions = input<boolean>(true);\n  showRefreshButton = input<boolean>(true);\n  showExportButton = input<boolean>(true);\n  showAddButton = input<boolean>(true);\n  addButtonText = input<string>('Adicionar');\n  showFilters = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showNoData = input<boolean>(true);\n  noDataText = input<string>('Nenhum dado encontrado');\n  showFooter = input<boolean>(true);\n  showItemCount = input<boolean>(true);\n  showLastUpdated = input<boolean>(true);\n  showFooterActions = input<boolean>(false);\n\n  // Pagination\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  // Loading state\n  isLoading = input<boolean>(false);\n  lastUpdated = input<Date>(new Date());\n\n  // Outputs\n  rowClick = output<Record<string, unknown>>();\n  tableActionClick = output<OsDataTableAction>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  filterChange = output<OsDataGridFilter[]>();\n  sortChange = output<OsDataGridSort>();\n  pageChange = output<OsDataGridPagination>();\n\n  // Internal state\n  private filters = signal<OsDataGridFilter[]>([]);\n  private sort = signal<OsDataGridSort | null>(null);\n  protected pagination = signal<OsDataGridPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  });\n\n  // Computed properties\n  filteredData = computed(() => {\n    let result = [...this.data()];\n\n    // Apply filters\n    const activeFilters = this.filters().filter(\n      (f) => f.value !== null && f.value !== undefined && f.value !== ''\n    );\n    if (activeFilters.length > 0) {\n      result = result.filter((item) => {\n        return activeFilters.every((filter) => {\n          const itemValue = this.getNestedValue(item, filter.key);\n          return this.matchesFilter(itemValue, filter.value, filter.operator || 'contains');\n        });\n      });\n    }\n\n    // Apply sorting\n    if (this.sort()) {\n      result = this.applySorting(result, this.sort()!);\n    }\n\n    // Apply pagination\n    const startIndex = this.pagination().page * this.pagination().pageSize;\n    const endIndex = startIndex + this.pagination().pageSize;\n\n    return result.slice(startIndex, endIndex);\n  });\n\n  // Computed for total items\n  totalItems = computed(() => {\n    let result = [...this.data()];\n\n    // Apply filters\n    const activeFilters = this.filters().filter(\n      (f) => f.value !== null && f.value !== undefined && f.value !== ''\n    );\n    if (activeFilters.length > 0) {\n      result = result.filter((item) => {\n        return activeFilters.every((filter) => {\n          const itemValue = this.getNestedValue(item, filter.key);\n          return this.matchesFilter(itemValue, filter.value, filter.operator || 'contains');\n        });\n      });\n    }\n\n    return result.length;\n  });\n\n  hasActiveFilters = computed(() => {\n    return this.filters().some((f) => f.value !== null && f.value !== undefined && f.value !== '');\n  });\n\n  // Methods\n  dataGridClasses = () => {\n    const classes = ['os-data-grid'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-data-grid--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-data-grid--${this.variant()}`);\n    }\n\n    if (this.isLoading()) {\n      classes.push('os-data-grid--loading');\n    }\n\n    return classes.join(' ');\n  };\n\n  getButtonSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getFilterBarVariant = () => {\n    const variantMap: Record<OsDataGridVariant, 'default' | 'compact' | 'expanded'> = {\n      default: 'default',\n      compact: 'compact',\n      detailed: 'expanded',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getFilterBarSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getTableSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getTableVariant = () => {\n    const variantMap: Record<OsDataGridVariant, 'default' | 'striped' | 'bordered'> = {\n      default: 'default',\n      compact: 'striped',\n      detailed: 'bordered',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getFilterValue = (key: string) => {\n    const filter = this.filters().find((f) => f.key === key);\n    return filter?.value || '';\n  };\n\n  getItemCountText = () => {\n    const total = this.totalItems();\n    const start = this.pagination().page * this.pagination().pageSize + 1;\n    const end = Math.min(start + this.pagination().pageSize - 1, total);\n\n    if (total === 0) {\n      return 'Nenhum item encontrado';\n    }\n\n    return `Mostrando ${start}-${end} de ${total} itens`;\n  };\n\n  // Event handlers\n  onRefresh(): void {\n    this.refresh.emit();\n  }\n\n  onExport(): void {\n    this.export.emit();\n  }\n\n  onAdd(): void {\n    this.add.emit();\n  }\n\n  onRowClick(row: Record<string, unknown>): void {\n    this.rowClick.emit(row);\n  }\n\n  onTableActionClick(action: OsDataTableAction): void {\n    this.tableActionClick.emit(action);\n  }\n\n  onFilterChange(key: string, event: Event | { target?: { value: unknown } } | unknown): void {\n    const value = (event as { target?: { value: unknown } })?.target?.value || event;\n    this.updateFilter(key, value as string | number | Date | boolean | null | undefined);\n  }\n\n  onClearFilters(): void {\n    this.filters.set([]);\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters(): void {\n    this.filterChange.emit([...this.filters()]);\n  }\n\n  onSortChange(sort: { active: string; direction: 'asc' | 'desc' | '' }): void {\n    if (sort.direction === '') return;\n\n    this.sort.set({\n      column: sort.active,\n      direction: sort.direction as 'asc' | 'desc',\n    });\n    this.sortChange.emit(this.sort()!);\n  }\n\n  onPageChange(event: { pageIndex: number; pageSize: number }): void {\n    this.pagination.update((p) => ({\n      ...p,\n      page: event.pageIndex,\n      pageSize: event.pageSize,\n    }));\n    this.pageChange.emit(this.pagination());\n  }\n\n  // Helper methods\n  private updateFilter(\n    key: string,\n    value: string | number | Date | boolean | null | undefined\n  ): void {\n    const currentFilters = [...this.filters()];\n    const existingIndex = currentFilters.findIndex((f) => f.key === key);\n\n    if (value === null || value === undefined || value === '') {\n      if (existingIndex >= 0) {\n        currentFilters.splice(existingIndex, 1);\n      }\n    } else {\n      const filter: OsDataGridFilter = { key, value };\n      if (existingIndex >= 0) {\n        currentFilters[existingIndex] = filter;\n      } else {\n        currentFilters.push(filter);\n      }\n    }\n\n    this.filters.set(currentFilters);\n  }\n\n  private getNestedValue(obj: Record<string, unknown>, path: string): unknown {\n    return path\n      .split('.')\n      .reduce((current: unknown, key: string) => (current as Record<string, unknown>)?.[key], obj);\n  }\n\n  private matchesFilter(itemValue: unknown, filterValue: unknown, operator: string): boolean {\n    if (itemValue === null || itemValue === undefined) {\n      return false;\n    }\n\n    const itemStr = String(itemValue).toLowerCase();\n    const filterStr = String(filterValue).toLowerCase();\n\n    switch (operator) {\n      case 'equals':\n        return itemStr === filterStr;\n      case 'contains':\n        return itemStr.includes(filterStr);\n      case 'startsWith':\n        return itemStr.startsWith(filterStr);\n      case 'endsWith':\n        return itemStr.endsWith(filterStr);\n      case 'gt':\n        return Number(itemValue) > Number(filterValue);\n      case 'lt':\n        return Number(itemValue) < Number(filterValue);\n      case 'gte':\n        return Number(itemValue) >= Number(filterValue);\n      case 'lte':\n        return Number(itemValue) <= Number(filterValue);\n      default:\n        return itemStr.includes(filterStr);\n    }\n  }\n\n  private applySorting(\n    data: Record<string, unknown>[],\n    sort: OsDataGridSort\n  ): Record<string, unknown>[] {\n    return [...data].sort((a, b) => {\n      const aValue = this.getNestedValue(a, sort.column);\n      const bValue = this.getNestedValue(b, sort.column);\n\n      if (aValue === bValue) return 0;\n\n      const aStr = String(aValue || '');\n      const bStr = String(bValue || '');\n      const comparison = aStr < bStr ? -1 : aStr > bStr ? 1 : 0;\n      return sort.direction === 'asc' ? comparison : -comparison;\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "operator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"equals\" | \"contains\" | \"startsWith\" | \"endsWith\" | \"gt\" | \"lt\" | \"gte\" | \"lte\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | Date | boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsDataGridPagination",
            "id": "interface-OsDataGridPagination-a4be0db578bd437bed30d42dcecea47506433023cece76ddadb15d6f06c1fc7e9ee42513b5a7a6ec14e191784b37b585828645a9bbe8735a475b212f079060dc",
            "file": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output, signal } from '@angular/core';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport {\n  OsDataTableAction,\n  OsDataTableColumn,\n  OsDataTableComponent,\n} from '../../molecules/os-data-table/os-data-table.component';\nimport {\n  OsFilterBarComponent,\n  OsFilterOption,\n} from '../../molecules/os-filter-bar/os-filter-bar.component';\n\nexport type OsDataGridSize = 'small' | 'medium' | 'large';\nexport type OsDataGridVariant = 'default' | 'compact' | 'detailed';\n\nexport interface OsDataGridFilter {\n  key: string;\n  value: string | number | Date | boolean;\n  operator?: 'equals' | 'contains' | 'startsWith' | 'endsWith' | 'gt' | 'lt' | 'gte' | 'lte';\n}\n\nexport interface OsDataGridSort {\n  column: string;\n  direction: 'asc' | 'desc';\n}\n\nexport interface OsDataGridPagination {\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\n@Component({\n  selector: 'os-data-grid',\n  standalone: true,\n  imports: [CommonModule, OsDataTableComponent, OsFilterBarComponent, OsButtonComponent],\n  template: `\n    <div class=\"os-data-grid\" [class]=\"dataGridClasses()\">\n      <!-- Header -->\n      @if (title() || showHeaderActions()) {\n      <div class=\"os-data-grid__header\">\n        @if (title()) {\n        <div class=\"os-data-grid__title-section\">\n          <h2 class=\"os-data-grid__title\">{{ title() }}</h2>\n          @if (subtitle()) {\n          <p class=\"os-data-grid__subtitle\">{{ subtitle() }}</p>\n          }\n        </div>\n        } @if (showHeaderActions()) {\n        <div class=\"os-data-grid__header-actions\">\n          @if (showRefreshButton()) {\n          <os-button\n            variant=\"tertiary\"\n            [size]=\"getButtonSize()\"\n            icon=\"refresh\"\n            [loading]=\"isLoading()\"\n            (buttonClick)=\"onRefresh()\"\n            [attr.aria-label]=\"'Atualizar dados'\"\n          >\n            Atualizar\n          </os-button>\n          } @if (showExportButton()) {\n          <os-button\n            variant=\"secondary\"\n            [size]=\"getButtonSize()\"\n            icon=\"download\"\n            (buttonClick)=\"onExport()\"\n            [attr.aria-label]=\"'Exportar dados'\"\n          >\n            Exportar\n          </os-button>\n          } @if (showAddButton()) {\n          <os-button\n            variant=\"primary\"\n            [size]=\"getButtonSize()\"\n            icon=\"add\"\n            (buttonClick)=\"onAdd()\"\n            [attr.aria-label]=\"'Adicionar novo item'\"\n          >\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <!-- Filters -->\n      @if (showFilters() && filterOptions().length > 0) {\n      <div class=\"os-data-grid__filters\">\n        <os-filter-bar\n          [variant]=\"getFilterBarVariant()\"\n          [size]=\"getFilterBarSize()\"\n          [hasActiveFilters]=\"hasActiveFilters()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        >\n          <div class=\"os-data-grid__filter-content\">\n            @for (option of filterOptions(); track option.key) {\n            <div class=\"os-data-grid__filter-item\">\n              <label [for]=\"'filter-' + option.key\" class=\"os-data-grid__filter-label\">{{\n                option.label\n              }}</label>\n              @switch (option.type) { @case ('text') {\n              <input\n                [id]=\"'filter-' + option.key\"\n                type=\"text\"\n                class=\"os-data-grid__filter-input\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('select') {\n              <select\n                class=\"os-data-grid__filter-select\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              >\n                <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n                @for (opt of option.options; track opt.value) {\n                <option [value]=\"opt.value\">{{ opt.label }}</option>\n                }\n              </select>\n              } @case ('date') {\n              <input\n                type=\"date\"\n                class=\"os-data-grid__filter-input\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('number') {\n              <input\n                type=\"number\"\n                class=\"os-data-grid__filter-input\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n        </os-filter-bar>\n      </div>\n      }\n\n      <!-- Data Table -->\n      <div class=\"os-data-grid__table\">\n        <os-data-table\n          [data]=\"filteredData()\"\n          [columns]=\"columns()\"\n          [actions]=\"tableActions()\"\n          [size]=\"getTableSize()\"\n          [variant]=\"getTableVariant()\"\n          [showPagination]=\"showPagination()\"\n          [showNoData]=\"showNoData()\"\n          [noDataText]=\"noDataText()\"\n          [pageSize]=\"pagination().pageSize\"\n          [pageIndex]=\"pagination().page\"\n          [totalItems]=\"totalItems()\"\n          [pageSizeOptions]=\"pageSizeOptions()\"\n          [showFirstLastButtons]=\"showFirstLastButtons()\"\n          (rowClick)=\"onRowClick($event)\"\n          (actionClick)=\"onTableActionClick($event)\"\n          (sortChange)=\"onSortChange($event)\"\n          (pageChange)=\"onPageChange($event)\"\n        />\n      </div>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-data-grid__footer\">\n        <div class=\"os-data-grid__footer-info\">\n          @if (showItemCount()) {\n          <span class=\"os-data-grid__item-count\">\n            {{ getItemCountText() }}\n          </span>\n          } @if (showLastUpdated()) {\n          <span class=\"os-data-grid__last-updated\">\n            Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n\n        @if (showFooterActions()) {\n        <div class=\"os-data-grid__footer-actions\">\n          <ng-content select=\"[slot=footer-actions]\"></ng-content>\n        </div>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-data-grid.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-data-grid-host',\n  },\n})\nexport class OsDataGridComponent {\n  // Inputs\n  data = input<Record<string, unknown>[]>([]);\n  columns = input<OsDataTableColumn[]>([]);\n  filterOptions = input<OsFilterOption[]>([]);\n  tableActions = input<OsDataTableAction[]>([]);\n  title = input<string>('');\n  subtitle = input<string>('');\n  size = input<OsDataGridSize>('medium');\n  variant = input<OsDataGridVariant>('default');\n\n  // Display options\n  showHeaderActions = input<boolean>(true);\n  showRefreshButton = input<boolean>(true);\n  showExportButton = input<boolean>(true);\n  showAddButton = input<boolean>(true);\n  addButtonText = input<string>('Adicionar');\n  showFilters = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showNoData = input<boolean>(true);\n  noDataText = input<string>('Nenhum dado encontrado');\n  showFooter = input<boolean>(true);\n  showItemCount = input<boolean>(true);\n  showLastUpdated = input<boolean>(true);\n  showFooterActions = input<boolean>(false);\n\n  // Pagination\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  // Loading state\n  isLoading = input<boolean>(false);\n  lastUpdated = input<Date>(new Date());\n\n  // Outputs\n  rowClick = output<Record<string, unknown>>();\n  tableActionClick = output<OsDataTableAction>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  filterChange = output<OsDataGridFilter[]>();\n  sortChange = output<OsDataGridSort>();\n  pageChange = output<OsDataGridPagination>();\n\n  // Internal state\n  private filters = signal<OsDataGridFilter[]>([]);\n  private sort = signal<OsDataGridSort | null>(null);\n  protected pagination = signal<OsDataGridPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  });\n\n  // Computed properties\n  filteredData = computed(() => {\n    let result = [...this.data()];\n\n    // Apply filters\n    const activeFilters = this.filters().filter(\n      (f) => f.value !== null && f.value !== undefined && f.value !== ''\n    );\n    if (activeFilters.length > 0) {\n      result = result.filter((item) => {\n        return activeFilters.every((filter) => {\n          const itemValue = this.getNestedValue(item, filter.key);\n          return this.matchesFilter(itemValue, filter.value, filter.operator || 'contains');\n        });\n      });\n    }\n\n    // Apply sorting\n    if (this.sort()) {\n      result = this.applySorting(result, this.sort()!);\n    }\n\n    // Apply pagination\n    const startIndex = this.pagination().page * this.pagination().pageSize;\n    const endIndex = startIndex + this.pagination().pageSize;\n\n    return result.slice(startIndex, endIndex);\n  });\n\n  // Computed for total items\n  totalItems = computed(() => {\n    let result = [...this.data()];\n\n    // Apply filters\n    const activeFilters = this.filters().filter(\n      (f) => f.value !== null && f.value !== undefined && f.value !== ''\n    );\n    if (activeFilters.length > 0) {\n      result = result.filter((item) => {\n        return activeFilters.every((filter) => {\n          const itemValue = this.getNestedValue(item, filter.key);\n          return this.matchesFilter(itemValue, filter.value, filter.operator || 'contains');\n        });\n      });\n    }\n\n    return result.length;\n  });\n\n  hasActiveFilters = computed(() => {\n    return this.filters().some((f) => f.value !== null && f.value !== undefined && f.value !== '');\n  });\n\n  // Methods\n  dataGridClasses = () => {\n    const classes = ['os-data-grid'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-data-grid--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-data-grid--${this.variant()}`);\n    }\n\n    if (this.isLoading()) {\n      classes.push('os-data-grid--loading');\n    }\n\n    return classes.join(' ');\n  };\n\n  getButtonSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getFilterBarVariant = () => {\n    const variantMap: Record<OsDataGridVariant, 'default' | 'compact' | 'expanded'> = {\n      default: 'default',\n      compact: 'compact',\n      detailed: 'expanded',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getFilterBarSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getTableSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getTableVariant = () => {\n    const variantMap: Record<OsDataGridVariant, 'default' | 'striped' | 'bordered'> = {\n      default: 'default',\n      compact: 'striped',\n      detailed: 'bordered',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getFilterValue = (key: string) => {\n    const filter = this.filters().find((f) => f.key === key);\n    return filter?.value || '';\n  };\n\n  getItemCountText = () => {\n    const total = this.totalItems();\n    const start = this.pagination().page * this.pagination().pageSize + 1;\n    const end = Math.min(start + this.pagination().pageSize - 1, total);\n\n    if (total === 0) {\n      return 'Nenhum item encontrado';\n    }\n\n    return `Mostrando ${start}-${end} de ${total} itens`;\n  };\n\n  // Event handlers\n  onRefresh(): void {\n    this.refresh.emit();\n  }\n\n  onExport(): void {\n    this.export.emit();\n  }\n\n  onAdd(): void {\n    this.add.emit();\n  }\n\n  onRowClick(row: Record<string, unknown>): void {\n    this.rowClick.emit(row);\n  }\n\n  onTableActionClick(action: OsDataTableAction): void {\n    this.tableActionClick.emit(action);\n  }\n\n  onFilterChange(key: string, event: Event | { target?: { value: unknown } } | unknown): void {\n    const value = (event as { target?: { value: unknown } })?.target?.value || event;\n    this.updateFilter(key, value as string | number | Date | boolean | null | undefined);\n  }\n\n  onClearFilters(): void {\n    this.filters.set([]);\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters(): void {\n    this.filterChange.emit([...this.filters()]);\n  }\n\n  onSortChange(sort: { active: string; direction: 'asc' | 'desc' | '' }): void {\n    if (sort.direction === '') return;\n\n    this.sort.set({\n      column: sort.active,\n      direction: sort.direction as 'asc' | 'desc',\n    });\n    this.sortChange.emit(this.sort()!);\n  }\n\n  onPageChange(event: { pageIndex: number; pageSize: number }): void {\n    this.pagination.update((p) => ({\n      ...p,\n      page: event.pageIndex,\n      pageSize: event.pageSize,\n    }));\n    this.pageChange.emit(this.pagination());\n  }\n\n  // Helper methods\n  private updateFilter(\n    key: string,\n    value: string | number | Date | boolean | null | undefined\n  ): void {\n    const currentFilters = [...this.filters()];\n    const existingIndex = currentFilters.findIndex((f) => f.key === key);\n\n    if (value === null || value === undefined || value === '') {\n      if (existingIndex >= 0) {\n        currentFilters.splice(existingIndex, 1);\n      }\n    } else {\n      const filter: OsDataGridFilter = { key, value };\n      if (existingIndex >= 0) {\n        currentFilters[existingIndex] = filter;\n      } else {\n        currentFilters.push(filter);\n      }\n    }\n\n    this.filters.set(currentFilters);\n  }\n\n  private getNestedValue(obj: Record<string, unknown>, path: string): unknown {\n    return path\n      .split('.')\n      .reduce((current: unknown, key: string) => (current as Record<string, unknown>)?.[key], obj);\n  }\n\n  private matchesFilter(itemValue: unknown, filterValue: unknown, operator: string): boolean {\n    if (itemValue === null || itemValue === undefined) {\n      return false;\n    }\n\n    const itemStr = String(itemValue).toLowerCase();\n    const filterStr = String(filterValue).toLowerCase();\n\n    switch (operator) {\n      case 'equals':\n        return itemStr === filterStr;\n      case 'contains':\n        return itemStr.includes(filterStr);\n      case 'startsWith':\n        return itemStr.startsWith(filterStr);\n      case 'endsWith':\n        return itemStr.endsWith(filterStr);\n      case 'gt':\n        return Number(itemValue) > Number(filterValue);\n      case 'lt':\n        return Number(itemValue) < Number(filterValue);\n      case 'gte':\n        return Number(itemValue) >= Number(filterValue);\n      case 'lte':\n        return Number(itemValue) <= Number(filterValue);\n      default:\n        return itemStr.includes(filterStr);\n    }\n  }\n\n  private applySorting(\n    data: Record<string, unknown>[],\n    sort: OsDataGridSort\n  ): Record<string, unknown>[] {\n    return [...data].sort((a, b) => {\n      const aValue = this.getNestedValue(a, sort.column);\n      const bValue = this.getNestedValue(b, sort.column);\n\n      if (aValue === bValue) return 0;\n\n      const aStr = String(aValue || '');\n      const bStr = String(bValue || '');\n      const comparison = aStr < bStr ? -1 : aStr > bStr ? 1 : 0;\n      return sort.direction === 'asc' ? comparison : -comparison;\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsDataGridSort",
            "id": "interface-OsDataGridSort-a4be0db578bd437bed30d42dcecea47506433023cece76ddadb15d6f06c1fc7e9ee42513b5a7a6ec14e191784b37b585828645a9bbe8735a475b212f079060dc",
            "file": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output, signal } from '@angular/core';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport {\n  OsDataTableAction,\n  OsDataTableColumn,\n  OsDataTableComponent,\n} from '../../molecules/os-data-table/os-data-table.component';\nimport {\n  OsFilterBarComponent,\n  OsFilterOption,\n} from '../../molecules/os-filter-bar/os-filter-bar.component';\n\nexport type OsDataGridSize = 'small' | 'medium' | 'large';\nexport type OsDataGridVariant = 'default' | 'compact' | 'detailed';\n\nexport interface OsDataGridFilter {\n  key: string;\n  value: string | number | Date | boolean;\n  operator?: 'equals' | 'contains' | 'startsWith' | 'endsWith' | 'gt' | 'lt' | 'gte' | 'lte';\n}\n\nexport interface OsDataGridSort {\n  column: string;\n  direction: 'asc' | 'desc';\n}\n\nexport interface OsDataGridPagination {\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\n@Component({\n  selector: 'os-data-grid',\n  standalone: true,\n  imports: [CommonModule, OsDataTableComponent, OsFilterBarComponent, OsButtonComponent],\n  template: `\n    <div class=\"os-data-grid\" [class]=\"dataGridClasses()\">\n      <!-- Header -->\n      @if (title() || showHeaderActions()) {\n      <div class=\"os-data-grid__header\">\n        @if (title()) {\n        <div class=\"os-data-grid__title-section\">\n          <h2 class=\"os-data-grid__title\">{{ title() }}</h2>\n          @if (subtitle()) {\n          <p class=\"os-data-grid__subtitle\">{{ subtitle() }}</p>\n          }\n        </div>\n        } @if (showHeaderActions()) {\n        <div class=\"os-data-grid__header-actions\">\n          @if (showRefreshButton()) {\n          <os-button\n            variant=\"tertiary\"\n            [size]=\"getButtonSize()\"\n            icon=\"refresh\"\n            [loading]=\"isLoading()\"\n            (buttonClick)=\"onRefresh()\"\n            [attr.aria-label]=\"'Atualizar dados'\"\n          >\n            Atualizar\n          </os-button>\n          } @if (showExportButton()) {\n          <os-button\n            variant=\"secondary\"\n            [size]=\"getButtonSize()\"\n            icon=\"download\"\n            (buttonClick)=\"onExport()\"\n            [attr.aria-label]=\"'Exportar dados'\"\n          >\n            Exportar\n          </os-button>\n          } @if (showAddButton()) {\n          <os-button\n            variant=\"primary\"\n            [size]=\"getButtonSize()\"\n            icon=\"add\"\n            (buttonClick)=\"onAdd()\"\n            [attr.aria-label]=\"'Adicionar novo item'\"\n          >\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <!-- Filters -->\n      @if (showFilters() && filterOptions().length > 0) {\n      <div class=\"os-data-grid__filters\">\n        <os-filter-bar\n          [variant]=\"getFilterBarVariant()\"\n          [size]=\"getFilterBarSize()\"\n          [hasActiveFilters]=\"hasActiveFilters()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        >\n          <div class=\"os-data-grid__filter-content\">\n            @for (option of filterOptions(); track option.key) {\n            <div class=\"os-data-grid__filter-item\">\n              <label [for]=\"'filter-' + option.key\" class=\"os-data-grid__filter-label\">{{\n                option.label\n              }}</label>\n              @switch (option.type) { @case ('text') {\n              <input\n                [id]=\"'filter-' + option.key\"\n                type=\"text\"\n                class=\"os-data-grid__filter-input\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('select') {\n              <select\n                class=\"os-data-grid__filter-select\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              >\n                <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n                @for (opt of option.options; track opt.value) {\n                <option [value]=\"opt.value\">{{ opt.label }}</option>\n                }\n              </select>\n              } @case ('date') {\n              <input\n                type=\"date\"\n                class=\"os-data-grid__filter-input\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('number') {\n              <input\n                type=\"number\"\n                class=\"os-data-grid__filter-input\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n        </os-filter-bar>\n      </div>\n      }\n\n      <!-- Data Table -->\n      <div class=\"os-data-grid__table\">\n        <os-data-table\n          [data]=\"filteredData()\"\n          [columns]=\"columns()\"\n          [actions]=\"tableActions()\"\n          [size]=\"getTableSize()\"\n          [variant]=\"getTableVariant()\"\n          [showPagination]=\"showPagination()\"\n          [showNoData]=\"showNoData()\"\n          [noDataText]=\"noDataText()\"\n          [pageSize]=\"pagination().pageSize\"\n          [pageIndex]=\"pagination().page\"\n          [totalItems]=\"totalItems()\"\n          [pageSizeOptions]=\"pageSizeOptions()\"\n          [showFirstLastButtons]=\"showFirstLastButtons()\"\n          (rowClick)=\"onRowClick($event)\"\n          (actionClick)=\"onTableActionClick($event)\"\n          (sortChange)=\"onSortChange($event)\"\n          (pageChange)=\"onPageChange($event)\"\n        />\n      </div>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-data-grid__footer\">\n        <div class=\"os-data-grid__footer-info\">\n          @if (showItemCount()) {\n          <span class=\"os-data-grid__item-count\">\n            {{ getItemCountText() }}\n          </span>\n          } @if (showLastUpdated()) {\n          <span class=\"os-data-grid__last-updated\">\n            Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n\n        @if (showFooterActions()) {\n        <div class=\"os-data-grid__footer-actions\">\n          <ng-content select=\"[slot=footer-actions]\"></ng-content>\n        </div>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-data-grid.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-data-grid-host',\n  },\n})\nexport class OsDataGridComponent {\n  // Inputs\n  data = input<Record<string, unknown>[]>([]);\n  columns = input<OsDataTableColumn[]>([]);\n  filterOptions = input<OsFilterOption[]>([]);\n  tableActions = input<OsDataTableAction[]>([]);\n  title = input<string>('');\n  subtitle = input<string>('');\n  size = input<OsDataGridSize>('medium');\n  variant = input<OsDataGridVariant>('default');\n\n  // Display options\n  showHeaderActions = input<boolean>(true);\n  showRefreshButton = input<boolean>(true);\n  showExportButton = input<boolean>(true);\n  showAddButton = input<boolean>(true);\n  addButtonText = input<string>('Adicionar');\n  showFilters = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showNoData = input<boolean>(true);\n  noDataText = input<string>('Nenhum dado encontrado');\n  showFooter = input<boolean>(true);\n  showItemCount = input<boolean>(true);\n  showLastUpdated = input<boolean>(true);\n  showFooterActions = input<boolean>(false);\n\n  // Pagination\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  // Loading state\n  isLoading = input<boolean>(false);\n  lastUpdated = input<Date>(new Date());\n\n  // Outputs\n  rowClick = output<Record<string, unknown>>();\n  tableActionClick = output<OsDataTableAction>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  filterChange = output<OsDataGridFilter[]>();\n  sortChange = output<OsDataGridSort>();\n  pageChange = output<OsDataGridPagination>();\n\n  // Internal state\n  private filters = signal<OsDataGridFilter[]>([]);\n  private sort = signal<OsDataGridSort | null>(null);\n  protected pagination = signal<OsDataGridPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  });\n\n  // Computed properties\n  filteredData = computed(() => {\n    let result = [...this.data()];\n\n    // Apply filters\n    const activeFilters = this.filters().filter(\n      (f) => f.value !== null && f.value !== undefined && f.value !== ''\n    );\n    if (activeFilters.length > 0) {\n      result = result.filter((item) => {\n        return activeFilters.every((filter) => {\n          const itemValue = this.getNestedValue(item, filter.key);\n          return this.matchesFilter(itemValue, filter.value, filter.operator || 'contains');\n        });\n      });\n    }\n\n    // Apply sorting\n    if (this.sort()) {\n      result = this.applySorting(result, this.sort()!);\n    }\n\n    // Apply pagination\n    const startIndex = this.pagination().page * this.pagination().pageSize;\n    const endIndex = startIndex + this.pagination().pageSize;\n\n    return result.slice(startIndex, endIndex);\n  });\n\n  // Computed for total items\n  totalItems = computed(() => {\n    let result = [...this.data()];\n\n    // Apply filters\n    const activeFilters = this.filters().filter(\n      (f) => f.value !== null && f.value !== undefined && f.value !== ''\n    );\n    if (activeFilters.length > 0) {\n      result = result.filter((item) => {\n        return activeFilters.every((filter) => {\n          const itemValue = this.getNestedValue(item, filter.key);\n          return this.matchesFilter(itemValue, filter.value, filter.operator || 'contains');\n        });\n      });\n    }\n\n    return result.length;\n  });\n\n  hasActiveFilters = computed(() => {\n    return this.filters().some((f) => f.value !== null && f.value !== undefined && f.value !== '');\n  });\n\n  // Methods\n  dataGridClasses = () => {\n    const classes = ['os-data-grid'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-data-grid--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-data-grid--${this.variant()}`);\n    }\n\n    if (this.isLoading()) {\n      classes.push('os-data-grid--loading');\n    }\n\n    return classes.join(' ');\n  };\n\n  getButtonSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getFilterBarVariant = () => {\n    const variantMap: Record<OsDataGridVariant, 'default' | 'compact' | 'expanded'> = {\n      default: 'default',\n      compact: 'compact',\n      detailed: 'expanded',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getFilterBarSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getTableSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getTableVariant = () => {\n    const variantMap: Record<OsDataGridVariant, 'default' | 'striped' | 'bordered'> = {\n      default: 'default',\n      compact: 'striped',\n      detailed: 'bordered',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getFilterValue = (key: string) => {\n    const filter = this.filters().find((f) => f.key === key);\n    return filter?.value || '';\n  };\n\n  getItemCountText = () => {\n    const total = this.totalItems();\n    const start = this.pagination().page * this.pagination().pageSize + 1;\n    const end = Math.min(start + this.pagination().pageSize - 1, total);\n\n    if (total === 0) {\n      return 'Nenhum item encontrado';\n    }\n\n    return `Mostrando ${start}-${end} de ${total} itens`;\n  };\n\n  // Event handlers\n  onRefresh(): void {\n    this.refresh.emit();\n  }\n\n  onExport(): void {\n    this.export.emit();\n  }\n\n  onAdd(): void {\n    this.add.emit();\n  }\n\n  onRowClick(row: Record<string, unknown>): void {\n    this.rowClick.emit(row);\n  }\n\n  onTableActionClick(action: OsDataTableAction): void {\n    this.tableActionClick.emit(action);\n  }\n\n  onFilterChange(key: string, event: Event | { target?: { value: unknown } } | unknown): void {\n    const value = (event as { target?: { value: unknown } })?.target?.value || event;\n    this.updateFilter(key, value as string | number | Date | boolean | null | undefined);\n  }\n\n  onClearFilters(): void {\n    this.filters.set([]);\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters(): void {\n    this.filterChange.emit([...this.filters()]);\n  }\n\n  onSortChange(sort: { active: string; direction: 'asc' | 'desc' | '' }): void {\n    if (sort.direction === '') return;\n\n    this.sort.set({\n      column: sort.active,\n      direction: sort.direction as 'asc' | 'desc',\n    });\n    this.sortChange.emit(this.sort()!);\n  }\n\n  onPageChange(event: { pageIndex: number; pageSize: number }): void {\n    this.pagination.update((p) => ({\n      ...p,\n      page: event.pageIndex,\n      pageSize: event.pageSize,\n    }));\n    this.pageChange.emit(this.pagination());\n  }\n\n  // Helper methods\n  private updateFilter(\n    key: string,\n    value: string | number | Date | boolean | null | undefined\n  ): void {\n    const currentFilters = [...this.filters()];\n    const existingIndex = currentFilters.findIndex((f) => f.key === key);\n\n    if (value === null || value === undefined || value === '') {\n      if (existingIndex >= 0) {\n        currentFilters.splice(existingIndex, 1);\n      }\n    } else {\n      const filter: OsDataGridFilter = { key, value };\n      if (existingIndex >= 0) {\n        currentFilters[existingIndex] = filter;\n      } else {\n        currentFilters.push(filter);\n      }\n    }\n\n    this.filters.set(currentFilters);\n  }\n\n  private getNestedValue(obj: Record<string, unknown>, path: string): unknown {\n    return path\n      .split('.')\n      .reduce((current: unknown, key: string) => (current as Record<string, unknown>)?.[key], obj);\n  }\n\n  private matchesFilter(itemValue: unknown, filterValue: unknown, operator: string): boolean {\n    if (itemValue === null || itemValue === undefined) {\n      return false;\n    }\n\n    const itemStr = String(itemValue).toLowerCase();\n    const filterStr = String(filterValue).toLowerCase();\n\n    switch (operator) {\n      case 'equals':\n        return itemStr === filterStr;\n      case 'contains':\n        return itemStr.includes(filterStr);\n      case 'startsWith':\n        return itemStr.startsWith(filterStr);\n      case 'endsWith':\n        return itemStr.endsWith(filterStr);\n      case 'gt':\n        return Number(itemValue) > Number(filterValue);\n      case 'lt':\n        return Number(itemValue) < Number(filterValue);\n      case 'gte':\n        return Number(itemValue) >= Number(filterValue);\n      case 'lte':\n        return Number(itemValue) <= Number(filterValue);\n      default:\n        return itemStr.includes(filterStr);\n    }\n  }\n\n  private applySorting(\n    data: Record<string, unknown>[],\n    sort: OsDataGridSort\n  ): Record<string, unknown>[] {\n    return [...data].sort((a, b) => {\n      const aValue = this.getNestedValue(a, sort.column);\n      const bValue = this.getNestedValue(b, sort.column);\n\n      if (aValue === bValue) return 0;\n\n      const aStr = String(aValue || '');\n      const bStr = String(bValue || '');\n      const comparison = aStr < bStr ? -1 : aStr > bStr ? 1 : 0;\n      return sort.direction === 'asc' ? comparison : -comparison;\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"asc\" | \"desc\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsDataTableAction",
            "id": "interface-OsDataTableAction-428f244a83e5176a1b68f335061e032005615d0089fa80e94a28738b6dafaeac680a03ea7df71d89763fbfa03ff5f2dc18a43fcf8a25855091a942037c8245fc",
            "file": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, input, output, ChangeDetectionStrategy, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule, Sort } from '@angular/material/sort';\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport type OsDataTableSize = 'small' | 'medium' | 'large';\nexport type OsDataTableVariant = 'default' | 'striped' | 'bordered';\n\nexport interface OsDataTableColumn {\n  key: string;\n  label: string;\n  sortable?: boolean;\n  width?: string;\n  align?: 'left' | 'center' | 'right';\n}\n\nexport type OsDataTableRow = Record<string, unknown>;\n\nexport interface OsDataTableAction {\n  key: string;\n  label: string;\n  icon?: string;\n  color?: 'primary' | 'secondary' | 'warn';\n}\n\n@Component({\n  selector: 'os-data-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    OsButtonComponent,\n    OsIconComponent,\n  ],\n  template: `\n    <div class=\"os-data-table\" [class]=\"dataTableClasses()\">\n      @if (title()) {\n      <div class=\"os-data-table__header\">\n        <h3 class=\"os-data-table__title\">{{ title() }}</h3>\n        @if (showActions() && actions().length > 0) {\n        <div class=\"os-data-table__actions\">\n          @for (action of actions(); track action.key) {\n          <os-button\n            [variant]=\"getButtonVariant(action.color)\"\n            [size]=\"getButtonSize()\"\n            [icon]=\"action.icon || ''\"\n            (buttonClick)=\"onActionClick(action)\"\n            [attr.aria-label]=\"action.label\"\n          >\n            {{ action.label }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <div class=\"os-data-table__content\">\n        <table mat-table [dataSource]=\"data()\" matSort class=\"os-data-table__table\">\n          @for (column of columns(); track column.key) {\n          <ng-container [matColumnDef]=\"column.key\">\n            <th\n              mat-header-cell\n              *matHeaderCellDef\n              [class]=\"headerCellClass(column)\"\n              [style.width]=\"column.width || 'auto'\"\n              [style.text-align]=\"column.align || 'left'\"\n              [mat-sort-header]=\"column.sortable ? column.key : ''\"\n            >\n              {{ column.label }}\n            </th>\n            <td\n              mat-cell\n              *matCellDef=\"let row\"\n              [class]=\"cellClass(column)\"\n              [style.text-align]=\"column.align || 'left'\"\n            >\n              {{ getCellValue(row, column.key) }}\n            </td>\n          </ng-container>\n          }\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns()\"></tr>\n          <tr\n            mat-row\n            *matRowDef=\"let row; columns: displayedColumns()\"\n            [class]=\"rowClass(row)\"\n            (click)=\"onRowClick(row)\"\n          ></tr>\n        </table>\n\n        @if (showNoData() && data().length === 0) {\n        <div class=\"os-data-table__no-data\">\n          <os-icon name=\"inbox\" size=\"lg\" />\n          <p>{{ noDataText() }}</p>\n        </div>\n        }\n      </div>\n\n      @if (showPagination() && data().length > 0) {\n      <mat-paginator\n        [length]=\"totalItems()\"\n        [pageSize]=\"pageSize()\"\n        [pageIndex]=\"pageIndex()\"\n        [pageSizeOptions]=\"pageSizeOptions()\"\n        [showFirstLastButtons]=\"showFirstLastButtons()\"\n        (page)=\"onPageChange($event)\"\n        class=\"os-data-table__paginator\"\n      ></mat-paginator>\n      }\n    </div>\n  `,\n  styleUrl: './os-data-table.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-data-table-host',\n  },\n})\nexport class OsDataTableComponent {\n  data = input<OsDataTableRow[]>([]);\n  columns = input<OsDataTableColumn[]>([]);\n  title = input<string>('');\n  actions = input<OsDataTableAction[]>([]);\n  size = input<OsDataTableSize>('medium');\n  variant = input<OsDataTableVariant>('default');\n  sortable = input<boolean>(true);\n  sortActive = input<string>('');\n  sortDirection = input<'asc' | 'desc'>('asc');\n  showActions = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showNoData = input<boolean>(true);\n  noDataText = input<string>('Nenhum dado encontrado');\n  pageSize = input<number>(10);\n  pageIndex = input<number>(0);\n  totalItems = input<number>(0);\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  rowClick = output<OsDataTableRow>();\n  actionClick = output<OsDataTableAction>();\n  sortChange = output<Sort>();\n  pageChange = output<PageEvent>();\n\n  protected sort = true;\n\n  displayedColumns = computed(() => this.columns().map((col) => col.key));\n\n  // Mapeamento interno para Atoms\n  protected getButtonVariant = (color?: string) => {\n    const colorMap: Record<string, 'primary' | 'secondary' | 'tertiary' | 'danger'> = {\n      primary: 'primary',\n      secondary: 'secondary',\n      warn: 'danger',\n    };\n    return colorMap[color || 'primary'] || 'primary';\n  };\n\n  protected getButtonSize = () => {\n    const sizeMap: Record<OsDataTableSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  dataTableClasses = () => {\n    const classes = ['os-data-table'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-data-table--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-data-table--${this.variant()}`);\n    }\n\n    return classes.join(' ');\n  };\n\n  headerCellClass = (column: OsDataTableColumn) => {\n    const classes = ['os-data-table__header-cell'];\n\n    if (column.sortable) {\n      classes.push('os-data-table__header-cell--sortable');\n    }\n\n    return classes.join(' ');\n  };\n\n  cellClass = (column: OsDataTableColumn) => {\n    const classes = ['os-data-table__cell'];\n\n    if (column.align) {\n      classes.push(`os-data-table__cell--${column.align}`);\n    }\n\n    return classes.join(' ');\n  };\n\n  rowClass = (row: OsDataTableRow) => {\n    const classes = ['os-data-table__row'];\n\n    if (this.variant() === 'striped') {\n      const index = this.data().indexOf(row);\n      if (index % 2 === 1) {\n        classes.push('os-data-table__row--striped');\n      }\n    }\n\n    return classes.join(' ');\n  };\n\n  getCellValue = (row: OsDataTableRow, key: string) => {\n    return row[key] || '';\n  };\n\n  onRowClick(row: OsDataTableRow): void {\n    this.rowClick.emit(row);\n  }\n\n  onActionClick(action: OsDataTableAction): void {\n    this.actionClick.emit(action);\n  }\n\n  onSortChange(sort: Sort): void {\n    this.sortChange.emit(sort);\n  }\n\n  onPageChange(event: PageEvent): void {\n    this.pageChange.emit(event);\n  }\n}\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"secondary\" | \"warn\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsDataTableColumn",
            "id": "interface-OsDataTableColumn-428f244a83e5176a1b68f335061e032005615d0089fa80e94a28738b6dafaeac680a03ea7df71d89763fbfa03ff5f2dc18a43fcf8a25855091a942037c8245fc",
            "file": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, input, output, ChangeDetectionStrategy, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule, Sort } from '@angular/material/sort';\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport type OsDataTableSize = 'small' | 'medium' | 'large';\nexport type OsDataTableVariant = 'default' | 'striped' | 'bordered';\n\nexport interface OsDataTableColumn {\n  key: string;\n  label: string;\n  sortable?: boolean;\n  width?: string;\n  align?: 'left' | 'center' | 'right';\n}\n\nexport type OsDataTableRow = Record<string, unknown>;\n\nexport interface OsDataTableAction {\n  key: string;\n  label: string;\n  icon?: string;\n  color?: 'primary' | 'secondary' | 'warn';\n}\n\n@Component({\n  selector: 'os-data-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    OsButtonComponent,\n    OsIconComponent,\n  ],\n  template: `\n    <div class=\"os-data-table\" [class]=\"dataTableClasses()\">\n      @if (title()) {\n      <div class=\"os-data-table__header\">\n        <h3 class=\"os-data-table__title\">{{ title() }}</h3>\n        @if (showActions() && actions().length > 0) {\n        <div class=\"os-data-table__actions\">\n          @for (action of actions(); track action.key) {\n          <os-button\n            [variant]=\"getButtonVariant(action.color)\"\n            [size]=\"getButtonSize()\"\n            [icon]=\"action.icon || ''\"\n            (buttonClick)=\"onActionClick(action)\"\n            [attr.aria-label]=\"action.label\"\n          >\n            {{ action.label }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <div class=\"os-data-table__content\">\n        <table mat-table [dataSource]=\"data()\" matSort class=\"os-data-table__table\">\n          @for (column of columns(); track column.key) {\n          <ng-container [matColumnDef]=\"column.key\">\n            <th\n              mat-header-cell\n              *matHeaderCellDef\n              [class]=\"headerCellClass(column)\"\n              [style.width]=\"column.width || 'auto'\"\n              [style.text-align]=\"column.align || 'left'\"\n              [mat-sort-header]=\"column.sortable ? column.key : ''\"\n            >\n              {{ column.label }}\n            </th>\n            <td\n              mat-cell\n              *matCellDef=\"let row\"\n              [class]=\"cellClass(column)\"\n              [style.text-align]=\"column.align || 'left'\"\n            >\n              {{ getCellValue(row, column.key) }}\n            </td>\n          </ng-container>\n          }\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns()\"></tr>\n          <tr\n            mat-row\n            *matRowDef=\"let row; columns: displayedColumns()\"\n            [class]=\"rowClass(row)\"\n            (click)=\"onRowClick(row)\"\n          ></tr>\n        </table>\n\n        @if (showNoData() && data().length === 0) {\n        <div class=\"os-data-table__no-data\">\n          <os-icon name=\"inbox\" size=\"lg\" />\n          <p>{{ noDataText() }}</p>\n        </div>\n        }\n      </div>\n\n      @if (showPagination() && data().length > 0) {\n      <mat-paginator\n        [length]=\"totalItems()\"\n        [pageSize]=\"pageSize()\"\n        [pageIndex]=\"pageIndex()\"\n        [pageSizeOptions]=\"pageSizeOptions()\"\n        [showFirstLastButtons]=\"showFirstLastButtons()\"\n        (page)=\"onPageChange($event)\"\n        class=\"os-data-table__paginator\"\n      ></mat-paginator>\n      }\n    </div>\n  `,\n  styleUrl: './os-data-table.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-data-table-host',\n  },\n})\nexport class OsDataTableComponent {\n  data = input<OsDataTableRow[]>([]);\n  columns = input<OsDataTableColumn[]>([]);\n  title = input<string>('');\n  actions = input<OsDataTableAction[]>([]);\n  size = input<OsDataTableSize>('medium');\n  variant = input<OsDataTableVariant>('default');\n  sortable = input<boolean>(true);\n  sortActive = input<string>('');\n  sortDirection = input<'asc' | 'desc'>('asc');\n  showActions = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showNoData = input<boolean>(true);\n  noDataText = input<string>('Nenhum dado encontrado');\n  pageSize = input<number>(10);\n  pageIndex = input<number>(0);\n  totalItems = input<number>(0);\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  rowClick = output<OsDataTableRow>();\n  actionClick = output<OsDataTableAction>();\n  sortChange = output<Sort>();\n  pageChange = output<PageEvent>();\n\n  protected sort = true;\n\n  displayedColumns = computed(() => this.columns().map((col) => col.key));\n\n  // Mapeamento interno para Atoms\n  protected getButtonVariant = (color?: string) => {\n    const colorMap: Record<string, 'primary' | 'secondary' | 'tertiary' | 'danger'> = {\n      primary: 'primary',\n      secondary: 'secondary',\n      warn: 'danger',\n    };\n    return colorMap[color || 'primary'] || 'primary';\n  };\n\n  protected getButtonSize = () => {\n    const sizeMap: Record<OsDataTableSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  dataTableClasses = () => {\n    const classes = ['os-data-table'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-data-table--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-data-table--${this.variant()}`);\n    }\n\n    return classes.join(' ');\n  };\n\n  headerCellClass = (column: OsDataTableColumn) => {\n    const classes = ['os-data-table__header-cell'];\n\n    if (column.sortable) {\n      classes.push('os-data-table__header-cell--sortable');\n    }\n\n    return classes.join(' ');\n  };\n\n  cellClass = (column: OsDataTableColumn) => {\n    const classes = ['os-data-table__cell'];\n\n    if (column.align) {\n      classes.push(`os-data-table__cell--${column.align}`);\n    }\n\n    return classes.join(' ');\n  };\n\n  rowClass = (row: OsDataTableRow) => {\n    const classes = ['os-data-table__row'];\n\n    if (this.variant() === 'striped') {\n      const index = this.data().indexOf(row);\n      if (index % 2 === 1) {\n        classes.push('os-data-table__row--striped');\n      }\n    }\n\n    return classes.join(' ');\n  };\n\n  getCellValue = (row: OsDataTableRow, key: string) => {\n    return row[key] || '';\n  };\n\n  onRowClick(row: OsDataTableRow): void {\n    this.rowClick.emit(row);\n  }\n\n  onActionClick(action: OsDataTableAction): void {\n    this.actionClick.emit(action);\n  }\n\n  onSortChange(sort: Sort): void {\n    this.sortChange.emit(sort);\n  }\n\n  onPageChange(event: PageEvent): void {\n    this.pageChange.emit(event);\n  }\n}\n",
            "properties": [
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"left\" | \"center\" | \"right\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "sortable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsDropdownGroup",
            "id": "interface-OsDropdownGroup-fb544af98b860ad0b0746e70b0210ff5521011e406bd64750895eb070e2ef5d4338b2480fdf1c8e910d52cf7f040240d289911276e689ec7e96885e6f15034ef",
            "file": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  ElementRef,\n  HostListener,\n  inject,\n  input,\n  output,\n  signal,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenu, MatMenuModule } from '@angular/material/menu';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsInputComponent } from '../../atoms/os-input/os-input.component';\n\nexport type OsDropdownSize = 'small' | 'medium' | 'large';\nexport type OsDropdownVariant = 'default' | 'primary' | 'secondary' | 'accent';\nexport type OsDropdownAlignment = 'start' | 'center' | 'end';\n\nexport interface OsDropdownOption {\n  value: string | number | boolean;\n  label: string;\n  disabled?: boolean;\n  icon?: string;\n  divider?: boolean;\n  group?: string;\n}\n\nexport interface OsDropdownGroup {\n  name: string;\n  options: OsDropdownOption[];\n}\n\n@Component({\n  selector: 'os-dropdown',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatDividerModule,\n    ScrollingModule,\n    OsIconComponent,\n    OsInputComponent,\n  ],\n  template: `\n    <div\n      [class]=\"containerClass()\"\n      [attr.data-variant]=\"variant()\"\n      [attr.data-size]=\"size()\"\n      role=\"combobox\"\n      [attr.aria-expanded]=\"isOpen()\"\n      [attr.aria-haspopup]=\"'listbox'\"\n      [attr.aria-controls]=\"menuId()\"\n      [attr.aria-label]=\"ariaLabel() || 'Dropdown menu'\"\n    >\n      <button\n        mat-button\n        #trigger\n        [matMenuTriggerFor]=\"menu\"\n        [disabled]=\"disabled()\"\n        [class]=\"triggerClass()\"\n        [attr.aria-label]=\"ariaLabel() || selectedLabel()\"\n        [attr.aria-expanded]=\"isOpen()\"\n        [attr.aria-haspopup]=\"'listbox'\"\n        [attr.aria-controls]=\"menuId()\"\n        (menuOpened)=\"handleMenuOpened()\"\n        (menuClosed)=\"handleMenuClosed()\"\n        (click)=\"handleTriggerClick()\"\n        (keydown)=\"handleTriggerKeydown($event)\"\n      >\n        @if (icon()) {\n        <os-icon [name]=\"icon()\" [size]=\"getIconSize()\" [variant]=\"getIconVariant()\" />\n        }\n        <span [class]=\"textClass()\">\n          {{ selectedLabel() }}\n        </span>\n        @if (showChevron()) {\n        <os-icon\n          [name]=\"isOpen() ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\"\n          [size]=\"getIconSize()\"\n          [variant]=\"getIconVariant()\"\n          aria-hidden=\"true\"\n        />\n        }\n      </button>\n\n      <mat-menu\n        #menu=\"matMenu\"\n        [class]=\"menuClass()\"\n        [xPosition]=\"xPosition()\"\n        [yPosition]=\"yPosition()\"\n        [attr.id]=\"menuId()\"\n        role=\"listbox\"\n        [attr.aria-label]=\"ariaLabel() || 'Options'\"\n      >\n        @if (searchable() && filteredOptions().length > searchThreshold()) {\n        <div class=\"os-dropdown__search\" (click)=\"$event.stopPropagation()\">\n          <os-input\n            #searchInput\n            [value]=\"searchQuery()\"\n            [placeholder]=\"searchPlaceholder()\"\n            [prefixIcon]=\"'search'\"\n            [size]=\"size()\"\n            [ariaLabel]=\"'Search options'\"\n            (valueChange)=\"handleSearchChange($event)\"\n            (keydown)=\"handleSearchKeydown($event)\"\n          />\n        </div>\n        <mat-divider></mat-divider>\n        } @if (placeholder() && !searchQuery()) {\n        <button\n          mat-menu-item\n          [disabled]=\"true\"\n          [class]=\"placeholderClass()\"\n          role=\"menuitem\"\n          [attr.aria-selected]=\"false\"\n        >\n          {{ placeholder() }}\n        </button>\n        @if (filteredOptions().length > 0) {\n        <mat-divider></mat-divider>\n        } } @if (useVirtualScroll() && filteredOptions().length > virtualScrollThreshold()) {\n        <cdk-virtual-scroll-viewport\n          [itemSize]=\"getItemHeight()\"\n          [class]=\"virtualScrollClass()\"\n          [attr.aria-label]=\"'Options list'\"\n        >\n          @for (item of virtualScrollItems(); track item.value; let idx = $index) { @if\n          (item.divider) {\n          <mat-divider></mat-divider>\n          } @else if (item.isGroupHeader) {\n          <div [class]=\"groupHeaderClass()\" role=\"group\" [attr.aria-label]=\"item.label\">\n            {{ item.label }}\n          </div>\n          } @else {\n          <button\n            mat-menu-item\n            [disabled]=\"item.disabled\"\n            [class]=\"optionClass(item)\"\n            [attr.aria-label]=\"item.label\"\n            [attr.aria-selected]=\"item.value === selectedValue()\"\n            [attr.data-index]=\"idx\"\n            role=\"menuitem\"\n            (click)=\"handleOptionClick(item)\"\n            (keydown)=\"handleOptionKeydown($event, item)\"\n          >\n            @if (item.icon) {\n            <os-icon\n              [name]=\"item.icon\"\n              [size]=\"getIconSize()\"\n              [variant]=\"getIconVariant()\"\n              aria-hidden=\"true\"\n            />\n            }\n            <span [class]=\"optionTextClass()\">{{ item.label }}</span>\n            @if (item.value === selectedValue()) {\n            <os-icon name=\"check\" [size]=\"getIconSize()\" [variant]=\"'primary'\" aria-hidden=\"true\" />\n            }\n          </button>\n          } }\n        </cdk-virtual-scroll-viewport>\n        } @else { @for (item of flattenedOptions(); track item.value; let idx = $index) { @if\n        (item.divider) {\n        <mat-divider></mat-divider>\n        } @else if (item.isGroupHeader) {\n        <div [class]=\"groupHeaderClass()\" role=\"group\" [attr.aria-label]=\"item.label\">\n          {{ item.label }}\n        </div>\n        } @else {\n        <button\n          mat-menu-item\n          [disabled]=\"item.disabled\"\n          [class]=\"optionClass(item)\"\n          [attr.aria-label]=\"item.label\"\n          [attr.aria-selected]=\"item.value === selectedValue()\"\n          [attr.data-index]=\"idx\"\n          role=\"menuitem\"\n          (click)=\"handleOptionClick(item)\"\n          (keydown)=\"handleOptionKeydown($event, item)\"\n        >\n          @if (item.icon) {\n          <os-icon\n            [name]=\"item.icon\"\n            [size]=\"getIconSize()\"\n            [variant]=\"getIconVariant()\"\n            aria-hidden=\"true\"\n          />\n          }\n          <span [class]=\"optionTextClass()\">{{ item.label }}</span>\n          @if (item.value === selectedValue()) {\n          <os-icon name=\"check\" [size]=\"getIconSize()\" [variant]=\"'primary'\" aria-hidden=\"true\" />\n          }\n        </button>\n        } } } @if (filteredOptions().length === 0 && searchQuery()) {\n        <div [class]=\"emptyStateClass()\" role=\"status\" aria-live=\"polite\">\n          {{ noResultsText() }}\n        </div>\n        }\n      </mat-menu>\n    </div>\n  `,\n  styleUrl: './os-dropdown.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-dropdown-host',\n  },\n})\nexport class OsDropdownComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  options = input<OsDropdownOption[]>([]);\n  groups = input<OsDropdownGroup[]>([]);\n  placeholder = input<string>('');\n  selectedValue = input<string | number | boolean | null>(null);\n  variant = input<OsDropdownVariant>('default');\n  size = input<OsDropdownSize>('medium');\n  disabled = input(false);\n  icon = input<string>('');\n  showChevron = input(true);\n  alignment = input<OsDropdownAlignment>('start');\n  ariaLabel = input<string>('');\n  searchable = input(false);\n  searchPlaceholder = input('Search...');\n  searchThreshold = input(5);\n  useVirtualScroll = input(false);\n  virtualScrollThreshold = input(20);\n  noResultsText = input('No results found');\n\n  valueChange = output<string | number | boolean>();\n  optionSelect = output<OsDropdownOption>();\n  menuOpen = output<void>();\n  menuClose = output<void>();\n  searchChange = output<string>();\n\n  @ViewChild('menu') menu!: MatMenu;\n  @ViewChild('trigger', { read: ElementRef }) triggerElement!: ElementRef;\n  @ViewChild('searchInput', { read: ElementRef }) searchInputElement!: ElementRef;\n\n  private _isOpen = signal(false);\n  private _searchQuery = signal('');\n  private _focusedOptionIndex = signal(-1);\n  private _isMobile = signal(false);\n\n  menuId = computed(() => `os-dropdown-menu-${Math.random().toString(36).substr(2, 9)}`);\n  isOpen = computed(() => this._isOpen());\n  searchQuery = computed(() => this._searchQuery());\n  focusedOptionIndex = computed(() => this._focusedOptionIndex());\n  isMobile = computed(() => this._isMobile());\n\n  constructor() {\n    this.breakpointObserver.observe([Breakpoints.HandsetPortrait]).subscribe((result) => {\n      this._isMobile.set(result.matches);\n    });\n  }\n\n  selectedLabel = computed(() => {\n    const allOptions = this.getAllOptions();\n    const selected = allOptions.find((option) => option.value === this.selectedValue());\n    return selected ? selected.label : this.placeholder();\n  });\n\n  flattenedOptions = computed(() => {\n    const result: Array<OsDropdownOption & { isGroupHeader?: boolean }> = [];\n    const groupsList = this.groups();\n    const optionsList = this.options();\n\n    if (groupsList.length > 0) {\n      groupsList.forEach((group) => {\n        if (group.options.length > 0) {\n          result.push({ value: '', label: group.name, isGroupHeader: true, disabled: true });\n          result.push(...group.options);\n        }\n      });\n    } else {\n      result.push(...optionsList);\n    }\n\n    return result;\n  });\n\n  filteredOptions = computed(() => {\n    const query = this._searchQuery().toLowerCase().trim();\n    if (!query) {\n      return this.flattenedOptions();\n    }\n\n    return this.flattenedOptions().filter((option) => {\n      if (option.isGroupHeader || option.divider) {\n        return false;\n      }\n      return option.label.toLowerCase().includes(query);\n    });\n  });\n\n  virtualScrollItems = computed(() => {\n    return this.filteredOptions();\n  });\n\n  getIconSize = () => {\n    const sizeMap: Record<OsDropdownSize, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getIconVariant = () => {\n    const variantMap: Record<OsDropdownVariant, 'default' | 'primary' | 'secondary' | 'info'> = {\n      default: 'default',\n      primary: 'primary',\n      secondary: 'secondary',\n      accent: 'info',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getItemHeight = () => {\n    const heightMap: Record<OsDropdownSize, number> = {\n      small: 32,\n      medium: 40,\n      large: 48,\n    };\n    return heightMap[this.size()];\n  };\n\n  containerClass = computed(() => {\n    const classes = ['os-dropdown'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-dropdown--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown--${this.size()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-dropdown--disabled');\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-dropdown--mobile');\n    }\n\n    return classes.join(' ');\n  });\n\n  triggerClass = computed(() => {\n    const classes = ['os-dropdown__trigger'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-dropdown__trigger--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__trigger--${this.size()}`);\n    }\n\n    if (this.isOpen()) {\n      classes.push('os-dropdown__trigger--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  textClass = computed(() => {\n    const classes = ['os-dropdown__text'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__text--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  menuClass = computed(() => {\n    const classes = ['os-dropdown__menu'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__menu--${this.size()}`);\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-dropdown__menu--mobile');\n    }\n\n    return classes.join(' ');\n  });\n\n  placeholderClass = computed(() => {\n    const classes = ['os-dropdown__placeholder'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__placeholder--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  virtualScrollClass = computed(() => {\n    const classes = ['os-dropdown__virtual-scroll'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__virtual-scroll--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  groupHeaderClass = computed(() => {\n    const classes = ['os-dropdown__group-header'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__group-header--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  emptyStateClass = computed(() => {\n    const classes = ['os-dropdown__empty-state'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__empty-state--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  optionClass = (option: OsDropdownOption) => {\n    const classes = ['os-dropdown__option'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__option--${this.size()}`);\n    }\n\n    if (option.disabled) {\n      classes.push('os-dropdown__option--disabled');\n    }\n\n    if (option.value === this.selectedValue()) {\n      classes.push('os-dropdown__option--selected');\n    }\n\n    return classes.join(' ');\n  };\n\n  optionTextClass = computed(() => {\n    const classes = ['os-dropdown__option-text'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__option-text--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  xPosition = computed(() => {\n    switch (this.alignment()) {\n      case 'start':\n        return 'before';\n      case 'end':\n        return 'after';\n      case 'center':\n      default:\n        return 'after';\n    }\n  });\n\n  yPosition = computed(() => 'below' as const);\n\n  handleTriggerClick(): void {\n    if (!this.disabled()) {\n      this._isOpen.set(true);\n    }\n  }\n\n  handleMenuOpened(): void {\n    this._isOpen.set(true);\n    this._searchQuery.set('');\n    this._focusedOptionIndex.set(-1);\n    this.menuOpen.emit();\n\n    if (this.searchable() && this.filteredOptions().length > this.searchThreshold()) {\n      setTimeout(() => {\n        this.searchInputElement?.nativeElement?.querySelector('input')?.focus();\n      }, 100);\n    }\n  }\n\n  handleMenuClosed(): void {\n    this._isOpen.set(false);\n    this._searchQuery.set('');\n    this._focusedOptionIndex.set(-1);\n    this.menuClose.emit();\n  }\n\n  handleOptionClick(option: OsDropdownOption): void {\n    if (!option.disabled) {\n      this.valueChange.emit(option.value);\n      this.optionSelect.emit(option);\n      this._isOpen.set(false);\n    }\n  }\n\n  handleSearchChange(value: string): void {\n    this._searchQuery.set(value);\n    this.searchChange.emit(value);\n  }\n\n  handleTriggerKeydown(event: KeyboardEvent): void {\n    if (this.disabled()) {\n      return;\n    }\n\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'ArrowUp':\n        event.preventDefault();\n        if (!this.isOpen()) {\n          this._isOpen.set(true);\n        }\n        break;\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this._isOpen.set(!this.isOpen());\n        break;\n      case 'Escape':\n        event.preventDefault();\n        this._isOpen.set(false);\n        break;\n    }\n  }\n\n  handleOptionKeydown(event: KeyboardEvent, option: OsDropdownOption): void {\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this.handleOptionClick(option);\n        break;\n      case 'Escape':\n        event.preventDefault();\n        this._isOpen.set(false);\n        this.triggerElement?.nativeElement?.focus();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextOption();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPreviousOption();\n        break;\n    }\n  }\n\n  handleSearchKeydown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'Escape':\n        event.preventDefault();\n        this._searchQuery.set('');\n        this._isOpen.set(false);\n        this.triggerElement?.nativeElement?.focus();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextOption();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPreviousOption();\n        break;\n    }\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleDocumentKeydown(event: KeyboardEvent): void {\n    if (!this.isOpen()) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      this._isOpen.set(false);\n      this.triggerElement?.nativeElement?.focus();\n    }\n  }\n\n  private focusNextOption(): void {\n    const options = this.filteredOptions().filter((opt) => !opt.disabled && !opt.isGroupHeader);\n    if (options.length === 0) {\n      return;\n    }\n\n    const currentIndex = this._focusedOptionIndex();\n    const nextIndex = (currentIndex + 1) % options.length;\n    this._focusedOptionIndex.set(nextIndex);\n  }\n\n  private focusPreviousOption(): void {\n    const options = this.filteredOptions().filter((opt) => !opt.disabled && !opt.isGroupHeader);\n    if (options.length === 0) {\n      return;\n    }\n\n    const currentIndex = this._focusedOptionIndex();\n    const previousIndex = currentIndex <= 0 ? options.length - 1 : currentIndex - 1;\n    this._focusedOptionIndex.set(previousIndex);\n  }\n\n  private getAllOptions(): OsDropdownOption[] {\n    const groupsList = this.groups();\n    const optionsList = this.options();\n\n    if (groupsList.length > 0) {\n      return groupsList.flatMap((group) => group.options);\n    }\n\n    return optionsList;\n  }\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDropdownOption[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsDropdownOption",
            "id": "interface-OsDropdownOption-fb544af98b860ad0b0746e70b0210ff5521011e406bd64750895eb070e2ef5d4338b2480fdf1c8e910d52cf7f040240d289911276e689ec7e96885e6f15034ef",
            "file": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  ElementRef,\n  HostListener,\n  inject,\n  input,\n  output,\n  signal,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenu, MatMenuModule } from '@angular/material/menu';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsInputComponent } from '../../atoms/os-input/os-input.component';\n\nexport type OsDropdownSize = 'small' | 'medium' | 'large';\nexport type OsDropdownVariant = 'default' | 'primary' | 'secondary' | 'accent';\nexport type OsDropdownAlignment = 'start' | 'center' | 'end';\n\nexport interface OsDropdownOption {\n  value: string | number | boolean;\n  label: string;\n  disabled?: boolean;\n  icon?: string;\n  divider?: boolean;\n  group?: string;\n}\n\nexport interface OsDropdownGroup {\n  name: string;\n  options: OsDropdownOption[];\n}\n\n@Component({\n  selector: 'os-dropdown',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatDividerModule,\n    ScrollingModule,\n    OsIconComponent,\n    OsInputComponent,\n  ],\n  template: `\n    <div\n      [class]=\"containerClass()\"\n      [attr.data-variant]=\"variant()\"\n      [attr.data-size]=\"size()\"\n      role=\"combobox\"\n      [attr.aria-expanded]=\"isOpen()\"\n      [attr.aria-haspopup]=\"'listbox'\"\n      [attr.aria-controls]=\"menuId()\"\n      [attr.aria-label]=\"ariaLabel() || 'Dropdown menu'\"\n    >\n      <button\n        mat-button\n        #trigger\n        [matMenuTriggerFor]=\"menu\"\n        [disabled]=\"disabled()\"\n        [class]=\"triggerClass()\"\n        [attr.aria-label]=\"ariaLabel() || selectedLabel()\"\n        [attr.aria-expanded]=\"isOpen()\"\n        [attr.aria-haspopup]=\"'listbox'\"\n        [attr.aria-controls]=\"menuId()\"\n        (menuOpened)=\"handleMenuOpened()\"\n        (menuClosed)=\"handleMenuClosed()\"\n        (click)=\"handleTriggerClick()\"\n        (keydown)=\"handleTriggerKeydown($event)\"\n      >\n        @if (icon()) {\n        <os-icon [name]=\"icon()\" [size]=\"getIconSize()\" [variant]=\"getIconVariant()\" />\n        }\n        <span [class]=\"textClass()\">\n          {{ selectedLabel() }}\n        </span>\n        @if (showChevron()) {\n        <os-icon\n          [name]=\"isOpen() ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\"\n          [size]=\"getIconSize()\"\n          [variant]=\"getIconVariant()\"\n          aria-hidden=\"true\"\n        />\n        }\n      </button>\n\n      <mat-menu\n        #menu=\"matMenu\"\n        [class]=\"menuClass()\"\n        [xPosition]=\"xPosition()\"\n        [yPosition]=\"yPosition()\"\n        [attr.id]=\"menuId()\"\n        role=\"listbox\"\n        [attr.aria-label]=\"ariaLabel() || 'Options'\"\n      >\n        @if (searchable() && filteredOptions().length > searchThreshold()) {\n        <div class=\"os-dropdown__search\" (click)=\"$event.stopPropagation()\">\n          <os-input\n            #searchInput\n            [value]=\"searchQuery()\"\n            [placeholder]=\"searchPlaceholder()\"\n            [prefixIcon]=\"'search'\"\n            [size]=\"size()\"\n            [ariaLabel]=\"'Search options'\"\n            (valueChange)=\"handleSearchChange($event)\"\n            (keydown)=\"handleSearchKeydown($event)\"\n          />\n        </div>\n        <mat-divider></mat-divider>\n        } @if (placeholder() && !searchQuery()) {\n        <button\n          mat-menu-item\n          [disabled]=\"true\"\n          [class]=\"placeholderClass()\"\n          role=\"menuitem\"\n          [attr.aria-selected]=\"false\"\n        >\n          {{ placeholder() }}\n        </button>\n        @if (filteredOptions().length > 0) {\n        <mat-divider></mat-divider>\n        } } @if (useVirtualScroll() && filteredOptions().length > virtualScrollThreshold()) {\n        <cdk-virtual-scroll-viewport\n          [itemSize]=\"getItemHeight()\"\n          [class]=\"virtualScrollClass()\"\n          [attr.aria-label]=\"'Options list'\"\n        >\n          @for (item of virtualScrollItems(); track item.value; let idx = $index) { @if\n          (item.divider) {\n          <mat-divider></mat-divider>\n          } @else if (item.isGroupHeader) {\n          <div [class]=\"groupHeaderClass()\" role=\"group\" [attr.aria-label]=\"item.label\">\n            {{ item.label }}\n          </div>\n          } @else {\n          <button\n            mat-menu-item\n            [disabled]=\"item.disabled\"\n            [class]=\"optionClass(item)\"\n            [attr.aria-label]=\"item.label\"\n            [attr.aria-selected]=\"item.value === selectedValue()\"\n            [attr.data-index]=\"idx\"\n            role=\"menuitem\"\n            (click)=\"handleOptionClick(item)\"\n            (keydown)=\"handleOptionKeydown($event, item)\"\n          >\n            @if (item.icon) {\n            <os-icon\n              [name]=\"item.icon\"\n              [size]=\"getIconSize()\"\n              [variant]=\"getIconVariant()\"\n              aria-hidden=\"true\"\n            />\n            }\n            <span [class]=\"optionTextClass()\">{{ item.label }}</span>\n            @if (item.value === selectedValue()) {\n            <os-icon name=\"check\" [size]=\"getIconSize()\" [variant]=\"'primary'\" aria-hidden=\"true\" />\n            }\n          </button>\n          } }\n        </cdk-virtual-scroll-viewport>\n        } @else { @for (item of flattenedOptions(); track item.value; let idx = $index) { @if\n        (item.divider) {\n        <mat-divider></mat-divider>\n        } @else if (item.isGroupHeader) {\n        <div [class]=\"groupHeaderClass()\" role=\"group\" [attr.aria-label]=\"item.label\">\n          {{ item.label }}\n        </div>\n        } @else {\n        <button\n          mat-menu-item\n          [disabled]=\"item.disabled\"\n          [class]=\"optionClass(item)\"\n          [attr.aria-label]=\"item.label\"\n          [attr.aria-selected]=\"item.value === selectedValue()\"\n          [attr.data-index]=\"idx\"\n          role=\"menuitem\"\n          (click)=\"handleOptionClick(item)\"\n          (keydown)=\"handleOptionKeydown($event, item)\"\n        >\n          @if (item.icon) {\n          <os-icon\n            [name]=\"item.icon\"\n            [size]=\"getIconSize()\"\n            [variant]=\"getIconVariant()\"\n            aria-hidden=\"true\"\n          />\n          }\n          <span [class]=\"optionTextClass()\">{{ item.label }}</span>\n          @if (item.value === selectedValue()) {\n          <os-icon name=\"check\" [size]=\"getIconSize()\" [variant]=\"'primary'\" aria-hidden=\"true\" />\n          }\n        </button>\n        } } } @if (filteredOptions().length === 0 && searchQuery()) {\n        <div [class]=\"emptyStateClass()\" role=\"status\" aria-live=\"polite\">\n          {{ noResultsText() }}\n        </div>\n        }\n      </mat-menu>\n    </div>\n  `,\n  styleUrl: './os-dropdown.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-dropdown-host',\n  },\n})\nexport class OsDropdownComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  options = input<OsDropdownOption[]>([]);\n  groups = input<OsDropdownGroup[]>([]);\n  placeholder = input<string>('');\n  selectedValue = input<string | number | boolean | null>(null);\n  variant = input<OsDropdownVariant>('default');\n  size = input<OsDropdownSize>('medium');\n  disabled = input(false);\n  icon = input<string>('');\n  showChevron = input(true);\n  alignment = input<OsDropdownAlignment>('start');\n  ariaLabel = input<string>('');\n  searchable = input(false);\n  searchPlaceholder = input('Search...');\n  searchThreshold = input(5);\n  useVirtualScroll = input(false);\n  virtualScrollThreshold = input(20);\n  noResultsText = input('No results found');\n\n  valueChange = output<string | number | boolean>();\n  optionSelect = output<OsDropdownOption>();\n  menuOpen = output<void>();\n  menuClose = output<void>();\n  searchChange = output<string>();\n\n  @ViewChild('menu') menu!: MatMenu;\n  @ViewChild('trigger', { read: ElementRef }) triggerElement!: ElementRef;\n  @ViewChild('searchInput', { read: ElementRef }) searchInputElement!: ElementRef;\n\n  private _isOpen = signal(false);\n  private _searchQuery = signal('');\n  private _focusedOptionIndex = signal(-1);\n  private _isMobile = signal(false);\n\n  menuId = computed(() => `os-dropdown-menu-${Math.random().toString(36).substr(2, 9)}`);\n  isOpen = computed(() => this._isOpen());\n  searchQuery = computed(() => this._searchQuery());\n  focusedOptionIndex = computed(() => this._focusedOptionIndex());\n  isMobile = computed(() => this._isMobile());\n\n  constructor() {\n    this.breakpointObserver.observe([Breakpoints.HandsetPortrait]).subscribe((result) => {\n      this._isMobile.set(result.matches);\n    });\n  }\n\n  selectedLabel = computed(() => {\n    const allOptions = this.getAllOptions();\n    const selected = allOptions.find((option) => option.value === this.selectedValue());\n    return selected ? selected.label : this.placeholder();\n  });\n\n  flattenedOptions = computed(() => {\n    const result: Array<OsDropdownOption & { isGroupHeader?: boolean }> = [];\n    const groupsList = this.groups();\n    const optionsList = this.options();\n\n    if (groupsList.length > 0) {\n      groupsList.forEach((group) => {\n        if (group.options.length > 0) {\n          result.push({ value: '', label: group.name, isGroupHeader: true, disabled: true });\n          result.push(...group.options);\n        }\n      });\n    } else {\n      result.push(...optionsList);\n    }\n\n    return result;\n  });\n\n  filteredOptions = computed(() => {\n    const query = this._searchQuery().toLowerCase().trim();\n    if (!query) {\n      return this.flattenedOptions();\n    }\n\n    return this.flattenedOptions().filter((option) => {\n      if (option.isGroupHeader || option.divider) {\n        return false;\n      }\n      return option.label.toLowerCase().includes(query);\n    });\n  });\n\n  virtualScrollItems = computed(() => {\n    return this.filteredOptions();\n  });\n\n  getIconSize = () => {\n    const sizeMap: Record<OsDropdownSize, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getIconVariant = () => {\n    const variantMap: Record<OsDropdownVariant, 'default' | 'primary' | 'secondary' | 'info'> = {\n      default: 'default',\n      primary: 'primary',\n      secondary: 'secondary',\n      accent: 'info',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getItemHeight = () => {\n    const heightMap: Record<OsDropdownSize, number> = {\n      small: 32,\n      medium: 40,\n      large: 48,\n    };\n    return heightMap[this.size()];\n  };\n\n  containerClass = computed(() => {\n    const classes = ['os-dropdown'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-dropdown--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown--${this.size()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-dropdown--disabled');\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-dropdown--mobile');\n    }\n\n    return classes.join(' ');\n  });\n\n  triggerClass = computed(() => {\n    const classes = ['os-dropdown__trigger'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-dropdown__trigger--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__trigger--${this.size()}`);\n    }\n\n    if (this.isOpen()) {\n      classes.push('os-dropdown__trigger--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  textClass = computed(() => {\n    const classes = ['os-dropdown__text'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__text--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  menuClass = computed(() => {\n    const classes = ['os-dropdown__menu'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__menu--${this.size()}`);\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-dropdown__menu--mobile');\n    }\n\n    return classes.join(' ');\n  });\n\n  placeholderClass = computed(() => {\n    const classes = ['os-dropdown__placeholder'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__placeholder--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  virtualScrollClass = computed(() => {\n    const classes = ['os-dropdown__virtual-scroll'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__virtual-scroll--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  groupHeaderClass = computed(() => {\n    const classes = ['os-dropdown__group-header'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__group-header--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  emptyStateClass = computed(() => {\n    const classes = ['os-dropdown__empty-state'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__empty-state--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  optionClass = (option: OsDropdownOption) => {\n    const classes = ['os-dropdown__option'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__option--${this.size()}`);\n    }\n\n    if (option.disabled) {\n      classes.push('os-dropdown__option--disabled');\n    }\n\n    if (option.value === this.selectedValue()) {\n      classes.push('os-dropdown__option--selected');\n    }\n\n    return classes.join(' ');\n  };\n\n  optionTextClass = computed(() => {\n    const classes = ['os-dropdown__option-text'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__option-text--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  xPosition = computed(() => {\n    switch (this.alignment()) {\n      case 'start':\n        return 'before';\n      case 'end':\n        return 'after';\n      case 'center':\n      default:\n        return 'after';\n    }\n  });\n\n  yPosition = computed(() => 'below' as const);\n\n  handleTriggerClick(): void {\n    if (!this.disabled()) {\n      this._isOpen.set(true);\n    }\n  }\n\n  handleMenuOpened(): void {\n    this._isOpen.set(true);\n    this._searchQuery.set('');\n    this._focusedOptionIndex.set(-1);\n    this.menuOpen.emit();\n\n    if (this.searchable() && this.filteredOptions().length > this.searchThreshold()) {\n      setTimeout(() => {\n        this.searchInputElement?.nativeElement?.querySelector('input')?.focus();\n      }, 100);\n    }\n  }\n\n  handleMenuClosed(): void {\n    this._isOpen.set(false);\n    this._searchQuery.set('');\n    this._focusedOptionIndex.set(-1);\n    this.menuClose.emit();\n  }\n\n  handleOptionClick(option: OsDropdownOption): void {\n    if (!option.disabled) {\n      this.valueChange.emit(option.value);\n      this.optionSelect.emit(option);\n      this._isOpen.set(false);\n    }\n  }\n\n  handleSearchChange(value: string): void {\n    this._searchQuery.set(value);\n    this.searchChange.emit(value);\n  }\n\n  handleTriggerKeydown(event: KeyboardEvent): void {\n    if (this.disabled()) {\n      return;\n    }\n\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'ArrowUp':\n        event.preventDefault();\n        if (!this.isOpen()) {\n          this._isOpen.set(true);\n        }\n        break;\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this._isOpen.set(!this.isOpen());\n        break;\n      case 'Escape':\n        event.preventDefault();\n        this._isOpen.set(false);\n        break;\n    }\n  }\n\n  handleOptionKeydown(event: KeyboardEvent, option: OsDropdownOption): void {\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this.handleOptionClick(option);\n        break;\n      case 'Escape':\n        event.preventDefault();\n        this._isOpen.set(false);\n        this.triggerElement?.nativeElement?.focus();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextOption();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPreviousOption();\n        break;\n    }\n  }\n\n  handleSearchKeydown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'Escape':\n        event.preventDefault();\n        this._searchQuery.set('');\n        this._isOpen.set(false);\n        this.triggerElement?.nativeElement?.focus();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextOption();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPreviousOption();\n        break;\n    }\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleDocumentKeydown(event: KeyboardEvent): void {\n    if (!this.isOpen()) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      this._isOpen.set(false);\n      this.triggerElement?.nativeElement?.focus();\n    }\n  }\n\n  private focusNextOption(): void {\n    const options = this.filteredOptions().filter((opt) => !opt.disabled && !opt.isGroupHeader);\n    if (options.length === 0) {\n      return;\n    }\n\n    const currentIndex = this._focusedOptionIndex();\n    const nextIndex = (currentIndex + 1) % options.length;\n    this._focusedOptionIndex.set(nextIndex);\n  }\n\n  private focusPreviousOption(): void {\n    const options = this.filteredOptions().filter((opt) => !opt.disabled && !opt.isGroupHeader);\n    if (options.length === 0) {\n      return;\n    }\n\n    const currentIndex = this._focusedOptionIndex();\n    const previousIndex = currentIndex <= 0 ? options.length - 1 : currentIndex - 1;\n    this._focusedOptionIndex.set(previousIndex);\n  }\n\n  private getAllOptions(): OsDropdownOption[] {\n    const groupsList = this.groups();\n    const optionsList = this.options();\n\n    if (groupsList.length > 0) {\n      return groupsList.flatMap((group) => group.options);\n    }\n\n    return optionsList;\n  }\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "divider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsFilterOption",
            "id": "interface-OsFilterOption-039e660c7bce7b6315873463da7b4f88978a8332847728ab05e8ab670916d4611a9cca65d816b011274baff63325f34283e6057308c4070bdd96e45089194f32",
            "file": "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  effect,\n  signal,\n  ChangeDetectionStrategy,\n  inject,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport type OsFilterBarVariant = 'default' | 'compact' | 'expanded';\nexport type OsFilterBarSize = 'small' | 'medium' | 'large';\n\nexport interface OsFilterOption {\n  key: string;\n  label: string;\n  value: string | number | Date | null;\n  type: 'text' | 'select' | 'date' | 'number';\n  options?: { value: string | number; label: string }[];\n}\n\n/**\n * OsFilterBarComponent\n *\n * Barra de filtros responsiva com suporte a persistência em localStorage,\n * acessibilidade WCAG 2.1 AA e touch targets >= 44px para mobile.\n *\n * @example\n * ```html\n * <os-filter-bar\n *   [persistKey]=\"'budgets-filters'\"\n *   [hasActiveFilters]=\"hasFilters\"\n *   (clear)=\"onClearFilters()\"\n *   (apply)=\"onApplyFilters()\">\n *   <!-- Filter inputs here -->\n * </os-filter-bar>\n * ```\n */\n@Component({\n  selector: 'os-filter-bar',\n  standalone: true,\n  imports: [CommonModule, OsButtonComponent],\n  template: `\n    <div\n      class=\"os-filter-bar\"\n      [class]=\"filterBarClasses()\"\n      role=\"search\"\n      [attr.aria-label]=\"ariaLabel()\"\n      [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n    >\n      <div class=\"os-filter-bar__content\">\n        <ng-content></ng-content>\n      </div>\n\n      @if (showActions()) {\n      <div class=\"os-filter-bar__actions\">\n        @if (showClearButton()) {\n        <os-button\n          variant=\"tertiary\"\n          [size]=\"getButtonSize()\"\n          icon=\"clear\"\n          [disabled]=\"!hasActiveFilters()\"\n          [ariaLabel]=\"clearButtonAriaLabel()\"\n          (buttonClick)=\"onClear()\"\n        >\n          {{ clearButtonText() }}\n        </os-button>\n        } @if (showApplyButton()) {\n        <os-button\n          variant=\"primary\"\n          [size]=\"getButtonSize()\"\n          icon=\"check\"\n          [disabled]=\"!hasActiveFilters()\"\n          [ariaLabel]=\"applyButtonAriaLabel()\"\n          (buttonClick)=\"onApply()\"\n        >\n          {{ applyButtonText() }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-filter-bar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-filter-bar-host',\n    '[attr.data-variant]': 'variant()',\n    '[attr.data-size]': 'size()',\n  },\n})\nexport class OsFilterBarComponent {\n  // --- INPUTS ---\n  variant = input<OsFilterBarVariant>('default');\n  size = input<OsFilterBarSize>('medium');\n  showActions = input<boolean>(true);\n  showClearButton = input<boolean>(true);\n  showApplyButton = input<boolean>(true);\n  clearButtonText = input<string>('Limpar');\n  applyButtonText = input<string>('Aplicar');\n  hasActiveFilters = input<boolean>(false);\n\n  // Persistência em localStorage\n  persistKey = input<string | null>(null);\n  persistFilters = input<boolean>(false);\n\n  // Acessibilidade\n  ariaLabel = input<string>('Barra de filtros');\n  ariaDescribedBy = input<string>('');\n  clearButtonAriaLabel = input<string>('Limpar todos os filtros');\n  applyButtonAriaLabel = input<string>('Aplicar filtros');\n\n  // --- OUTPUTS ---\n  clear = output<void>();\n  apply = output<void>();\n  filtersRestored = output<Record<string, unknown>>();\n\n  // --- SIGNALS INTERNOS ---\n  private isMobile = signal<boolean>(false);\n\n  // --- COMPUTED PROPERTIES ---\n  filterBarClasses = computed(() => {\n    const classes = ['os-filter-bar'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-filter-bar--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-filter-bar--${this.size()}`);\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-filter-bar--mobile');\n    }\n\n    return classes.join(' ');\n  });\n\n  // --- CONSTRUCTOR ---\n  constructor() {\n    // Effect para detectar mobile\n    effect(\n      () => {\n        if (typeof window !== 'undefined') {\n          const checkMobile = () => {\n            this.isMobile.set(window.innerWidth < 768);\n          };\n          checkMobile();\n          window.addEventListener('resize', checkMobile);\n        }\n      },\n      { allowSignalWrites: true }\n    );\n\n    // Effect para restaurar filtros persistidos\n    effect(\n      () => {\n        if (this.persistFilters() && this.persistKey()) {\n          this.restoreFilters();\n        }\n      },\n      { allowSignalWrites: true }\n    );\n  }\n\n  // --- MÉTODOS PÚBLICOS ---\n\n  /**\n   * Retorna o tamanho do botão baseado no tamanho da filter bar\n   */\n  getButtonSize(): 'small' | 'medium' | 'large' {\n    const sizeMap: Record<OsFilterBarSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  /**\n   * Handler para evento de limpar filtros\n   */\n  onClear(): void {\n    if (this.persistFilters() && this.persistKey()) {\n      this.clearPersistedFilters();\n    }\n    this.clear.emit();\n  }\n\n  /**\n   * Handler para evento de aplicar filtros\n   */\n  onApply(): void {\n    this.apply.emit();\n  }\n\n  /**\n   * Persiste os filtros atuais no localStorage\n   */\n  saveFilters(filters: Record<string, unknown>): void {\n    if (!this.persistFilters() || !this.persistKey() || typeof window === 'undefined') {\n      return;\n    }\n\n    try {\n      const key = this.getStorageKey();\n      localStorage.setItem(key, JSON.stringify(filters));\n    } catch (error) {\n      console.warn('Falha ao persistir filtros:', error);\n    }\n  }\n\n  /**\n   * Restaura os filtros do localStorage\n   */\n  restoreFilters(): void {\n    if (!this.persistFilters() || !this.persistKey() || typeof window === 'undefined') {\n      return;\n    }\n\n    try {\n      const key = this.getStorageKey();\n      const stored = localStorage.getItem(key);\n\n      if (stored) {\n        const filters = JSON.parse(stored) as Record<string, unknown>;\n        this.filtersRestored.emit(filters);\n      }\n    } catch (error) {\n      console.warn('Falha ao restaurar filtros:', error);\n    }\n  }\n\n  /**\n   * Limpa os filtros persistidos do localStorage\n   */\n  clearPersistedFilters(): void {\n    if (!this.persistKey() || typeof window === 'undefined') {\n      return;\n    }\n\n    try {\n      const key = this.getStorageKey();\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.warn('Falha ao limpar filtros persistidos:', error);\n    }\n  }\n\n  // --- MÉTODOS PRIVADOS ---\n\n  /**\n   * Retorna a chave completa para o localStorage\n   */\n  private getStorageKey(): string {\n    return `os-filter-bar:${this.persistKey()}`;\n  }\n}\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"text\" | \"select\" | \"date\" | \"number\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsModalAction",
            "id": "interface-OsModalAction-432f9c4c7cfff9ae2913d7c90dc4e9bbfba1af54fd1eb80d8bac1e5ba4ef6f0c9bc0b763cc96c8adcb1ee8f450f370432eacc2c5518ec3699a44c15555d83d77",
            "file": "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  ChangeDetectionStrategy,\n  inject,\n  ElementRef,\n  HostListener,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\n\nexport type OsModalVariant = 'default' | 'confirmation' | 'form' | 'info';\nexport type OsModalSize = 'small' | 'medium' | 'large' | 'fullscreen';\n\nexport interface OsModalAction {\n  label: string;\n  variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  action: () => void;\n  disabled?: boolean;\n  loading?: boolean;\n}\n\n@Component({\n  selector: 'os-modal',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, OsButtonComponent, OsCardComponent],\n  template: `\n    <div\n      class=\"os-modal\"\n      [class]=\"modalClasses()\"\n      [attr.role]=\"'dialog'\"\n      [attr.aria-modal]=\"true\"\n      [attr.aria-labelledby]=\"titleId()\"\n      [attr.aria-describedby]=\"descriptionId()\"\n    >\n      <div\n        class=\"os-modal__backdrop\"\n        (click)=\"onBackdropClick()\"\n        (keydown.enter)=\"onBackdropClick()\"\n        tabindex=\"0\"\n        role=\"button\"\n        [attr.aria-label]=\"'Fechar modal clicando no fundo'\"\n      ></div>\n\n      <div class=\"os-modal__container\" [class]=\"containerClasses()\">\n        <os-card\n          [variant]=\"cardVariant()\"\n          [size]=\"cardSize()\"\n          [header]=\"showHeader()\"\n          [actions]=\"showActions()\"\n        >\n          @if (showHeader()) {\n          <div slot=\"header\" class=\"os-modal__header\">\n            @if (title()) {\n            <h2 [id]=\"titleId()\" class=\"os-modal__title\">{{ title() }}</h2>\n            } @if (subtitle()) {\n            <p [id]=\"descriptionId()\" class=\"os-modal__subtitle\">{{ subtitle() }}</p>\n            } @if (closable()) {\n            <button\n              class=\"os-modal__close\"\n              (click)=\"onClose()\"\n              [attr.aria-label]=\"'Fechar modal'\"\n              type=\"button\"\n            >\n              <span class=\"os-modal__close-icon\" aria-hidden=\"true\">×</span>\n            </button>\n            }\n          </div>\n          }\n\n          <div class=\"os-modal__content\" [class]=\"contentClasses()\">\n            <ng-content></ng-content>\n          </div>\n\n          @if (showActions()) {\n          <div slot=\"actions\" class=\"os-modal__actions\" [class]=\"actionsClasses()\">\n            @if (actions().length > 0) { @for (action of actions(); track action.label) {\n            <os-button\n              [variant]=\"action.variant\"\n              [size]=\"buttonSize()\"\n              [disabled]=\"action.disabled || false\"\n              [loading]=\"action.loading || false\"\n              (clicked)=\"action.action()\"\n            >\n              {{ action.label }}\n            </os-button>\n            } } @else { @if (showDefaultActions()) {\n            <os-button variant=\"secondary\" [size]=\"buttonSize()\" (clicked)=\"onClose()\">\n              {{ cancelText() }}\n            </os-button>\n            <os-button\n              variant=\"primary\"\n              [size]=\"buttonSize()\"\n              [disabled]=\"confirmDisabled()\"\n              [loading]=\"confirmLoading()\"\n              (clicked)=\"onConfirm()\"\n            >\n              {{ confirmText() }}\n            </os-button>\n            } }\n          </div>\n          }\n        </os-card>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./os-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-modal-host',\n  },\n})\nexport class OsModalComponent {\n  // Input signals\n  readonly title = input<string | null>(null);\n  readonly subtitle = input<string | null>(null);\n  readonly variant = input<OsModalVariant>('default');\n  readonly size = input<OsModalSize>('medium');\n  readonly closable = input<boolean>(true);\n  readonly closeOnBackdrop = input<boolean>(true);\n  readonly closeOnEscape = input<boolean>(true);\n  readonly actions = input<OsModalAction[]>([]);\n  readonly showDefaultActions = input<boolean>(false);\n  readonly confirmText = input<string>('Confirmar');\n  readonly cancelText = input<string>('Cancelar');\n  readonly confirmDisabled = input<boolean>(false);\n  readonly confirmLoading = input<boolean>(false);\n  readonly fullHeight = input<boolean>(false);\n  readonly centered = input<boolean>(true);\n\n  // Output signals\n  readonly closed = output<void>();\n  readonly confirmed = output<void>();\n  readonly backdropClicked = output<void>();\n\n  // Private properties\n  private readonly elementRef = inject(ElementRef);\n  private readonly dialogRef = inject(MatDialogRef<OsModalComponent>, { optional: true });\n\n  // Computed values\n  readonly titleId = computed(() => `modal-title-${Math.random().toString(36).substr(2, 9)}`);\n  readonly descriptionId = computed(\n    () => `modal-description-${Math.random().toString(36).substr(2, 9)}`\n  );\n\n  readonly showHeader = computed(() => {\n    return this.title() !== null || this.subtitle() !== null || this.closable();\n  });\n\n  readonly showActions = computed(() => {\n    return this.actions().length > 0 || this.showDefaultActions();\n  });\n\n  readonly cardVariant = computed(() => {\n    const variant = this.variant();\n    switch (variant) {\n      case 'confirmation':\n        return 'outlined';\n      case 'form':\n        return 'elevated';\n      case 'info':\n        return 'flat';\n      default:\n        return 'default';\n    }\n  });\n\n  readonly cardSize = computed(() => {\n    const size = this.size();\n    switch (size) {\n      case 'small':\n        return 'small';\n      case 'large':\n      case 'fullscreen':\n        return 'large';\n      default:\n        return 'medium';\n    }\n  });\n\n  readonly buttonSize = computed(() => {\n    const size = this.size();\n    switch (size) {\n      case 'small':\n        return 'small';\n      case 'large':\n      case 'fullscreen':\n        return 'large';\n      default:\n        return 'medium';\n    }\n  });\n\n  readonly modalClasses = computed(() => {\n    const classes = ['os-modal'];\n    classes.push(`os-modal--${this.variant()}`);\n    classes.push(`os-modal--${this.size()}`);\n\n    if (this.fullHeight()) {\n      classes.push('os-modal--full-height');\n    }\n\n    if (this.centered()) {\n      classes.push('os-modal--centered');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly containerClasses = computed(() => {\n    const classes = ['os-modal__container'];\n    classes.push(`os-modal__container--${this.size()}`);\n\n    if (this.centered()) {\n      classes.push('os-modal__container--centered');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly contentClasses = computed(() => {\n    const classes = ['os-modal__content'];\n\n    if (this.fullHeight()) {\n      classes.push('os-modal__content--full-height');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly actionsClasses = computed(() => {\n    const classes = ['os-modal__actions'];\n    const actionCount = this.actions().length || (this.showDefaultActions() ? 2 : 0);\n\n    if (actionCount > 2) {\n      classes.push('os-modal__actions--multiple');\n    } else {\n      classes.push('os-modal__actions--dual');\n    }\n\n    return classes.join(' ');\n  });\n\n  // Event handlers\n  onClose(): void {\n    this.closed.emit();\n    if (this.dialogRef) {\n      this.dialogRef.close();\n    }\n  }\n\n  onConfirm(): void {\n    this.confirmed.emit();\n  }\n\n  onBackdropClick(): void {\n    if (this.closeOnBackdrop()) {\n      this.backdropClicked.emit();\n      this.onClose();\n    }\n  }\n\n  @HostListener('document:keydown.escape', ['$event'])\n  onEscapeKey(event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    if (this.closeOnEscape()) {\n      keyboardEvent.preventDefault();\n      this.onClose();\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnterKey(event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    if (keyboardEvent.ctrlKey || keyboardEvent.metaKey) {\n      keyboardEvent.preventDefault();\n      this.onConfirm();\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"secondary\" | \"tertiary\" | \"danger\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsSearchSuggestion",
            "id": "interface-OsSearchSuggestion-75a4361ccabec4ef5e8b7f3afa1e3b2af73f3c8193061ef0eabb4e0de63c1336229565105b0f85d86399510487e9e90b898bf438447c52eabfc01b0d86f7a32e",
            "file": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  input,\n  output,\n  signal,\n  effect,\n  inject,\n} from '@angular/core';\nimport { debounceTime, distinctUntilChanged, Subject } from 'rxjs';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsInputComponent } from '../../atoms/os-input/os-input.component';\n\nexport type OsSearchBoxSize = 'small' | 'medium' | 'large';\nexport type OsSearchBoxVariant = 'default' | 'outlined' | 'filled';\nexport type OsSearchBoxRole = 'searchbox' | 'combobox' | 'textbox';\n\nexport interface OsSearchSuggestion {\n  id: string;\n  text: string;\n  category?: string;\n  highlightedText?: string;\n}\n\n@Component({\n  selector: 'os-search-box',\n  standalone: true,\n  imports: [CommonModule, OsInputComponent, OsButtonComponent],\n  template: `\n    <div\n      class=\"os-search-box\"\n      [class]=\"searchBoxClasses()\"\n      [attr.role]=\"role()\"\n      [attr.aria-controls]=\"showSuggestions() ? suggestionsListboxId() : null\"\n      [attr.aria-expanded]=\"showSuggestions() && suggestions().length > 0\"\n      [attr.aria-haspopup]=\"showSuggestions() ? 'listbox' : null\"\n      [attr.aria-activedescendant]=\"activeSuggestionId()\"\n      [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n    >\n      <os-input\n        [value]=\"value()\"\n        [placeholder]=\"placeholder()\"\n        [disabled]=\"disabled()\"\n        [size]=\"inputSize()\"\n        [prefixIcon]=\"'search'\"\n        [clearable]=\"true\"\n        [ariaLabel]=\"ariaLabel()\"\n        (valueChange)=\"onValueChange($event)\"\n        (focusEvent)=\"onFocus($event)\"\n        (blurEvent)=\"onBlur($event)\"\n        (keydown)=\"onKeydown($event)\"\n      />\n\n      @if (showSuggestions() && filteredSuggestions().length > 0) {\n      <div\n        class=\"os-search-box__suggestions\"\n        [class]=\"suggestionsClass()\"\n        role=\"listbox\"\n        [attr.id]=\"suggestionsListboxId()\"\n        [attr.aria-label]=\"'Sugestões de busca'\"\n      >\n        @for (suggestion of filteredSuggestions(); track suggestion.id; let i = $index) {\n        <os-button\n          variant=\"tertiary\"\n          size=\"small\"\n          [class]=\"suggestionClass()\"\n          [class.os-search-box__suggestion--active]=\"i === activeSuggestionIndex()\"\n          (buttonClick)=\"onSuggestionClick(suggestion)\"\n          (mouseenter)=\"onSuggestionHover(suggestion, i)\"\n          [attr.aria-label]=\"'Selecionar: ' + suggestion.text\"\n          [attr.aria-posinset]=\"i + 1\"\n          [attr.aria-setsize]=\"filteredSuggestions().length\"\n          [attr.id]=\"'suggestion-' + suggestion.id\"\n        >\n          @if (suggestion.category) {\n          <span class=\"os-search-box__suggestion-category\">{{ suggestion.category }}</span>\n          }\n          <span\n            class=\"os-search-box__suggestion-text\"\n            [innerHTML]=\"suggestion.highlightedText || suggestion.text\"\n          ></span>\n        </os-button>\n        }\n      </div>\n      } @if (showSuggestions() && suggestions().length > 0 && filteredSuggestions().length === 0) {\n      <div class=\"os-search-box__no-results\" role=\"status\" [attr.aria-live]=\"'polite'\">\n        <span class=\"os-search-box__no-results-text\">Nenhuma sugestão encontrada</span>\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-search-box.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-search-box-host',\n  },\n})\nexport class OsSearchBoxComponent {\n  // Inputs\n  value = input<string>('');\n  placeholder = input<string>('Buscar...');\n  disabled = input<boolean>(false);\n  size = input<OsSearchBoxSize>('medium');\n  variant = input<OsSearchBoxVariant>('default');\n  showSuggestions = input<boolean>(true);\n  suggestions = input<OsSearchSuggestion[]>([]);\n  maxSuggestions = input<number>(5);\n  debounceTime = input<number>(300);\n  role = input<OsSearchBoxRole>('searchbox');\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n  enableHighlight = input<boolean>(true);\n  enableKeyboardNavigation = input<boolean>(true);\n  enableAdvancedFilters = input<boolean>(false);\n\n  // Outputs\n  valueChange = output<string>();\n  suggestionSelect = output<OsSearchSuggestion>();\n  searchEvent = output<string>();\n  focusEvent = output<FocusEvent>();\n  blurEvent = output<FocusEvent>();\n  debouncedSearch = output<string>();\n  suggestionHover = output<OsSearchSuggestion>();\n\n  // Internal signals\n  private searchSubject = new Subject<string>();\n  protected activeSuggestionIndex = signal<number>(-1);\n  private isFocused = signal<boolean>(false);\n  private searchHistory = signal<string[]>([]);\n  private static nextId = 0;\n  private readonly instanceId = OsSearchBoxComponent.nextId++;\n\n  constructor() {\n    // Setup debounced search\n    this.searchSubject\n      .pipe(debounceTime(this.debounceTime()), distinctUntilChanged())\n      .subscribe((value) => {\n        this.debouncedSearch.emit(value);\n      });\n  }\n\n  // Computed properties\n  protected inputSize = computed(() => {\n    const sizeMap: Record<OsSearchBoxSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  filteredSuggestions = computed(() => {\n    const suggestions = this.suggestions();\n    const value = this.value().toLowerCase();\n    const maxSuggestions = this.maxSuggestions();\n\n    if (!value || !this.enableHighlight()) {\n      return suggestions.slice(0, maxSuggestions);\n    }\n\n    const filtered = suggestions\n      .filter(\n        (suggestion) =>\n          suggestion.text.toLowerCase().includes(value) ||\n          (suggestion.category && suggestion.category.toLowerCase().includes(value))\n      )\n      .map((suggestion) => ({\n        ...suggestion,\n        highlightedText: this.enableHighlight()\n          ? this.highlightText(suggestion.text, value)\n          : suggestion.text,\n      }))\n      .slice(0, maxSuggestions);\n\n    return filtered;\n  });\n\n  suggestionsListboxId = computed(() => `os-search-box-suggestions-${this.instanceId}`);\n\n  activeSuggestionId = computed(() => {\n    const index = this.activeSuggestionIndex();\n    const suggestions = this.filteredSuggestions();\n\n    if (index >= 0 && index < suggestions.length) {\n      return `suggestion-${suggestions[index].id}`;\n    }\n\n    return null;\n  });\n\n  searchBoxClasses = computed(() => {\n    const classes = ['os-search-box'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-search-box--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-search-box--${this.variant()}`);\n    }\n\n    if (this.isFocused()) {\n      classes.push('os-search-box--focused');\n    }\n\n    if (this.disabled()) {\n      classes.push('os-search-box--disabled');\n    }\n\n    return classes.join(' ');\n  });\n\n  suggestionsClass = computed(() => {\n    const classes = ['os-search-box__suggestions'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-search-box__suggestions--${this.size()}`);\n    }\n\n    if (this.filteredSuggestions().length === 0) {\n      classes.push('os-search-box__suggestions--empty');\n    }\n\n    return classes.join(' ');\n  });\n\n  suggestionClass = computed(() => {\n    const classes = ['os-search-box__suggestion'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-search-box__suggestion--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  // Event handlers\n  onValueChange(value: string): void {\n    this.valueChange.emit(value);\n    this.searchSubject.next(value);\n    this.resetActiveSuggestion();\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.isFocused.set(true);\n    this.focusEvent.emit(event);\n  }\n\n  onBlur(event: FocusEvent): void {\n    this.isFocused.set(false);\n    this.blurEvent.emit(event);\n    this.resetActiveSuggestion();\n  }\n\n  onKeydown(event: KeyboardEvent): void {\n    if (!this.enableKeyboardNavigation()) return;\n\n    const suggestions = this.filteredSuggestions();\n    const currentIndex = this.activeSuggestionIndex();\n\n    switch (event.key) {\n      case 'Enter':\n        event.preventDefault();\n        if (currentIndex >= 0 && currentIndex < suggestions.length) {\n          this.selectSuggestion(suggestions[currentIndex]);\n        } else {\n          this.searchEvent.emit(this.value());\n        }\n        break;\n\n      case 'ArrowDown':\n        event.preventDefault();\n        if (suggestions.length > 0) {\n          const nextIndex = currentIndex < suggestions.length - 1 ? currentIndex + 1 : 0;\n          this.activeSuggestionIndex.set(nextIndex);\n        }\n        break;\n\n      case 'ArrowUp':\n        event.preventDefault();\n        if (suggestions.length > 0) {\n          const prevIndex = currentIndex > 0 ? currentIndex - 1 : suggestions.length - 1;\n          this.activeSuggestionIndex.set(prevIndex);\n        }\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        this.resetActiveSuggestion();\n        break;\n\n      case 'Tab':\n        if (currentIndex >= 0 && currentIndex < suggestions.length) {\n          this.selectSuggestion(suggestions[currentIndex]);\n        }\n        break;\n    }\n  }\n\n  onSuggestionClick(suggestion: OsSearchSuggestion): void {\n    this.selectSuggestion(suggestion);\n  }\n\n  onSuggestionHover(suggestion: OsSearchSuggestion, index: number): void {\n    this.activeSuggestionIndex.set(index);\n    this.suggestionHover.emit(suggestion);\n  }\n\n  // Helper methods\n  private selectSuggestion(suggestion: OsSearchSuggestion): void {\n    this.suggestionSelect.emit(suggestion);\n    this.valueChange.emit(suggestion.text);\n    this.resetActiveSuggestion();\n    this.addToSearchHistory(suggestion.text);\n  }\n\n  private resetActiveSuggestion(): void {\n    this.activeSuggestionIndex.set(-1);\n  }\n\n  private highlightText(text: string, searchTerm: string): string {\n    if (!searchTerm) return text;\n\n    const regex = new RegExp(`(${searchTerm})`, 'gi');\n    return text.replace(regex, '<mark class=\"os-search-box__highlight\">$1</mark>');\n  }\n\n  private addToSearchHistory(searchTerm: string): void {\n    if (!searchTerm.trim()) return;\n\n    const history = this.searchHistory();\n    const filtered = history.filter((term) => term !== searchTerm);\n    const newHistory = [searchTerm, ...filtered].slice(0, 10); // Keep last 10 searches\n    this.searchHistory.set(newHistory);\n  }\n\n  // Public methods for external access\n  getSearchHistory(): string[] {\n    return this.searchHistory();\n  }\n\n  clearSearchHistory(): void {\n    this.searchHistory.set([]);\n  }\n\n  focus(): void {\n    // This would need to be implemented with ViewChild to access the input element\n    // For now, we'll emit a focus event\n    this.isFocused.set(true);\n  }\n\n  blur(): void {\n    this.isFocused.set(false);\n  }\n}\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "highlightedText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "OsSelectOption",
            "id": "interface-OsSelectOption-165c361ba77bd8a2590caf24283db1db2088b2b32ad728ae413f344414fd0338fb1acf91d82abfc85f77372f9e0a0e1fc950175e8b4c761e50ebfdc72c3fbe51",
            "file": "src/app/shared/ui-components/atoms/os-select/os-select.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  model,\n  signal,\n  ChangeDetectionStrategy,\n  forwardRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule, MatFormFieldAppearance } from '@angular/material/form-field';\n\nexport type OsSelectSize = 'small' | 'medium' | 'large';\n\nexport interface OsSelectOption {\n  value: string | number;\n  label: string;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'os-select',\n  standalone: true,\n  imports: [CommonModule, MatSelectModule, MatFormFieldModule],\n  template: `\n    <div [class]=\"containerClass()\">\n      <mat-form-field [appearance]=\"appearance()\" [class]=\"formFieldClass()\">\n        @if (label()) {\n        <mat-label>{{ label() }}</mat-label>\n        }\n\n        <mat-select\n          [id]=\"selectId\"\n          [disabled]=\"disabled()\"\n          [required]=\"required()\"\n          [value]=\"value()\"\n          [placeholder]=\"placeholder()\"\n          [class]=\"selectClass()\"\n          [attr.aria-label]=\"ariaLabel() || label()\"\n          [attr.aria-describedby]=\"computedAriaDescribedBy()\"\n          [attr.aria-invalid]=\"hasError()\"\n          [attr.aria-required]=\"required() ? 'true' : 'false'\"\n          [attr.aria-disabled]=\"disabled() ? 'true' : 'false'\"\n          [attr.tabindex]=\"disabled() ? -1 : 0\"\n          (selectionChange)=\"handleChange($event)\"\n          (blur)=\"handleBlur($event)\"\n          (focus)=\"handleFocus($event)\"\n          (openedChange)=\"onOpenedChange($event)\"\n        >\n          @for (option of options(); track option.value) {\n          <mat-option [value]=\"option.value\" [disabled]=\"option.disabled\">\n            {{ option.label }}\n          </mat-option>\n          }\n        </mat-select>\n\n        @if (helperText() || hasError()) {\n        <mat-hint [id]=\"selectId + '-helper'\" [class]=\"helperClass()\">\n          {{ errorMessage() || helperText() }}\n        </mat-hint>\n        }\n      </mat-form-field>\n    </div>\n  `,\n  styleUrls: ['./os-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsSelectComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OsSelectComponent implements ControlValueAccessor {\n  size = input<OsSelectSize>('medium');\n  label = input<string>('');\n  placeholder = input<string>('');\n  helperText = input<string>('');\n  errorMessage = input<string>('');\n  disabled = model(false);\n  required = input(false);\n  value = model<string | number>('');\n  options = input<OsSelectOption[]>([]);\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n  animated = input(true);\n  hapticFeedback = input(true);\n\n  valueChange = output<string | number>();\n  blurEvent = output<FocusEvent>();\n  focusEvent = output<FocusEvent>();\n  openedChange = output<boolean>();\n\n  private _onChange = (value: string | number) => {\n    // This will be set by registerOnChange\n    console.debug('onChange called with:', value);\n  };\n  private _onTouched = () => {\n    // This will be set by registerOnTouched\n  };\n\n  selectId = `os-select-${Math.random().toString(36).substr(2, 9)}`;\n  isFocused = signal(false);\n  isHovered = signal(false);\n  isOpened = signal(false);\n\n  containerClass = computed(() => {\n    return [\n      'os-select-container',\n      `os-select-container--${this.size()}`,\n      this.hasError() ? 'os-select-container--error' : '',\n      this.disabled() ? 'os-select-container--disabled' : '',\n      this.isFocused() ? 'os-select-container--focused' : '',\n      this.isHovered() ? 'os-select-container--hovered' : '',\n      this.isOpened() ? 'os-select-container--opened' : '',\n      this.animated() ? 'os-select-container--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  labelClass = computed(() => {\n    return ['os-select__label', this.required() ? 'os-select__label--required' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  selectWrapperClass = computed(() => {\n    return ['os-select__wrapper', this.disabled() ? 'os-select__wrapper--disabled' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  selectClass = computed(() => {\n    return [\n      'os-select',\n      `os-select--${this.size()}`,\n      this.hasError() ? 'os-select--error' : '',\n      this.disabled() ? 'os-select--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  helperClass = computed(() => {\n    return ['os-select__helper', this.hasError() ? 'os-select__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  hasError = computed(() => {\n    return !!this.errorMessage();\n  });\n\n  computedAriaDescribedBy = computed(() => {\n    const helperId = this.helperText() ? this.selectId + '-helper' : null;\n    const describedBy = this.ariaDescribedBy();\n    return describedBy || helperId;\n  });\n\n  // Mapeamento interno para Material\n  protected appearance = computed((): MatFormFieldAppearance => 'outline');\n\n  protected formFieldClass = computed(() => {\n    return [\n      'os-select__form-field',\n      `os-select__form-field--${this.size()}`,\n      this.hasError() ? 'os-select__form-field--error' : '',\n      this.disabled() ? 'os-select__form-field--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  handleChange(event: { value: string | number }): void {\n    const newValue = event.value;\n    this.triggerHapticFeedback();\n    this._onChange(newValue);\n    this.valueChange.emit(newValue);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this.isFocused.set(false);\n    this._onTouched();\n    this.blurEvent.emit(event);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.isFocused.set(true);\n    this.focusEvent.emit(event);\n  }\n\n  onOpenedChange(isOpened: boolean): void {\n    this.isOpened.set(isOpened);\n    this.openedChange.emit(isOpened);\n  }\n\n  triggerHapticFeedback(): void {\n    if (this.hapticFeedback() && 'vibrate' in navigator) {\n      navigator.vibrate(50); // 50ms vibration\n    }\n  }\n\n  writeValue(value: string | number): void {\n    // Update the model signal when FormControl value changes programmatically\n    if (value !== this.value()) {\n      this.value.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: string | number) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    // Update the disabled state when called by Angular Forms\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "PageHeaderAction",
            "id": "interface-PageHeaderAction-38ae10cab1312380b07aed5fc590dd34310eeaff52020b95f088e712388da6d70cc9a301f57e5b03fd181b806e6296bead7692fa4b88c7d178d4dd567a91ee1b",
            "file": "src/app/shared/ui-components/organisms/os-page-header/os-page-header.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, computed, input, output, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport interface BreadcrumbItem {\n  label: string;\n  route?: string;\n  disabled?: boolean;\n}\n\nexport interface PageHeaderAction {\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  size?: 'small' | 'medium' | 'large';\n  disabled?: boolean;\n  loading?: boolean;\n}\n\n@Component({\n  selector: 'os-page-header',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsButtonComponent, OsIconComponent],\n  template: `\n    <header class=\"os-page-header\" [class]=\"headerClasses()\" [attr.aria-label]=\"ariaLabel()\">\n      <div class=\"os-page-header__content\">\n        @if (breadcrumbs().length > 0) {\n        <nav class=\"os-page-header__breadcrumbs\" aria-label=\"Breadcrumb\">\n          <ol class=\"os-page-header__breadcrumb-list\">\n            @for (item of breadcrumbs(); track $index; let isLast = $last) {\n            <li class=\"os-page-header__breadcrumb-item\">\n              @if (item.route && !item.disabled && !isLast) {\n              <a\n                class=\"os-page-header__breadcrumb-link\"\n                [routerLink]=\"item.route\"\n                [attr.aria-current]=\"isLast ? 'page' : null\"\n              >\n                {{ item.label }}\n              </a>\n              } @else {\n              <span\n                class=\"os-page-header__breadcrumb-text\"\n                [class]=\"getBreadcrumbClasses(item, isLast)\"\n                [attr.aria-current]=\"isLast ? 'page' : null\"\n              >\n                {{ item.label }}\n              </span>\n              } @if (!isLast) {\n              <os-icon\n                name=\"chevron-right\"\n                size=\"sm\"\n                class=\"os-page-header__breadcrumb-separator\"\n                aria-hidden=\"true\"\n              />\n              }\n            </li>\n            }\n          </ol>\n        </nav>\n        }\n\n        <div class=\"os-page-header__main\">\n          <div class=\"os-page-header__title-section\">\n            @if (icon()) {\n            <os-icon\n              [name]=\"icon()!\"\n              [size]=\"iconSize()\"\n              class=\"os-page-header__icon\"\n              [attr.aria-hidden]=\"true\"\n            />\n            }\n            <div class=\"os-page-header__title-content\">\n              <h1 class=\"os-page-header__title\" [id]=\"titleId()\">\n                {{ title() }}\n              </h1>\n              @if (subtitle()) {\n              <p class=\"os-page-header__subtitle\" [id]=\"subtitleId()\">\n                {{ subtitle() }}\n              </p>\n              }\n            </div>\n          </div>\n\n          @if (actions().length > 0) {\n          <div class=\"os-page-header__actions\">\n            @for (action of actions(); track action.label) {\n            <os-button\n              [variant]=\"action.variant || 'secondary'\"\n              [size]=\"action.size || 'medium'\"\n              [disabled]=\"action.disabled || false\"\n              [loading]=\"action.loading || false\"\n              [icon]=\"action.icon || ''\"\n              (clicked)=\"onActionClick(action)\"\n            >\n              {{ action.label }}\n            </os-button>\n            }\n          </div>\n          }\n        </div>\n\n        @if (description()) {\n        <div class=\"os-page-header__description\" [id]=\"descriptionId()\">\n          {{ description() }}\n        </div>\n        }\n      </div>\n    </header>\n  `,\n  styleUrls: ['./os-page-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsPageHeaderComponent {\n  readonly title = input.required<string>();\n  readonly subtitle = input<string | null>(null);\n  readonly description = input<string | null>(null);\n  readonly icon = input<string | null>(null);\n  readonly breadcrumbs = input<BreadcrumbItem[]>([]);\n  readonly actions = input<PageHeaderAction[]>([]);\n  readonly variant = input<'default' | 'compact' | 'extended'>('default');\n  readonly size = input<'small' | 'medium' | 'large'>('medium');\n  readonly theme = input<'light' | 'dark'>('light');\n  readonly ariaLabel = input<string | null>(null);\n\n  readonly actionClick = output<PageHeaderAction>();\n\n  readonly titleId = signal(`page-title-${Math.random().toString(36).substr(2, 9)}`);\n  readonly subtitleId = signal(`page-subtitle-${Math.random().toString(36).substr(2, 9)}`);\n  readonly descriptionId = signal(`page-description-${Math.random().toString(36).substr(2, 9)}`);\n\n  readonly headerClasses = computed(() => {\n    const classes = ['os-page-header'];\n    classes.push(`os-page-header--${this.variant()}`);\n    classes.push(`os-page-header--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-page-header--dark');\n    }\n\n    if (this.breadcrumbs().length > 0) {\n      classes.push('os-page-header--with-breadcrumbs');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-page-header--with-actions');\n    }\n\n    if (this.description()) {\n      classes.push('os-page-header--with-description');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly iconSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  getBreadcrumbClasses(item: BreadcrumbItem, isLast: boolean): string {\n    const classes = ['os-page-header__breadcrumb-text'];\n\n    if (item.disabled) {\n      classes.push('os-page-header__breadcrumb-text--disabled');\n    }\n\n    if (isLast) {\n      classes.push('os-page-header__breadcrumb-text--current');\n    }\n\n    return classes.join(' ');\n  }\n\n  onActionClick(action: PageHeaderAction): void {\n    if (!action.disabled && !action.loading) {\n      this.actionClick.emit(action);\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"secondary\" | \"tertiary\" | \"danger\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "PanelTemplateConfig",
            "id": "interface-PanelTemplateConfig-03aca1c1fa63ef1d00354d3935d833108c08ad140fc337d4f35d4928430f800a7613fa96912f06c674ca25b0b86cf61066bf98b0ff35a351d3c6ac13d9d983df",
            "file": "src/app/shared/ui-components/templates/os-panel-template/os-panel-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, input, output, ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport interface PanelTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showHeader?: boolean;\n  showFooter?: boolean;\n  showActions?: boolean;\n  collapsible?: boolean;\n  expanded?: boolean;\n  actions?: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }[];\n}\n\n@Component({\n  selector: 'os-panel-template',\n  template: `\n    <div [class]=\"panelClass()\" [attr.aria-label]=\"ariaLabel()\">\n      @if (config().showHeader ?? true) {\n      <div class=\"os-panel-template__header\" [class]=\"headerClass()\">\n        <div class=\"os-panel-template__header-content\">\n          <h3 class=\"os-panel-template__title\">{{ config().title }}</h3>\n          @if (config().subtitle) {\n          <p class=\"os-panel-template__subtitle\">{{ config().subtitle }}</p>\n          }\n        </div>\n        @if (config().collapsible) {\n        <os-button\n          [variant]=\"'tertiary'\"\n          [size]=\"size()\"\n          [icon]=\"isExpanded() ? 'expand_less' : 'expand_more'\"\n          (click)=\"toggleExpanded()\"\n          [attr.aria-label]=\"isExpanded() ? 'Recolher painel' : 'Expandir painel'\"\n        />\n        }\n      </div>\n      } @if (!config().collapsible || isExpanded()) {\n      <div class=\"os-panel-template__content\" [class]=\"contentClass()\">\n        <ng-content />\n      </div>\n      } @if (config().showActions ?? true) {\n      <div class=\"os-panel-template__actions\" [class]=\"actionsClass()\">\n        @for (action of config().actions || []; track action.label) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"action.size\"\n          [disabled]=\"action.disabled || disabled()\"\n          [loading]=\"action.loading || false\"\n          [icon]=\"action.icon || ''\"\n          (click)=\"onActionClick(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-panel-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, OsButtonComponent],\n})\nexport class OsPanelTemplateComponent {\n  config = input.required<PanelTemplateConfig>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n  expanded = input(true);\n\n  actionClick = output<{\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }>();\n  toggled = output<boolean>();\n\n  isExpanded = computed(() => {\n    return this.expanded();\n  });\n\n  panelClass = computed(() => {\n    return [\n      'os-panel-template',\n      `os-panel-template--${this.variant()}`,\n      `os-panel-template--${this.size()}`,\n      `os-panel-template--${this.theme()}`,\n      this.disabled() ? 'os-panel-template--disabled' : '',\n      this.loading() ? 'os-panel-template--loading' : '',\n      this.isExpanded() ? 'os-panel-template--expanded' : 'os-panel-template--collapsed',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  headerClass = computed(() => {\n    return [\n      'os-panel-template__header',\n      `os-panel-template__header--${this.variant()}`,\n      `os-panel-template__header--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  contentClass = computed(() => {\n    return [\n      'os-panel-template__content',\n      `os-panel-template__content--${this.variant()}`,\n      `os-panel-template__content--${this.size()}`,\n      this.disabled() ? 'os-panel-template__content--disabled' : '',\n      this.loading() ? 'os-panel-template__content--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  actionsClass = computed(() => {\n    return [\n      'os-panel-template__actions',\n      `os-panel-template__actions--${this.variant()}`,\n      `os-panel-template__actions--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  ariaLabel = computed(() => {\n    return `Painel: ${this.config().title}`;\n  });\n\n  toggleExpanded(): void {\n    const newExpanded = !this.isExpanded();\n    this.toggled.emit(newExpanded);\n  }\n\n  onActionClick(action: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }): void {\n    this.actionClick.emit(action);\n  }\n}\n",
            "properties": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "collapsible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "showActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "showFooter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "showHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "ProgressHistory",
            "id": "interface-ProgressHistory-466600ea9790e69cbb4c5fdf2c212e1588bf8dea3c0334e5afbee8768b27ce46818507bb899a57fc38d34d9b1d61abad048dc9d2b576cc446f59628193e8a1fb",
            "file": "src/app/shared/ui-components/organisms/os-goal-tracker/os-goal-tracker.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\n\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsMoneyDisplayComponent } from '../../molecules/os-money-display/os-money-display.component';\n\nexport interface GoalTrackerData {\n  id: string;\n  title: string;\n  description?: string;\n  targetAmount: number;\n  currentAmount: number;\n  currency: string;\n  deadline?: Date;\n  startDate: Date;\n  lastUpdated: Date;\n  status: 'active' | 'completed' | 'paused' | 'cancelled';\n  priority: 'low' | 'medium' | 'high';\n  category?: string;\n  monthlyContribution?: number;\n  progressHistory: ProgressHistory[];\n}\n\nexport interface ProgressHistory {\n  date: Date;\n  amount: number;\n  percentage: number;\n  note?: string;\n}\n\n@Component({\n  selector: 'os-goal-tracker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsCardComponent,\n    OsMoneyDisplayComponent,\n    OsBadgeComponent,\n    OsIconComponent,\n    OsProgressBarComponent,\n    OsSpinnerComponent,\n  ],\n  templateUrl: './os-goal-tracker.component.html',\n  styleUrls: ['./os-goal-tracker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsGoalTrackerComponent {\n  // Inputs\n  goalData = input.required<GoalTrackerData | null>();\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n  showTimeline = input<boolean>(true);\n  showHistory = input<boolean>(true);\n  showContribution = input<boolean>(true);\n  showStatus = input<boolean>(true);\n  loading = input<boolean>(false);\n  clickable = input<boolean>(false);\n\n  // Outputs\n  readonly goalClick = output<GoalTrackerData>();\n  readonly refreshClick = output<void>();\n  readonly actionClick = output<{ action: string; goal: GoalTrackerData }>();\n\n  // Additional properties for template\n  readonly ariaLabel = input<string | null>(null);\n\n  // Computed properties\n  readonly progressPercentage = computed(() => {\n    const data = this.goalData();\n    if (!data || data.targetAmount <= 0) return 0;\n    return Math.min(Math.round((data.currentAmount / data.targetAmount) * 100), 100);\n  });\n\n  readonly remainingAmount = computed(() => {\n    const data = this.goalData();\n    if (!data) return 0;\n    return Math.max(data.targetAmount - data.currentAmount, 0);\n  });\n\n  readonly isCompleted = computed(() => {\n    const data = this.goalData();\n    return data ? data.status === 'completed' || this.progressPercentage() >= 100 : false;\n  });\n\n  readonly isOverdue = computed(() => {\n    const data = this.goalData();\n    if (!data || !data.deadline || this.isCompleted()) return false;\n    return new Date() > data.deadline;\n  });\n\n  readonly statusInfo = computed(() => {\n    const data = this.goalData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'active':\n        return this.isOverdue()\n          ? { type: 'error' as const, label: 'Atrasado', icon: 'warning' }\n          : { type: 'success' as const, label: 'Ativo', icon: 'play_circle' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check_circle' };\n      case 'paused':\n        return { type: 'warning' as const, label: 'Pausado', icon: 'pause_circle' };\n      case 'cancelled':\n        return { type: 'error' as const, label: 'Cancelado', icon: 'cancel' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  });\n\n  readonly priorityInfo = computed(() => {\n    const data = this.goalData();\n    if (!data) return { type: 'info' as const, label: 'N/A', color: 'var(--os-color-info)' };\n\n    switch (data.priority) {\n      case 'high':\n        return { type: 'error' as const, label: 'Alta', color: 'var(--os-color-error)' };\n      case 'medium':\n        return { type: 'warning' as const, label: 'Média', color: 'var(--os-color-warning)' };\n      case 'low':\n        return { type: 'success' as const, label: 'Baixa', color: 'var(--os-color-success)' };\n      default:\n        return { type: 'info' as const, label: 'N/A', color: 'var(--os-color-info)' };\n    }\n  });\n\n  readonly timelineInfo = computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showTimeline()) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      deadline: data.deadline ? data.deadline.toLocaleDateString('pt-BR') : 'Sem prazo',\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n      daysRemaining: this.getDaysRemaining(),\n    };\n  });\n\n  readonly recentHistory = computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showHistory()) return [];\n\n    return data.progressHistory.slice(-3).reverse(); // Last 3 entries\n  });\n\n  readonly contributionInfo = computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showContribution() || !data.monthlyContribution) return null;\n\n    const remaining = this.remainingAmount();\n    const monthsNeeded = Math.ceil(remaining / data.monthlyContribution);\n\n    return {\n      monthly: data.monthlyContribution,\n      monthsNeeded,\n      isFeasible: monthsNeeded <= 12, // Consider feasible if less than 1 year\n    };\n  });\n\n  readonly progressVariant = computed(() => {\n    if (this.isCompleted()) return 'success';\n    if (this.isOverdue()) return 'danger';\n    const data = this.goalData();\n    if (data?.priority === 'high') return 'warning';\n    return 'primary';\n  });\n\n  readonly progressSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly iconSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly badgeSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly moneySize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly goalClasses = computed(() => {\n    const classes = ['os-goal-tracker'];\n    classes.push(`os-goal-tracker--${this.variant()}`);\n    classes.push(`os-goal-tracker--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-goal-tracker--dark');\n    }\n\n    if (this.isCompleted()) {\n      classes.push('os-goal-tracker--completed');\n    }\n\n    if (this.isOverdue()) {\n      classes.push('os-goal-tracker--overdue');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly cardVariant = computed(() => {\n    const data = this.goalData();\n    if (!data) return 'default';\n\n    if (this.isCompleted()) return 'elevated';\n    if (this.isOverdue()) return 'outlined';\n    if (data.priority === 'high') return 'elevated';\n    return 'default';\n  });\n\n  // Methods\n  onCardClick(): void {\n    const data = this.goalData();\n    if (this.clickable() && data) {\n      this.goalClick.emit(data);\n    }\n  }\n\n  onRefreshClick(): void {\n    this.refreshClick.emit();\n  }\n\n  onActionClick(action: string): void {\n    const data = this.goalData();\n    if (data) {\n      this.actionClick.emit({ action, goal: data });\n    }\n  }\n\n  getDaysRemaining(): number {\n    const data = this.goalData();\n    if (!data || !data.deadline) return 0;\n\n    const now = new Date();\n    const diffTime = data.deadline.getTime() - now.getTime();\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  formatHistoryDate(date: Date): string {\n    return date.toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    });\n  }\n\n  getStatusColor(): string {\n    const status = this.statusInfo();\n    switch (status.type) {\n      case 'success':\n        return 'var(--os-color-success)';\n      case 'warning':\n        return 'var(--os-color-warning)';\n      case 'error':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "note",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "percentage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "QuickAction",
            "id": "interface-QuickAction-2f0daa74d88aeeb7faeea0eee70d0d6c6b177737266a24ad66437a5d3eaf4e9eb7d85f6e7760a84fa23361f6d547480f2a52374e63a4ab0208af39a2f417092d",
            "file": "src/app/features/dashboard/types/dashboard.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetDto, BudgetOverviewDto } from '../../../../dtos';\n\nexport interface BudgetSelection {\n  selectedBudgetId: string | null;\n  availableBudgets: BudgetDto[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface DashboardData {\n  budgetOverview: BudgetOverviewDto | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface WidgetConfiguration {\n  id: string;\n  type: WidgetType;\n  title: string;\n  size: WidgetSize;\n  position: WidgetPosition;\n  enabled: boolean;\n}\n\nexport type WidgetType =\n  | 'budget-summary'\n  | 'goal-progress'\n  | 'transaction-list'\n  | 'account-balance'\n  | 'monthly-trends'\n  | 'quick-actions';\n\nexport type WidgetSize = 'small' | 'medium' | 'large' | 'full-width';\n\nexport interface WidgetPosition {\n  row: number;\n  column: number;\n  rowSpan?: number;\n  columnSpan?: number;\n}\n\nexport interface DashboardState {\n  budgetSelection: BudgetSelection;\n  dashboardData: DashboardData;\n  widgetConfigurations: WidgetConfiguration[];\n  isInitialized: boolean;\n}\n\nexport interface QuickAction {\n  id: string;\n  label: string;\n  icon: string;\n  route: string;\n  variant: 'primary' | 'secondary' | 'outline';\n  disabled?: boolean;\n}\n\nexport interface DashboardMetrics {\n  totalAccounts: number;\n  totalBalance: number;\n  monthlyIncome: number;\n  monthlyExpense: number;\n  netMonthly: number;\n  goalsProgress: number;\n  recentTransactionsCount: number;\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"secondary\" | \"outline\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "QuickDateOption",
            "id": "interface-QuickDateOption-e02047e19f91d1c6ff988a0f086f5bd68b90e2b70d4e21bde2f66d27656a17cedb5b3af94263edf13f72b6ef2cc29ff4a85e713945f06b4db1edcc38360e87d1",
            "file": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  ChangeDetectionStrategy,\n  forwardRef,\n  model,\n  computed,\n  signal,\n  effect,\n  inject,\n  DestroyRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { OsDateInputComponent } from '../../atoms/os-date-input/os-date-input.component';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport type OsDatePickerSize = 'small' | 'medium' | 'large';\nexport type OsDatePickerVariant = 'default' | 'outlined' | 'filled';\nexport type OsDatePickerRole = 'presentation' | 'dialog' | 'group';\n\nexport interface QuickDateOption {\n  label: string;\n  getValue: () => Date;\n  ariaLabel?: string;\n}\n\n@Component({\n  selector: 'os-date-picker',\n  standalone: true,\n  imports: [CommonModule, FormsModule, OsDateInputComponent, OsButtonComponent],\n  template: `\n    <div class=\"os-date-picker\" [class]=\"datePickerClasses()\" [attr.role]=\"role()\">\n      <!-- Quick Selection Buttons -->\n      @if (showQuickSelection() && quickDateOptions().length > 0) {\n      <div class=\"os-date-picker__quick-selection\" role=\"group\" aria-label=\"Seleção rápida de data\">\n        @for (option of quickDateOptions(); track option.label) {\n        <os-button\n          variant=\"tertiary\"\n          size=\"small\"\n          [ariaLabel]=\"option.ariaLabel || 'Selecionar ' + option.label\"\n          (click)=\"selectQuickDate(option)\"\n          [disabled]=\"disabled()\"\n        >\n          {{ option.label }}\n        </os-button>\n        }\n      </div>\n      }\n\n      <!-- Date Input Field -->\n      <os-date-input\n        [value]=\"value()\"\n        [label]=\"label()\"\n        [placeholder]=\"placeholder()\"\n        [disabled]=\"disabled()\"\n        [required]=\"required()\"\n        [minDate]=\"minDate()?.toISOString() || ''\"\n        [maxDate]=\"maxDate()?.toISOString() || ''\"\n        [size]=\"getInputSize()\"\n        [helperText]=\"effectiveHelperText()\"\n        [prefixIcon]=\"calendarIcon()\"\n        [ariaLabel]=\"ariaLabel()\"\n        [ariaDescribedBy]=\"ariaDescribedBy()\"\n        (valueChange)=\"onValueChange($event)\"\n        (blurEvent)=\"onBlur($event)\"\n        (focusEvent)=\"onFocus($event)\"\n      />\n\n      <!-- Range End Date (for range picker) -->\n      @if (isRangePicker() && showRangeEnd()) {\n      <div class=\"os-date-picker__range-separator\" aria-hidden=\"true\">até</div>\n      <os-date-input\n        [value]=\"endDate()\"\n        [label]=\"endDateLabel()\"\n        [placeholder]=\"endDatePlaceholder()\"\n        [disabled]=\"disabled()\"\n        [required]=\"required()\"\n        [minDate]=\"value()?.toISOString() || minDate()?.toISOString() || ''\"\n        [maxDate]=\"maxDate()?.toISOString() || ''\"\n        [size]=\"getInputSize()\"\n        [helperText]=\"endDateHelperText()\"\n        [prefixIcon]=\"calendarIcon()\"\n        [ariaLabel]=\"endDateAriaLabel()\"\n        (valueChange)=\"onEndDateChange($event)\"\n        (blurEvent)=\"onEndDateBlur($event)\"\n        (focusEvent)=\"onEndDateFocus($event)\"\n      />\n      }\n\n      <!-- Today Indicator -->\n      @if (showTodayIndicator() && isToday(value())) {\n      <div class=\"os-date-picker__today-indicator\" role=\"status\" aria-live=\"polite\">\n        <span class=\"os-date-picker__today-text\">Hoje</span>\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-date-picker.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsDatePickerComponent),\n      multi: true,\n    },\n  ],\n  host: {\n    class: 'os-date-picker-host',\n    '[attr.data-mobile-friendly]': 'mobileFriendly()',\n    '[attr.data-has-quick-selection]': 'showQuickSelection()',\n  },\n})\nexport class OsDatePickerComponent implements ControlValueAccessor {\n  private readonly destroyRef = inject(DestroyRef);\n\n  // Models\n  value = model<Date | null>(null);\n  disabled = model<boolean>(false);\n  endDate = signal<Date | null>(null);\n\n  // Basic Inputs\n  label = input<string>('');\n  placeholder = input<string>('Selecionar data');\n  helperText = input<string>('');\n  size = input<OsDatePickerSize>('medium');\n  variant = input<OsDatePickerVariant>('default');\n  required = input<boolean>(false);\n  minDate = input<Date | null>(null);\n  maxDate = input<Date | null>(null);\n  startAt = input<Date | null>(null);\n  touchUi = input<boolean>(false);\n  opened = input<boolean>(false);\n  calendarIcon = input<string>('calendar_today');\n\n  // New Inputs for Enhancements\n  mobileFriendly = input<boolean>(true);\n  showQuickSelection = input<boolean>(false);\n  showTodayIndicator = input<boolean>(true);\n  isRangePicker = input<boolean>(false);\n  showRangeEnd = input<boolean>(false);\n  endDateLabel = input<string>('Data final');\n  endDatePlaceholder = input<string>('Selecionar data final');\n  endDateHelperText = input<string>('');\n  role = input<OsDatePickerRole>('group');\n\n  // Quick date options as a signal (mutable)\n  quickDateOptions = signal<QuickDateOption[]>([]);\n\n  // Accessibility Inputs\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n  endDateAriaLabel = input<string>('');\n\n  // Outputs\n  valueChange = output<Date | null>();\n  dateChange = output<Date | null>();\n  openedChange = output<boolean>();\n  monthSelected = output<Date>();\n  yearSelected = output<Date>();\n  focusEvent = output<FocusEvent>();\n  blurEvent = output<FocusEvent>();\n  endDateChange = output<Date | null>();\n  endDateFocusEvent = output<FocusEvent>();\n  endDateBlurEvent = output<FocusEvent>();\n  quickDateSelected = output<QuickDateOption>();\n\n  // Computed Properties\n  effectiveHelperText = computed(() => {\n    const helper = this.helperText();\n    if (helper) return helper;\n\n    // Auto-generate helper text with format\n    const format = this.getDateFormat();\n    return `Formato: ${format}`;\n  });\n\n  datePickerClasses = computed(() => {\n    const classes = ['os-date-picker'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-date-picker--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-date-picker--${this.variant()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-date-picker--disabled');\n    }\n\n    if (this.mobileFriendly()) {\n      classes.push('os-date-picker--mobile-friendly');\n    }\n\n    if (this.isRangePicker()) {\n      classes.push('os-date-picker--range');\n    }\n\n    if (this.showQuickSelection()) {\n      classes.push('os-date-picker--with-quick-selection');\n    }\n\n    return classes.join(' ');\n  });\n\n  // ControlValueAccessor\n  private _onChange = (value: Date | null) => {};\n  private _onTouched = () => {};\n\n  constructor() {\n    // Initialize default quick date options if none provided\n    effect(\n      () => {\n        if (this.showQuickSelection() && this.quickDateOptions().length === 0) {\n          this.quickDateOptions.set(this.getDefaultQuickDateOptions());\n        }\n      },\n      { allowSignalWrites: true }\n    );\n\n    // Validate range dates\n    effect(() => {\n      if (this.isRangePicker() && this.value() && this.endDate()) {\n        const start = this.value();\n        const end = this.endDate();\n        if (start && end && start > end) {\n          console.warn('OsDatePicker: Start date is after end date');\n        }\n      }\n    });\n  }\n\n  // Public Methods\n  selectQuickDate(option: QuickDateOption): void {\n    if (this.disabled()) return;\n\n    const date = option.getValue();\n    this.onValueChange(date);\n    this.quickDateSelected.emit(option);\n  }\n\n  isToday(date: Date | null): boolean {\n    if (!date) return false;\n\n    const today = new Date();\n    return (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    );\n  }\n\n  // Internal Methods (public for testing)\n  getInputSize(): 'small' | 'medium' | 'large' {\n    const sizeMap: Record<OsDatePickerSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getDateFormat(): string {\n    // Return localized date format\n    return 'DD/MM/AAAA';\n  }\n\n  getDefaultQuickDateOptions(): QuickDateOption[] {\n    return [\n      {\n        label: 'Hoje',\n        getValue: () => new Date(),\n        ariaLabel: 'Selecionar data de hoje',\n      },\n      {\n        label: 'Amanhã',\n        getValue: () => {\n          const tomorrow = new Date();\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          return tomorrow;\n        },\n        ariaLabel: 'Selecionar data de amanhã',\n      },\n      {\n        label: 'Próxima Semana',\n        getValue: () => {\n          const nextWeek = new Date();\n          nextWeek.setDate(nextWeek.getDate() + 7);\n          return nextWeek;\n        },\n        ariaLabel: 'Selecionar data da próxima semana',\n      },\n      {\n        label: 'Próximo Mês',\n        getValue: () => {\n          const nextMonth = new Date();\n          nextMonth.setMonth(nextMonth.getMonth() + 1);\n          return nextMonth;\n        },\n        ariaLabel: 'Selecionar data do próximo mês',\n      },\n    ];\n  }\n\n  // Event Handlers\n  onValueChange(value: Date | null): void {\n    this.value.set(value);\n    this.valueChange.emit(value);\n    this.dateChange.emit(value);\n    this._onChange(value);\n  }\n\n  onEndDateChange(value: Date | null): void {\n    this.endDate.set(value);\n    this.endDateChange.emit(value);\n  }\n\n  onBlur(event: FocusEvent): void {\n    this.blurEvent.emit(event);\n    this._onTouched();\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.focusEvent.emit(event);\n  }\n\n  onEndDateBlur(event: FocusEvent): void {\n    this.endDateBlurEvent.emit(event);\n    this._onTouched();\n  }\n\n  onEndDateFocus(event: FocusEvent): void {\n    this.endDateFocusEvent.emit(event);\n  }\n\n  // ControlValueAccessor Implementation\n  writeValue(value: Date | null): void {\n    if (value !== this.value()) {\n      this.value.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: Date | null) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "properties": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "getValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "SidebarItem",
            "id": "interface-SidebarItem-b5d9d47c975832020ded7d9838f60338f2534c3a7b36301f83e5e42cec766cb80481b0c1159557310efccfc1b11745c6194d7d4407baef0cfed17b7aea8cd9ec",
            "file": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport {\n  OsNavigationItemComponent,\n  OsNavigationItemSize,\n  OsNavigationItemVariant,\n} from '../../molecules/os-navigation-item/os-navigation-item.component';\n\nexport interface SidebarItem {\n  id: string;\n  label: string;\n  icon?: string;\n  route?: string;\n  href?: string;\n  badge?: string | number;\n  disabled?: boolean;\n  children?: SidebarItem[];\n}\n\nexport type SidebarVariant = 'default' | 'minimal' | 'compact' | 'expanded';\nexport type SidebarSize = 'small' | 'medium' | 'large';\nexport type SidebarTheme = 'light' | 'dark';\n\n@Component({\n  selector: 'os-sidebar',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsNavigationItemComponent, OsIconComponent],\n  template: `\n    <aside [class]=\"sidebarClasses()\" [attr.aria-label]=\"ariaLabel()\" role=\"complementary\">\n      <!-- Header -->\n      @if (showHeader()) {\n      <div class=\"os-sidebar__header\">\n        @if (logo()) {\n        <div class=\"os-sidebar__logo\">\n          <img [src]=\"logo()\" [alt]=\"logoAlt()\" class=\"os-sidebar__logo-image\" />\n        </div>\n        } @if (title()) {\n        <h2 class=\"os-sidebar__title\">{{ title() }}</h2>\n        } @if (showToggleButton()) {\n        <button\n          class=\"os-sidebar__toggle\"\n          [attr.aria-label]=\"isCollapsed() ? 'Expandir sidebar' : 'Colapsar sidebar'\"\n          [attr.aria-expanded]=\"!isCollapsed()\"\n          (click)=\"toggleCollapse()\"\n        >\n          <os-icon [name]=\"isCollapsed() ? 'chevron-right' : 'chevron-left'\" size=\"sm\" />\n        </button>\n        }\n      </div>\n      }\n\n      <!-- Navigation -->\n      <nav class=\"os-sidebar__nav\" role=\"navigation\">\n        <ul class=\"os-sidebar__list\" role=\"list\">\n          @for (item of items(); track item.id) {\n          <li class=\"os-sidebar__item\" role=\"none\">\n            <os-navigation-item\n              [label]=\"item.label\"\n              [icon]=\"item.icon || ''\"\n              [routerLink]=\"item.route\"\n              [variant]=\"itemVariant()\"\n              [size]=\"itemSize()\"\n              [active]=\"isActiveItem(item)\"\n              [disabled]=\"item.disabled || false\"\n              [badge]=\"item.badge ? +item.badge : null\"\n              [ariaLabel]=\"item.label\"\n              (itemClick)=\"onItemClick(item)\"\n            >\n              {{ item.label }}\n            </os-navigation-item>\n\n            <!-- Sub-items -->\n            @if (item.children && item.children.length > 0 && !isCollapsed()) {\n            <ul class=\"os-sidebar__sub-list\" role=\"list\">\n              @for (subItem of item.children; track subItem.id) {\n              <li class=\"os-sidebar__sub-item\" role=\"none\">\n                <os-navigation-item\n                  [label]=\"subItem.label\"\n                  [icon]=\"subItem.icon || ''\"\n                  [routerLink]=\"subItem.route\"\n                  [variant]=\"subItemVariant()\"\n                  [size]=\"subItemSize()\"\n                  [active]=\"isActiveItem(subItem)\"\n                  [disabled]=\"subItem.disabled || false\"\n                  [badge]=\"subItem.badge ? +subItem.badge : null\"\n                  [ariaLabel]=\"subItem.label\"\n                  (itemClick)=\"onItemClick(subItem)\"\n                >\n                  {{ subItem.label }}\n                </os-navigation-item>\n              </li>\n              }\n            </ul>\n            }\n          </li>\n          }\n        </ul>\n      </nav>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-sidebar__footer\">\n        <ng-content select=\"[slot=footer]\"></ng-content>\n      </div>\n      }\n\n      <!-- Custom Content -->\n      @if (showCustomContent()) {\n      <div class=\"os-sidebar__custom\">\n        <ng-content select=\"[slot=custom]\"></ng-content>\n      </div>\n      }\n    </aside>\n  `,\n  styleUrls: ['./os-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsSidebarComponent {\n  // Inputs\n  readonly items = input.required<SidebarItem[]>();\n  readonly variant = input<SidebarVariant>('default');\n  readonly size = input<SidebarSize>('medium');\n  readonly theme = input<SidebarTheme>('light');\n  readonly collapsed = input<boolean>(false);\n  readonly activeItemId = input<string | null>(null);\n  readonly ariaLabel = input<string>('Navegação lateral');\n  readonly title = input<string | null>(null);\n  readonly logo = input<string | null>(null);\n  readonly logoAlt = input<string>('Logo');\n  readonly showHeader = input<boolean>(true);\n  readonly showFooter = input<boolean>(false);\n  readonly showToggleButton = input<boolean>(true);\n  readonly showCustomContent = input<boolean>(false);\n\n  // Outputs\n  readonly itemClick = output<SidebarItem>();\n  readonly navigate = output<{ item: SidebarItem; route?: string; href?: string }>();\n  readonly collapseChange = output<boolean>();\n\n  // Computed properties\n  sidebarClasses = computed(() => {\n    const base = 'os-sidebar';\n    const variant = `os-sidebar--${this.variant()}`;\n    const size = `os-sidebar--${this.size()}`;\n    const theme = `os-sidebar--${this.theme()}`;\n    const collapsed = this.isCollapsed() ? 'os-sidebar--collapsed' : '';\n\n    return `${base} ${variant} ${size} ${theme} ${collapsed}`.trim();\n  });\n\n  isCollapsed = computed(() => this.collapsed());\n\n  itemVariant = computed(() => {\n    const variantMap: Record<SidebarVariant, OsNavigationItemVariant> = {\n      default: 'primary',\n      minimal: 'secondary',\n      compact: 'default',\n      expanded: 'primary',\n    };\n    return variantMap[this.variant()];\n  });\n\n  itemSize = computed(() => {\n    const sizeMap: Record<SidebarSize, OsNavigationItemSize> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  subItemVariant = computed(() => {\n    const variantMap: Record<SidebarVariant, OsNavigationItemVariant> = {\n      default: 'secondary',\n      minimal: 'secondary',\n      compact: 'secondary',\n      expanded: 'secondary',\n    };\n    return variantMap[this.variant()];\n  });\n\n  subItemSize = computed(() => {\n    const sizeMap: Record<SidebarSize, OsNavigationItemSize> = {\n      small: 'small',\n      medium: 'small',\n      large: 'medium',\n    };\n    return sizeMap[this.size()];\n  });\n\n  // Methods\n  isActiveItem(item: SidebarItem): boolean {\n    const activeId = this.activeItemId();\n    return activeId === item.id;\n  }\n\n  onItemClick(item: SidebarItem): void {\n    if (item.disabled) return;\n\n    this.itemClick.emit(item);\n\n    // Auto-navigate if route or href is provided\n    if (item.route || item.href) {\n      this.navigate.emit({ item, route: item.route, href: item.href });\n    }\n  }\n\n  toggleCollapse(): void {\n    const newCollapsed = !this.isCollapsed();\n    this.collapseChange.emit(newCollapsed);\n  }\n\n  onNavigate(event: { item: SidebarItem; route?: string; href?: string }): void {\n    this.navigate.emit(event);\n  }\n}\n",
            "properties": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarItem[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "Transaction",
            "id": "interface-Transaction-759bea4a76d0a8287041f9aa4b6407aa5799ec1d07bad4f83ba8889e07b08001914dfbe89c17c4baa087f29f3bf1951716aac4c78eb9c79030cd2f03baa403ba",
            "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  input,\n  output,\n  signal,\n} from '@angular/core';\nimport { Sort } from '@angular/material/sort';\nimport { PageEvent } from '@angular/material/paginator';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport {\n  OsDataTableComponent,\n  OsDataTableColumn,\n  OsDataTableAction,\n  OsDataTableRow,\n} from '../../molecules/os-data-table/os-data-table.component';\nimport {\n  OsFilterBarComponent,\n  OsFilterOption,\n  OsFilterBarVariant,\n} from '../../molecules/os-filter-bar/os-filter-bar.component';\n\nexport interface Transaction {\n  id: string;\n  description: string;\n  amount: number;\n  date: Date;\n  category: string;\n  type: 'income' | 'expense' | 'transfer';\n  status: 'pending' | 'completed' | 'cancelled';\n  account?: string;\n  tags?: string[];\n  [key: string]: unknown;\n}\n\nexport interface TransactionListFilter {\n  key: string;\n  value: string;\n  operator: 'equals' | 'contains' | 'greater' | 'less' | 'between';\n}\n\nexport interface TransactionListSort {\n  column: string;\n  direction: 'asc' | 'desc';\n}\n\nexport interface TransactionListPagination {\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\nexport type TransactionListVariant = 'default' | 'compact' | 'detailed';\nexport type TransactionListSize = 'small' | 'medium' | 'large';\nexport type TransactionListTheme = 'light' | 'dark';\n\n@Component({\n  selector: 'os-transaction-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsButtonComponent,\n    OsIconComponent,\n    OsSpinnerComponent,\n    OsDataTableComponent,\n    OsFilterBarComponent,\n  ],\n  template: `\n    <div class=\"os-transaction-list\" [class]=\"transactionListClasses()\">\n      <!-- Header -->\n      @if (title() || showHeaderActions()) {\n      <div class=\"os-transaction-list__header\">\n        @if (title()) {\n        <div class=\"os-transaction-list__title-section\">\n          <h2 class=\"os-transaction-list__title\">{{ title() }}</h2>\n          @if (subtitle()) {\n          <p class=\"os-transaction-list__subtitle\">{{ subtitle() }}</p>\n          }\n        </div>\n        } @if (showHeaderActions()) {\n        <div class=\"os-transaction-list__header-actions\">\n          @if (showRefreshButton()) {\n          <os-button\n            variant=\"tertiary\"\n            [size]=\"getButtonSize()\"\n            icon=\"refresh\"\n            [loading]=\"isLoading()\"\n            (buttonClick)=\"onRefresh()\"\n            [attr.aria-label]=\"'Atualizar transações'\"\n          >\n            Atualizar\n          </os-button>\n          } @if (showExportButton()) {\n          <os-button\n            variant=\"secondary\"\n            [size]=\"getButtonSize()\"\n            icon=\"download\"\n            (buttonClick)=\"onExport()\"\n            [attr.aria-label]=\"'Exportar transações'\"\n          >\n            Exportar\n          </os-button>\n          } @if (showAddButton()) {\n          <os-button\n            variant=\"primary\"\n            [size]=\"getButtonSize()\"\n            icon=\"add\"\n            (buttonClick)=\"onAdd()\"\n            [attr.aria-label]=\"'Adicionar nova transação'\"\n          >\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <!-- Filters -->\n      @if (showFilters() && filterOptions().length > 0) {\n      <div class=\"os-transaction-list__filters\">\n        <os-filter-bar\n          [variant]=\"getFilterBarVariant()\"\n          [size]=\"getFilterBarSize()\"\n          [hasActiveFilters]=\"hasActiveFilters()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        >\n          <div class=\"os-transaction-list__filter-content\">\n            @for (option of filterOptions(); track option.key) {\n            <div class=\"os-transaction-list__filter-item\">\n              <label class=\"os-transaction-list__filter-label\" [for]=\"'filter-' + option.key\">{{\n                option.label\n              }}</label>\n              @switch (option.type) { @case ('text') {\n              <input\n                type=\"text\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('select') {\n              <select\n                class=\"os-transaction-list__filter-select\"\n                [id]=\"'filter-' + option.key\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              >\n                <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n                @for (opt of option.options; track opt.value) {\n                <option [value]=\"opt.value\">{{ opt.label }}</option>\n                }\n              </select>\n              } @case ('date') {\n              <input\n                type=\"date\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('number') {\n              <input\n                type=\"number\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n        </os-filter-bar>\n      </div>\n      }\n\n      <!-- Transaction List -->\n      <div class=\"os-transaction-list__content\">\n        @if (isLoading()) {\n        <div class=\"os-transaction-list__loading\">\n          <os-spinner [variant]=\"'default'\" [size]=\"getSpinnerSize()\" />\n          <p class=\"os-transaction-list__loading-text\">Carregando transações...</p>\n        </div>\n        } @else if (paginatedTransactions().length === 0) {\n        <div class=\"os-transaction-list__empty\">\n          <os-icon name=\"receipt\" [size]=\"'lg'\" />\n          <h3 class=\"os-transaction-list__empty-title\">{{ noDataTitle() }}</h3>\n          <p class=\"os-transaction-list__empty-text\">{{ noDataText() }}</p>\n          @if (showAddButton()) {\n          <os-button variant=\"primary\" [size]=\"getButtonSize()\" icon=\"add\" (buttonClick)=\"onAdd()\">\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        } @else {\n        <div class=\"os-transaction-list__table\">\n          <os-data-table\n            [data]=\"paginatedTransactions()\"\n            [columns]=\"tableColumns()\"\n            [actions]=\"tableActions()\"\n            [size]=\"getTableSize()\"\n            [variant]=\"getTableVariant()\"\n            [showPagination]=\"showPagination()\"\n            [showNoData]=\"false\"\n            [pageSize]=\"pagination().pageSize\"\n            [pageIndex]=\"pagination().page\"\n            [totalItems]=\"totalItems()\"\n            [pageSizeOptions]=\"pageSizeOptions()\"\n            [showFirstLastButtons]=\"showFirstLastButtons()\"\n            (rowClick)=\"onRowClick($event)\"\n            (actionClick)=\"onTableActionClick($event)\"\n            (sortChange)=\"onSortChange($event)\"\n            (pageChange)=\"onPageChange($event)\"\n          />\n        </div>\n        }\n      </div>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-transaction-list__footer\">\n        <div class=\"os-transaction-list__footer-info\">\n          @if (showItemCount()) {\n          <span class=\"os-transaction-list__item-count\">\n            {{ getItemCountText() }}\n          </span>\n          } @if (showLastUpdated()) {\n          <span class=\"os-transaction-list__last-updated\">\n            Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n\n        @if (showFooterActions()) {\n        <div class=\"os-transaction-list__footer-actions\">\n          <ng-content select=\"[slot=footer-actions]\"></ng-content>\n        </div>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-transaction-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-transaction-list-host',\n  },\n})\nexport class OsTransactionListComponent {\n  constructor() {\n    // Update pagination total when filtered transactions change\n    effect(() => {\n      const filteredLength = this.filteredTransactions().length;\n      this.pagination.update((p) => ({ ...p, total: filteredLength }));\n    });\n  }\n\n  // Inputs\n  transactions = input<Transaction[]>([]);\n  title = input<string>('');\n  subtitle = input<string>('');\n  size = input<TransactionListSize>('medium');\n  variant = input<TransactionListVariant>('default');\n  theme = input<TransactionListTheme>('light');\n\n  // Display options\n  showHeaderActions = input<boolean>(true);\n  showRefreshButton = input<boolean>(true);\n  showExportButton = input<boolean>(true);\n  showAddButton = input<boolean>(true);\n  addButtonText = input<string>('Nova Transação');\n  showFilters = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showFooter = input<boolean>(true);\n  showItemCount = input<boolean>(true);\n  showLastUpdated = input<boolean>(true);\n  showFooterActions = input<boolean>(false);\n\n  // Filter options\n  filterOptions = input<OsFilterOption[]>([]);\n\n  // Pagination\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  // Loading state\n  isLoading = input<boolean>(false);\n  lastUpdated = input<Date>(new Date());\n\n  // No data state\n  noDataTitle = input<string>('Nenhuma transação encontrada');\n  noDataText = input<string>('Não há transações para exibir no momento.');\n\n  // Outputs\n  rowClick = output<Transaction>();\n  tableActionClick = output<OsDataTableAction>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  filterChange = output<TransactionListFilter[]>();\n  sortChange = output<TransactionListSort>();\n  pageChange = output<TransactionListPagination>();\n\n  // Internal state\n  private filters = signal<TransactionListFilter[]>([]);\n  private sort = signal<TransactionListSort | null>(null);\n  protected pagination = signal<TransactionListPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  });\n\n  // Computed properties\n  transactionListClasses = computed(() => {\n    const base = 'os-transaction-list';\n    const variant = `os-transaction-list--${this.variant()}`;\n    const size = `os-transaction-list--${this.size()}`;\n    const theme = `os-transaction-list--${this.theme()}`;\n\n    return `${base} ${variant} ${size} ${theme}`.trim();\n  });\n\n  filteredTransactions = computed(() => {\n    let filtered = [...this.transactions()];\n\n    // Apply filters\n    const activeFilters = this.filters();\n    if (activeFilters.length > 0) {\n      filtered = filtered.filter((transaction) => {\n        return activeFilters.every((filter) => {\n          const value = this.getTransactionValue(transaction, filter.key);\n          return this.matchesFilter(value, filter.value, filter.operator);\n        });\n      });\n    }\n\n    // Apply sorting\n    const sortConfig = this.sort();\n    if (sortConfig) {\n      filtered.sort((a, b) => {\n        const aValue = this.getTransactionValue(a, sortConfig.column);\n        const bValue = this.getTransactionValue(b, sortConfig.column);\n\n        if (sortConfig.direction === 'asc') {\n          return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;\n        } else {\n          return aValue < bValue ? 1 : aValue > bValue ? -1 : 0;\n        }\n      });\n    }\n\n    return filtered;\n  });\n\n  paginatedTransactions = computed(() => {\n    const filtered = this.filteredTransactions();\n    const pagination = this.pagination();\n    const start = pagination.page * pagination.pageSize;\n    const end = start + pagination.pageSize;\n\n    return filtered.slice(start, end);\n  });\n\n  totalItems = computed(() => this.filteredTransactions().length);\n\n  hasActiveFilters = computed(() => this.filters().length > 0);\n\n  tableColumns = computed(() => {\n    const baseColumns: OsDataTableColumn[] = [\n      {\n        key: 'description',\n        label: 'Descrição',\n        sortable: true,\n        width: '30%',\n      },\n      {\n        key: 'amount',\n        label: 'Valor',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'date',\n        label: 'Data',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'category',\n        label: 'Categoria',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'type',\n        label: 'Tipo',\n        sortable: true,\n        width: '10%',\n      },\n      {\n        key: 'status',\n        label: 'Status',\n        sortable: true,\n        width: '15%',\n      },\n    ];\n\n    if (this.variant() === 'detailed') {\n      return [\n        ...baseColumns,\n        {\n          key: 'account',\n          label: 'Conta',\n          sortable: true,\n          width: '10%',\n        },\n      ];\n    }\n\n    return baseColumns;\n  });\n\n  tableActions = computed(() => {\n    const actions: OsDataTableAction[] = [\n      {\n        key: 'edit',\n        label: 'Editar',\n        icon: 'edit',\n        color: 'secondary',\n      },\n      {\n        key: 'delete',\n        label: 'Excluir',\n        icon: 'trash',\n        color: 'warn',\n      },\n    ];\n\n    return actions;\n  });\n\n  // Helper methods\n  getTransactionValue(transaction: Transaction, key: string): string | number | Date {\n    switch (key) {\n      case 'description':\n        return transaction.description;\n      case 'amount':\n        return transaction.amount;\n      case 'date':\n        return transaction.date;\n      case 'category':\n        return transaction.category;\n      case 'type':\n        return transaction.type;\n      case 'status':\n        return transaction.status;\n      case 'account':\n        return transaction.account || '';\n      default:\n        return '';\n    }\n  }\n\n  matchesFilter(value: string | number | Date, filterValue: string, operator: string): boolean {\n    if (!filterValue) return true;\n\n    switch (operator) {\n      case 'equals':\n        return value === filterValue;\n      case 'contains':\n        return String(value).toLowerCase().includes(filterValue.toLowerCase());\n      case 'greater':\n        return Number(value) > Number(filterValue);\n      case 'less':\n        return Number(value) < Number(filterValue);\n      case 'between': {\n        const [min, max] = filterValue.split('-').map(Number);\n        return Number(value) >= min && Number(value) <= max;\n      }\n      default:\n        return true;\n    }\n  }\n\n  getFilterValue(key: string): string {\n    const filter = this.filters().find((f) => f.key === key);\n    return filter ? filter.value : '';\n  }\n\n  getItemCountText(): string {\n    const total = this.totalItems();\n    const pageSize = this.pagination().pageSize;\n    const page = this.pagination().page;\n    const start = page * pageSize + 1;\n    const end = Math.min((page + 1) * pageSize, total);\n\n    return `${start}-${end} de ${total} transações`;\n  }\n\n  // Size mappings\n  getButtonSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getFilterBarVariant(): OsFilterBarVariant {\n    const variantMap: Record<TransactionListVariant, OsFilterBarVariant> = {\n      default: 'default',\n      compact: 'compact',\n      detailed: 'expanded',\n    };\n    return variantMap[this.variant()];\n  }\n\n  getFilterBarSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getTableSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getTableVariant() {\n    const variantMap: Record<TransactionListVariant, 'default' | 'striped' | 'bordered'> = {\n      default: 'default',\n      compact: 'striped',\n      detailed: 'bordered',\n    };\n    return variantMap[this.variant()];\n  }\n\n  getSpinnerSize() {\n    const sizeMap: Record<TransactionListSize, 'xs' | 'sm' | 'md' | 'lg' | 'xl'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  }\n\n  // Event handlers\n  onRefresh(): void {\n    this.refresh.emit();\n  }\n\n  onExport(): void {\n    this.export.emit();\n  }\n\n  onAdd(): void {\n    this.add.emit();\n  }\n\n  onFilterChange(key: string, event: Event): void {\n    const target = event.target as HTMLInputElement | HTMLSelectElement;\n    const value = target.value;\n\n    this.filters.update((filters) => {\n      const existing = filters.find((f) => f.key === key);\n      if (existing) {\n        if (value) {\n          return filters.map((f) => (f.key === key ? { ...f, value } : f));\n        } else {\n          return filters.filter((f) => f.key !== key);\n        }\n      } else if (value) {\n        return [...filters, { key, value, operator: 'contains' as const }];\n      }\n      return filters;\n    });\n\n    this.filterChange.emit(this.filters());\n  }\n\n  onClearFilters(): void {\n    this.filters.set([]);\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters(): void {\n    this.filterChange.emit(this.filters());\n  }\n\n  onRowClick(row: OsDataTableRow): void {\n    this.rowClick.emit(row as Transaction);\n  }\n\n  onTableActionClick(action: OsDataTableAction): void {\n    this.tableActionClick.emit(action);\n  }\n\n  onSortChange(sort: Sort): void {\n    this.sort.set({ column: sort.active, direction: sort.direction as 'asc' | 'desc' });\n    this.sortChange.emit({ column: sort.active, direction: sort.direction as 'asc' | 'desc' });\n  }\n\n  onPageChange(page: PageEvent): void {\n    this.pagination.update((p) => ({ ...p, page: page.pageIndex, pageSize: page.pageSize }));\n    this.pageChange.emit({\n      page: page.pageIndex,\n      pageSize: page.pageSize,\n      total: this.totalItems(),\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "account",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"pending\" | \"completed\" | \"cancelled\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"income\" | \"expense\" | \"transfer\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [
                {
                    "id": "index-declaration-759bea4a76d0a8287041f9aa4b6407aa5799ec1d07bad4f83ba8889e07b08001914dfbe89c17c4baa087f29f3bf1951716aac4c78eb9c79030cd2f03baa403ba",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "",
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 182,
            "methods": [],
            "extends": []
        },
        {
            "name": "TransactionListFilter",
            "id": "interface-TransactionListFilter-759bea4a76d0a8287041f9aa4b6407aa5799ec1d07bad4f83ba8889e07b08001914dfbe89c17c4baa087f29f3bf1951716aac4c78eb9c79030cd2f03baa403ba",
            "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  input,\n  output,\n  signal,\n} from '@angular/core';\nimport { Sort } from '@angular/material/sort';\nimport { PageEvent } from '@angular/material/paginator';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport {\n  OsDataTableComponent,\n  OsDataTableColumn,\n  OsDataTableAction,\n  OsDataTableRow,\n} from '../../molecules/os-data-table/os-data-table.component';\nimport {\n  OsFilterBarComponent,\n  OsFilterOption,\n  OsFilterBarVariant,\n} from '../../molecules/os-filter-bar/os-filter-bar.component';\n\nexport interface Transaction {\n  id: string;\n  description: string;\n  amount: number;\n  date: Date;\n  category: string;\n  type: 'income' | 'expense' | 'transfer';\n  status: 'pending' | 'completed' | 'cancelled';\n  account?: string;\n  tags?: string[];\n  [key: string]: unknown;\n}\n\nexport interface TransactionListFilter {\n  key: string;\n  value: string;\n  operator: 'equals' | 'contains' | 'greater' | 'less' | 'between';\n}\n\nexport interface TransactionListSort {\n  column: string;\n  direction: 'asc' | 'desc';\n}\n\nexport interface TransactionListPagination {\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\nexport type TransactionListVariant = 'default' | 'compact' | 'detailed';\nexport type TransactionListSize = 'small' | 'medium' | 'large';\nexport type TransactionListTheme = 'light' | 'dark';\n\n@Component({\n  selector: 'os-transaction-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsButtonComponent,\n    OsIconComponent,\n    OsSpinnerComponent,\n    OsDataTableComponent,\n    OsFilterBarComponent,\n  ],\n  template: `\n    <div class=\"os-transaction-list\" [class]=\"transactionListClasses()\">\n      <!-- Header -->\n      @if (title() || showHeaderActions()) {\n      <div class=\"os-transaction-list__header\">\n        @if (title()) {\n        <div class=\"os-transaction-list__title-section\">\n          <h2 class=\"os-transaction-list__title\">{{ title() }}</h2>\n          @if (subtitle()) {\n          <p class=\"os-transaction-list__subtitle\">{{ subtitle() }}</p>\n          }\n        </div>\n        } @if (showHeaderActions()) {\n        <div class=\"os-transaction-list__header-actions\">\n          @if (showRefreshButton()) {\n          <os-button\n            variant=\"tertiary\"\n            [size]=\"getButtonSize()\"\n            icon=\"refresh\"\n            [loading]=\"isLoading()\"\n            (buttonClick)=\"onRefresh()\"\n            [attr.aria-label]=\"'Atualizar transações'\"\n          >\n            Atualizar\n          </os-button>\n          } @if (showExportButton()) {\n          <os-button\n            variant=\"secondary\"\n            [size]=\"getButtonSize()\"\n            icon=\"download\"\n            (buttonClick)=\"onExport()\"\n            [attr.aria-label]=\"'Exportar transações'\"\n          >\n            Exportar\n          </os-button>\n          } @if (showAddButton()) {\n          <os-button\n            variant=\"primary\"\n            [size]=\"getButtonSize()\"\n            icon=\"add\"\n            (buttonClick)=\"onAdd()\"\n            [attr.aria-label]=\"'Adicionar nova transação'\"\n          >\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <!-- Filters -->\n      @if (showFilters() && filterOptions().length > 0) {\n      <div class=\"os-transaction-list__filters\">\n        <os-filter-bar\n          [variant]=\"getFilterBarVariant()\"\n          [size]=\"getFilterBarSize()\"\n          [hasActiveFilters]=\"hasActiveFilters()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        >\n          <div class=\"os-transaction-list__filter-content\">\n            @for (option of filterOptions(); track option.key) {\n            <div class=\"os-transaction-list__filter-item\">\n              <label class=\"os-transaction-list__filter-label\" [for]=\"'filter-' + option.key\">{{\n                option.label\n              }}</label>\n              @switch (option.type) { @case ('text') {\n              <input\n                type=\"text\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('select') {\n              <select\n                class=\"os-transaction-list__filter-select\"\n                [id]=\"'filter-' + option.key\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              >\n                <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n                @for (opt of option.options; track opt.value) {\n                <option [value]=\"opt.value\">{{ opt.label }}</option>\n                }\n              </select>\n              } @case ('date') {\n              <input\n                type=\"date\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('number') {\n              <input\n                type=\"number\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n        </os-filter-bar>\n      </div>\n      }\n\n      <!-- Transaction List -->\n      <div class=\"os-transaction-list__content\">\n        @if (isLoading()) {\n        <div class=\"os-transaction-list__loading\">\n          <os-spinner [variant]=\"'default'\" [size]=\"getSpinnerSize()\" />\n          <p class=\"os-transaction-list__loading-text\">Carregando transações...</p>\n        </div>\n        } @else if (paginatedTransactions().length === 0) {\n        <div class=\"os-transaction-list__empty\">\n          <os-icon name=\"receipt\" [size]=\"'lg'\" />\n          <h3 class=\"os-transaction-list__empty-title\">{{ noDataTitle() }}</h3>\n          <p class=\"os-transaction-list__empty-text\">{{ noDataText() }}</p>\n          @if (showAddButton()) {\n          <os-button variant=\"primary\" [size]=\"getButtonSize()\" icon=\"add\" (buttonClick)=\"onAdd()\">\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        } @else {\n        <div class=\"os-transaction-list__table\">\n          <os-data-table\n            [data]=\"paginatedTransactions()\"\n            [columns]=\"tableColumns()\"\n            [actions]=\"tableActions()\"\n            [size]=\"getTableSize()\"\n            [variant]=\"getTableVariant()\"\n            [showPagination]=\"showPagination()\"\n            [showNoData]=\"false\"\n            [pageSize]=\"pagination().pageSize\"\n            [pageIndex]=\"pagination().page\"\n            [totalItems]=\"totalItems()\"\n            [pageSizeOptions]=\"pageSizeOptions()\"\n            [showFirstLastButtons]=\"showFirstLastButtons()\"\n            (rowClick)=\"onRowClick($event)\"\n            (actionClick)=\"onTableActionClick($event)\"\n            (sortChange)=\"onSortChange($event)\"\n            (pageChange)=\"onPageChange($event)\"\n          />\n        </div>\n        }\n      </div>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-transaction-list__footer\">\n        <div class=\"os-transaction-list__footer-info\">\n          @if (showItemCount()) {\n          <span class=\"os-transaction-list__item-count\">\n            {{ getItemCountText() }}\n          </span>\n          } @if (showLastUpdated()) {\n          <span class=\"os-transaction-list__last-updated\">\n            Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n\n        @if (showFooterActions()) {\n        <div class=\"os-transaction-list__footer-actions\">\n          <ng-content select=\"[slot=footer-actions]\"></ng-content>\n        </div>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-transaction-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-transaction-list-host',\n  },\n})\nexport class OsTransactionListComponent {\n  constructor() {\n    // Update pagination total when filtered transactions change\n    effect(() => {\n      const filteredLength = this.filteredTransactions().length;\n      this.pagination.update((p) => ({ ...p, total: filteredLength }));\n    });\n  }\n\n  // Inputs\n  transactions = input<Transaction[]>([]);\n  title = input<string>('');\n  subtitle = input<string>('');\n  size = input<TransactionListSize>('medium');\n  variant = input<TransactionListVariant>('default');\n  theme = input<TransactionListTheme>('light');\n\n  // Display options\n  showHeaderActions = input<boolean>(true);\n  showRefreshButton = input<boolean>(true);\n  showExportButton = input<boolean>(true);\n  showAddButton = input<boolean>(true);\n  addButtonText = input<string>('Nova Transação');\n  showFilters = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showFooter = input<boolean>(true);\n  showItemCount = input<boolean>(true);\n  showLastUpdated = input<boolean>(true);\n  showFooterActions = input<boolean>(false);\n\n  // Filter options\n  filterOptions = input<OsFilterOption[]>([]);\n\n  // Pagination\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  // Loading state\n  isLoading = input<boolean>(false);\n  lastUpdated = input<Date>(new Date());\n\n  // No data state\n  noDataTitle = input<string>('Nenhuma transação encontrada');\n  noDataText = input<string>('Não há transações para exibir no momento.');\n\n  // Outputs\n  rowClick = output<Transaction>();\n  tableActionClick = output<OsDataTableAction>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  filterChange = output<TransactionListFilter[]>();\n  sortChange = output<TransactionListSort>();\n  pageChange = output<TransactionListPagination>();\n\n  // Internal state\n  private filters = signal<TransactionListFilter[]>([]);\n  private sort = signal<TransactionListSort | null>(null);\n  protected pagination = signal<TransactionListPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  });\n\n  // Computed properties\n  transactionListClasses = computed(() => {\n    const base = 'os-transaction-list';\n    const variant = `os-transaction-list--${this.variant()}`;\n    const size = `os-transaction-list--${this.size()}`;\n    const theme = `os-transaction-list--${this.theme()}`;\n\n    return `${base} ${variant} ${size} ${theme}`.trim();\n  });\n\n  filteredTransactions = computed(() => {\n    let filtered = [...this.transactions()];\n\n    // Apply filters\n    const activeFilters = this.filters();\n    if (activeFilters.length > 0) {\n      filtered = filtered.filter((transaction) => {\n        return activeFilters.every((filter) => {\n          const value = this.getTransactionValue(transaction, filter.key);\n          return this.matchesFilter(value, filter.value, filter.operator);\n        });\n      });\n    }\n\n    // Apply sorting\n    const sortConfig = this.sort();\n    if (sortConfig) {\n      filtered.sort((a, b) => {\n        const aValue = this.getTransactionValue(a, sortConfig.column);\n        const bValue = this.getTransactionValue(b, sortConfig.column);\n\n        if (sortConfig.direction === 'asc') {\n          return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;\n        } else {\n          return aValue < bValue ? 1 : aValue > bValue ? -1 : 0;\n        }\n      });\n    }\n\n    return filtered;\n  });\n\n  paginatedTransactions = computed(() => {\n    const filtered = this.filteredTransactions();\n    const pagination = this.pagination();\n    const start = pagination.page * pagination.pageSize;\n    const end = start + pagination.pageSize;\n\n    return filtered.slice(start, end);\n  });\n\n  totalItems = computed(() => this.filteredTransactions().length);\n\n  hasActiveFilters = computed(() => this.filters().length > 0);\n\n  tableColumns = computed(() => {\n    const baseColumns: OsDataTableColumn[] = [\n      {\n        key: 'description',\n        label: 'Descrição',\n        sortable: true,\n        width: '30%',\n      },\n      {\n        key: 'amount',\n        label: 'Valor',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'date',\n        label: 'Data',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'category',\n        label: 'Categoria',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'type',\n        label: 'Tipo',\n        sortable: true,\n        width: '10%',\n      },\n      {\n        key: 'status',\n        label: 'Status',\n        sortable: true,\n        width: '15%',\n      },\n    ];\n\n    if (this.variant() === 'detailed') {\n      return [\n        ...baseColumns,\n        {\n          key: 'account',\n          label: 'Conta',\n          sortable: true,\n          width: '10%',\n        },\n      ];\n    }\n\n    return baseColumns;\n  });\n\n  tableActions = computed(() => {\n    const actions: OsDataTableAction[] = [\n      {\n        key: 'edit',\n        label: 'Editar',\n        icon: 'edit',\n        color: 'secondary',\n      },\n      {\n        key: 'delete',\n        label: 'Excluir',\n        icon: 'trash',\n        color: 'warn',\n      },\n    ];\n\n    return actions;\n  });\n\n  // Helper methods\n  getTransactionValue(transaction: Transaction, key: string): string | number | Date {\n    switch (key) {\n      case 'description':\n        return transaction.description;\n      case 'amount':\n        return transaction.amount;\n      case 'date':\n        return transaction.date;\n      case 'category':\n        return transaction.category;\n      case 'type':\n        return transaction.type;\n      case 'status':\n        return transaction.status;\n      case 'account':\n        return transaction.account || '';\n      default:\n        return '';\n    }\n  }\n\n  matchesFilter(value: string | number | Date, filterValue: string, operator: string): boolean {\n    if (!filterValue) return true;\n\n    switch (operator) {\n      case 'equals':\n        return value === filterValue;\n      case 'contains':\n        return String(value).toLowerCase().includes(filterValue.toLowerCase());\n      case 'greater':\n        return Number(value) > Number(filterValue);\n      case 'less':\n        return Number(value) < Number(filterValue);\n      case 'between': {\n        const [min, max] = filterValue.split('-').map(Number);\n        return Number(value) >= min && Number(value) <= max;\n      }\n      default:\n        return true;\n    }\n  }\n\n  getFilterValue(key: string): string {\n    const filter = this.filters().find((f) => f.key === key);\n    return filter ? filter.value : '';\n  }\n\n  getItemCountText(): string {\n    const total = this.totalItems();\n    const pageSize = this.pagination().pageSize;\n    const page = this.pagination().page;\n    const start = page * pageSize + 1;\n    const end = Math.min((page + 1) * pageSize, total);\n\n    return `${start}-${end} de ${total} transações`;\n  }\n\n  // Size mappings\n  getButtonSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getFilterBarVariant(): OsFilterBarVariant {\n    const variantMap: Record<TransactionListVariant, OsFilterBarVariant> = {\n      default: 'default',\n      compact: 'compact',\n      detailed: 'expanded',\n    };\n    return variantMap[this.variant()];\n  }\n\n  getFilterBarSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getTableSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getTableVariant() {\n    const variantMap: Record<TransactionListVariant, 'default' | 'striped' | 'bordered'> = {\n      default: 'default',\n      compact: 'striped',\n      detailed: 'bordered',\n    };\n    return variantMap[this.variant()];\n  }\n\n  getSpinnerSize() {\n    const sizeMap: Record<TransactionListSize, 'xs' | 'sm' | 'md' | 'lg' | 'xl'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  }\n\n  // Event handlers\n  onRefresh(): void {\n    this.refresh.emit();\n  }\n\n  onExport(): void {\n    this.export.emit();\n  }\n\n  onAdd(): void {\n    this.add.emit();\n  }\n\n  onFilterChange(key: string, event: Event): void {\n    const target = event.target as HTMLInputElement | HTMLSelectElement;\n    const value = target.value;\n\n    this.filters.update((filters) => {\n      const existing = filters.find((f) => f.key === key);\n      if (existing) {\n        if (value) {\n          return filters.map((f) => (f.key === key ? { ...f, value } : f));\n        } else {\n          return filters.filter((f) => f.key !== key);\n        }\n      } else if (value) {\n        return [...filters, { key, value, operator: 'contains' as const }];\n      }\n      return filters;\n    });\n\n    this.filterChange.emit(this.filters());\n  }\n\n  onClearFilters(): void {\n    this.filters.set([]);\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters(): void {\n    this.filterChange.emit(this.filters());\n  }\n\n  onRowClick(row: OsDataTableRow): void {\n    this.rowClick.emit(row as Transaction);\n  }\n\n  onTableActionClick(action: OsDataTableAction): void {\n    this.tableActionClick.emit(action);\n  }\n\n  onSortChange(sort: Sort): void {\n    this.sort.set({ column: sort.active, direction: sort.direction as 'asc' | 'desc' });\n    this.sortChange.emit({ column: sort.active, direction: sort.direction as 'asc' | 'desc' });\n  }\n\n  onPageChange(page: PageEvent): void {\n    this.pagination.update((p) => ({ ...p, page: page.pageIndex, pageSize: page.pageSize }));\n    this.pageChange.emit({\n      page: page.pageIndex,\n      pageSize: page.pageSize,\n      total: this.totalItems(),\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "operator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"equals\" | \"contains\" | \"greater\" | \"less\" | \"between\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "TransactionListPagination",
            "id": "interface-TransactionListPagination-759bea4a76d0a8287041f9aa4b6407aa5799ec1d07bad4f83ba8889e07b08001914dfbe89c17c4baa087f29f3bf1951716aac4c78eb9c79030cd2f03baa403ba",
            "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  input,\n  output,\n  signal,\n} from '@angular/core';\nimport { Sort } from '@angular/material/sort';\nimport { PageEvent } from '@angular/material/paginator';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport {\n  OsDataTableComponent,\n  OsDataTableColumn,\n  OsDataTableAction,\n  OsDataTableRow,\n} from '../../molecules/os-data-table/os-data-table.component';\nimport {\n  OsFilterBarComponent,\n  OsFilterOption,\n  OsFilterBarVariant,\n} from '../../molecules/os-filter-bar/os-filter-bar.component';\n\nexport interface Transaction {\n  id: string;\n  description: string;\n  amount: number;\n  date: Date;\n  category: string;\n  type: 'income' | 'expense' | 'transfer';\n  status: 'pending' | 'completed' | 'cancelled';\n  account?: string;\n  tags?: string[];\n  [key: string]: unknown;\n}\n\nexport interface TransactionListFilter {\n  key: string;\n  value: string;\n  operator: 'equals' | 'contains' | 'greater' | 'less' | 'between';\n}\n\nexport interface TransactionListSort {\n  column: string;\n  direction: 'asc' | 'desc';\n}\n\nexport interface TransactionListPagination {\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\nexport type TransactionListVariant = 'default' | 'compact' | 'detailed';\nexport type TransactionListSize = 'small' | 'medium' | 'large';\nexport type TransactionListTheme = 'light' | 'dark';\n\n@Component({\n  selector: 'os-transaction-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsButtonComponent,\n    OsIconComponent,\n    OsSpinnerComponent,\n    OsDataTableComponent,\n    OsFilterBarComponent,\n  ],\n  template: `\n    <div class=\"os-transaction-list\" [class]=\"transactionListClasses()\">\n      <!-- Header -->\n      @if (title() || showHeaderActions()) {\n      <div class=\"os-transaction-list__header\">\n        @if (title()) {\n        <div class=\"os-transaction-list__title-section\">\n          <h2 class=\"os-transaction-list__title\">{{ title() }}</h2>\n          @if (subtitle()) {\n          <p class=\"os-transaction-list__subtitle\">{{ subtitle() }}</p>\n          }\n        </div>\n        } @if (showHeaderActions()) {\n        <div class=\"os-transaction-list__header-actions\">\n          @if (showRefreshButton()) {\n          <os-button\n            variant=\"tertiary\"\n            [size]=\"getButtonSize()\"\n            icon=\"refresh\"\n            [loading]=\"isLoading()\"\n            (buttonClick)=\"onRefresh()\"\n            [attr.aria-label]=\"'Atualizar transações'\"\n          >\n            Atualizar\n          </os-button>\n          } @if (showExportButton()) {\n          <os-button\n            variant=\"secondary\"\n            [size]=\"getButtonSize()\"\n            icon=\"download\"\n            (buttonClick)=\"onExport()\"\n            [attr.aria-label]=\"'Exportar transações'\"\n          >\n            Exportar\n          </os-button>\n          } @if (showAddButton()) {\n          <os-button\n            variant=\"primary\"\n            [size]=\"getButtonSize()\"\n            icon=\"add\"\n            (buttonClick)=\"onAdd()\"\n            [attr.aria-label]=\"'Adicionar nova transação'\"\n          >\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <!-- Filters -->\n      @if (showFilters() && filterOptions().length > 0) {\n      <div class=\"os-transaction-list__filters\">\n        <os-filter-bar\n          [variant]=\"getFilterBarVariant()\"\n          [size]=\"getFilterBarSize()\"\n          [hasActiveFilters]=\"hasActiveFilters()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        >\n          <div class=\"os-transaction-list__filter-content\">\n            @for (option of filterOptions(); track option.key) {\n            <div class=\"os-transaction-list__filter-item\">\n              <label class=\"os-transaction-list__filter-label\" [for]=\"'filter-' + option.key\">{{\n                option.label\n              }}</label>\n              @switch (option.type) { @case ('text') {\n              <input\n                type=\"text\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('select') {\n              <select\n                class=\"os-transaction-list__filter-select\"\n                [id]=\"'filter-' + option.key\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              >\n                <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n                @for (opt of option.options; track opt.value) {\n                <option [value]=\"opt.value\">{{ opt.label }}</option>\n                }\n              </select>\n              } @case ('date') {\n              <input\n                type=\"date\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('number') {\n              <input\n                type=\"number\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n        </os-filter-bar>\n      </div>\n      }\n\n      <!-- Transaction List -->\n      <div class=\"os-transaction-list__content\">\n        @if (isLoading()) {\n        <div class=\"os-transaction-list__loading\">\n          <os-spinner [variant]=\"'default'\" [size]=\"getSpinnerSize()\" />\n          <p class=\"os-transaction-list__loading-text\">Carregando transações...</p>\n        </div>\n        } @else if (paginatedTransactions().length === 0) {\n        <div class=\"os-transaction-list__empty\">\n          <os-icon name=\"receipt\" [size]=\"'lg'\" />\n          <h3 class=\"os-transaction-list__empty-title\">{{ noDataTitle() }}</h3>\n          <p class=\"os-transaction-list__empty-text\">{{ noDataText() }}</p>\n          @if (showAddButton()) {\n          <os-button variant=\"primary\" [size]=\"getButtonSize()\" icon=\"add\" (buttonClick)=\"onAdd()\">\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        } @else {\n        <div class=\"os-transaction-list__table\">\n          <os-data-table\n            [data]=\"paginatedTransactions()\"\n            [columns]=\"tableColumns()\"\n            [actions]=\"tableActions()\"\n            [size]=\"getTableSize()\"\n            [variant]=\"getTableVariant()\"\n            [showPagination]=\"showPagination()\"\n            [showNoData]=\"false\"\n            [pageSize]=\"pagination().pageSize\"\n            [pageIndex]=\"pagination().page\"\n            [totalItems]=\"totalItems()\"\n            [pageSizeOptions]=\"pageSizeOptions()\"\n            [showFirstLastButtons]=\"showFirstLastButtons()\"\n            (rowClick)=\"onRowClick($event)\"\n            (actionClick)=\"onTableActionClick($event)\"\n            (sortChange)=\"onSortChange($event)\"\n            (pageChange)=\"onPageChange($event)\"\n          />\n        </div>\n        }\n      </div>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-transaction-list__footer\">\n        <div class=\"os-transaction-list__footer-info\">\n          @if (showItemCount()) {\n          <span class=\"os-transaction-list__item-count\">\n            {{ getItemCountText() }}\n          </span>\n          } @if (showLastUpdated()) {\n          <span class=\"os-transaction-list__last-updated\">\n            Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n\n        @if (showFooterActions()) {\n        <div class=\"os-transaction-list__footer-actions\">\n          <ng-content select=\"[slot=footer-actions]\"></ng-content>\n        </div>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-transaction-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-transaction-list-host',\n  },\n})\nexport class OsTransactionListComponent {\n  constructor() {\n    // Update pagination total when filtered transactions change\n    effect(() => {\n      const filteredLength = this.filteredTransactions().length;\n      this.pagination.update((p) => ({ ...p, total: filteredLength }));\n    });\n  }\n\n  // Inputs\n  transactions = input<Transaction[]>([]);\n  title = input<string>('');\n  subtitle = input<string>('');\n  size = input<TransactionListSize>('medium');\n  variant = input<TransactionListVariant>('default');\n  theme = input<TransactionListTheme>('light');\n\n  // Display options\n  showHeaderActions = input<boolean>(true);\n  showRefreshButton = input<boolean>(true);\n  showExportButton = input<boolean>(true);\n  showAddButton = input<boolean>(true);\n  addButtonText = input<string>('Nova Transação');\n  showFilters = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showFooter = input<boolean>(true);\n  showItemCount = input<boolean>(true);\n  showLastUpdated = input<boolean>(true);\n  showFooterActions = input<boolean>(false);\n\n  // Filter options\n  filterOptions = input<OsFilterOption[]>([]);\n\n  // Pagination\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  // Loading state\n  isLoading = input<boolean>(false);\n  lastUpdated = input<Date>(new Date());\n\n  // No data state\n  noDataTitle = input<string>('Nenhuma transação encontrada');\n  noDataText = input<string>('Não há transações para exibir no momento.');\n\n  // Outputs\n  rowClick = output<Transaction>();\n  tableActionClick = output<OsDataTableAction>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  filterChange = output<TransactionListFilter[]>();\n  sortChange = output<TransactionListSort>();\n  pageChange = output<TransactionListPagination>();\n\n  // Internal state\n  private filters = signal<TransactionListFilter[]>([]);\n  private sort = signal<TransactionListSort | null>(null);\n  protected pagination = signal<TransactionListPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  });\n\n  // Computed properties\n  transactionListClasses = computed(() => {\n    const base = 'os-transaction-list';\n    const variant = `os-transaction-list--${this.variant()}`;\n    const size = `os-transaction-list--${this.size()}`;\n    const theme = `os-transaction-list--${this.theme()}`;\n\n    return `${base} ${variant} ${size} ${theme}`.trim();\n  });\n\n  filteredTransactions = computed(() => {\n    let filtered = [...this.transactions()];\n\n    // Apply filters\n    const activeFilters = this.filters();\n    if (activeFilters.length > 0) {\n      filtered = filtered.filter((transaction) => {\n        return activeFilters.every((filter) => {\n          const value = this.getTransactionValue(transaction, filter.key);\n          return this.matchesFilter(value, filter.value, filter.operator);\n        });\n      });\n    }\n\n    // Apply sorting\n    const sortConfig = this.sort();\n    if (sortConfig) {\n      filtered.sort((a, b) => {\n        const aValue = this.getTransactionValue(a, sortConfig.column);\n        const bValue = this.getTransactionValue(b, sortConfig.column);\n\n        if (sortConfig.direction === 'asc') {\n          return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;\n        } else {\n          return aValue < bValue ? 1 : aValue > bValue ? -1 : 0;\n        }\n      });\n    }\n\n    return filtered;\n  });\n\n  paginatedTransactions = computed(() => {\n    const filtered = this.filteredTransactions();\n    const pagination = this.pagination();\n    const start = pagination.page * pagination.pageSize;\n    const end = start + pagination.pageSize;\n\n    return filtered.slice(start, end);\n  });\n\n  totalItems = computed(() => this.filteredTransactions().length);\n\n  hasActiveFilters = computed(() => this.filters().length > 0);\n\n  tableColumns = computed(() => {\n    const baseColumns: OsDataTableColumn[] = [\n      {\n        key: 'description',\n        label: 'Descrição',\n        sortable: true,\n        width: '30%',\n      },\n      {\n        key: 'amount',\n        label: 'Valor',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'date',\n        label: 'Data',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'category',\n        label: 'Categoria',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'type',\n        label: 'Tipo',\n        sortable: true,\n        width: '10%',\n      },\n      {\n        key: 'status',\n        label: 'Status',\n        sortable: true,\n        width: '15%',\n      },\n    ];\n\n    if (this.variant() === 'detailed') {\n      return [\n        ...baseColumns,\n        {\n          key: 'account',\n          label: 'Conta',\n          sortable: true,\n          width: '10%',\n        },\n      ];\n    }\n\n    return baseColumns;\n  });\n\n  tableActions = computed(() => {\n    const actions: OsDataTableAction[] = [\n      {\n        key: 'edit',\n        label: 'Editar',\n        icon: 'edit',\n        color: 'secondary',\n      },\n      {\n        key: 'delete',\n        label: 'Excluir',\n        icon: 'trash',\n        color: 'warn',\n      },\n    ];\n\n    return actions;\n  });\n\n  // Helper methods\n  getTransactionValue(transaction: Transaction, key: string): string | number | Date {\n    switch (key) {\n      case 'description':\n        return transaction.description;\n      case 'amount':\n        return transaction.amount;\n      case 'date':\n        return transaction.date;\n      case 'category':\n        return transaction.category;\n      case 'type':\n        return transaction.type;\n      case 'status':\n        return transaction.status;\n      case 'account':\n        return transaction.account || '';\n      default:\n        return '';\n    }\n  }\n\n  matchesFilter(value: string | number | Date, filterValue: string, operator: string): boolean {\n    if (!filterValue) return true;\n\n    switch (operator) {\n      case 'equals':\n        return value === filterValue;\n      case 'contains':\n        return String(value).toLowerCase().includes(filterValue.toLowerCase());\n      case 'greater':\n        return Number(value) > Number(filterValue);\n      case 'less':\n        return Number(value) < Number(filterValue);\n      case 'between': {\n        const [min, max] = filterValue.split('-').map(Number);\n        return Number(value) >= min && Number(value) <= max;\n      }\n      default:\n        return true;\n    }\n  }\n\n  getFilterValue(key: string): string {\n    const filter = this.filters().find((f) => f.key === key);\n    return filter ? filter.value : '';\n  }\n\n  getItemCountText(): string {\n    const total = this.totalItems();\n    const pageSize = this.pagination().pageSize;\n    const page = this.pagination().page;\n    const start = page * pageSize + 1;\n    const end = Math.min((page + 1) * pageSize, total);\n\n    return `${start}-${end} de ${total} transações`;\n  }\n\n  // Size mappings\n  getButtonSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getFilterBarVariant(): OsFilterBarVariant {\n    const variantMap: Record<TransactionListVariant, OsFilterBarVariant> = {\n      default: 'default',\n      compact: 'compact',\n      detailed: 'expanded',\n    };\n    return variantMap[this.variant()];\n  }\n\n  getFilterBarSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getTableSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getTableVariant() {\n    const variantMap: Record<TransactionListVariant, 'default' | 'striped' | 'bordered'> = {\n      default: 'default',\n      compact: 'striped',\n      detailed: 'bordered',\n    };\n    return variantMap[this.variant()];\n  }\n\n  getSpinnerSize() {\n    const sizeMap: Record<TransactionListSize, 'xs' | 'sm' | 'md' | 'lg' | 'xl'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  }\n\n  // Event handlers\n  onRefresh(): void {\n    this.refresh.emit();\n  }\n\n  onExport(): void {\n    this.export.emit();\n  }\n\n  onAdd(): void {\n    this.add.emit();\n  }\n\n  onFilterChange(key: string, event: Event): void {\n    const target = event.target as HTMLInputElement | HTMLSelectElement;\n    const value = target.value;\n\n    this.filters.update((filters) => {\n      const existing = filters.find((f) => f.key === key);\n      if (existing) {\n        if (value) {\n          return filters.map((f) => (f.key === key ? { ...f, value } : f));\n        } else {\n          return filters.filter((f) => f.key !== key);\n        }\n      } else if (value) {\n        return [...filters, { key, value, operator: 'contains' as const }];\n      }\n      return filters;\n    });\n\n    this.filterChange.emit(this.filters());\n  }\n\n  onClearFilters(): void {\n    this.filters.set([]);\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters(): void {\n    this.filterChange.emit(this.filters());\n  }\n\n  onRowClick(row: OsDataTableRow): void {\n    this.rowClick.emit(row as Transaction);\n  }\n\n  onTableActionClick(action: OsDataTableAction): void {\n    this.tableActionClick.emit(action);\n  }\n\n  onSortChange(sort: Sort): void {\n    this.sort.set({ column: sort.active, direction: sort.direction as 'asc' | 'desc' });\n    this.sortChange.emit({ column: sort.active, direction: sort.direction as 'asc' | 'desc' });\n  }\n\n  onPageChange(page: PageEvent): void {\n    this.pagination.update((p) => ({ ...p, page: page.pageIndex, pageSize: page.pageSize }));\n    this.pageChange.emit({\n      page: page.pageIndex,\n      pageSize: page.pageSize,\n      total: this.totalItems(),\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "TransactionListSort",
            "id": "interface-TransactionListSort-759bea4a76d0a8287041f9aa4b6407aa5799ec1d07bad4f83ba8889e07b08001914dfbe89c17c4baa087f29f3bf1951716aac4c78eb9c79030cd2f03baa403ba",
            "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  input,\n  output,\n  signal,\n} from '@angular/core';\nimport { Sort } from '@angular/material/sort';\nimport { PageEvent } from '@angular/material/paginator';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport {\n  OsDataTableComponent,\n  OsDataTableColumn,\n  OsDataTableAction,\n  OsDataTableRow,\n} from '../../molecules/os-data-table/os-data-table.component';\nimport {\n  OsFilterBarComponent,\n  OsFilterOption,\n  OsFilterBarVariant,\n} from '../../molecules/os-filter-bar/os-filter-bar.component';\n\nexport interface Transaction {\n  id: string;\n  description: string;\n  amount: number;\n  date: Date;\n  category: string;\n  type: 'income' | 'expense' | 'transfer';\n  status: 'pending' | 'completed' | 'cancelled';\n  account?: string;\n  tags?: string[];\n  [key: string]: unknown;\n}\n\nexport interface TransactionListFilter {\n  key: string;\n  value: string;\n  operator: 'equals' | 'contains' | 'greater' | 'less' | 'between';\n}\n\nexport interface TransactionListSort {\n  column: string;\n  direction: 'asc' | 'desc';\n}\n\nexport interface TransactionListPagination {\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\nexport type TransactionListVariant = 'default' | 'compact' | 'detailed';\nexport type TransactionListSize = 'small' | 'medium' | 'large';\nexport type TransactionListTheme = 'light' | 'dark';\n\n@Component({\n  selector: 'os-transaction-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsButtonComponent,\n    OsIconComponent,\n    OsSpinnerComponent,\n    OsDataTableComponent,\n    OsFilterBarComponent,\n  ],\n  template: `\n    <div class=\"os-transaction-list\" [class]=\"transactionListClasses()\">\n      <!-- Header -->\n      @if (title() || showHeaderActions()) {\n      <div class=\"os-transaction-list__header\">\n        @if (title()) {\n        <div class=\"os-transaction-list__title-section\">\n          <h2 class=\"os-transaction-list__title\">{{ title() }}</h2>\n          @if (subtitle()) {\n          <p class=\"os-transaction-list__subtitle\">{{ subtitle() }}</p>\n          }\n        </div>\n        } @if (showHeaderActions()) {\n        <div class=\"os-transaction-list__header-actions\">\n          @if (showRefreshButton()) {\n          <os-button\n            variant=\"tertiary\"\n            [size]=\"getButtonSize()\"\n            icon=\"refresh\"\n            [loading]=\"isLoading()\"\n            (buttonClick)=\"onRefresh()\"\n            [attr.aria-label]=\"'Atualizar transações'\"\n          >\n            Atualizar\n          </os-button>\n          } @if (showExportButton()) {\n          <os-button\n            variant=\"secondary\"\n            [size]=\"getButtonSize()\"\n            icon=\"download\"\n            (buttonClick)=\"onExport()\"\n            [attr.aria-label]=\"'Exportar transações'\"\n          >\n            Exportar\n          </os-button>\n          } @if (showAddButton()) {\n          <os-button\n            variant=\"primary\"\n            [size]=\"getButtonSize()\"\n            icon=\"add\"\n            (buttonClick)=\"onAdd()\"\n            [attr.aria-label]=\"'Adicionar nova transação'\"\n          >\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <!-- Filters -->\n      @if (showFilters() && filterOptions().length > 0) {\n      <div class=\"os-transaction-list__filters\">\n        <os-filter-bar\n          [variant]=\"getFilterBarVariant()\"\n          [size]=\"getFilterBarSize()\"\n          [hasActiveFilters]=\"hasActiveFilters()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        >\n          <div class=\"os-transaction-list__filter-content\">\n            @for (option of filterOptions(); track option.key) {\n            <div class=\"os-transaction-list__filter-item\">\n              <label class=\"os-transaction-list__filter-label\" [for]=\"'filter-' + option.key\">{{\n                option.label\n              }}</label>\n              @switch (option.type) { @case ('text') {\n              <input\n                type=\"text\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('select') {\n              <select\n                class=\"os-transaction-list__filter-select\"\n                [id]=\"'filter-' + option.key\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              >\n                <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n                @for (opt of option.options; track opt.value) {\n                <option [value]=\"opt.value\">{{ opt.label }}</option>\n                }\n              </select>\n              } @case ('date') {\n              <input\n                type=\"date\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('number') {\n              <input\n                type=\"number\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n        </os-filter-bar>\n      </div>\n      }\n\n      <!-- Transaction List -->\n      <div class=\"os-transaction-list__content\">\n        @if (isLoading()) {\n        <div class=\"os-transaction-list__loading\">\n          <os-spinner [variant]=\"'default'\" [size]=\"getSpinnerSize()\" />\n          <p class=\"os-transaction-list__loading-text\">Carregando transações...</p>\n        </div>\n        } @else if (paginatedTransactions().length === 0) {\n        <div class=\"os-transaction-list__empty\">\n          <os-icon name=\"receipt\" [size]=\"'lg'\" />\n          <h3 class=\"os-transaction-list__empty-title\">{{ noDataTitle() }}</h3>\n          <p class=\"os-transaction-list__empty-text\">{{ noDataText() }}</p>\n          @if (showAddButton()) {\n          <os-button variant=\"primary\" [size]=\"getButtonSize()\" icon=\"add\" (buttonClick)=\"onAdd()\">\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        } @else {\n        <div class=\"os-transaction-list__table\">\n          <os-data-table\n            [data]=\"paginatedTransactions()\"\n            [columns]=\"tableColumns()\"\n            [actions]=\"tableActions()\"\n            [size]=\"getTableSize()\"\n            [variant]=\"getTableVariant()\"\n            [showPagination]=\"showPagination()\"\n            [showNoData]=\"false\"\n            [pageSize]=\"pagination().pageSize\"\n            [pageIndex]=\"pagination().page\"\n            [totalItems]=\"totalItems()\"\n            [pageSizeOptions]=\"pageSizeOptions()\"\n            [showFirstLastButtons]=\"showFirstLastButtons()\"\n            (rowClick)=\"onRowClick($event)\"\n            (actionClick)=\"onTableActionClick($event)\"\n            (sortChange)=\"onSortChange($event)\"\n            (pageChange)=\"onPageChange($event)\"\n          />\n        </div>\n        }\n      </div>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-transaction-list__footer\">\n        <div class=\"os-transaction-list__footer-info\">\n          @if (showItemCount()) {\n          <span class=\"os-transaction-list__item-count\">\n            {{ getItemCountText() }}\n          </span>\n          } @if (showLastUpdated()) {\n          <span class=\"os-transaction-list__last-updated\">\n            Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n\n        @if (showFooterActions()) {\n        <div class=\"os-transaction-list__footer-actions\">\n          <ng-content select=\"[slot=footer-actions]\"></ng-content>\n        </div>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-transaction-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-transaction-list-host',\n  },\n})\nexport class OsTransactionListComponent {\n  constructor() {\n    // Update pagination total when filtered transactions change\n    effect(() => {\n      const filteredLength = this.filteredTransactions().length;\n      this.pagination.update((p) => ({ ...p, total: filteredLength }));\n    });\n  }\n\n  // Inputs\n  transactions = input<Transaction[]>([]);\n  title = input<string>('');\n  subtitle = input<string>('');\n  size = input<TransactionListSize>('medium');\n  variant = input<TransactionListVariant>('default');\n  theme = input<TransactionListTheme>('light');\n\n  // Display options\n  showHeaderActions = input<boolean>(true);\n  showRefreshButton = input<boolean>(true);\n  showExportButton = input<boolean>(true);\n  showAddButton = input<boolean>(true);\n  addButtonText = input<string>('Nova Transação');\n  showFilters = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showFooter = input<boolean>(true);\n  showItemCount = input<boolean>(true);\n  showLastUpdated = input<boolean>(true);\n  showFooterActions = input<boolean>(false);\n\n  // Filter options\n  filterOptions = input<OsFilterOption[]>([]);\n\n  // Pagination\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  // Loading state\n  isLoading = input<boolean>(false);\n  lastUpdated = input<Date>(new Date());\n\n  // No data state\n  noDataTitle = input<string>('Nenhuma transação encontrada');\n  noDataText = input<string>('Não há transações para exibir no momento.');\n\n  // Outputs\n  rowClick = output<Transaction>();\n  tableActionClick = output<OsDataTableAction>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  filterChange = output<TransactionListFilter[]>();\n  sortChange = output<TransactionListSort>();\n  pageChange = output<TransactionListPagination>();\n\n  // Internal state\n  private filters = signal<TransactionListFilter[]>([]);\n  private sort = signal<TransactionListSort | null>(null);\n  protected pagination = signal<TransactionListPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  });\n\n  // Computed properties\n  transactionListClasses = computed(() => {\n    const base = 'os-transaction-list';\n    const variant = `os-transaction-list--${this.variant()}`;\n    const size = `os-transaction-list--${this.size()}`;\n    const theme = `os-transaction-list--${this.theme()}`;\n\n    return `${base} ${variant} ${size} ${theme}`.trim();\n  });\n\n  filteredTransactions = computed(() => {\n    let filtered = [...this.transactions()];\n\n    // Apply filters\n    const activeFilters = this.filters();\n    if (activeFilters.length > 0) {\n      filtered = filtered.filter((transaction) => {\n        return activeFilters.every((filter) => {\n          const value = this.getTransactionValue(transaction, filter.key);\n          return this.matchesFilter(value, filter.value, filter.operator);\n        });\n      });\n    }\n\n    // Apply sorting\n    const sortConfig = this.sort();\n    if (sortConfig) {\n      filtered.sort((a, b) => {\n        const aValue = this.getTransactionValue(a, sortConfig.column);\n        const bValue = this.getTransactionValue(b, sortConfig.column);\n\n        if (sortConfig.direction === 'asc') {\n          return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;\n        } else {\n          return aValue < bValue ? 1 : aValue > bValue ? -1 : 0;\n        }\n      });\n    }\n\n    return filtered;\n  });\n\n  paginatedTransactions = computed(() => {\n    const filtered = this.filteredTransactions();\n    const pagination = this.pagination();\n    const start = pagination.page * pagination.pageSize;\n    const end = start + pagination.pageSize;\n\n    return filtered.slice(start, end);\n  });\n\n  totalItems = computed(() => this.filteredTransactions().length);\n\n  hasActiveFilters = computed(() => this.filters().length > 0);\n\n  tableColumns = computed(() => {\n    const baseColumns: OsDataTableColumn[] = [\n      {\n        key: 'description',\n        label: 'Descrição',\n        sortable: true,\n        width: '30%',\n      },\n      {\n        key: 'amount',\n        label: 'Valor',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'date',\n        label: 'Data',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'category',\n        label: 'Categoria',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'type',\n        label: 'Tipo',\n        sortable: true,\n        width: '10%',\n      },\n      {\n        key: 'status',\n        label: 'Status',\n        sortable: true,\n        width: '15%',\n      },\n    ];\n\n    if (this.variant() === 'detailed') {\n      return [\n        ...baseColumns,\n        {\n          key: 'account',\n          label: 'Conta',\n          sortable: true,\n          width: '10%',\n        },\n      ];\n    }\n\n    return baseColumns;\n  });\n\n  tableActions = computed(() => {\n    const actions: OsDataTableAction[] = [\n      {\n        key: 'edit',\n        label: 'Editar',\n        icon: 'edit',\n        color: 'secondary',\n      },\n      {\n        key: 'delete',\n        label: 'Excluir',\n        icon: 'trash',\n        color: 'warn',\n      },\n    ];\n\n    return actions;\n  });\n\n  // Helper methods\n  getTransactionValue(transaction: Transaction, key: string): string | number | Date {\n    switch (key) {\n      case 'description':\n        return transaction.description;\n      case 'amount':\n        return transaction.amount;\n      case 'date':\n        return transaction.date;\n      case 'category':\n        return transaction.category;\n      case 'type':\n        return transaction.type;\n      case 'status':\n        return transaction.status;\n      case 'account':\n        return transaction.account || '';\n      default:\n        return '';\n    }\n  }\n\n  matchesFilter(value: string | number | Date, filterValue: string, operator: string): boolean {\n    if (!filterValue) return true;\n\n    switch (operator) {\n      case 'equals':\n        return value === filterValue;\n      case 'contains':\n        return String(value).toLowerCase().includes(filterValue.toLowerCase());\n      case 'greater':\n        return Number(value) > Number(filterValue);\n      case 'less':\n        return Number(value) < Number(filterValue);\n      case 'between': {\n        const [min, max] = filterValue.split('-').map(Number);\n        return Number(value) >= min && Number(value) <= max;\n      }\n      default:\n        return true;\n    }\n  }\n\n  getFilterValue(key: string): string {\n    const filter = this.filters().find((f) => f.key === key);\n    return filter ? filter.value : '';\n  }\n\n  getItemCountText(): string {\n    const total = this.totalItems();\n    const pageSize = this.pagination().pageSize;\n    const page = this.pagination().page;\n    const start = page * pageSize + 1;\n    const end = Math.min((page + 1) * pageSize, total);\n\n    return `${start}-${end} de ${total} transações`;\n  }\n\n  // Size mappings\n  getButtonSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getFilterBarVariant(): OsFilterBarVariant {\n    const variantMap: Record<TransactionListVariant, OsFilterBarVariant> = {\n      default: 'default',\n      compact: 'compact',\n      detailed: 'expanded',\n    };\n    return variantMap[this.variant()];\n  }\n\n  getFilterBarSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getTableSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getTableVariant() {\n    const variantMap: Record<TransactionListVariant, 'default' | 'striped' | 'bordered'> = {\n      default: 'default',\n      compact: 'striped',\n      detailed: 'bordered',\n    };\n    return variantMap[this.variant()];\n  }\n\n  getSpinnerSize() {\n    const sizeMap: Record<TransactionListSize, 'xs' | 'sm' | 'md' | 'lg' | 'xl'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  }\n\n  // Event handlers\n  onRefresh(): void {\n    this.refresh.emit();\n  }\n\n  onExport(): void {\n    this.export.emit();\n  }\n\n  onAdd(): void {\n    this.add.emit();\n  }\n\n  onFilterChange(key: string, event: Event): void {\n    const target = event.target as HTMLInputElement | HTMLSelectElement;\n    const value = target.value;\n\n    this.filters.update((filters) => {\n      const existing = filters.find((f) => f.key === key);\n      if (existing) {\n        if (value) {\n          return filters.map((f) => (f.key === key ? { ...f, value } : f));\n        } else {\n          return filters.filter((f) => f.key !== key);\n        }\n      } else if (value) {\n        return [...filters, { key, value, operator: 'contains' as const }];\n      }\n      return filters;\n    });\n\n    this.filterChange.emit(this.filters());\n  }\n\n  onClearFilters(): void {\n    this.filters.set([]);\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters(): void {\n    this.filterChange.emit(this.filters());\n  }\n\n  onRowClick(row: OsDataTableRow): void {\n    this.rowClick.emit(row as Transaction);\n  }\n\n  onTableActionClick(action: OsDataTableAction): void {\n    this.tableActionClick.emit(action);\n  }\n\n  onSortChange(sort: Sort): void {\n    this.sort.set({ column: sort.active, direction: sort.direction as 'asc' | 'desc' });\n    this.sortChange.emit({ column: sort.active, direction: sort.direction as 'asc' | 'desc' });\n  }\n\n  onPageChange(page: PageEvent): void {\n    this.pagination.update((p) => ({ ...p, page: page.pageIndex, pageSize: page.pageSize }));\n    this.pageChange.emit({\n      page: page.pageIndex,\n      pageSize: page.pageSize,\n      total: this.totalItems(),\n    });\n  }\n}\n",
            "properties": [
                {
                    "name": "column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"asc\" | \"desc\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "UpdateBudgetRequestDto",
            "id": "interface-UpdateBudgetRequestDto-839948d5258c52d1308fa739e9fe39429350e6877843145faa345b61720c3e2457895a7762f111a75569e5b00c4f5eaa1be3bc7e39d2b98a6a827fd8801f8dc6",
            "file": "src/dtos/budget/update-budget-request-dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetType } from './budget-types';\n\nexport interface UpdateBudgetRequestDto {\n  id: string;\n  name?: string;\n  type?: BudgetType;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetType",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "UpdateBudgetResponseDto",
            "id": "interface-UpdateBudgetResponseDto-0e28c3113cb9a56915c15f782a67eadb20e004ae091176bb84c3f6bd2d63b6074214e9b5fffff11696ff173f4dfb120a0537782d03c68bdba0785d54fb340e40",
            "file": "src/dtos/budget/update-budget-response-dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UpdateBudgetResponseDto {\n  success: boolean;\n}\n",
            "properties": [
                {
                    "name": "success",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "WidgetConfiguration",
            "id": "interface-WidgetConfiguration-2f0daa74d88aeeb7faeea0eee70d0d6c6b177737266a24ad66437a5d3eaf4e9eb7d85f6e7760a84fa23361f6d547480f2a52374e63a4ab0208af39a2f417092d",
            "file": "src/app/features/dashboard/types/dashboard.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetDto, BudgetOverviewDto } from '../../../../dtos';\n\nexport interface BudgetSelection {\n  selectedBudgetId: string | null;\n  availableBudgets: BudgetDto[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface DashboardData {\n  budgetOverview: BudgetOverviewDto | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface WidgetConfiguration {\n  id: string;\n  type: WidgetType;\n  title: string;\n  size: WidgetSize;\n  position: WidgetPosition;\n  enabled: boolean;\n}\n\nexport type WidgetType =\n  | 'budget-summary'\n  | 'goal-progress'\n  | 'transaction-list'\n  | 'account-balance'\n  | 'monthly-trends'\n  | 'quick-actions';\n\nexport type WidgetSize = 'small' | 'medium' | 'large' | 'full-width';\n\nexport interface WidgetPosition {\n  row: number;\n  column: number;\n  rowSpan?: number;\n  columnSpan?: number;\n}\n\nexport interface DashboardState {\n  budgetSelection: BudgetSelection;\n  dashboardData: DashboardData;\n  widgetConfigurations: WidgetConfiguration[];\n  isInitialized: boolean;\n}\n\nexport interface QuickAction {\n  id: string;\n  label: string;\n  icon: string;\n  route: string;\n  variant: 'primary' | 'secondary' | 'outline';\n  disabled?: boolean;\n}\n\nexport interface DashboardMetrics {\n  totalAccounts: number;\n  totalBalance: number;\n  monthlyIncome: number;\n  monthlyExpense: number;\n  netMonthly: number;\n  goalsProgress: number;\n  recentTransactionsCount: number;\n}\n",
            "properties": [
                {
                    "name": "enabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WidgetPosition",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WidgetSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WidgetType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "WidgetPosition",
            "id": "interface-WidgetPosition-2f0daa74d88aeeb7faeea0eee70d0d6c6b177737266a24ad66437a5d3eaf4e9eb7d85f6e7760a84fa23361f6d547480f2a52374e63a4ab0208af39a2f417092d",
            "file": "src/app/features/dashboard/types/dashboard.types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BudgetDto, BudgetOverviewDto } from '../../../../dtos';\n\nexport interface BudgetSelection {\n  selectedBudgetId: string | null;\n  availableBudgets: BudgetDto[];\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface DashboardData {\n  budgetOverview: BudgetOverviewDto | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface WidgetConfiguration {\n  id: string;\n  type: WidgetType;\n  title: string;\n  size: WidgetSize;\n  position: WidgetPosition;\n  enabled: boolean;\n}\n\nexport type WidgetType =\n  | 'budget-summary'\n  | 'goal-progress'\n  | 'transaction-list'\n  | 'account-balance'\n  | 'monthly-trends'\n  | 'quick-actions';\n\nexport type WidgetSize = 'small' | 'medium' | 'large' | 'full-width';\n\nexport interface WidgetPosition {\n  row: number;\n  column: number;\n  rowSpan?: number;\n  columnSpan?: number;\n}\n\nexport interface DashboardState {\n  budgetSelection: BudgetSelection;\n  dashboardData: DashboardData;\n  widgetConfigurations: WidgetConfiguration[];\n  isInitialized: boolean;\n}\n\nexport interface QuickAction {\n  id: string;\n  label: string;\n  icon: string;\n  route: string;\n  variant: 'primary' | 'secondary' | 'outline';\n  disabled?: boolean;\n}\n\nexport interface DashboardMetrics {\n  totalAccounts: number;\n  totalBalance: number;\n  monthlyIncome: number;\n  monthlyExpense: number;\n  netMonthly: number;\n  goalsProgress: number;\n  recentTransactionsCount: number;\n}\n",
            "properties": [
                {
                    "name": "column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "columnSpan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "row",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "rowSpan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 38
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "WizardStep",
            "id": "interface-WizardStep-9fe310bbbf10f68848c7194eeba5ed1828e3e6a5afcabcfe59775f109430b9f0d37bf1e9a692442119713ecb65157c6e7834bcdfc8bd5d819fba1573078c1407",
            "file": "src/app/shared/ui-components/templates/os-wizard-template/os-wizard-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, input, output, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsPageHeaderComponent } from '../../organisms/os-page-header/os-page-header.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\n\nexport interface WizardStep {\n  id: string;\n  title: string;\n  subtitle?: string;\n  description?: string;\n  icon?: string;\n  completed?: boolean;\n  disabled?: boolean;\n  optional?: boolean;\n}\n\nexport interface WizardTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showBackButton?: boolean;\n  backUrl?: string;\n  showNextButton?: boolean;\n  showPreviousButton?: boolean;\n  showFinishButton?: boolean;\n  nextButtonText?: string;\n  previousButtonText?: string;\n  finishButtonText?: string;\n  showProgress?: boolean;\n  showStepNumbers?: boolean;\n  showStepIcons?: boolean;\n  allowSkipSteps?: boolean;\n  showStepValidation?: boolean;\n  steps: WizardStep[];\n}\n\n@Component({\n  selector: 'os-wizard-template',\n  template: `\n    <div [class]=\"templateClass()\">\n      @if (showHeader()) {\n      <os-page-header\n        [variant]=\"headerVariant()\"\n        [size]=\"size()\"\n        [title]=\"config().title\"\n        [subtitle]=\"config().subtitle || null\"\n        [actions]=\"headerActions()\"\n      />\n      }\n\n      <div class=\"os-wizard-template__content\">\n        @if (showProgress()) {\n        <div class=\"os-wizard-template__progress\">\n          <os-progress-bar\n            [variant]=\"'primary'\"\n            [size]=\"size()\"\n            [value]=\"progressValue()\"\n            [label]=\"'Passo ' + (currentStepIndex() + 1) + ' de ' + totalSteps()\"\n          />\n        </div>\n        } @if (showStepNavigation()) {\n        <div class=\"os-wizard-template__steps\">\n          @for (step of config().steps; track step.id; let i = $index) {\n          <div\n            [class]=\"stepClass(step, i)\"\n            [attr.aria-current]=\"i === currentStepIndex() ? 'step' : null\"\n            [attr.aria-disabled]=\"step.disabled || false\"\n            [tabindex]=\"step.disabled ? -1 : 0\"\n            role=\"button\"\n            (click)=\"onStepClick(step, i)\"\n            (keydown.enter)=\"onStepClick(step, i)\"\n            (keydown.space)=\"onStepClick(step, i)\"\n          >\n            @if (showStepNumbers()) {\n            <div class=\"os-wizard-template__step-number\">\n              @if (step.completed) {\n              <os-icon name=\"check\" [size]=\"iconSize()\" />\n              } @else {\n              <span class=\"os-wizard-template__step-number-text\">{{ i + 1 }}</span>\n              }\n            </div>\n            } @if (showStepIcons() && step.icon) {\n            <div class=\"os-wizard-template__step-icon\">\n              <os-icon [name]=\"step.icon\" [size]=\"iconSize()\" />\n            </div>\n            }\n\n            <div class=\"os-wizard-template__step-content\">\n              <h3 class=\"os-wizard-template__step-title\">{{ step.title }}</h3>\n              @if (step.subtitle) {\n              <p class=\"os-wizard-template__step-subtitle\">{{ step.subtitle }}</p>\n              } @if (step.description) {\n              <p class=\"os-wizard-template__step-description\">{{ step.description }}</p>\n              }\n            </div>\n\n            @if (step.optional) {\n            <os-badge variant=\"secondary\" [size]=\"badgeSize()\">Opcional</os-badge>\n            }\n          </div>\n          }\n        </div>\n        }\n\n        <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"cardClass()\">\n          <div class=\"os-wizard-template__step-content\">\n            <ng-content />\n          </div>\n\n          @if (showActions()) {\n          <div class=\"os-wizard-template__actions\">\n            @if (showPreviousButton() && currentStepIndex() > 0) {\n            <os-button\n              [variant]=\"'secondary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled()\"\n              (click)=\"previous.emit()\"\n            >\n              {{ config().previousButtonText || 'Anterior' }}\n            </os-button>\n            } @if (showNextButton() && !isLastStep()) {\n            <os-button\n              [variant]=\"'primary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled() || !isCurrentStepValid()\"\n              [loading]=\"loading()\"\n              (click)=\"next.emit()\"\n            >\n              {{ config().nextButtonText || 'Próximo' }}\n            </os-button>\n            } @if (showFinishButton() && isLastStep()) {\n            <os-button\n              [variant]=\"'primary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled() || !isCurrentStepValid()\"\n              [loading]=\"loading()\"\n              (click)=\"finishWizard.emit()\"\n            >\n              {{ config().finishButtonText || 'Finalizar' }}\n            </os-button>\n            } @if (allowSkipSteps() && !isLastStep()) {\n            <os-button\n              [variant]=\"'tertiary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled()\"\n              (click)=\"skip.emit()\"\n            >\n              Pular\n            </os-button>\n            }\n          </div>\n          }\n        </os-card>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./os-wizard-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsButtonComponent,\n    OsCardComponent,\n    OsProgressBarComponent,\n    OsPageHeaderComponent,\n    OsIconComponent,\n    OsBadgeComponent,\n  ],\n})\nexport class OsWizardTemplateComponent {\n  config = input.required<WizardTemplateConfig>();\n  currentStep = input.required<string>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n  showHeader = input(true);\n  showProgress = input(true);\n  showStepNavigation = input(true);\n  showActions = input(true);\n  showStepNumbers = input(true);\n  showStepIcons = input(true);\n  allowSkipSteps = input(false);\n  showStepValidation = input(true);\n\n  next = output<void>();\n  previous = output<void>();\n  finishWizard = output<void>();\n  skip = output<void>();\n  stepClick = output<{ step: WizardStep; index: number }>();\n\n  protected templateClass = computed(() => {\n    return [\n      'os-wizard-template',\n      `os-wizard-template--${this.variant()}`,\n      `os-wizard-template--${this.size()}`,\n      `os-wizard-template--${this.theme()}`,\n      this.disabled() ? 'os-wizard-template--disabled' : '',\n      this.loading() ? 'os-wizard-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected cardClass = computed(() => {\n    return ['os-wizard-template__card', `os-wizard-template__card--${this.variant()}`]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected headerVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'compact' ? 'compact' : 'default';\n  });\n\n  protected cardVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'detailed' ? 'elevated' : 'default';\n  });\n\n  protected currentStepIndex = computed(() => {\n    const currentStep = this.currentStep();\n    return this.config().steps.findIndex((step) => step.id === currentStep);\n  });\n\n  protected totalSteps = computed(() => {\n    return this.config().steps.length;\n  });\n\n  protected progressValue = computed(() => {\n    const currentIndex = this.currentStepIndex();\n    const total = this.totalSteps();\n    return total > 0 ? Math.round((currentIndex / total) * 100) : 0;\n  });\n\n  protected showPreviousButton = computed(() => {\n    return this.config().showPreviousButton !== false;\n  });\n\n  protected showNextButton = computed(() => {\n    return this.config().showNextButton !== false;\n  });\n\n  protected showFinishButton = computed(() => {\n    return this.config().showFinishButton !== false;\n  });\n\n  protected isLastStep = computed(() => {\n    return this.currentStepIndex() === this.totalSteps() - 1;\n  });\n\n  protected isCurrentStepValid = computed(() => {\n    if (!this.showStepValidation()) return true;\n\n    const currentStep = this.config().steps[this.currentStepIndex()];\n    return currentStep ? !currentStep.disabled : true;\n  });\n\n  protected headerActions = computed(() => {\n    if (!this.showHeader()) return [];\n\n    const actions = [];\n\n    if (this.config().showBackButton && this.config().backUrl) {\n      actions.push({\n        label: 'Voltar',\n        variant: 'secondary' as const,\n        size: this.size(),\n        icon: 'arrow-left',\n      });\n    }\n\n    return actions;\n  });\n\n  protected stepClass = (step: WizardStep, index: number) => {\n    const currentIndex = this.currentStepIndex();\n    return [\n      'os-wizard-template__step',\n      `os-wizard-template__step--${this.size()}`,\n      index === currentIndex ? 'os-wizard-template__step--current' : '',\n      step.completed ? 'os-wizard-template__step--completed' : '',\n      step.disabled ? 'os-wizard-template__step--disabled' : '',\n      step.optional ? 'os-wizard-template__step--optional' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  };\n\n  protected iconSize = computed(() => {\n    const size = this.size();\n    return size === 'small' ? 'sm' : size === 'medium' ? 'md' : 'lg';\n  });\n\n  protected badgeSize = computed(() => {\n    const size = this.size();\n    return size === 'small' ? 'sm' : size === 'medium' ? 'md' : 'lg';\n  });\n\n  protected onStepClick(step: WizardStep, index: number): void {\n    if (step.disabled) return;\n\n    this.stepClick.emit({ step, index });\n  }\n}\n",
            "properties": [
                {
                    "name": "completed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "optional",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "WizardTemplateConfig",
            "id": "interface-WizardTemplateConfig-9fe310bbbf10f68848c7194eeba5ed1828e3e6a5afcabcfe59775f109430b9f0d37bf1e9a692442119713ecb65157c6e7834bcdfc8bd5d819fba1573078c1407",
            "file": "src/app/shared/ui-components/templates/os-wizard-template/os-wizard-template.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, input, output, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsPageHeaderComponent } from '../../organisms/os-page-header/os-page-header.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\n\nexport interface WizardStep {\n  id: string;\n  title: string;\n  subtitle?: string;\n  description?: string;\n  icon?: string;\n  completed?: boolean;\n  disabled?: boolean;\n  optional?: boolean;\n}\n\nexport interface WizardTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showBackButton?: boolean;\n  backUrl?: string;\n  showNextButton?: boolean;\n  showPreviousButton?: boolean;\n  showFinishButton?: boolean;\n  nextButtonText?: string;\n  previousButtonText?: string;\n  finishButtonText?: string;\n  showProgress?: boolean;\n  showStepNumbers?: boolean;\n  showStepIcons?: boolean;\n  allowSkipSteps?: boolean;\n  showStepValidation?: boolean;\n  steps: WizardStep[];\n}\n\n@Component({\n  selector: 'os-wizard-template',\n  template: `\n    <div [class]=\"templateClass()\">\n      @if (showHeader()) {\n      <os-page-header\n        [variant]=\"headerVariant()\"\n        [size]=\"size()\"\n        [title]=\"config().title\"\n        [subtitle]=\"config().subtitle || null\"\n        [actions]=\"headerActions()\"\n      />\n      }\n\n      <div class=\"os-wizard-template__content\">\n        @if (showProgress()) {\n        <div class=\"os-wizard-template__progress\">\n          <os-progress-bar\n            [variant]=\"'primary'\"\n            [size]=\"size()\"\n            [value]=\"progressValue()\"\n            [label]=\"'Passo ' + (currentStepIndex() + 1) + ' de ' + totalSteps()\"\n          />\n        </div>\n        } @if (showStepNavigation()) {\n        <div class=\"os-wizard-template__steps\">\n          @for (step of config().steps; track step.id; let i = $index) {\n          <div\n            [class]=\"stepClass(step, i)\"\n            [attr.aria-current]=\"i === currentStepIndex() ? 'step' : null\"\n            [attr.aria-disabled]=\"step.disabled || false\"\n            [tabindex]=\"step.disabled ? -1 : 0\"\n            role=\"button\"\n            (click)=\"onStepClick(step, i)\"\n            (keydown.enter)=\"onStepClick(step, i)\"\n            (keydown.space)=\"onStepClick(step, i)\"\n          >\n            @if (showStepNumbers()) {\n            <div class=\"os-wizard-template__step-number\">\n              @if (step.completed) {\n              <os-icon name=\"check\" [size]=\"iconSize()\" />\n              } @else {\n              <span class=\"os-wizard-template__step-number-text\">{{ i + 1 }}</span>\n              }\n            </div>\n            } @if (showStepIcons() && step.icon) {\n            <div class=\"os-wizard-template__step-icon\">\n              <os-icon [name]=\"step.icon\" [size]=\"iconSize()\" />\n            </div>\n            }\n\n            <div class=\"os-wizard-template__step-content\">\n              <h3 class=\"os-wizard-template__step-title\">{{ step.title }}</h3>\n              @if (step.subtitle) {\n              <p class=\"os-wizard-template__step-subtitle\">{{ step.subtitle }}</p>\n              } @if (step.description) {\n              <p class=\"os-wizard-template__step-description\">{{ step.description }}</p>\n              }\n            </div>\n\n            @if (step.optional) {\n            <os-badge variant=\"secondary\" [size]=\"badgeSize()\">Opcional</os-badge>\n            }\n          </div>\n          }\n        </div>\n        }\n\n        <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"cardClass()\">\n          <div class=\"os-wizard-template__step-content\">\n            <ng-content />\n          </div>\n\n          @if (showActions()) {\n          <div class=\"os-wizard-template__actions\">\n            @if (showPreviousButton() && currentStepIndex() > 0) {\n            <os-button\n              [variant]=\"'secondary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled()\"\n              (click)=\"previous.emit()\"\n            >\n              {{ config().previousButtonText || 'Anterior' }}\n            </os-button>\n            } @if (showNextButton() && !isLastStep()) {\n            <os-button\n              [variant]=\"'primary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled() || !isCurrentStepValid()\"\n              [loading]=\"loading()\"\n              (click)=\"next.emit()\"\n            >\n              {{ config().nextButtonText || 'Próximo' }}\n            </os-button>\n            } @if (showFinishButton() && isLastStep()) {\n            <os-button\n              [variant]=\"'primary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled() || !isCurrentStepValid()\"\n              [loading]=\"loading()\"\n              (click)=\"finishWizard.emit()\"\n            >\n              {{ config().finishButtonText || 'Finalizar' }}\n            </os-button>\n            } @if (allowSkipSteps() && !isLastStep()) {\n            <os-button\n              [variant]=\"'tertiary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled()\"\n              (click)=\"skip.emit()\"\n            >\n              Pular\n            </os-button>\n            }\n          </div>\n          }\n        </os-card>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./os-wizard-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsButtonComponent,\n    OsCardComponent,\n    OsProgressBarComponent,\n    OsPageHeaderComponent,\n    OsIconComponent,\n    OsBadgeComponent,\n  ],\n})\nexport class OsWizardTemplateComponent {\n  config = input.required<WizardTemplateConfig>();\n  currentStep = input.required<string>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n  showHeader = input(true);\n  showProgress = input(true);\n  showStepNavigation = input(true);\n  showActions = input(true);\n  showStepNumbers = input(true);\n  showStepIcons = input(true);\n  allowSkipSteps = input(false);\n  showStepValidation = input(true);\n\n  next = output<void>();\n  previous = output<void>();\n  finishWizard = output<void>();\n  skip = output<void>();\n  stepClick = output<{ step: WizardStep; index: number }>();\n\n  protected templateClass = computed(() => {\n    return [\n      'os-wizard-template',\n      `os-wizard-template--${this.variant()}`,\n      `os-wizard-template--${this.size()}`,\n      `os-wizard-template--${this.theme()}`,\n      this.disabled() ? 'os-wizard-template--disabled' : '',\n      this.loading() ? 'os-wizard-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected cardClass = computed(() => {\n    return ['os-wizard-template__card', `os-wizard-template__card--${this.variant()}`]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected headerVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'compact' ? 'compact' : 'default';\n  });\n\n  protected cardVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'detailed' ? 'elevated' : 'default';\n  });\n\n  protected currentStepIndex = computed(() => {\n    const currentStep = this.currentStep();\n    return this.config().steps.findIndex((step) => step.id === currentStep);\n  });\n\n  protected totalSteps = computed(() => {\n    return this.config().steps.length;\n  });\n\n  protected progressValue = computed(() => {\n    const currentIndex = this.currentStepIndex();\n    const total = this.totalSteps();\n    return total > 0 ? Math.round((currentIndex / total) * 100) : 0;\n  });\n\n  protected showPreviousButton = computed(() => {\n    return this.config().showPreviousButton !== false;\n  });\n\n  protected showNextButton = computed(() => {\n    return this.config().showNextButton !== false;\n  });\n\n  protected showFinishButton = computed(() => {\n    return this.config().showFinishButton !== false;\n  });\n\n  protected isLastStep = computed(() => {\n    return this.currentStepIndex() === this.totalSteps() - 1;\n  });\n\n  protected isCurrentStepValid = computed(() => {\n    if (!this.showStepValidation()) return true;\n\n    const currentStep = this.config().steps[this.currentStepIndex()];\n    return currentStep ? !currentStep.disabled : true;\n  });\n\n  protected headerActions = computed(() => {\n    if (!this.showHeader()) return [];\n\n    const actions = [];\n\n    if (this.config().showBackButton && this.config().backUrl) {\n      actions.push({\n        label: 'Voltar',\n        variant: 'secondary' as const,\n        size: this.size(),\n        icon: 'arrow-left',\n      });\n    }\n\n    return actions;\n  });\n\n  protected stepClass = (step: WizardStep, index: number) => {\n    const currentIndex = this.currentStepIndex();\n    return [\n      'os-wizard-template__step',\n      `os-wizard-template__step--${this.size()}`,\n      index === currentIndex ? 'os-wizard-template__step--current' : '',\n      step.completed ? 'os-wizard-template__step--completed' : '',\n      step.disabled ? 'os-wizard-template__step--disabled' : '',\n      step.optional ? 'os-wizard-template__step--optional' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  };\n\n  protected iconSize = computed(() => {\n    const size = this.size();\n    return size === 'small' ? 'sm' : size === 'medium' ? 'md' : 'lg';\n  });\n\n  protected badgeSize = computed(() => {\n    const size = this.size();\n    return size === 'small' ? 'sm' : size === 'medium' ? 'md' : 'lg';\n  });\n\n  protected onStepClick(step: WizardStep, index: number): void {\n    if (step.disabled) return;\n\n    this.stepClick.emit({ step, index });\n  }\n}\n",
            "properties": [
                {
                    "name": "allowSkipSteps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "backUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "finishButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "nextButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "previousButtonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "showBackButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "showFinishButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "showNextButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "showPreviousButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "showProgress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "showStepIcons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "showStepNumbers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "showStepValidation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "steps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WizardStep[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "ApiService",
            "id": "injectable-ApiService-c1aec96d23bc3529dda31669022e1b83028b03f6b93dc60a6c043dffc0c24bc7af88b3d2d0ccfae25a596df47b27a4aab8f2c5c52b70b4e4c43aff60143f0701",
            "file": "src/app/core/services/api/api.service.ts",
            "properties": [
                {
                    "name": "_error",
                    "defaultValue": "signal<ApiError | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_isLoading",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "configService",
                    "defaultValue": "inject(ConfigService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "this._error.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "this._isLoading.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "notificationService",
                    "defaultValue": "inject(NotificationService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clearError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createHeaders",
                    "args": [
                        {
                            "name": "additionalHeaders",
                            "type": "Record<string | string>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "HttpHeaders",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "additionalHeaders",
                            "type": "Record<string | string>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ApiResponse<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "executeRequest",
                    "args": [
                        {
                            "name": "request",
                            "type": "Observable<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "showLoading",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "Observable<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "showLoading",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ApiResponse<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRaw",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<never>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "patch",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ApiResponse<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ApiResponse<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postRaw",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "put",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ApiResponse<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "Record<string | string | number | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, retry, timeout } from 'rxjs/operators';\n\nimport { ConfigService } from '../config/config.service';\nimport { NotificationService } from '../notification/notification.service';\n\nexport interface ApiResponse<T = unknown> {\n  data: T;\n  meta?: {\n    count?: number;\n    page?: number;\n    pageSize?: number;\n    hasNext?: boolean;\n  };\n}\n\nexport interface ApiError {\n  message: string;\n  status: number;\n  code?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private readonly http = inject(HttpClient);\n  private readonly configService = inject(ConfigService);\n  private readonly notificationService = inject(NotificationService);\n\n  private readonly _isLoading = signal<boolean>(false);\n  private readonly _error = signal<ApiError | null>(null);\n\n  readonly isLoading = this._isLoading.asReadonly();\n  readonly error = this._error.asReadonly();\n\n  private get timeout(): number {\n    return this.configService.apiTimeout();\n  }\n\n  private get retryAttempts(): number {\n    return this.configService.apiRetryAttempts();\n  }\n\n  private createHeaders(additionalHeaders?: Record<string, string>): HttpHeaders {\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n      ...additionalHeaders,\n    };\n\n    return new HttpHeaders(headers);\n  }\n\n  private handleError(error: HttpErrorResponse): Observable<never> {\n    const apiError: ApiError = {\n      message: error.message || 'Erro desconhecido',\n      status: error.status,\n      code: error.error?.code,\n    };\n\n    this._error.set(apiError);\n    return throwError(() => apiError);\n  }\n\n  private executeRequest<T>(request: Observable<T>, showLoading = true): Observable<T> {\n    if (showLoading) {\n      this._isLoading.set(true);\n      this.notificationService.setLoading(true);\n    }\n\n    return request.pipe(\n      timeout(this.timeout),\n      retry(this.retryAttempts),\n      catchError((error) => {\n        this._isLoading.set(false);\n        this.notificationService.setLoading(false);\n        return this.handleError(error);\n      }),\n      map((response) => {\n        this._isLoading.set(false);\n        this.notificationService.setLoading(false);\n        this._error.set(null);\n        return response;\n      })\n    );\n  }\n\n  get<T>(\n    endpoint: string,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.get<ApiResponse<T>>(url, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  post<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.post<ApiResponse<T>>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  put<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.put<ApiResponse<T>>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  patch<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.patch<ApiResponse<T>>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  delete<T>(\n    endpoint: string,\n    params?: Record<string, string | number | boolean>\n  ): Observable<ApiResponse<T>> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.delete<ApiResponse<T>>(url, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  getRaw<T>(endpoint: string, params?: Record<string, string | number | boolean>): Observable<T> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.get<T>(url, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  postRaw<T>(\n    endpoint: string,\n    body: unknown,\n    params?: Record<string, string | number | boolean>\n  ): Observable<T> {\n    const url = this.configService.getApiUrl(endpoint);\n    const httpParams = params ? new HttpParams({ fromObject: params }) : undefined;\n    const headers = this.createHeaders();\n\n    const request = this.http.post<T>(url, body, {\n      params: httpParams,\n      headers,\n    });\n\n    return this.executeRequest(request);\n  }\n\n  clearError(): void {\n    this._error.set(null);\n  }\n\n  setLoading(loading: boolean): void {\n    this._isLoading.set(loading);\n  }\n}\n",
            "accessors": {
                "timeout": {
                    "name": "timeout",
                    "getSignature": {
                        "name": "timeout",
                        "type": "number",
                        "returnType": "number",
                        "line": 39
                    }
                },
                "retryAttempts": {
                    "name": "retryAttempts",
                    "getSignature": {
                        "name": "retryAttempts",
                        "type": "number",
                        "returnType": "number",
                        "line": 43
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-d0afeb10da4f313efbab80cc4182c098d9b45a889206225f6cfc6337fd20fba98126b2d69eed2642401b1580b8c4fc27f691e82f6b9130811976e036bc177290",
            "file": "src/app/core/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "_error",
                    "defaultValue": "signal<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_isLoading",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_user",
                    "defaultValue": "signal<AuthUser | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "currentUser",
                    "defaultValue": "computed(() => this.user())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "this._error.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "externalAuthService",
                    "defaultValue": "inject(EXTERNAL_AUTH_SERVICE_ADAPTER)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isAuthenticated",
                    "defaultValue": "computed(() => this.user() !== null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "this._isLoading.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "user",
                    "defaultValue": "this._user.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clearError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCurrentUser",
                    "args": [],
                    "optional": false,
                    "returnType": "AuthUser | null",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCurrentUserEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCurrentUserId",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "initializeAuthState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "refreshToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "signInWithEmail",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<AuthUser>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signInWithEmailObservable",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<AuthUser>",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "signOutObservable",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { computed, inject, Injectable, signal } from '@angular/core';\nimport { from, Observable } from 'rxjs';\n\nimport {\n  AuthCredentials,\n  AuthUser,\n  EXTERNAL_AUTH_SERVICE_ADAPTER,\n} from '../../adapters/external-auth-service.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private externalAuthService = inject(EXTERNAL_AUTH_SERVICE_ADAPTER);\n  private readonly _user = signal<AuthUser | null>(null);\n  private readonly _isLoading = signal<boolean>(false);\n  private readonly _error = signal<string | null>(null);\n\n  readonly user = this._user.asReadonly();\n  readonly isLoading = this._isLoading.asReadonly();\n  readonly error = this._error.asReadonly();\n  readonly isAuthenticated = computed(() => this.user() !== null);\n  readonly currentUser = computed(() => this.user());\n\n  constructor() {\n    this.initializeAuthState();\n  }\n\n  private initializeAuthState(): void {\n    this.externalAuthService.initializeAuthState((user: AuthUser | null) => {\n      this._isLoading.set(false);\n      this._user.set(user);\n    });\n  }\n\n  async signInWithEmail(email: string, password: string): Promise<AuthUser> {\n    try {\n      this._isLoading.set(true);\n      this._error.set(null);\n\n      const credentials: AuthCredentials = { email, password };\n      const authResult = await this.externalAuthService.signIn(credentials);\n      this._user.set(authResult.user);\n      return authResult.user;\n    } catch (error: unknown) {\n      const errorMessage = error instanceof Error ? error.message : 'Erro ao fazer login';\n      this._error.set(errorMessage);\n      throw error;\n    } finally {\n      this._isLoading.set(false);\n    }\n  }\n\n  async signOut(): Promise<void> {\n    try {\n      this._isLoading.set(true);\n      this._error.set(null);\n\n      await this.externalAuthService.signOut();\n      this._user.set(null);\n    } catch (error: unknown) {\n      const errorMessage = error instanceof Error ? error.message : 'Erro ao fazer logout';\n      this._error.set(errorMessage);\n      throw error;\n    } finally {\n      this._isLoading.set(false);\n    }\n  }\n\n  getCurrentUser(): AuthUser | null {\n    return this.user();\n  }\n\n  getCurrentUserId(): string | null {\n    return this.user()?.id || null;\n  }\n\n  getCurrentUserEmail(): string | null {\n    return this.user()?.email || null;\n  }\n\n  async getToken(): Promise<string | null> {\n    return this.externalAuthService.getToken();\n  }\n\n  async refreshToken(): Promise<string | null> {\n    return this.externalAuthService.refreshToken();\n  }\n\n  clearError(): void {\n    this._error.set(null);\n  }\n\n  signInWithEmailObservable(email: string, password: string): Observable<AuthUser> {\n    return from(this.signInWithEmail(email, password));\n  }\n\n  signOutObservable(): Observable<void> {\n    return from(this.signOut());\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "BudgetSelectionService",
            "id": "injectable-BudgetSelectionService-430c5cb2c6a20243ffe73890f2489838a963b608f4f53443cb90ce9c9b1178f2714d71e1055164c97e65d9e9c2cbdc2997148c1f0f9ca3c6b4a24dbcf220439c",
            "file": "src/app/core/services/budget-selection/budget-selection.service.ts",
            "properties": [
                {
                    "name": "_availableBudgets",
                    "defaultValue": "signal<BudgetDto[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_error",
                    "defaultValue": "signal<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_isLoading",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_selectedBudget",
                    "defaultValue": "signal<BudgetDto | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "availableBudgets",
                    "defaultValue": "this._availableBudgets.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "budgetSelection",
                    "defaultValue": "computed(\n    (): BudgetSelection => ({\n      selectedBudgetId: this.selectedBudgetId(),\n      availableBudgets: this._availableBudgets(),\n      isLoading: this._isLoading(),\n      error: this._error(),\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "this._error.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hasAvailableBudgets",
                    "defaultValue": "computed(() => this._availableBudgets().length > 0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hasSelectedBudget",
                    "defaultValue": "computed(() => this._selectedBudget() !== null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "this._isLoading.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "selectedBudget",
                    "defaultValue": "this._selectedBudget.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "selectedBudgetId",
                    "defaultValue": "computed(() => this._selectedBudget()?.id ?? null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "selectedBudgetName",
                    "defaultValue": "computed(\n    () => this._selectedBudget()?.name ?? 'Nenhum orçamento selecionado'\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clearError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clearSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectBudgetById",
                    "args": [
                        {
                            "name": "budgetId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "budgetId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAvailableBudgets",
                    "args": [
                        {
                            "name": "budgets",
                            "type": "BudgetDto[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "budgets",
                            "type": "BudgetDto[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "error",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelectedBudget",
                    "args": [
                        {
                            "name": "budget",
                            "type": "BudgetDto | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "budget",
                            "type": "BudgetDto | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { computed, Injectable, signal } from '@angular/core';\n\nimport { BudgetDto } from '../../../../dtos/budget/budget-types';\nimport { BudgetSelection } from '../../../features/dashboard/types/dashboard.types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetSelectionService {\n  private readonly _selectedBudget = signal<BudgetDto | null>(null);\n  private readonly _availableBudgets = signal<BudgetDto[]>([]);\n  private readonly _isLoading = signal<boolean>(false);\n  private readonly _error = signal<string | null>(null);\n\n  readonly selectedBudget = this._selectedBudget.asReadonly();\n  readonly availableBudgets = this._availableBudgets.asReadonly();\n  readonly isLoading = this._isLoading.asReadonly();\n  readonly error = this._error.asReadonly();\n\n  readonly hasSelectedBudget = computed(() => this._selectedBudget() !== null);\n  readonly hasAvailableBudgets = computed(() => this._availableBudgets().length > 0);\n  readonly selectedBudgetId = computed(() => this._selectedBudget()?.id ?? null);\n  readonly selectedBudgetName = computed(\n    () => this._selectedBudget()?.name ?? 'Nenhum orçamento selecionado'\n  );\n\n  readonly budgetSelection = computed(\n    (): BudgetSelection => ({\n      selectedBudgetId: this.selectedBudgetId(),\n      availableBudgets: this._availableBudgets(),\n      isLoading: this._isLoading(),\n      error: this._error(),\n    })\n  );\n\n  setSelectedBudget(budget: BudgetDto | null): void {\n    this._selectedBudget.set(budget);\n    this._error.set(null);\n  }\n\n  setAvailableBudgets(budgets: BudgetDto[]): void {\n    this._availableBudgets.set(budgets);\n    this._error.set(null);\n  }\n\n  selectBudgetById(budgetId: string): boolean {\n    const budget = this._availableBudgets().find((b) => b.id === budgetId);\n    if (budget) {\n      this.setSelectedBudget(budget);\n      return true;\n    }\n    return false;\n  }\n\n  clearSelection(): void {\n    this._selectedBudget.set(null);\n    this._error.set(null);\n  }\n\n  setLoading(loading: boolean): void {\n    this._isLoading.set(loading);\n  }\n\n  setError(error: string | null): void {\n    this._error.set(error);\n  }\n\n  clearError(): void {\n    this._error.set(null);\n  }\n\n  reset(): void {\n    this._selectedBudget.set(null);\n    this._availableBudgets.set([]);\n    this._isLoading.set(false);\n    this._error.set(null);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ConfigService",
            "id": "injectable-ConfigService-8a1bf3acd1c98c8cb754d798baab15f1d41b075df2db86c9ecaca69c8c677d5ab19c3b596782de800f16d6bb2c75255dd60e5b5e6c58479cd08bb7df18950a02",
            "file": "src/app/core/services/config/config.service.ts",
            "properties": [
                {
                    "name": "_apiConfig",
                    "defaultValue": "signal<ApiConfig>({\n    baseUrl: environment.apiUrl || 'http://localhost:3000/api',\n    timeout: 30000,\n    retryAttempts: 3,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_firebaseConfig",
                    "defaultValue": "signal<FirebaseConfig>({\n    apiKey: environment.firebase.apiKey,\n    authDomain: environment.firebase.authDomain,\n    projectId: environment.firebase.projectId,\n    storageBucket: environment.firebase.storageBucket,\n    messagingSenderId: environment.firebase.messagingSenderId,\n    appId: environment.firebase.appId,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_isDevelopment",
                    "defaultValue": "signal(environment.production === false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "apiBaseUrl",
                    "defaultValue": "computed(() => this.apiConfig().baseUrl)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "apiConfig",
                    "defaultValue": "this._apiConfig.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "apiRetryAttempts",
                    "defaultValue": "computed(() => this.apiConfig().retryAttempts)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "apiTimeout",
                    "defaultValue": "computed(() => this.apiConfig().timeout)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "firebaseConfig",
                    "defaultValue": "this._firebaseConfig.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isDevelopment",
                    "defaultValue": "this._isDevelopment.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getApiUrl",
                    "args": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "endpoint",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getEnvironmentVariable",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | undefined",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isFeatureEnabled",
                    "args": [
                        {
                            "name": "feature",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "feature",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal, computed } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\n\nexport interface ApiConfig {\n  baseUrl: string;\n  timeout: number;\n  retryAttempts: number;\n}\n\nexport interface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n  appId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private readonly _isDevelopment = signal(environment.production === false);\n  private readonly _apiConfig = signal<ApiConfig>({\n    baseUrl: environment.apiUrl || 'http://localhost:3000/api',\n    timeout: 30000,\n    retryAttempts: 3,\n  });\n  private readonly _firebaseConfig = signal<FirebaseConfig>({\n    apiKey: environment.firebase.apiKey,\n    authDomain: environment.firebase.authDomain,\n    projectId: environment.firebase.projectId,\n    storageBucket: environment.firebase.storageBucket,\n    messagingSenderId: environment.firebase.messagingSenderId,\n    appId: environment.firebase.appId,\n  });\n\n  readonly isDevelopment = this._isDevelopment.asReadonly();\n  readonly apiConfig = this._apiConfig.asReadonly();\n  readonly firebaseConfig = this._firebaseConfig.asReadonly();\n\n  readonly apiBaseUrl = computed(() => this.apiConfig().baseUrl);\n  readonly apiTimeout = computed(() => this.apiConfig().timeout);\n  readonly apiRetryAttempts = computed(() => this.apiConfig().retryAttempts);\n\n  getApiUrl(endpoint: string): string {\n    const baseUrl = this.apiBaseUrl();\n    const cleanEndpoint = endpoint.startsWith('/') ? endpoint.slice(1) : endpoint;\n    return `${baseUrl}/${cleanEndpoint}`;\n  }\n\n  isFeatureEnabled(feature: string): boolean {\n    if (this.isDevelopment()) {\n      return true;\n    }\n\n    return environment.features?.[feature] ?? false;\n  }\n\n  getEnvironmentVariable(key: string): string | undefined {\n    return (environment as unknown as Record<string, unknown>)[key] as string | undefined;\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "DashboardDataService",
            "id": "injectable-DashboardDataService-dd187b5950ab54da365101616134a28ca7ba914941b9a96da697fd23d9ab3a2e62c839d075f2f0cd8518055f464b903bb13bf09ec423476de185e0eeaac2261e",
            "file": "src/app/features/dashboard/services/dashboard-data.service.ts",
            "properties": [
                {
                    "name": "_budgetOverview",
                    "defaultValue": "signal<GetBudgetOverviewResponseDto['data'] | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_budgets",
                    "defaultValue": "signal<GetBudgetsResponseDto['data']>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_error",
                    "defaultValue": "signal<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_isLoading",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "apiService",
                    "defaultValue": "inject(ApiService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "budgetOverview",
                    "defaultValue": "this._budgetOverview.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "budgets",
                    "defaultValue": "this._budgets.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dashboardData",
                    "defaultValue": "computed(\n    (): DashboardData => ({\n      budgetOverview: this._budgetOverview(),\n      isLoading: this._isLoading(),\n      error: this._error(),\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "error",
                    "defaultValue": "this._error.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hasBudgets",
                    "defaultValue": "computed(() => this._budgets().length > 0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hasOverview",
                    "defaultValue": "computed(() => this._budgetOverview() !== null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "this._isLoading.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "calculateMetrics",
                    "args": [],
                    "optional": false,
                    "returnType": "DashboardMetrics",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "clearError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clearOverview",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadBudgetOverview",
                    "args": [
                        {
                            "name": "budgetId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable< | null>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "budgetId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadBudgets",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "refreshBudgetOverview",
                    "args": [
                        {
                            "name": "budgetId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable< | null>",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "budgetId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { computed, inject, Injectable, signal } from '@angular/core';\nimport { Observable, map, catchError, of } from 'rxjs';\n\nimport { ApiService } from '../../../core/services/api/api.service';\nimport { GetBudgetsResponseDto } from '../../../../dtos/budget/get-budgets-response-dto';\nimport { GetBudgetOverviewResponseDto } from '../../../../dtos/budget/get-budget-overview-response-dto';\nimport { DashboardData, DashboardMetrics } from '../types/dashboard.types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardDataService {\n  private readonly apiService = inject(ApiService);\n\n  private readonly _budgets = signal<GetBudgetsResponseDto['data']>([]);\n  private readonly _budgetOverview = signal<GetBudgetOverviewResponseDto['data'] | null>(null);\n  private readonly _isLoading = signal<boolean>(false);\n  private readonly _error = signal<string | null>(null);\n\n  readonly budgets = this._budgets.asReadonly();\n  readonly budgetOverview = this._budgetOverview.asReadonly();\n  readonly isLoading = this._isLoading.asReadonly();\n  readonly error = this._error.asReadonly();\n\n  readonly hasBudgets = computed(() => this._budgets().length > 0);\n  readonly hasOverview = computed(() => this._budgetOverview() !== null);\n\n  readonly dashboardData = computed(\n    (): DashboardData => ({\n      budgetOverview: this._budgetOverview(),\n      isLoading: this._isLoading(),\n      error: this._error(),\n    })\n  );\n\n  loadBudgets(): Observable<GetBudgetsResponseDto['data']> {\n    this._isLoading.set(true);\n    this._error.set(null);\n\n    return this.apiService.get<GetBudgetsResponseDto['data']>('budget').pipe(\n      map((response) => {\n        this._budgets.set(response.data);\n        this._isLoading.set(false);\n        return response.data;\n      }),\n      catchError((error) => {\n        this._error.set(error.message || 'Erro ao carregar orçamentos');\n        this._isLoading.set(false);\n        return of([]);\n      })\n    );\n  }\n\n  loadBudgetOverview(budgetId: string): Observable<GetBudgetOverviewResponseDto['data'] | null> {\n    this._isLoading.set(true);\n    this._error.set(null);\n\n    return this.apiService\n      .get<GetBudgetOverviewResponseDto['data']>(`budget/${budgetId}/overview`)\n      .pipe(\n        map((response) => {\n          this._budgetOverview.set(response.data);\n          this._isLoading.set(false);\n          return response.data;\n        }),\n        catchError((error) => {\n          this._error.set(error.message || 'Erro ao carregar visão geral do orçamento');\n          this._isLoading.set(false);\n          return of(null);\n        })\n      );\n  }\n\n  refreshBudgetOverview(budgetId: string): Observable<GetBudgetOverviewResponseDto['data'] | null> {\n    return this.loadBudgetOverview(budgetId);\n  }\n\n  clearOverview(): void {\n    this._budgetOverview.set(null);\n    this._error.set(null);\n  }\n\n  clearError(): void {\n    this._error.set(null);\n  }\n\n  reset(): void {\n    this._budgets.set([]);\n    this._budgetOverview.set(null);\n    this._isLoading.set(false);\n    this._error.set(null);\n  }\n\n  private calculateMetrics(): DashboardMetrics {\n    const overview = this._budgetOverview();\n    if (!overview) {\n      return {\n        totalAccounts: 0,\n        totalBalance: 0,\n        monthlyIncome: 0,\n        monthlyExpense: 0,\n        netMonthly: 0,\n        goalsProgress: 0,\n        recentTransactionsCount: 0,\n      };\n    }\n\n    const totalBalance = overview.totals.accountsBalance;\n    const monthlyIncome = overview.totals.monthIncome;\n    const monthlyExpense = overview.totals.monthExpense;\n    const netMonthly = overview.totals.netMonth;\n\n    return {\n      totalAccounts: overview.accounts.length,\n      totalBalance,\n      monthlyIncome,\n      monthlyExpense,\n      netMonthly,\n      goalsProgress: 0,\n      recentTransactionsCount: 0,\n    };\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FirebaseAuthServiceAdapter",
            "id": "injectable-FirebaseAuthServiceAdapter-8c2c9952d16dcfa25346c8a34296e098b2b174de81e874463a2b8709477e7d77111ada5df7d99f3fbf8d153b1a8e3b90db5f49d5c24a439e46d925c2dd456398",
            "file": "src/infra/firebase/firebase-auth-service-adapter.ts",
            "properties": [
                {
                    "name": "auth",
                    "defaultValue": "inject(Auth)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCurrentUser",
                    "args": [],
                    "optional": false,
                    "returnType": "AuthUser | null",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "initializeAuthState",
                    "args": [
                        {
                            "name": "callback",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "user",
                                    "type": "AuthUser | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "callback",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "user",
                                    "type": "AuthUser | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "refreshToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "credentials",
                            "type": "AuthCredentials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<AuthResult>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "credentials",
                            "type": "AuthCredentials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\nimport {\n  Auth,\n  User,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from '@angular/fire/auth';\nimport {\n  ExternalAuthServiceAdapter,\n  AuthUser,\n  AuthCredentials,\n  AuthResult,\n} from '../../app/core/adapters/external-auth-service.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseAuthServiceAdapter implements ExternalAuthServiceAdapter {\n  private readonly auth = inject(Auth);\n\n  initializeAuthState(callback: (user: AuthUser | null) => void): void {\n    onAuthStateChanged(this.auth, (user: User | null) => {\n      if (user) {\n        const authUser: AuthUser = {\n          id: user.uid,\n          email: user.email,\n          name: user.displayName,\n          avatar: user.photoURL,\n          metadata: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          },\n        };\n        callback(authUser);\n      } else {\n        callback(null);\n      }\n    });\n  }\n\n  async signIn(credentials: AuthCredentials): Promise<AuthResult> {\n    const userCredential = await signInWithEmailAndPassword(\n      this.auth,\n      credentials.email,\n      credentials.password\n    );\n    const user = userCredential.user;\n    const token = await user.getIdToken();\n\n    const authUser: AuthUser = {\n      id: user.uid,\n      email: user.email,\n      name: user.displayName,\n      avatar: user.photoURL,\n      metadata: {\n        uid: user.uid,\n        displayName: user.displayName,\n        photoURL: user.photoURL,\n      },\n    };\n\n    return {\n      user: authUser,\n      token,\n    };\n  }\n\n  async signOut(): Promise<void> {\n    await signOut(this.auth);\n  }\n\n  async getToken(): Promise<string | null> {\n    const user = this.auth.currentUser;\n    if (user) {\n      try {\n        return await user.getIdToken();\n      } catch (error) {\n        console.error('Erro ao obter token:', error);\n        return null;\n      }\n    }\n    return null;\n  }\n\n  async refreshToken(): Promise<string | null> {\n    const user = this.auth.currentUser;\n    if (user) {\n      try {\n        return await user.getIdToken(true);\n      } catch (error) {\n        console.error('Erro ao renovar token:', error);\n        return null;\n      }\n    }\n    return null;\n  }\n\n  getCurrentUser(): AuthUser | null {\n    const user = this.auth.currentUser;\n    if (user) {\n      return {\n        id: user.uid,\n        email: user.email,\n        name: user.displayName,\n        avatar: user.photoURL,\n        metadata: {\n          uid: user.uid,\n          displayName: user.displayName,\n          photoURL: user.photoURL,\n        },\n      };\n    }\n    return null;\n  }\n\n  isAuthenticated(): boolean {\n    return this.auth.currentUser !== null;\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "MockAuthServiceAdapter",
            "id": "injectable-MockAuthServiceAdapter-10d5d80fc46d6b74fcf83b47a46e39df0f1d7aa12ecc8080d7481b447d238c8e6743da5537bd0bd0a6d3c78aa084a02548f6646f34c247aa5bb0eae54439d7d3",
            "file": "src/infra/mock/mock-auth-service-adapter.ts",
            "properties": [
                {
                    "name": "currentUser",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthUser | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mockToken",
                    "defaultValue": "'mock-bearer-token'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "mockUser",
                    "defaultValue": "{\n    id: 'mock-user-id',\n    email: 'dev@orca-sonhos.com',\n    name: 'Developer User',\n    avatar: null,\n    metadata: {\n      bypass: true,\n      environment: 'development',\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthUser",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCurrentUser",
                    "args": [],
                    "optional": false,
                    "returnType": "AuthUser | null",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "initializeAuthState",
                    "args": [
                        {
                            "name": "callback",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "user",
                                    "type": "AuthUser | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "callback",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "user",
                                    "type": "AuthUser | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "refreshToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "credentials",
                            "type": "AuthCredentials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<AuthResult>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "credentials",
                            "type": "AuthCredentials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  ExternalAuthServiceAdapter,\n  AuthUser,\n  AuthCredentials,\n  AuthResult,\n} from '../../app/core/adapters/external-auth-service.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockAuthServiceAdapter implements ExternalAuthServiceAdapter {\n  private readonly mockUser: AuthUser = {\n    id: 'mock-user-id',\n    email: 'dev@orca-sonhos.com',\n    name: 'Developer User',\n    avatar: null,\n    metadata: {\n      bypass: true,\n      environment: 'development',\n    },\n  };\n\n  private readonly mockToken = 'mock-bearer-token';\n  private currentUser: AuthUser | null = null;\n\n  initializeAuthState(callback: (user: AuthUser | null) => void): void {\n    // Simular inicialização assíncrona\n    setTimeout(() => {\n      this.currentUser = this.mockUser;\n      callback(this.mockUser);\n    }, 100);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async signIn(credentials: AuthCredentials): Promise<AuthResult> {\n    // Simular delay de rede\n    await new Promise((resolve) => setTimeout(resolve, 500));\n\n    this.currentUser = this.mockUser;\n\n    return {\n      user: this.mockUser,\n      token: this.mockToken,\n      refreshToken: this.mockToken,\n    };\n  }\n\n  async signOut(): Promise<void> {\n    // Simular delay de rede\n    await new Promise((resolve) => setTimeout(resolve, 300));\n\n    this.currentUser = null;\n  }\n\n  async getToken(): Promise<string | null> {\n    // Simular delay de rede\n    await new Promise((resolve) => setTimeout(resolve, 50));\n\n    return this.currentUser ? this.mockToken : null;\n  }\n\n  async refreshToken(): Promise<string | null> {\n    // Simular delay de rede\n    await new Promise((resolve) => setTimeout(resolve, 100));\n\n    return this.currentUser ? this.mockToken : null;\n  }\n\n  getCurrentUser(): AuthUser | null {\n    return this.currentUser;\n  }\n\n  isAuthenticated(): boolean {\n    return this.currentUser !== null;\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "NotificationService",
            "id": "injectable-NotificationService-c80610359902e60b2fca1cea6a5bd148af67a6a2a6a4869161d63b7b8b8fdc01967f94825f8cd2384c75e303a578e39742aa02826782b02800613e2e14075ac8",
            "file": "src/app/core/services/notification/notification.service.ts",
            "properties": [
                {
                    "name": "_isLoading",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_notifications",
                    "defaultValue": "signal<Notification[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "hasNotifications",
                    "defaultValue": "computed(() => this._notifications().length > 0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "this._isLoading.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "notifications",
                    "defaultValue": "this._notifications.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addNotification",
                    "args": [
                        {
                            "name": "notification",
                            "type": "Omit<Notification | id>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "notification",
                            "type": "Omit<Notification | id>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dismissNotification",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLoading",
                    "args": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "loading",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showError",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "8000"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "8000",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showInfo",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "4000"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "4000",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showSuccess",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "5000"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "5000",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showWarning",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "6000"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "6000",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal, computed } from '@angular/core';\nimport { OsAlertType } from '../../../shared/ui-components/molecules/os-alert/os-alert.component';\n\nexport interface Notification {\n  id: string;\n  type: OsAlertType;\n  title?: string;\n  message: string;\n  dismissible?: boolean;\n  duration?: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationService {\n  private readonly _notifications = signal<Notification[]>([]);\n  private readonly _isLoading = signal<boolean>(false);\n\n  readonly notifications = this._notifications.asReadonly();\n  readonly isLoading = this._isLoading.asReadonly();\n  readonly hasNotifications = computed(() => this._notifications().length > 0);\n\n  showSuccess(message: string, title?: string, duration = 5000): string {\n    return this.addNotification({\n      type: 'success',\n      message,\n      title,\n      dismissible: true,\n      duration,\n    });\n  }\n\n  showError(message: string, title?: string, duration = 8000): string {\n    return this.addNotification({\n      type: 'error',\n      message,\n      title,\n      dismissible: true,\n      duration,\n    });\n  }\n\n  showWarning(message: string, title?: string, duration = 6000): string {\n    return this.addNotification({\n      type: 'warning',\n      message,\n      title,\n      dismissible: true,\n      duration,\n    });\n  }\n\n  showInfo(message: string, title?: string, duration = 4000): string {\n    return this.addNotification({\n      type: 'info',\n      message,\n      title,\n      dismissible: true,\n      duration,\n    });\n  }\n\n  setLoading(loading: boolean): void {\n    this._isLoading.set(loading);\n  }\n\n  dismissNotification(id: string): void {\n    this._notifications.update((notifications) =>\n      notifications.filter((notification) => notification.id !== id)\n    );\n  }\n\n  clearAll(): void {\n    this._notifications.set([]);\n  }\n\n  private addNotification(notification: Omit<Notification, 'id'>): string {\n    const id = `notification-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    const newNotification: Notification = {\n      ...notification,\n      id,\n    };\n\n    this._notifications.update((notifications) => [...notifications, newNotification]);\n\n    if (notification.duration && notification.duration > 0) {\n      setTimeout(() => {\n        this.dismissNotification(id);\n      }, notification.duration);\n    }\n\n    return id;\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "MockExternalAuthServiceAdapter",
            "id": "class-MockExternalAuthServiceAdapter-dfdfd7ae3167eede1c678e5cdfd1e068a3122c82bf394f9b06f75c8048b90f64dbffa2023c02937e25553fb3580d5de8e175122c05628a37ebb0fa04b21c9f51",
            "file": "src/app/core/services/auth/__mocks__/external-auth-service.adapter.mock.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {\n  AuthCredentials,\n  AuthResult,\n  AuthUser,\n  ExternalAuthServiceAdapter,\n} from '../../../adapters/external-auth-service.adapter';\n\nexport class MockExternalAuthServiceAdapter implements ExternalAuthServiceAdapter {\n  private _currentUser: AuthUser | null = null;\n  private _isAuthenticated = false;\n  private _token: string | null = null;\n  private _onAuthStateChanged: ((user: AuthUser | null) => void) | null = null;\n\n  initializeAuthState(onAuthStateChanged: (user: AuthUser | null) => void): void {\n    this._onAuthStateChanged = onAuthStateChanged;\n    onAuthStateChanged(this._currentUser);\n  }\n\n  async signIn(credentials: AuthCredentials): Promise<AuthResult> {\n    // Add a small delay to simulate async behavior\n    await new Promise((resolve) => setTimeout(resolve, 10));\n\n    const user: AuthUser = {\n      id: 'mock-user-id',\n      email: credentials.email,\n      name: 'Mock User',\n      avatar: null,\n      metadata: { provider: 'mock' },\n    };\n\n    this._currentUser = user;\n    this._isAuthenticated = true;\n    this._token = 'mock-token';\n\n    if (this._onAuthStateChanged) {\n      this._onAuthStateChanged(user);\n    }\n\n    return {\n      user,\n      token: this._token,\n    };\n  }\n\n  async signOut(): Promise<void> {\n    // Add a small delay to simulate async behavior\n    await new Promise((resolve) => setTimeout(resolve, 10));\n\n    this._currentUser = null;\n    this._isAuthenticated = false;\n    this._token = null;\n\n    if (this._onAuthStateChanged) {\n      this._onAuthStateChanged(null);\n    }\n  }\n\n  async getToken(): Promise<string | null> {\n    return this._token;\n  }\n\n  async refreshToken(): Promise<string | null> {\n    this._token = 'refreshed-mock-token';\n    return this._token;\n  }\n\n  getCurrentUser(): AuthUser | null {\n    return this._currentUser;\n  }\n\n  isAuthenticated(): boolean {\n    return this._isAuthenticated;\n  }\n\n  setMockUser(user: AuthUser | null): void {\n    this._currentUser = user;\n    this._isAuthenticated = user !== null;\n    if (this._onAuthStateChanged) {\n      this._onAuthStateChanged(user);\n    }\n  }\n\n  setMockToken(token: string | null): void {\n    this._token = token;\n  }\n\n  simulateAuthStateChange(user: AuthUser | null): void {\n    this._currentUser = user;\n    this._isAuthenticated = user !== null;\n    if (this._onAuthStateChanged) {\n      this._onAuthStateChanged(user);\n    }\n  }\n}\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "_currentUser",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthUser | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_isAuthenticated",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_onAuthStateChanged",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_token",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCurrentUser",
                    "args": [],
                    "optional": false,
                    "returnType": "AuthUser | null",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "initializeAuthState",
                    "args": [
                        {
                            "name": "onAuthStateChanged",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "user",
                                    "type": "AuthUser | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "onAuthStateChanged",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "user",
                                    "type": "AuthUser | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "refreshToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string | null>",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "setMockToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMockUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "AuthUser | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "AuthUser | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "credentials",
                            "type": "AuthCredentials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<AuthResult>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "credentials",
                            "type": "AuthCredentials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "simulateAuthStateChange",
                    "args": [
                        {
                            "name": "user",
                            "type": "AuthUser | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "AuthUser | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ExternalAuthServiceAdapter"
            ]
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "App",
            "id": "component-App-87e1e3c55577933fae067255246bb8c34516c92618e8e27e41c16fe698db88016ea4ffcaac90244ebf0c290c581e87524b3adfb6f4df84d7e65b60b21b2400f7",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<router-outlet></router-outlet>\n<os-notification-container />\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "NotificationContainerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NotificationContainerComponent } from './shared/ui-components/organisms/notification-container/notification-container.component';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, NotificationContainerComponent],\n  template: `\n    <router-outlet></router-outlet>\n    <os-notification-container />\n  `,\n  styles: ``,\n})\nexport class App {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": []
        },
        {
            "name": "BudgetSelectorComponent",
            "id": "component-BudgetSelectorComponent-00091f63044e79cc4611ff4b2a337aa3b2b77b44d7cf8f4e8858269d949cec7e9694d2cd4d8d15346163bcfaae7a9bd9208acce298becb4ca5d1485a37a7ace7",
            "file": "src/app/features/dashboard/components/budget-selector/budget-selector.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-budget-selector",
            "styleUrls": [
                "./budget-selector.component.scss"
            ],
            "styles": [],
            "template": "<div\n  class=\"os-budget-selector\"\n  [class]=\"containerClass()\"\n  role=\"combobox\"\n  [attr.aria-expanded]=\"isDropdownOpen()\"\n  aria-haspopup=\"listbox\"\n  aria-controls=\"budget-selector-dropdown\"\n  [attr.aria-label]=\"ariaLabel()\"\n  [attr.aria-describedby]=\"hasError() ? 'budget-selector-error' : null\"\n  tabindex=\"0\"\n  (keydown)=\"onKeyDown($event)\"\n>\n  <os-dropdown\n    id=\"budget-selector-dropdown\"\n    [options]=\"dropdownOptions()\"\n    [selectedValue]=\"selectedBudgetId()\"\n    [placeholder]=\"placeholder()\"\n    [variant]=\"variant()\"\n    [size]=\"size()\"\n    [disabled]=\"isLoading() || !hasAvailableBudgets()\"\n    [ariaLabel]=\"ariaLabel()\"\n    (valueChange)=\"onBudgetSelect($event)\"\n    (optionSelect)=\"onOptionSelect($event)\"\n    (dropdownToggle)=\"onDropdownToggle($event)\"\n    class=\"os-budget-selector__dropdown\"\n  />\n\n  @if (showCreateButton()) {\n  <os-button\n    [variant]=\"'primary'\"\n    [size]=\"size()\"\n    [disabled]=\"isLoading()\"\n    [loading]=\"isLoading()\"\n    [icon]=\"'add'\"\n    [ariaLabel]=\"'Criar novo orçamento'\"\n    (buttonClick)=\"onCreateBudget()\"\n    class=\"os-budget-selector__create-button\"\n  >\n    Criar Novo\n  </os-button>\n  } @if (hasError()) {\n  <div\n    id=\"budget-selector-error\"\n    class=\"os-budget-selector__error\"\n    role=\"alert\"\n    aria-live=\"assertive\"\n  >\n    {{ errorMessage() }}\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "defaultValue": "'Seletor de orçamento'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Selecionar orçamento'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showCreateButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"primary\" | \"secondary\" | \"accent\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "budgetSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetDto",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "createBudgetRequested",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "availableBudgets",
                    "defaultValue": "computed(() => this.budgetSelectionService.availableBudgets())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "budgetSelectionService",
                    "defaultValue": "inject(BudgetSelectionService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-budget-selector'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-budget-selector--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-budget-selector--${this.size()}`);\n    }\n\n    if (this.isLoading()) {\n      classes.push('os-budget-selector--loading');\n    }\n\n    if (!this.hasAvailableBudgets()) {\n      classes.push('os-budget-selector--empty');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dropdownOptions",
                    "defaultValue": "computed((): OsDropdownOption[] => {\n    const budgets = this.availableBudgets();\n    return budgets.map((budget) => ({\n      value: budget.id,\n      label: budget.name,\n      disabled: false,\n    }));\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "computed(() => this.errorSignal())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "errorSignal",
                    "defaultValue": "signal<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "hasAvailableBudgets",
                    "defaultValue": "computed(() => this.budgetSelectionService.hasAvailableBudgets())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hasError",
                    "defaultValue": "computed(() => !!this.errorSignal())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isDropdownOpen",
                    "defaultValue": "computed(() => this.isDropdownOpenSignal())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 104,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isDropdownOpenSignal",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "computed(() => this.budgetSelectionService.isLoading())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 101,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "selectedBudget",
                    "defaultValue": "computed(() => this.budgetSelectionService.selectedBudget())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "selectedBudgetId",
                    "defaultValue": "computed(() => this.budgetSelectionService.selectedBudgetId())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onBudgetSelect",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number | boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number | boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCreateBudget",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDropdownToggle",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOptionSelect",
                    "args": [
                        {
                            "name": "option",
                            "type": "OsDropdownOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "OsDropdownOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsDropdownComponent",
                    "type": "component"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  computed,\n  inject,\n  ChangeDetectionStrategy,\n  input,\n  output,\n  signal,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  OsDropdownComponent,\n  OsDropdownOption,\n} from '../../../../shared/ui-components/molecules/os-dropdown/os-dropdown.component';\nimport { OsButtonComponent } from '../../../../shared/ui-components/atoms/os-button/os-button.component';\nimport { BudgetSelectionService } from '../../../../core/services/budget-selection/budget-selection.service';\nimport { BudgetDto } from '../../../../../dtos/budget/budget-types';\n\n@Component({\n  selector: 'os-budget-selector',\n  standalone: true,\n  imports: [CommonModule, OsDropdownComponent, OsButtonComponent],\n  template: `\n    <div\n      class=\"os-budget-selector\"\n      [class]=\"containerClass()\"\n      role=\"combobox\"\n      [attr.aria-expanded]=\"isDropdownOpen()\"\n      aria-haspopup=\"listbox\"\n      aria-controls=\"budget-selector-dropdown\"\n      [attr.aria-label]=\"ariaLabel()\"\n      [attr.aria-describedby]=\"hasError() ? 'budget-selector-error' : null\"\n      tabindex=\"0\"\n      (keydown)=\"onKeyDown($event)\"\n    >\n      <os-dropdown\n        id=\"budget-selector-dropdown\"\n        [options]=\"dropdownOptions()\"\n        [selectedValue]=\"selectedBudgetId()\"\n        [placeholder]=\"placeholder()\"\n        [variant]=\"variant()\"\n        [size]=\"size()\"\n        [disabled]=\"isLoading() || !hasAvailableBudgets()\"\n        [ariaLabel]=\"ariaLabel()\"\n        (valueChange)=\"onBudgetSelect($event)\"\n        (optionSelect)=\"onOptionSelect($event)\"\n        (dropdownToggle)=\"onDropdownToggle($event)\"\n        class=\"os-budget-selector__dropdown\"\n      />\n\n      @if (showCreateButton()) {\n      <os-button\n        [variant]=\"'primary'\"\n        [size]=\"size()\"\n        [disabled]=\"isLoading()\"\n        [loading]=\"isLoading()\"\n        [icon]=\"'add'\"\n        [ariaLabel]=\"'Criar novo orçamento'\"\n        (buttonClick)=\"onCreateBudget()\"\n        class=\"os-budget-selector__create-button\"\n      >\n        Criar Novo\n      </os-button>\n      } @if (hasError()) {\n      <div\n        id=\"budget-selector-error\"\n        class=\"os-budget-selector__error\"\n        role=\"alert\"\n        aria-live=\"assertive\"\n      >\n        {{ errorMessage() }}\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./budget-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BudgetSelectorComponent {\n  private readonly budgetSelectionService = inject(BudgetSelectionService);\n\n  // Inputs\n  readonly variant = input<'default' | 'primary' | 'secondary' | 'accent'>('default');\n  readonly size = input<'small' | 'medium' | 'large'>('medium');\n  readonly placeholder = input<string>('Selecionar orçamento');\n  readonly showCreateButton = input<boolean>(true);\n  readonly ariaLabel = input<string>('Seletor de orçamento');\n\n  // Outputs\n  readonly budgetSelected = output<BudgetDto>();\n  readonly createBudgetRequested = output<void>();\n\n  // Signals for internal state\n  private readonly isDropdownOpenSignal = signal(false);\n  private readonly errorSignal = signal<string | null>(null);\n\n  // Computed properties\n  readonly selectedBudgetId = computed(() => this.budgetSelectionService.selectedBudgetId());\n  readonly availableBudgets = computed(() => this.budgetSelectionService.availableBudgets());\n  readonly isLoading = computed(() => this.budgetSelectionService.isLoading());\n  readonly hasAvailableBudgets = computed(() => this.budgetSelectionService.hasAvailableBudgets());\n  readonly selectedBudget = computed(() => this.budgetSelectionService.selectedBudget());\n  readonly isDropdownOpen = computed(() => this.isDropdownOpenSignal());\n  readonly hasError = computed(() => !!this.errorSignal());\n  readonly errorMessage = computed(() => this.errorSignal());\n\n  readonly dropdownOptions = computed((): OsDropdownOption[] => {\n    const budgets = this.availableBudgets();\n    return budgets.map((budget) => ({\n      value: budget.id,\n      label: budget.name,\n      disabled: false,\n    }));\n  });\n\n  readonly containerClass = computed(() => {\n    const classes = ['os-budget-selector'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-budget-selector--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-budget-selector--${this.size()}`);\n    }\n\n    if (this.isLoading()) {\n      classes.push('os-budget-selector--loading');\n    }\n\n    if (!this.hasAvailableBudgets()) {\n      classes.push('os-budget-selector--empty');\n    }\n\n    return classes.join(' ');\n  });\n\n  onBudgetSelect(value: string | number | boolean): void {\n    if (typeof value === 'string') {\n      const budget = this.availableBudgets().find((b) => b.id === value);\n      if (budget) {\n        this.budgetSelectionService.setSelectedBudget(budget);\n        this.budgetSelected.emit(budget);\n      }\n    }\n  }\n\n  onOptionSelect(option: OsDropdownOption): void {\n    if (typeof option.value === 'string') {\n      const budget = this.availableBudgets().find((b) => b.id === option.value);\n      if (budget) {\n        this.budgetSelectionService.setSelectedBudget(budget);\n        this.budgetSelected.emit(budget);\n      }\n    }\n  }\n\n  onCreateBudget(): void {\n    this.createBudgetRequested.emit();\n  }\n\n  onDropdownToggle(event: Event): void {\n    const isOpen = (event as CustomEvent).detail || false;\n    this.isDropdownOpenSignal.set(isOpen);\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        if (!this.isDropdownOpen()) {\n          this.isDropdownOpenSignal.set(true);\n        }\n        break;\n      case 'Escape':\n        if (this.isDropdownOpen()) {\n          this.isDropdownOpenSignal.set(false);\n        }\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        if (!this.isDropdownOpen()) {\n          this.isDropdownOpenSignal.set(true);\n        }\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        if (this.isDropdownOpen()) {\n          this.isDropdownOpenSignal.set(false);\n        }\n        break;\n      case 'Tab':\n        // Allow default tab behavior\n        break;\n      default:\n        // Handle other keys if needed\n        break;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../../../shared/ui-components/theme/_tokens.scss' as *;\n\n.os-budget-selector {\n  display: flex;\n  align-items: center;\n  gap: var(--os-spacing-3);\n  width: 100%;\n  max-width: 100%;\n  padding: var(--os-budget-selector-padding-vertical) var(--os-budget-selector-padding-horizontal);\n  border: var(--os-budget-selector-border);\n  border-radius: var(--os-budget-selector-radius);\n  font-size: var(--os-budget-selector-font-size);\n  font-weight: var(--os-budget-selector-font-weight);\n  background-color: var(--os-color-background-primary);\n  transition: var(--os-transition-colors);\n\n  &:hover {\n    background-color: var(--os-color-background-hover);\n    cursor: pointer;\n  }\n\n  &:focus-within {\n    outline: var(--os-focus-ring-width) solid var(--os-focus-ring-color);\n    outline-offset: var(--os-focus-ring-offset);\n  }\n\n  &--small {\n    gap: var(--os-spacing-2);\n    padding: var(--os-spacing-1) var(--os-spacing-2);\n  }\n\n  &--large {\n    gap: var(--os-spacing-4);\n    padding: var(--os-spacing-3) var(--os-spacing-4);\n  }\n\n  &--loading {\n    opacity: 0.7;\n    pointer-events: none;\n  }\n\n  &--empty {\n    .os-budget-selector__dropdown {\n      opacity: 0.5;\n    }\n  }\n\n  &__error {\n    color: var(--os-color-error);\n    font-size: var(--os-font-size-xs);\n    margin-top: var(--os-spacing-1);\n    padding: var(--os-spacing-1) var(--os-spacing-2);\n    background-color: var(--os-color-error-bg);\n    border-radius: var(--os-border-radius-sm);\n    border: var(--os-border-width-1) solid var(--os-color-error);\n  }\n\n  &__dropdown {\n    flex: 1;\n    min-width: 200px;\n    max-width: 100%;\n  }\n\n  &__create-button {\n    flex-shrink: 0;\n    white-space: nowrap;\n    min-height: var(--os-touch-target-min);\n  }\n\n  // Tablet responsive adjustments (576-991px)\n  @media (max-width: 991px) {\n    gap: var(--os-spacing-2);\n\n    &__dropdown {\n      min-width: 180px;\n    }\n  }\n\n  // Mobile responsive adjustments (0-575px)\n  @media (max-width: 575px) {\n    flex-direction: column;\n    align-items: stretch;\n    gap: var(--os-spacing-2);\n\n    &__dropdown {\n      min-width: unset;\n      width: 100%;\n    }\n\n    &__create-button {\n      width: 100%;\n      min-height: var(--os-touch-target-min);\n    }\n  }\n\n  // Small mobile adjustments\n  @media (max-width: 480px) {\n    gap: var(--os-spacing-1);\n\n    &__create-button {\n      font-size: var(--os-font-size-sm);\n      padding: var(--os-spacing-2) var(--os-spacing-3);\n    }\n  }\n}\n",
                    "styleUrl": "./budget-selector.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "DashboardPage",
            "id": "component-DashboardPage-bb9ab3451af00271c539706000931bd2e7a3cf45875e52e415b6ffa3ff1789fef7cab13482e8853eed4a3e82d28ba50144429cd0bc6eccc5a3da43e378c315f0",
            "file": "src/app/features/dashboard/pages/dashboard.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"dashboard-page\">\n  <!-- Skip Links for Accessibility -->\n  <a href=\"#main-content\" class=\"dashboard-skip-link\">Pular para conteúdo principal</a>\n  <a href=\"#budget-selector\" class=\"dashboard-skip-link\">Pular para seletor de orçamento</a>\n\n  <!-- Sidebar -->\n  <os-sidebar\n    [items]=\"sidebarItems()\"\n    [variant]=\"'default'\"\n    [size]=\"'medium'\"\n    [collapsed]=\"sidebarCollapsed()\"\n    [title]=\"'OrçaSonhos'\"\n    [showHeader]=\"true\"\n    [showToggleButton]=\"true\"\n    [ariaLabel]=\"'Navegação principal'\"\n    (itemClick)=\"onSidebarItemClick($event)\"\n    (collapseChange)=\"onSidebarToggle($event)\"\n    class=\"dashboard-sidebar\"\n  />\n\n  <!-- Main Content Area -->\n  <div class=\"dashboard-content\">\n    <!-- Header with Budget Selector -->\n    <header class=\"dashboard-header\" role=\"banner\">\n      <div class=\"dashboard-header__container\">\n        <div class=\"dashboard-header__brand\">\n          <h1 class=\"dashboard-header__logo\">OrçaSonhos</h1>\n        </div>\n\n        <div class=\"dashboard-header__actions\">\n          <os-budget-selector\n            id=\"budget-selector\"\n            [variant]=\"'primary'\"\n            [size]=\"'medium'\"\n            [placeholder]=\"'Selecionar orçamento'\"\n            [showCreateButton]=\"true\"\n            [ariaLabel]=\"'Seletor de orçamento'\"\n            (budgetSelected)=\"onBudgetSelected($event)\"\n            (createBudgetRequested)=\"onCreateBudgetRequested()\"\n          />\n        </div>\n      </div>\n    </header>\n\n    <!-- Main Content -->\n    <main id=\"main-content\" class=\"dashboard-main\" role=\"main\" aria-label=\"Dashboard principal\">\n      <div class=\"dashboard-main__container\">\n        <h2 class=\"dashboard-main__title\" id=\"dashboard-title\">Dashboard</h2>\n        <os-dashboard-widgets\n          [widgets]=\"dashboardWidgets()\"\n          [variant]=\"'default'\"\n          [size]=\"'medium'\"\n          (widgetClick)=\"onWidgetClick($event)\"\n          (retryRequested)=\"onRetryRequested()\"\n        />\n      </div>\n    </main>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "budgetSelectionService",
                    "defaultValue": "inject(BudgetSelectionService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "dashboardDataService",
                    "defaultValue": "inject(DashboardDataService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "dashboardWidgets",
                    "defaultValue": "computed((): WidgetConfiguration[] => [\n    {\n      id: 'budget-summary',\n      type: 'budget-summary',\n      title: 'Resumo do Orçamento',\n      size: 'large',\n      position: { row: 1, column: 1 },\n      enabled: true,\n    },\n    {\n      id: 'goal-progress',\n      type: 'goal-progress',\n      title: 'Progresso das Metas',\n      size: 'large',\n      position: { row: 2, column: 1 },\n      enabled: true,\n    },\n    {\n      id: 'transaction-list',\n      type: 'transaction-list',\n      title: 'Transações Recentes',\n      size: 'large',\n      position: { row: 3, column: 1 },\n      enabled: true,\n    },\n    {\n      id: 'account-balance',\n      type: 'account-balance',\n      title: 'Saldo das Contas',\n      size: 'large',\n      position: { row: 4, column: 1 },\n      enabled: true,\n    },\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "sidebarCollapsed",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "sidebarItems",
                    "defaultValue": "computed((): SidebarItem[] => [\n    {\n      id: 'dashboard',\n      label: 'Dashboard',\n      icon: 'dashboard',\n      route: '/dashboard',\n    },\n    {\n      id: 'budgets',\n      label: 'Orçamentos',\n      icon: 'account_balance',\n      route: '/budgets',\n    },\n    {\n      id: 'goals',\n      label: 'Metas',\n      icon: 'flag',\n      route: '/goals',\n    },\n    {\n      id: 'transactions',\n      label: 'Transações',\n      icon: 'receipt',\n      route: '/transactions',\n    },\n    {\n      id: 'reports',\n      label: 'Relatórios',\n      icon: 'analytics',\n      route: '/reports',\n    },\n    {\n      id: 'settings',\n      label: 'Configurações',\n      icon: 'settings',\n      route: '/settings',\n    },\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadDashboardData",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        134
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBudgetSelected",
                    "args": [
                        {
                            "name": "budget",
                            "type": "BudgetDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "budget",
                            "type": "BudgetDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCreateBudgetRequested",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'keydown', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        171
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRetryRequested",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSidebarItemClick",
                    "args": [
                        {
                            "name": "item",
                            "type": "SidebarItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "SidebarItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSidebarToggle",
                    "args": [
                        {
                            "name": "collapsed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collapsed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onWidgetClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 223
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BudgetSelectorComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardWidgetsComponent",
                    "type": "component"
                },
                {
                    "name": "OsSidebarComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, inject, OnInit, signal, HostListener } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { BudgetSelectionService } from '@core/services/budget-selection/budget-selection.service';\nimport { BudgetDto } from '@dtos/budget';\nimport { BudgetSelectorComponent } from '@features/dashboard/components/budget-selector/budget-selector.component';\nimport { DashboardWidgetsComponent } from '@features/dashboard/components/dashboard-widgets/dashboard-widgets.component';\nimport { DashboardDataService } from '@features/dashboard/services/dashboard-data.service';\nimport { WidgetConfiguration } from '@features/dashboard/types/dashboard.types';\nimport {\n  OsSidebarComponent,\n  SidebarItem,\n} from '@shared/ui-components/organisms/os-sidebar/os-sidebar.component';\n\n@Component({\n  standalone: true,\n  imports: [CommonModule, BudgetSelectorComponent, DashboardWidgetsComponent, OsSidebarComponent],\n  template: `\n    <div class=\"dashboard-page\">\n      <!-- Skip Links for Accessibility -->\n      <a href=\"#main-content\" class=\"dashboard-skip-link\">Pular para conteúdo principal</a>\n      <a href=\"#budget-selector\" class=\"dashboard-skip-link\">Pular para seletor de orçamento</a>\n\n      <!-- Sidebar -->\n      <os-sidebar\n        [items]=\"sidebarItems()\"\n        [variant]=\"'default'\"\n        [size]=\"'medium'\"\n        [collapsed]=\"sidebarCollapsed()\"\n        [title]=\"'OrçaSonhos'\"\n        [showHeader]=\"true\"\n        [showToggleButton]=\"true\"\n        [ariaLabel]=\"'Navegação principal'\"\n        (itemClick)=\"onSidebarItemClick($event)\"\n        (collapseChange)=\"onSidebarToggle($event)\"\n        class=\"dashboard-sidebar\"\n      />\n\n      <!-- Main Content Area -->\n      <div class=\"dashboard-content\">\n        <!-- Header with Budget Selector -->\n        <header class=\"dashboard-header\" role=\"banner\">\n          <div class=\"dashboard-header__container\">\n            <div class=\"dashboard-header__brand\">\n              <h1 class=\"dashboard-header__logo\">OrçaSonhos</h1>\n            </div>\n\n            <div class=\"dashboard-header__actions\">\n              <os-budget-selector\n                id=\"budget-selector\"\n                [variant]=\"'primary'\"\n                [size]=\"'medium'\"\n                [placeholder]=\"'Selecionar orçamento'\"\n                [showCreateButton]=\"true\"\n                [ariaLabel]=\"'Seletor de orçamento'\"\n                (budgetSelected)=\"onBudgetSelected($event)\"\n                (createBudgetRequested)=\"onCreateBudgetRequested()\"\n              />\n            </div>\n          </div>\n        </header>\n\n        <!-- Main Content -->\n        <main id=\"main-content\" class=\"dashboard-main\" role=\"main\" aria-label=\"Dashboard principal\">\n          <div class=\"dashboard-main__container\">\n            <h2 class=\"dashboard-main__title\" id=\"dashboard-title\">Dashboard</h2>\n            <os-dashboard-widgets\n              [widgets]=\"dashboardWidgets()\"\n              [variant]=\"'default'\"\n              [size]=\"'medium'\"\n              (widgetClick)=\"onWidgetClick($event)\"\n              (retryRequested)=\"onRetryRequested()\"\n            />\n          </div>\n        </main>\n      </div>\n    </div>\n  `,\n  styleUrl: './dashboard.page.scss',\n})\nexport class DashboardPage implements OnInit {\n  private readonly budgetSelectionService = inject(BudgetSelectionService);\n  private readonly dashboardDataService = inject(DashboardDataService);\n\n  // Signals\n  readonly isLoading = signal(false);\n  readonly sidebarCollapsed = signal(false);\n\n  // Computed properties\n  readonly sidebarItems = computed((): SidebarItem[] => [\n    {\n      id: 'dashboard',\n      label: 'Dashboard',\n      icon: 'dashboard',\n      route: '/dashboard',\n    },\n    {\n      id: 'budgets',\n      label: 'Orçamentos',\n      icon: 'account_balance',\n      route: '/budgets',\n    },\n    {\n      id: 'goals',\n      label: 'Metas',\n      icon: 'flag',\n      route: '/goals',\n    },\n    {\n      id: 'transactions',\n      label: 'Transações',\n      icon: 'receipt',\n      route: '/transactions',\n    },\n    {\n      id: 'reports',\n      label: 'Relatórios',\n      icon: 'analytics',\n      route: '/reports',\n    },\n    {\n      id: 'settings',\n      label: 'Configurações',\n      icon: 'settings',\n      route: '/settings',\n    },\n  ]);\n\n  readonly dashboardWidgets = computed((): WidgetConfiguration[] => [\n    {\n      id: 'budget-summary',\n      type: 'budget-summary',\n      title: 'Resumo do Orçamento',\n      size: 'large',\n      position: { row: 1, column: 1 },\n      enabled: true,\n    },\n    {\n      id: 'goal-progress',\n      type: 'goal-progress',\n      title: 'Progresso das Metas',\n      size: 'large',\n      position: { row: 2, column: 1 },\n      enabled: true,\n    },\n    {\n      id: 'transaction-list',\n      type: 'transaction-list',\n      title: 'Transações Recentes',\n      size: 'large',\n      position: { row: 3, column: 1 },\n      enabled: true,\n    },\n    {\n      id: 'account-balance',\n      type: 'account-balance',\n      title: 'Saldo das Contas',\n      size: 'large',\n      position: { row: 4, column: 1 },\n      enabled: true,\n    },\n  ]);\n\n  ngOnInit(): void {\n    this.loadDashboardData();\n  }\n\n  private async loadDashboardData(): Promise<void> {\n    this.isLoading.set(true);\n\n    try {\n      // Carregar orçamentos disponíveis\n      await firstValueFrom(this.dashboardDataService.loadBudgets());\n\n      // Se houver orçamentos, selecionar o primeiro\n      const budgets = this.dashboardDataService.budgets();\n      if (budgets.length > 0) {\n        this.budgetSelectionService.setAvailableBudgets(budgets);\n        this.budgetSelectionService.setSelectedBudget(budgets[0]);\n\n        // Carregar visão geral do orçamento selecionado\n        await firstValueFrom(this.dashboardDataService.loadBudgetOverview(budgets[0].id));\n      }\n    } catch (error) {\n      console.error('Erro ao carregar dados do dashboard:', error);\n    } finally {\n      this.isLoading.set(false);\n    }\n  }\n\n  onBudgetSelected(budget: BudgetDto): void {\n    console.log('Orçamento selecionado:', budget);\n    // O BudgetSelectionService já foi atualizado pelo componente\n    // Recarregar dados do dashboard para o novo orçamento\n    this.loadDashboardData();\n  }\n\n  onCreateBudgetRequested(): void {\n    console.log('Criar novo orçamento solicitado');\n    // Implementar navegação para criação de orçamento\n  }\n\n  onWidgetClick(event: { widget: WidgetConfiguration; data: unknown }): void {\n    console.log('Widget clicado:', event);\n  }\n\n  onRetryRequested(): void {\n    console.log('Tentar novamente solicitado');\n    this.loadDashboardData();\n  }\n\n  onSidebarItemClick(item: SidebarItem): void {\n    console.log('Sidebar item clicked:', item);\n    // Future: implement navigation logic\n  }\n\n  onSidebarToggle(collapsed: boolean): void {\n    this.sidebarCollapsed.set(collapsed);\n    console.log('Sidebar toggled:', collapsed);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    // Alt + B: Focus budget selector\n    if (event.altKey && event.key === 'b') {\n      event.preventDefault();\n      const budgetSelector = document.getElementById('budget-selector');\n      if (budgetSelector) {\n        budgetSelector.focus();\n      }\n    }\n\n    // /: Focus search (if implemented)\n    if (event.key === '/' && !event.ctrlKey && !event.altKey && !event.metaKey) {\n      event.preventDefault();\n      // Future: implement search functionality\n      console.log('Search shortcut triggered');\n    }\n\n    // Escape: Close any open modals/dropdowns\n    if (event.key === 'Escape') {\n      // Future: implement modal/dropdown closing\n      console.log('Escape key pressed');\n    }\n  }\n}\n",
            "styleUrl": "./dashboard.page.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "DashboardWidgetsComponent",
            "id": "component-DashboardWidgetsComponent-d97e96d8db5cb84b0f911e60e75ab9cd685e29c1aab7ed38dc215fa306a4e6004cf56c7d65d1c4b13137d27fde6529337bec38ddd84927986df9d1a472126a1a",
            "file": "src/app/features/dashboard/components/dashboard-widgets/dashboard-widgets.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-dashboard-widgets",
            "styleUrls": [
                "./dashboard-widgets.component.scss"
            ],
            "styles": [],
            "template": "<div\n  class=\"os-dashboard-widgets\"\n  [class]=\"containerClass()\"\n  role=\"main\"\n  aria-label=\"Dashboard widgets\"\n  aria-live=\"polite\"\n  [attr.aria-busy]=\"isLoading()\"\n>\n  @if (isLoading()) {\n  <div class=\"os-dashboard-widgets__loading\" role=\"status\" aria-live=\"polite\">\n    <div class=\"os-dashboard-widgets__skeleton-grid\" [class]=\"gridClass()\">\n      @for (widget of widgets(); track widget.id) {\n      <div\n        class=\"os-dashboard-widgets__skeleton-widget\"\n        [class]=\"widgetClass(widget)\"\n        [style.grid-column]=\"getWidgetGridColumn(widget)\"\n        [style.grid-row]=\"getWidgetGridRow(widget)\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"os-dashboard-widgets__skeleton-header\">\n          <div class=\"os-dashboard-widgets__skeleton-title\"></div>\n        </div>\n        <div class=\"os-dashboard-widgets__skeleton-content\">\n          <div class=\"os-dashboard-widgets__skeleton-line\"></div>\n          <div class=\"os-dashboard-widgets__skeleton-line\"></div>\n          <div\n            class=\"os-dashboard-widgets__skeleton-line os-dashboard-widgets__skeleton-line--short\"\n          ></div>\n        </div>\n      </div>\n      }\n    </div>\n  </div>\n  } @else if (hasError()) {\n  <div class=\"os-dashboard-widgets__error\" role=\"alert\" aria-live=\"assertive\">\n    <div class=\"os-dashboard-widgets__error-icon\" aria-hidden=\"true\">⚠️</div>\n    <h3>Erro ao carregar dados</h3>\n    <p>{{ errorMessage() }}</p>\n    <button\n      class=\"os-dashboard-widgets__retry-button\"\n      (click)=\"onRetry()\"\n      [attr.aria-label]=\"'Tentar carregar dados novamente'\"\n    >\n      Tentar Novamente\n    </button>\n  </div>\n  } @else if (!hasSelectedBudget()) {\n  <div class=\"os-dashboard-widgets__empty\" role=\"status\">\n    <div class=\"os-dashboard-widgets__empty-icon\" aria-hidden=\"true\">📊</div>\n    <h3>Nenhum orçamento selecionado</h3>\n    <p>Selecione um orçamento para visualizar os dados do dashboard.</p>\n  </div>\n  } @else {\n  <div class=\"os-dashboard-widgets__grid\" [class]=\"gridClass()\">\n    @for (widget of widgets(); track widget.id) {\n    <div\n      class=\"os-dashboard-widgets__widget\"\n      [class]=\"widgetClass(widget)\"\n      [style.grid-column]=\"getWidgetGridColumn(widget)\"\n      [style.grid-row]=\"getWidgetGridRow(widget)\"\n      [attr.aria-label]=\"getWidgetAriaLabel(widget)\"\n      [attr.aria-describedby]=\"getWidgetDescriptionId(widget)\"\n      role=\"region\"\n      tabindex=\"0\"\n      (click)=\"onWidgetClick(widget, null)\"\n      (keydown)=\"onWidgetKeyDown($event, widget)\"\n    >\n      <div class=\"os-dashboard-widgets__widget-header\">\n        <h4 class=\"os-dashboard-widgets__widget-title\">{{ widget.title }}</h4>\n      </div>\n\n      <div class=\"os-dashboard-widgets__widget-content\">\n        @switch (widget.type) { @case ('budget-summary') {\n        <div class=\"os-dashboard-widgets__budget-summary\">\n          <div class=\"os-dashboard-widgets__metric\">\n            <span class=\"os-dashboard-widgets__metric-label\">Total</span>\n            <span\n              class=\"os-dashboard-widgets__metric-value\"\n              aria-label=\"Saldo total: {{\n                formatCurrency(budgetOverview()?.totals?.accountsBalance || 0)\n              }}\"\n            >\n              {{ formatCurrency(budgetOverview()?.totals?.accountsBalance || 0) }}\n            </span>\n          </div>\n          <div class=\"os-dashboard-widgets__metric\">\n            <span class=\"os-dashboard-widgets__metric-label\">Receita Mensal</span>\n            <span\n              class=\"os-dashboard-widgets__metric-value\"\n              aria-label=\"Receita mensal: {{\n                formatCurrency(budgetOverview()?.totals?.monthIncome || 0)\n              }}\"\n            >\n              {{ formatCurrency(budgetOverview()?.totals?.monthIncome || 0) }}\n            </span>\n          </div>\n          <div class=\"os-dashboard-widgets__metric\">\n            <span class=\"os-dashboard-widgets__metric-label\">Despesa Mensal</span>\n            <span\n              class=\"os-dashboard-widgets__metric-value\"\n              aria-label=\"Despesa mensal: {{\n                formatCurrency(budgetOverview()?.totals?.monthExpense || 0)\n              }}\"\n            >\n              {{ formatCurrency(budgetOverview()?.totals?.monthExpense || 0) }}\n            </span>\n          </div>\n        </div>\n        } @case ('goal-progress') {\n        <div class=\"os-dashboard-widgets__goal-progress\">\n          <p>Progresso das metas será exibido aqui</p>\n        </div>\n        } @case ('transaction-list') {\n        <div class=\"os-dashboard-widgets__transaction-list\">\n          <p>Lista de transações será exibida aqui</p>\n        </div>\n        } @case ('account-balance') {\n        <div class=\"os-dashboard-widgets__account-balance\">\n          <p>Saldo das contas será exibido aqui</p>\n        </div>\n        } @case ('monthly-trends') {\n        <div class=\"os-dashboard-widgets__monthly-trends\">\n          <p>Tendências mensais serão exibidas aqui</p>\n        </div>\n        } @case ('quick-actions') {\n        <div class=\"os-dashboard-widgets__quick-actions\">\n          <p>Ações rápidas serão exibidas aqui</p>\n        </div>\n        } @default {\n        <div class=\"os-dashboard-widgets__placeholder\">\n          <p>Widget não implementado: {{ widget.type }}</p>\n        </div>\n        } }\n      </div>\n    </div>\n    }\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 163,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"extended\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 162,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "widgets",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WidgetConfiguration[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 161,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "retryRequested",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 167,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "widgetClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ widget: WidgetConfiguration; data: unknown }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 166,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "budgetOverview",
                    "defaultValue": "computed(() => this.dashboardDataService.budgetOverview())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 172,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "budgetSelectionService",
                    "defaultValue": "inject(BudgetSelectionService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 157,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dashboard-widgets'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-dashboard-widgets--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dashboard-widgets--${this.size()}`);\n    }\n\n    if (this.isLoading()) {\n      classes.push('os-dashboard-widgets--loading');\n    }\n\n    if (this.hasError()) {\n      classes.push('os-dashboard-widgets--error');\n    }\n\n    if (!this.hasSelectedBudget()) {\n      classes.push('os-dashboard-widgets--empty');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 177,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dashboardDataService",
                    "defaultValue": "inject(DashboardDataService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 158,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "computed(() => this.dashboardDataService.error())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 175,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "gridClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dashboard-widgets__grid'];\n\n    if (this.variant() === 'compact') {\n      classes.push('os-dashboard-widgets__grid--compact');\n    } else if (this.variant() === 'extended') {\n      classes.push('os-dashboard-widgets__grid--extended');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 203,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hasError",
                    "defaultValue": "computed(() => !!this.dashboardDataService.error())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 174,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hasSelectedBudget",
                    "defaultValue": "computed(() => this.budgetSelectionService.hasSelectedBudget())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 171,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "computed(() => this.dashboardDataService.isLoading())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 173,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "selectedBudget",
                    "defaultValue": "computed(() => this.budgetSelectionService.selectedBudget())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 170,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formatCurrency",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 238,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWidgetAriaLabel",
                    "args": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWidgetDescriptionId",
                    "args": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 273,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWidgetGridColumn",
                    "args": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWidgetGridRow",
                    "args": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 234,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRetry",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onWidgetClick",
                    "args": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 249,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onWidgetKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 253,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "widgetClass",
                    "args": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "widget",
                            "type": "WidgetConfiguration",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, inject, input, output } from '@angular/core';\n\nimport { BudgetSelectionService } from '../../../../core/services/budget-selection/budget-selection.service';\nimport { DashboardDataService } from '../../services/dashboard-data.service';\nimport { WidgetConfiguration } from '../../types/dashboard.types';\n\n@Component({\n  selector: 'os-dashboard-widgets',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div\n      class=\"os-dashboard-widgets\"\n      [class]=\"containerClass()\"\n      role=\"main\"\n      aria-label=\"Dashboard widgets\"\n      aria-live=\"polite\"\n      [attr.aria-busy]=\"isLoading()\"\n    >\n      @if (isLoading()) {\n      <div class=\"os-dashboard-widgets__loading\" role=\"status\" aria-live=\"polite\">\n        <div class=\"os-dashboard-widgets__skeleton-grid\" [class]=\"gridClass()\">\n          @for (widget of widgets(); track widget.id) {\n          <div\n            class=\"os-dashboard-widgets__skeleton-widget\"\n            [class]=\"widgetClass(widget)\"\n            [style.grid-column]=\"getWidgetGridColumn(widget)\"\n            [style.grid-row]=\"getWidgetGridRow(widget)\"\n            aria-hidden=\"true\"\n          >\n            <div class=\"os-dashboard-widgets__skeleton-header\">\n              <div class=\"os-dashboard-widgets__skeleton-title\"></div>\n            </div>\n            <div class=\"os-dashboard-widgets__skeleton-content\">\n              <div class=\"os-dashboard-widgets__skeleton-line\"></div>\n              <div class=\"os-dashboard-widgets__skeleton-line\"></div>\n              <div\n                class=\"os-dashboard-widgets__skeleton-line os-dashboard-widgets__skeleton-line--short\"\n              ></div>\n            </div>\n          </div>\n          }\n        </div>\n      </div>\n      } @else if (hasError()) {\n      <div class=\"os-dashboard-widgets__error\" role=\"alert\" aria-live=\"assertive\">\n        <div class=\"os-dashboard-widgets__error-icon\" aria-hidden=\"true\">⚠️</div>\n        <h3>Erro ao carregar dados</h3>\n        <p>{{ errorMessage() }}</p>\n        <button\n          class=\"os-dashboard-widgets__retry-button\"\n          (click)=\"onRetry()\"\n          [attr.aria-label]=\"'Tentar carregar dados novamente'\"\n        >\n          Tentar Novamente\n        </button>\n      </div>\n      } @else if (!hasSelectedBudget()) {\n      <div class=\"os-dashboard-widgets__empty\" role=\"status\">\n        <div class=\"os-dashboard-widgets__empty-icon\" aria-hidden=\"true\">📊</div>\n        <h3>Nenhum orçamento selecionado</h3>\n        <p>Selecione um orçamento para visualizar os dados do dashboard.</p>\n      </div>\n      } @else {\n      <div class=\"os-dashboard-widgets__grid\" [class]=\"gridClass()\">\n        @for (widget of widgets(); track widget.id) {\n        <div\n          class=\"os-dashboard-widgets__widget\"\n          [class]=\"widgetClass(widget)\"\n          [style.grid-column]=\"getWidgetGridColumn(widget)\"\n          [style.grid-row]=\"getWidgetGridRow(widget)\"\n          [attr.aria-label]=\"getWidgetAriaLabel(widget)\"\n          [attr.aria-describedby]=\"getWidgetDescriptionId(widget)\"\n          role=\"region\"\n          tabindex=\"0\"\n          (click)=\"onWidgetClick(widget, null)\"\n          (keydown)=\"onWidgetKeyDown($event, widget)\"\n        >\n          <div class=\"os-dashboard-widgets__widget-header\">\n            <h4 class=\"os-dashboard-widgets__widget-title\">{{ widget.title }}</h4>\n          </div>\n\n          <div class=\"os-dashboard-widgets__widget-content\">\n            @switch (widget.type) { @case ('budget-summary') {\n            <div class=\"os-dashboard-widgets__budget-summary\">\n              <div class=\"os-dashboard-widgets__metric\">\n                <span class=\"os-dashboard-widgets__metric-label\">Total</span>\n                <span\n                  class=\"os-dashboard-widgets__metric-value\"\n                  aria-label=\"Saldo total: {{\n                    formatCurrency(budgetOverview()?.totals?.accountsBalance || 0)\n                  }}\"\n                >\n                  {{ formatCurrency(budgetOverview()?.totals?.accountsBalance || 0) }}\n                </span>\n              </div>\n              <div class=\"os-dashboard-widgets__metric\">\n                <span class=\"os-dashboard-widgets__metric-label\">Receita Mensal</span>\n                <span\n                  class=\"os-dashboard-widgets__metric-value\"\n                  aria-label=\"Receita mensal: {{\n                    formatCurrency(budgetOverview()?.totals?.monthIncome || 0)\n                  }}\"\n                >\n                  {{ formatCurrency(budgetOverview()?.totals?.monthIncome || 0) }}\n                </span>\n              </div>\n              <div class=\"os-dashboard-widgets__metric\">\n                <span class=\"os-dashboard-widgets__metric-label\">Despesa Mensal</span>\n                <span\n                  class=\"os-dashboard-widgets__metric-value\"\n                  aria-label=\"Despesa mensal: {{\n                    formatCurrency(budgetOverview()?.totals?.monthExpense || 0)\n                  }}\"\n                >\n                  {{ formatCurrency(budgetOverview()?.totals?.monthExpense || 0) }}\n                </span>\n              </div>\n            </div>\n            } @case ('goal-progress') {\n            <div class=\"os-dashboard-widgets__goal-progress\">\n              <p>Progresso das metas será exibido aqui</p>\n            </div>\n            } @case ('transaction-list') {\n            <div class=\"os-dashboard-widgets__transaction-list\">\n              <p>Lista de transações será exibida aqui</p>\n            </div>\n            } @case ('account-balance') {\n            <div class=\"os-dashboard-widgets__account-balance\">\n              <p>Saldo das contas será exibido aqui</p>\n            </div>\n            } @case ('monthly-trends') {\n            <div class=\"os-dashboard-widgets__monthly-trends\">\n              <p>Tendências mensais serão exibidas aqui</p>\n            </div>\n            } @case ('quick-actions') {\n            <div class=\"os-dashboard-widgets__quick-actions\">\n              <p>Ações rápidas serão exibidas aqui</p>\n            </div>\n            } @default {\n            <div class=\"os-dashboard-widgets__placeholder\">\n              <p>Widget não implementado: {{ widget.type }}</p>\n            </div>\n            } }\n          </div>\n        </div>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./dashboard-widgets.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardWidgetsComponent {\n  private readonly budgetSelectionService = inject(BudgetSelectionService);\n  private readonly dashboardDataService = inject(DashboardDataService);\n\n  // Inputs\n  readonly widgets = input<WidgetConfiguration[]>([]);\n  readonly variant = input<'default' | 'compact' | 'extended'>('default');\n  readonly size = input<'small' | 'medium' | 'large'>('medium');\n\n  // Outputs\n  readonly widgetClick = output<{ widget: WidgetConfiguration; data: unknown }>();\n  readonly retryRequested = output<void>();\n\n  // Computed properties\n  readonly selectedBudget = computed(() => this.budgetSelectionService.selectedBudget());\n  readonly hasSelectedBudget = computed(() => this.budgetSelectionService.hasSelectedBudget());\n  readonly budgetOverview = computed(() => this.dashboardDataService.budgetOverview());\n  readonly isLoading = computed(() => this.dashboardDataService.isLoading());\n  readonly hasError = computed(() => !!this.dashboardDataService.error());\n  readonly errorMessage = computed(() => this.dashboardDataService.error());\n\n  readonly containerClass = computed(() => {\n    const classes = ['os-dashboard-widgets'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-dashboard-widgets--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dashboard-widgets--${this.size()}`);\n    }\n\n    if (this.isLoading()) {\n      classes.push('os-dashboard-widgets--loading');\n    }\n\n    if (this.hasError()) {\n      classes.push('os-dashboard-widgets--error');\n    }\n\n    if (!this.hasSelectedBudget()) {\n      classes.push('os-dashboard-widgets--empty');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly gridClass = computed(() => {\n    const classes = ['os-dashboard-widgets__grid'];\n\n    if (this.variant() === 'compact') {\n      classes.push('os-dashboard-widgets__grid--compact');\n    } else if (this.variant() === 'extended') {\n      classes.push('os-dashboard-widgets__grid--extended');\n    }\n\n    return classes.join(' ');\n  });\n\n  widgetClass(widget: WidgetConfiguration): string {\n    const classes = ['os-dashboard-widgets__widget'];\n    classes.push(`os-dashboard-widgets__widget--${widget.size}`);\n    classes.push(`os-dashboard-widgets__widget--${widget.type}`);\n\n    return classes.join(' ');\n  }\n\n  getWidgetGridColumn(widget: WidgetConfiguration): string {\n    const sizeMap = {\n      small: 'span 3',\n      medium: 'span 6',\n      large: 'span 9',\n      'full-width': 'span 12',\n    };\n\n    return sizeMap[widget.size] || 'span 6';\n  }\n\n  getWidgetGridRow(widget: WidgetConfiguration): string {\n    return `row ${widget.position.row}`;\n  }\n\n  formatCurrency(value: number): string {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(value);\n  }\n\n  onRetry(): void {\n    this.retryRequested.emit();\n  }\n\n  onWidgetClick(widget: WidgetConfiguration, data: unknown): void {\n    this.widgetClick.emit({ widget, data });\n  }\n\n  onWidgetKeyDown(event: KeyboardEvent, widget: WidgetConfiguration): void {\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this.onWidgetClick(widget, null);\n        break;\n      case 'Tab':\n        // Allow default tab behavior\n        break;\n      default:\n        // Handle other keys if needed\n        break;\n    }\n  }\n\n  getWidgetAriaLabel(widget: WidgetConfiguration): string {\n    return `${widget.title} widget`;\n  }\n\n  getWidgetDescriptionId(widget: WidgetConfiguration): string {\n    return `widget-${widget.id}-description`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../../../shared/ui-components/theme/_tokens.scss' as *;\n\n.os-dashboard-widgets {\n  width: 100%;\n  min-height: 400px;\n  background-color: var(--os-color-background-secondary);\n  padding: var(--os-dashboard-widgets-padding-desktop);\n\n  &--loading,\n  &--error,\n  &--empty {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 400px;\n    text-align: center;\n    padding: var(--os-spacing-8);\n  }\n\n  &--compact .os-dashboard-widgets__grid {\n    gap: var(--os-spacing-3);\n  }\n  &--extended .os-dashboard-widgets__grid {\n    gap: var(--os-spacing-6);\n  }\n\n  &__loading {\n    color: var(--os-color-text-secondary);\n  }\n\n  &__error {\n    color: var(--os-color-error);\n\n    .os-dashboard-widgets__error-icon {\n      font-size: var(--os-font-size-4xl);\n      margin-bottom: var(--os-spacing-4);\n    }\n\n    h3 {\n      margin: 0 0 var(--os-spacing-2) 0;\n      font-size: var(--os-font-size-xl);\n      font-weight: var(--os-font-weight-semibold);\n    }\n\n    p {\n      margin: 0 0 var(--os-spacing-6) 0;\n      font-size: var(--os-font-size-sm);\n      color: var(--os-color-text-secondary);\n    }\n\n    .os-dashboard-widgets__retry-button {\n      background-color: var(--os-color-primary);\n      color: var(--os-color-text-inverse);\n      border: none;\n      padding: var(--os-spacing-2) var(--os-spacing-4);\n      border-radius: var(--os-border-radius-md);\n      font-size: var(--os-font-size-sm);\n      cursor: pointer;\n      transition: var(--os-transition-colors);\n      min-height: var(--os-touch-target-min);\n\n      &:hover {\n        background-color: var(--os-color-primary-hover);\n      }\n      &:focus {\n        outline: var(--os-focus-ring-width) solid var(--os-focus-ring-color);\n        outline-offset: var(--os-focus-ring-offset);\n      }\n    }\n  }\n\n  &__empty {\n    color: var(--os-color-text-secondary);\n\n    .os-dashboard-widgets__empty-icon {\n      font-size: var(--os-font-size-4xl);\n      margin-bottom: var(--os-spacing-4);\n    }\n\n    h3 {\n      margin: 0 0 var(--os-spacing-2) 0;\n      font-size: var(--os-font-size-xl);\n      font-weight: var(--os-font-weight-semibold);\n    }\n\n    p {\n      margin: 0;\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  &__grid {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    gap: var(--os-dashboard-widgets-gap-desktop);\n    width: 100%;\n\n    &--compact {\n      gap: var(--os-spacing-3);\n    }\n    &--extended {\n      gap: var(--os-spacing-6);\n    }\n  }\n\n  &__widget {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--os-color-background-primary);\n    border-radius: var(--os-border-radius-lg);\n    box-shadow: var(--os-shadow-md);\n    padding: var(--os-spacing-4);\n    border: var(--os-border-width-1) solid var(--os-color-border);\n\n    &--small {\n      min-height: 200px;\n    }\n    &--medium {\n      min-height: 300px;\n    }\n    &--large {\n      min-height: 400px;\n    }\n    &--full {\n      grid-column: 1 / -1;\n      min-height: 500px;\n    }\n  }\n\n  &__widget-header {\n    margin-bottom: var(--os-spacing-4);\n    padding-bottom: var(--os-spacing-3);\n    border-bottom: var(--os-border-width-1) solid var(--os-color-border);\n  }\n\n  &__widget-title {\n    margin: 0 0 var(--os-spacing-1) 0;\n    font-size: var(--os-font-size-lg);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n  }\n\n  &__widget-subtitle {\n    margin: 0;\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__widget-content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n\n  &__budget-summary {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-4);\n  }\n\n  &__metric {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--os-spacing-3);\n    background-color: var(--os-color-background-secondary);\n    border-radius: var(--os-border-radius-md);\n    border: var(--os-border-width-1) solid var(--os-color-border);\n  }\n\n  &__metric-label {\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  &__metric-value {\n    font-size: var(--os-font-size-base);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n  }\n\n  &__placeholder {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n    color: var(--os-color-text-muted);\n    font-style: italic;\n  }\n\n  @media (max-width: 991px) {\n    padding: var(--os-dashboard-widgets-padding-mobile);\n\n    &__grid {\n      grid-template-columns: repeat(8, 1fr);\n      gap: var(--os-dashboard-widgets-gap-tablet);\n    }\n\n    &__widget {\n      &--small {\n        grid-column: span 4;\n      }\n      &--medium {\n        grid-column: span 6;\n      }\n      &--large {\n        grid-column: span 8;\n      }\n      &--full {\n        grid-column: 1 / -1;\n      }\n    }\n  }\n\n  @media (max-width: 575px) {\n    padding: var(--os-dashboard-widgets-padding-mobile);\n\n    &__grid {\n      grid-template-columns: 1fr;\n      gap: var(--os-dashboard-widgets-gap-mobile);\n    }\n\n    &__widget {\n      &--small,\n      &--medium,\n      &--large,\n      &--full {\n        grid-column: 1 / -1;\n        width: 100%;\n        min-height: 200px;\n      }\n    }\n\n    &--loading,\n    &--error,\n    &--empty {\n      padding: var(--os-spacing-6);\n    }\n  }\n\n  @media (max-width: 480px) {\n    &--loading,\n    &--error,\n    &--empty {\n      padding: var(--os-spacing-4);\n      min-height: 300px;\n    }\n\n    &__widget {\n      padding: var(--os-spacing-3);\n      min-height: 180px;\n      width: 100%;\n      max-width: 100%;\n    }\n\n    &__widget-title {\n      font-size: var(--os-font-size-base);\n    }\n\n    &__metric {\n      padding: var(--os-spacing-2);\n      flex-direction: column;\n      align-items: flex-start;\n      gap: var(--os-spacing-1);\n    }\n\n    &__metric-label {\n      font-size: var(--os-font-size-xs);\n    }\n    &__metric-value {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n}\n",
                    "styleUrl": "./dashboard-widgets.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "NotificationContainerComponent",
            "id": "component-NotificationContainerComponent-be6e6c536b3bf7bab48f2145a54807679d87bffafd79c1a5ff14a755dc1ab4ed3a41ca3c1b1c52a72f7df924fecdce0188fce23b80bf8f302632c5dd30fde4a5",
            "file": "src/app/shared/ui-components/organisms/notification-container/notification-container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-notification-container",
            "styleUrls": [],
            "styles": [],
            "template": "<!-- Global Loading Spinner -->\n@if (notificationService.isLoading()) {\n<div class=\"os-notification-container__loading\">\n  <os-spinner size=\"md\" variant=\"primary\" ariaLabel=\"Carregando...\" />\n</div>\n}\n\n<!-- Notifications -->\n<div class=\"os-notification-container__notifications\">\n  @for (notification of notificationService.notifications(); track notification.id) {\n  <os-alert\n    [type]=\"notification.type\"\n    [title]=\"notification.title || ''\"\n    [dismissible]=\"notification.dismissible ?? true\"\n    (dismiss)=\"onDismiss(notification.id)\"\n    class=\"os-notification-container__alert\"\n  >\n    {{ notification.message }}\n  </os-alert>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "notificationService",
                    "defaultValue": "inject(NotificationService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onDismiss",
                    "args": [
                        {
                            "name": "notificationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "notificationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsAlertComponent",
                    "type": "component"
                },
                {
                    "name": "OsSpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OsAlertComponent } from '../../molecules/os-alert/os-alert.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { NotificationService } from '../../../../core/services/notification/notification.service';\n\n@Component({\n  selector: 'os-notification-container',\n  standalone: true,\n  imports: [CommonModule, OsAlertComponent, OsSpinnerComponent],\n  template: `\n    <!-- Global Loading Spinner -->\n    @if (notificationService.isLoading()) {\n    <div class=\"os-notification-container__loading\">\n      <os-spinner size=\"md\" variant=\"primary\" ariaLabel=\"Carregando...\" />\n    </div>\n    }\n\n    <!-- Notifications -->\n    <div class=\"os-notification-container__notifications\">\n      @for (notification of notificationService.notifications(); track notification.id) {\n      <os-alert\n        [type]=\"notification.type\"\n        [title]=\"notification.title || ''\"\n        [dismissible]=\"notification.dismissible ?? true\"\n        (dismiss)=\"onDismiss(notification.id)\"\n        class=\"os-notification-container__alert\"\n      >\n        {{ notification.message }}\n      </os-alert>\n      }\n    </div>\n  `,\n  styleUrl: './notification-container.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationContainerComponent {\n  protected readonly notificationService = inject(NotificationService);\n\n  onDismiss(notificationId: string): void {\n    this.notificationService.dismissNotification(notificationId);\n  }\n}\n",
            "styleUrl": "./notification-container.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsAlertComponent",
            "id": "component-OsAlertComponent-4e173ab97965193c575f8332768a356a7b63a4b20230f3f25d79700297668098359d96672a1a96e775fb389b605c3108915bb9073dba601147004fc4fbd2a88d",
            "file": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-alert",
            "styleUrls": [],
            "styles": [],
            "template": "@if (visible()) {\n<div\n  class=\"os-alert\"\n  [class]=\"alertClasses()\"\n  [attr.data-type]=\"type()\"\n  [attr.data-size]=\"size()\"\n  [attr.data-role]=\"role()\"\n  [attr.data-animated]=\"animated()\"\n  [attr.role]=\"role()\"\n  [attr.aria-live]=\"ariaLive()\"\n  [attr.aria-label]=\"effectiveAriaLabel()\"\n>\n  @if (showIcon()) {\n  <div class=\"os-alert__icon\">\n    <os-icon [name]=\"iconName()\" [size]=\"iconSize()\" [variant]=\"iconVariant()\" />\n  </div>\n  }\n\n  <div class=\"os-alert__content\">\n    @if (title()) {\n    <div class=\"os-alert__title\">{{ title() }}</div>\n    }\n    <div class=\"os-alert__message\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n\n  @if (dismissible()) {\n  <os-button\n    variant=\"tertiary\"\n    size=\"small\"\n    [icon]=\"'close'\"\n    (buttonClick)=\"onDismiss()\"\n    [attr.aria-label]=\"'Fechar alerta'\"\n  />\n  }\n</div>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "required": false
                },
                {
                    "name": "autoDismiss",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "autoDismissDelay",
                    "defaultValue": "5000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "required": false
                },
                {
                    "name": "dismissible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'alert'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsAlertRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "required": false
                },
                {
                    "name": "showIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsAlertSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "required": false
                },
                {
                    "name": "type",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsAlertType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "dismiss",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "alertClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-alert'];\n\n    if (this.type() !== 'info') {\n      classes.push(`os-alert--${this.type()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-alert--${this.size()}`);\n    }\n\n    if (this.dismissible()) {\n      classes.push('os-alert--dismissible');\n    }\n\n    if (this.animated()) {\n      classes.push('os-alert--animated');\n    }\n\n    if (!this.visible()) {\n      classes.push('os-alert--dismissing');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 134
                },
                {
                    "name": "ariaLive",
                    "defaultValue": "computed(() => {\n    const roleMap: Record<OsAlertRole, 'polite' | 'assertive' | 'off'> = {\n      alert: 'assertive',\n      status: 'polite',\n      alertdialog: 'assertive',\n    };\n    return roleMap[this.role()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 160
                },
                {
                    "name": "autoDismissTimer",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReturnType<> | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "effectiveAriaLabel",
                    "defaultValue": "computed(() => {\n    if (this.ariaLabel()) {\n      return this.ariaLabel();\n    }\n    const typeLabels: Record<OsAlertType, string> = {\n      success: 'Mensagem de sucesso',\n      warning: 'Mensagem de aviso',\n      error: 'Mensagem de erro',\n      info: 'Mensagem informativa',\n    };\n    return typeLabels[this.type()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 169
                },
                {
                    "name": "iconName",
                    "defaultValue": "computed(() => {\n    const iconMap: Record<OsAlertType, string> = {\n      success: 'check_circle',\n      warning: 'warning',\n      error: 'error',\n      info: 'info',\n    };\n    return iconMap[this.type()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "iconSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<OsAlertSize, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "iconVariant",
                    "defaultValue": "computed(() => {\n    switch (this.type()) {\n      case 'success':\n        return 'success';\n      case 'warning':\n        return 'warning';\n      case 'error':\n        return 'error';\n      default:\n        return 'info';\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "visible",
                    "defaultValue": "signal<boolean>(true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                }
            ],
            "methodsClass": [
                {
                    "name": "onDismiss",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  effect,\n  signal,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport type OsAlertType = 'success' | 'warning' | 'error' | 'info';\nexport type OsAlertSize = 'small' | 'medium' | 'large';\nexport type OsAlertRole = 'alert' | 'status' | 'alertdialog';\n\n@Component({\n  selector: 'os-alert',\n  standalone: true,\n  imports: [CommonModule, OsIconComponent, OsButtonComponent],\n  template: `\n    @if (visible()) {\n    <div\n      class=\"os-alert\"\n      [class]=\"alertClasses()\"\n      [attr.data-type]=\"type()\"\n      [attr.data-size]=\"size()\"\n      [attr.data-role]=\"role()\"\n      [attr.data-animated]=\"animated()\"\n      [attr.role]=\"role()\"\n      [attr.aria-live]=\"ariaLive()\"\n      [attr.aria-label]=\"effectiveAriaLabel()\"\n    >\n      @if (showIcon()) {\n      <div class=\"os-alert__icon\">\n        <os-icon [name]=\"iconName()\" [size]=\"iconSize()\" [variant]=\"iconVariant()\" />\n      </div>\n      }\n\n      <div class=\"os-alert__content\">\n        @if (title()) {\n        <div class=\"os-alert__title\">{{ title() }}</div>\n        }\n        <div class=\"os-alert__message\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n\n      @if (dismissible()) {\n      <os-button\n        variant=\"tertiary\"\n        size=\"small\"\n        [icon]=\"'close'\"\n        (buttonClick)=\"onDismiss()\"\n        [attr.aria-label]=\"'Fechar alerta'\"\n      />\n      }\n    </div>\n    }\n  `,\n  styleUrl: './os-alert.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-alert-host',\n  },\n})\nexport class OsAlertComponent {\n  type = input<OsAlertType>('info');\n  size = input<OsAlertSize>('medium');\n  title = input<string>('');\n  dismissible = input<boolean>(false);\n  showIcon = input<boolean>(true);\n  role = input<OsAlertRole>('alert');\n  autoDismiss = input<boolean>(false);\n  autoDismissDelay = input<number>(5000);\n  animated = input<boolean>(true);\n  ariaLabel = input<string | undefined>(undefined);\n\n  dismiss = output<void>();\n\n  visible = signal<boolean>(true);\n\n  private autoDismissTimer: ReturnType<typeof setTimeout> | null = null;\n\n  constructor() {\n    effect(\n      () => {\n        if (this.autoDismiss() && this.visible()) {\n          this.autoDismissTimer = setTimeout(() => {\n            if (this.visible()) {\n              this.onDismiss();\n            }\n          }, this.autoDismissDelay());\n        }\n      },\n      { allowSignalWrites: true }\n    );\n  }\n\n  // Mapeamento interno para Atoms\n  protected iconName = computed(() => {\n    const iconMap: Record<OsAlertType, string> = {\n      success: 'check_circle',\n      warning: 'warning',\n      error: 'error',\n      info: 'info',\n    };\n    return iconMap[this.type()];\n  });\n\n  protected iconSize = computed(() => {\n    const sizeMap: Record<OsAlertSize, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  protected iconVariant = computed(() => {\n    switch (this.type()) {\n      case 'success':\n        return 'success';\n      case 'warning':\n        return 'warning';\n      case 'error':\n        return 'error';\n      default:\n        return 'info';\n    }\n  });\n\n  alertClasses = computed(() => {\n    const classes = ['os-alert'];\n\n    if (this.type() !== 'info') {\n      classes.push(`os-alert--${this.type()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-alert--${this.size()}`);\n    }\n\n    if (this.dismissible()) {\n      classes.push('os-alert--dismissible');\n    }\n\n    if (this.animated()) {\n      classes.push('os-alert--animated');\n    }\n\n    if (!this.visible()) {\n      classes.push('os-alert--dismissing');\n    }\n\n    return classes.join(' ');\n  });\n\n  ariaLive = computed(() => {\n    const roleMap: Record<OsAlertRole, 'polite' | 'assertive' | 'off'> = {\n      alert: 'assertive',\n      status: 'polite',\n      alertdialog: 'assertive',\n    };\n    return roleMap[this.role()];\n  });\n\n  effectiveAriaLabel = computed(() => {\n    if (this.ariaLabel()) {\n      return this.ariaLabel();\n    }\n    const typeLabels: Record<OsAlertType, string> = {\n      success: 'Mensagem de sucesso',\n      warning: 'Mensagem de aviso',\n      error: 'Mensagem de erro',\n      info: 'Mensagem informativa',\n    };\n    return typeLabels[this.type()];\n  });\n\n  onDismiss(): void {\n    if (this.autoDismissTimer) {\n      clearTimeout(this.autoDismissTimer);\n      this.autoDismissTimer = null;\n    }\n\n    this.visible.set(false);\n    setTimeout(\n      () => {\n        if (!this.visible()) {\n          this.dismiss.emit();\n        }\n      },\n      this.animated() ? 300 : 0\n    );\n  }\n}\n",
            "styleUrl": "./os-alert.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 84
            },
            "extends": []
        },
        {
            "name": "OsAvatarComponent",
            "id": "component-OsAvatarComponent-961f6ecd9c3071a86ea63b52f1cfddd226a56519a210853d10083161f56eb9098dc82a11acf25270224ab7fc27bb0b7cf2964a3b9c13e8b1f21cd3ce606d887c",
            "file": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-avatar",
            "styleUrls": [
                "./os-avatar.component.scss"
            ],
            "styles": [],
            "template": "<div\n  [class]=\"avatarClass()\"\n  [attr.aria-label]=\"ariaLabel() || null\"\n  [attr.title]=\"title() || null\"\n  [attr.role]=\"avatarRole()\"\n  [attr.tabindex]=\"clickable() ? '0' : null\"\n  (click)=\"handleClick()\"\n  (keydown.enter)=\"handleClick()\"\n  (keydown.space)=\"handleClick()\"\n>\n  @if (loading()) {\n  <div class=\"os-avatar__skeleton\" [class]=\"skeletonClass()\"></div>\n  } @else if (images() && images().length > 0 && !this._imageError) {\n  <div class=\"os-avatar__image-container\" [class]=\"imageContainerClass()\">\n    @for (img of images(); track img; let i = $index) { @if (i === currentImageIndex()) {\n    <img\n      [src]=\"img\"\n      [alt]=\"alt() || 'Avatar'\"\n      [class]=\"imageClass()\"\n      (error)=\"handleImageError()\"\n      (load)=\"handleImageLoad()\"\n    />\n    } } @if (images().length > 1) {\n    <button\n      class=\"os-avatar__image-nav os-avatar__image-nav--prev\"\n      (click)=\"previousImage($event)\"\n      [attr.aria-label]=\"'Imagem anterior'\"\n      type=\"button\"\n    >\n      <os-icon name=\"chevron-left\" size=\"sm\" [ariaHidden]=\"true\" />\n    </button>\n    <button\n      class=\"os-avatar__image-nav os-avatar__image-nav--next\"\n      (click)=\"nextImage($event)\"\n      [attr.aria-label]=\"'Próxima imagem'\"\n      type=\"button\"\n    >\n      <os-icon name=\"chevron-right\" size=\"sm\" [ariaHidden]=\"true\" />\n    </button>\n    }\n  </div>\n  } @else if (image() && !this._imageError) {\n  <img\n    [src]=\"image()\"\n    [alt]=\"alt() || 'Avatar'\"\n    [class]=\"imageClass()\"\n    (error)=\"handleImageError()\"\n    (load)=\"handleImageLoad()\"\n  />\n  } @else if (initials() && !image()) {\n  <span [class]=\"initialsClass()\">{{ optimizedInitials() }}</span>\n  } @else {\n  <os-icon name=\"user\" [size]=\"iconSize()\" variant=\"default\" [ariaHidden]=\"true\" />\n  } @if (status() && status() !== 'invisible') {\n  <div\n    class=\"os-avatar__status\"\n    [class]=\"statusClass()\"\n    [attr.aria-label]=\"statusLabel()\"\n  ></div>\n  } @if (badge() && badgeText()) {\n  <os-badge\n    [text]=\"badgeText()\"\n    [variant]=\"badgeVariant()\"\n    [size]=\"badgeSize()\"\n    [position]=\"'top-right'\"\n  />\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "alt",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "required": false
                },
                {
                    "name": "badge",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 101,
                    "required": false
                },
                {
                    "name": "badgeText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "required": false
                },
                {
                    "name": "badgeVariant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "    'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info'  ",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "required": false
                },
                {
                    "name": "clickable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "required": false
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "required": false
                },
                {
                    "name": "images",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "required": false
                },
                {
                    "name": "initials",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'img'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsAvatarRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsAvatarSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "required": false
                },
                {
                    "name": "status",
                    "defaultValue": "'offline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsAvatarStatus",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'circle'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsAvatarVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_currentImageIndex",
                    "defaultValue": "signal(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "_imageError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "avatarClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-avatar',\n      `os-avatar--${this.size()}`,\n      `os-avatar--${this.variant()}`,\n      this.badge() ? 'os-avatar--with-badge' : '',\n      this.status() ? `os-avatar--status-${this.status()}` : '',\n      this.loading() ? 'os-avatar--loading' : '',\n      this.clickable() ? 'os-avatar--clickable' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "avatarRole",
                    "defaultValue": "computed(() => {\n    if (this.clickable()) return 'button';\n    return this.role();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 173
                },
                {
                    "name": "badgeSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<OsAvatarSize, 'sm' | 'md' | 'lg'> = {\n      xs: 'sm',\n      sm: 'sm',\n      md: 'sm',\n      lg: 'md',\n      xl: 'md',\n      '2xl': 'lg',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 143
                },
                {
                    "name": "currentImageIndex",
                    "defaultValue": "computed(() => this._currentImageIndex())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 155
                },
                {
                    "name": "iconSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<OsAvatarSize, 'sm' | 'md' | 'lg' | 'xl'> = {\n      xs: 'sm',\n      sm: 'sm',\n      md: 'md',\n      lg: 'lg',\n      xl: 'xl',\n      '2xl': 'xl',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 131
                },
                {
                    "name": "imageClass",
                    "defaultValue": "computed(() => {\n    return ['os-avatar__image', `os-avatar__image--${this.variant()}`].filter(Boolean).join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "imageContainerClass",
                    "defaultValue": "computed(() => {\n    return `os-avatar__image-container--${this.variant()}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 182
                },
                {
                    "name": "initialsClass",
                    "defaultValue": "computed(() => {\n    return ['os-avatar__initials', `os-avatar__initials--${this.size()}`].filter(Boolean).join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127
                },
                {
                    "name": "optimizedInitials",
                    "defaultValue": "computed(() => {\n    const initials = this.initials();\n    if (!initials) return '';\n\n    // Algoritmo otimizado para fallback de initials\n    const words = initials.trim().split(/\\s+/);\n    if (words.length === 1) {\n      return words[0].substring(0, 2).toUpperCase();\n    }\n    return words\n      .map((word) => word.charAt(0))\n      .join('')\n      .substring(0, 2)\n      .toUpperCase();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 157
                },
                {
                    "name": "skeletonClass",
                    "defaultValue": "computed(() => {\n    return `os-avatar__skeleton--${this.size()}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 178
                },
                {
                    "name": "statusClass",
                    "defaultValue": "computed(() => {\n    return `os-avatar__status--${this.status()}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "statusLabel",
                    "defaultValue": "computed(() => {\n    const statusLabels: Record<OsAvatarStatus, string> = {\n      online: 'Online',\n      offline: 'Offline',\n      away: 'Ausente',\n      busy: 'Ocupado',\n      invisible: 'Invisível',\n    };\n    return statusLabels[this.status()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 190
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleImageError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 201,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleImageLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nextImage",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "previousImage",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                },
                {
                    "name": "OsBadgeComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OsIconComponent } from '../os-icon/os-icon.component';\nimport { OsBadgeComponent } from '../os-badge/os-badge.component';\n\nexport type OsAvatarSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\nexport type OsAvatarVariant = 'circle' | 'square' | 'rounded';\nexport type OsAvatarStatus = 'online' | 'offline' | 'away' | 'busy' | 'invisible';\nexport type OsAvatarRole = 'img' | 'button' | 'presentation';\n\n@Component({\n  selector: 'os-avatar',\n  standalone: true,\n  imports: [CommonModule, OsIconComponent, OsBadgeComponent],\n  template: `\n    <div\n      [class]=\"avatarClass()\"\n      [attr.aria-label]=\"ariaLabel() || null\"\n      [attr.title]=\"title() || null\"\n      [attr.role]=\"avatarRole()\"\n      [attr.tabindex]=\"clickable() ? '0' : null\"\n      (click)=\"handleClick()\"\n      (keydown.enter)=\"handleClick()\"\n      (keydown.space)=\"handleClick()\"\n    >\n      @if (loading()) {\n      <div class=\"os-avatar__skeleton\" [class]=\"skeletonClass()\"></div>\n      } @else if (images() && images().length > 0 && !this._imageError) {\n      <div class=\"os-avatar__image-container\" [class]=\"imageContainerClass()\">\n        @for (img of images(); track img; let i = $index) { @if (i === currentImageIndex()) {\n        <img\n          [src]=\"img\"\n          [alt]=\"alt() || 'Avatar'\"\n          [class]=\"imageClass()\"\n          (error)=\"handleImageError()\"\n          (load)=\"handleImageLoad()\"\n        />\n        } } @if (images().length > 1) {\n        <button\n          class=\"os-avatar__image-nav os-avatar__image-nav--prev\"\n          (click)=\"previousImage($event)\"\n          [attr.aria-label]=\"'Imagem anterior'\"\n          type=\"button\"\n        >\n          <os-icon name=\"chevron-left\" size=\"sm\" [ariaHidden]=\"true\" />\n        </button>\n        <button\n          class=\"os-avatar__image-nav os-avatar__image-nav--next\"\n          (click)=\"nextImage($event)\"\n          [attr.aria-label]=\"'Próxima imagem'\"\n          type=\"button\"\n        >\n          <os-icon name=\"chevron-right\" size=\"sm\" [ariaHidden]=\"true\" />\n        </button>\n        }\n      </div>\n      } @else if (image() && !this._imageError) {\n      <img\n        [src]=\"image()\"\n        [alt]=\"alt() || 'Avatar'\"\n        [class]=\"imageClass()\"\n        (error)=\"handleImageError()\"\n        (load)=\"handleImageLoad()\"\n      />\n      } @else if (initials() && !image()) {\n      <span [class]=\"initialsClass()\">{{ optimizedInitials() }}</span>\n      } @else {\n      <os-icon name=\"user\" [size]=\"iconSize()\" variant=\"default\" [ariaHidden]=\"true\" />\n      } @if (status() && status() !== 'invisible') {\n      <div\n        class=\"os-avatar__status\"\n        [class]=\"statusClass()\"\n        [attr.aria-label]=\"statusLabel()\"\n      ></div>\n      } @if (badge() && badgeText()) {\n      <os-badge\n        [text]=\"badgeText()\"\n        [variant]=\"badgeVariant()\"\n        [size]=\"badgeSize()\"\n        [position]=\"'top-right'\"\n      />\n      }\n    </div>\n  `,\n  styleUrls: ['./os-avatar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsAvatarComponent {\n  image = input<string>('');\n  images = input<string[]>([]);\n  initials = input<string>('');\n  alt = input<string>('');\n  size = input<OsAvatarSize>('md');\n  variant = input<OsAvatarVariant>('circle');\n  status = input<OsAvatarStatus>('offline');\n  role = input<OsAvatarRole>('img');\n  loading = input(false);\n  clickable = input(false);\n  ariaLabel = input<string>('');\n  title = input<string>('');\n  badge = input(false);\n  badgeText = input<string>('');\n  badgeVariant = input<\n    'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info'\n  >('default');\n\n  protected _imageError = false;\n  protected _currentImageIndex = signal(0);\n  avatarClass = computed(() => {\n    return [\n      'os-avatar',\n      `os-avatar--${this.size()}`,\n      `os-avatar--${this.variant()}`,\n      this.badge() ? 'os-avatar--with-badge' : '',\n      this.status() ? `os-avatar--status-${this.status()}` : '',\n      this.loading() ? 'os-avatar--loading' : '',\n      this.clickable() ? 'os-avatar--clickable' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  imageClass = computed(() => {\n    return ['os-avatar__image', `os-avatar__image--${this.variant()}`].filter(Boolean).join(' ');\n  });\n\n  initialsClass = computed(() => {\n    return ['os-avatar__initials', `os-avatar__initials--${this.size()}`].filter(Boolean).join(' ');\n  });\n\n  iconSize = computed(() => {\n    const sizeMap: Record<OsAvatarSize, 'sm' | 'md' | 'lg' | 'xl'> = {\n      xs: 'sm',\n      sm: 'sm',\n      md: 'md',\n      lg: 'lg',\n      xl: 'xl',\n      '2xl': 'xl',\n    };\n    return sizeMap[this.size()];\n  });\n\n  badgeSize = computed(() => {\n    const sizeMap: Record<OsAvatarSize, 'sm' | 'md' | 'lg'> = {\n      xs: 'sm',\n      sm: 'sm',\n      md: 'sm',\n      lg: 'md',\n      xl: 'md',\n      '2xl': 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  currentImageIndex = computed(() => this._currentImageIndex());\n\n  optimizedInitials = computed(() => {\n    const initials = this.initials();\n    if (!initials) return '';\n\n    // Algoritmo otimizado para fallback de initials\n    const words = initials.trim().split(/\\s+/);\n    if (words.length === 1) {\n      return words[0].substring(0, 2).toUpperCase();\n    }\n    return words\n      .map((word) => word.charAt(0))\n      .join('')\n      .substring(0, 2)\n      .toUpperCase();\n  });\n\n  avatarRole = computed(() => {\n    if (this.clickable()) return 'button';\n    return this.role();\n  });\n\n  skeletonClass = computed(() => {\n    return `os-avatar__skeleton--${this.size()}`;\n  });\n\n  imageContainerClass = computed(() => {\n    return `os-avatar__image-container--${this.variant()}`;\n  });\n\n  statusClass = computed(() => {\n    return `os-avatar__status--${this.status()}`;\n  });\n\n  statusLabel = computed(() => {\n    const statusLabels: Record<OsAvatarStatus, string> = {\n      online: 'Online',\n      offline: 'Offline',\n      away: 'Ausente',\n      busy: 'Ocupado',\n      invisible: 'Invisível',\n    };\n    return statusLabels[this.status()];\n  });\n\n  handleImageError(): void {\n    this._imageError = true;\n  }\n\n  handleImageLoad(): void {\n    this._imageError = false;\n  }\n\n  handleClick(): void {\n    if (this.clickable()) {\n      // Emitir evento de click se necessário\n      console.log('Avatar clicked');\n    }\n  }\n\n  previousImage(event: Event): void {\n    event.stopPropagation();\n    const images = this.images();\n    if (images.length > 1) {\n      const current = this._currentImageIndex();\n      const previous = current === 0 ? images.length - 1 : current - 1;\n      this._currentImageIndex.set(previous);\n    }\n  }\n\n  nextImage(event: Event): void {\n    event.stopPropagation();\n    const images = this.images();\n    if (images.length > 1) {\n      const current = this._currentImageIndex();\n      const next = current === images.length - 1 ? 0 : current + 1;\n      this._currentImageIndex.set(next);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-avatar {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--os-color-neutral-200);\n  color: var(--os-color-neutral-600);\n  font-weight: var(--os-font-weight-medium);\n  overflow: hidden;\n  flex-shrink: 0;\n\n  &--xs {\n    width: 24px;\n    height: 24px;\n    font-size: var(--os-font-size-xs);\n  }\n\n  &--sm {\n    width: 32px;\n    height: 32px;\n    font-size: var(--os-font-size-sm);\n  }\n\n  &--md {\n    width: 40px;\n    height: 40px;\n    font-size: var(--os-font-size-base);\n  }\n\n  &--lg {\n    width: 48px;\n    height: 48px;\n    font-size: var(--os-font-size-lg);\n  }\n\n  &--xl {\n    width: 64px;\n    height: 64px;\n    font-size: var(--os-font-size-xl);\n  }\n\n  &--2xl {\n    width: 80px;\n    height: 80px;\n    font-size: var(--os-font-size-2xl);\n  }\n\n  &--circle {\n    border-radius: var(--os-border-radius-full);\n  }\n\n  &--square {\n    border-radius: var(--os-border-radius-sm);\n  }\n\n  &--rounded {\n    border-radius: var(--os-border-radius-md);\n  }\n\n  &__image {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    display: block;\n\n    &--circle {\n      border-radius: var(--os-border-radius-full);\n    }\n\n    &--square {\n      border-radius: var(--os-border-radius-sm);\n    }\n\n    &--rounded {\n      border-radius: var(--os-border-radius-md);\n    }\n  }\n\n  &__initials {\n    font-weight: var(--os-font-weight-medium);\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    line-height: 1;\n\n    &--xs {\n      font-size: var(--os-font-size-xs);\n    }\n\n    &--sm {\n      font-size: var(--os-font-size-sm);\n    }\n\n    &--md {\n      font-size: var(--os-font-size-base);\n    }\n\n    &--lg {\n      font-size: var(--os-font-size-lg);\n    }\n\n    &--xl {\n      font-size: var(--os-font-size-xl);\n    }\n\n    &--2xl {\n      font-size: var(--os-font-size-2xl);\n    }\n  }\n\n  &--with-badge {\n    .os-badge {\n      position: absolute;\n      top: -2px;\n      right: -2px;\n      z-index: 1;\n    }\n  }\n\n  &:hover {\n    opacity: 0.9;\n    transition: opacity var(--os-transition-fast) ease-in-out;\n  }\n\n  &:focus {\n    outline: 2px solid var(--os-color-primary-500);\n    outline-offset: 2px;\n  }\n\n  &--loading {\n    background-color: var(--os-color-neutral-100);\n    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n\n  &--clickable {\n    cursor: pointer;\n    transition: all var(--os-transition-fast) ease-in-out;\n\n    &:hover {\n      transform: scale(1.05);\n      box-shadow: var(--os-shadow-md);\n    }\n\n    &:active {\n      transform: scale(0.95);\n    }\n\n    &:focus {\n      outline: var(--os-focus-ring-width) solid var(--os-focus-ring-color);\n      outline-offset: var(--os-focus-ring-offset);\n    }\n  }\n\n  &__skeleton {\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      90deg,\n      var(--os-color-neutral-200) 25%,\n      var(--os-color-neutral-100) 50%,\n      var(--os-color-neutral-200) 75%\n    );\n    background-size: 200% 100%;\n    animation: shimmer 1.5s infinite;\n\n    &--xs {\n      border-radius: var(--os-border-radius-full);\n    }\n\n    &--sm {\n      border-radius: var(--os-border-radius-full);\n    }\n\n    &--md {\n      border-radius: var(--os-border-radius-full);\n    }\n\n    &--lg {\n      border-radius: var(--os-border-radius-full);\n    }\n\n    &--xl {\n      border-radius: var(--os-border-radius-full);\n    }\n\n    &--2xl {\n      border-radius: var(--os-border-radius-full);\n    }\n  }\n\n  &__image-container {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n\n    &--circle {\n      border-radius: var(--os-border-radius-full);\n    }\n\n    &--square {\n      border-radius: var(--os-border-radius-sm);\n    }\n\n    &--rounded {\n      border-radius: var(--os-border-radius-md);\n    }\n  }\n\n  &__image-nav {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background: rgba(0, 0, 0, 0.5);\n    color: white;\n    border: none;\n    border-radius: var(--os-border-radius-sm);\n    width: 24px;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    opacity: 0;\n    transition: opacity var(--os-transition-fast) ease-in-out;\n    z-index: 2;\n\n    &:hover {\n      background: rgba(0, 0, 0, 0.7);\n    }\n\n    &--prev {\n      left: 4px;\n    }\n\n    &--next {\n      right: 4px;\n    }\n  }\n\n  &__status {\n    position: absolute;\n    bottom: 2px;\n    right: 2px;\n    width: 12px;\n    height: 12px;\n    border-radius: var(--os-border-radius-full);\n    border: 2px solid var(--os-color-background-primary);\n    z-index: 3;\n\n    &--online {\n      background-color: var(--os-color-success-500);\n    }\n\n    &--offline {\n      background-color: var(--os-color-neutral-400);\n    }\n\n    &--away {\n      background-color: var(--os-color-warning-500);\n    }\n\n    &--busy {\n      background-color: var(--os-color-error-500);\n    }\n\n    &--invisible {\n      display: none;\n    }\n  }\n\n  &--status-online {\n    .os-avatar__status {\n      animation: pulse-status 2s infinite;\n    }\n  }\n\n  &--status-away {\n    .os-avatar__status {\n      animation: blink 1.5s infinite;\n    }\n  }\n\n  &--status-busy {\n    .os-avatar__status {\n      animation: pulse-status 1s infinite;\n    }\n  }\n\n  &:hover {\n    .os-avatar__image-nav {\n      opacity: 1;\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .os-avatar {\n    &--xs {\n      width: 28px;\n      height: 28px;\n    }\n\n    &--sm {\n      width: 36px;\n      height: 36px;\n    }\n\n    &--md {\n      width: 44px;\n      height: 44px;\n    }\n\n    &--lg {\n      width: 52px;\n      height: 52px;\n    }\n\n    &--xl {\n      width: 68px;\n      height: 68px;\n    }\n\n    &--2xl {\n      width: 84px;\n      height: 84px;\n    }\n  }\n}\n\n[data-theme='dark'] {\n  .os-avatar {\n    background-color: var(--os-color-neutral-700);\n    color: var(--os-color-neutral-300);\n\n    &--loading {\n      background-color: var(--os-color-neutral-800);\n    }\n  }\n}\n\n@media (prefers-contrast: high) {\n  .os-avatar {\n    border: var(--os-border-width-thin) solid var(--os-color-neutral-400);\n\n    &__image {\n      border: var(--os-border-width-thin) solid var(--os-color-neutral-200);\n    }\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .os-avatar {\n    &--loading {\n      animation: none;\n    }\n\n    &--status-online,\n    &--status-away,\n    &--status-busy {\n      .os-avatar__status {\n        animation: none;\n      }\n    }\n\n    &__skeleton {\n      animation: none;\n    }\n  }\n}\n\n@keyframes shimmer {\n  0% {\n    background-position: -200% 0;\n  }\n  100% {\n    background-position: 200% 0;\n  }\n}\n\n@keyframes pulse-status {\n  0%,\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  50% {\n    opacity: 0.7;\n    transform: scale(1.1);\n  }\n}\n\n@keyframes blink {\n  0%,\n  50% {\n    opacity: 1;\n  }\n  51%,\n  100% {\n    opacity: 0.3;\n  }\n}\n\n// Responsividade aprimorada para mobile\n@media (max-width: 576px) {\n  .os-avatar {\n    &__status {\n      width: 10px;\n      height: 10px;\n      bottom: 1px;\n      right: 1px;\n    }\n\n    &__image-nav {\n      width: 20px;\n      height: 20px;\n      font-size: 12px;\n    }\n  }\n}\n\n// Suporte para touch devices\n@media (hover: none) and (pointer: coarse) {\n  .os-avatar {\n    &__image-nav {\n      opacity: 1;\n      background: rgba(0, 0, 0, 0.7);\n    }\n\n    &--clickable {\n      &:hover {\n        transform: none;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./os-avatar.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsBadgeComponent",
            "id": "component-OsBadgeComponent-527e58445f5d2ec42c73d87db1df6ad60438d0c4d7121a79a21c4609066cb5d22f386d13b1fabf2d7c74d688a81185108cc7a67641cd5fb8d11c7729d02ade1d",
            "file": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-badge",
            "styleUrls": [
                "./os-badge.component.scss"
            ],
            "styles": [],
            "template": "<div\n  [class]=\"badgeClass()\"\n  [attr.aria-label]=\"ariaLabel() || null\"\n  [attr.title]=\"title() || null\"\n  [attr.aria-hidden]=\"ariaHidden()\"\n  [attr.role]=\"badgeRole()\"\n>\n  @if (position() === 'inline') { @if (icon() && !text()) {\n  <os-icon [name]=\"icon()\" [size]=\"iconSize()\" [variant]=\"iconVariant()\" [ariaHidden]=\"true\" />\n  } @else if (text()) {\n  <span [class]=\"textClass()\">{{ displayText() }}</span>\n  } @if (dot() && !text() && !icon()) {\n  <span class=\"os-badge__dot\" [attr.aria-label]=\"ariaLabel() || 'Badge'\"></span>\n  } } @else {\n  <div\n    [matBadge]=\"badgeContent()\"\n    [matBadgeColor]=\"matColor()\"\n    [matBadgeSize]=\"matSize()\"\n    [matBadgePosition]=\"matPosition()\"\n    [matBadgeOverlap]=\"false\"\n    [matBadgeHidden]=\"!shouldShowBadge()\"\n    class=\"os-badge__wrapper\"\n  >\n    @if (icon() && !text()) {\n    <os-icon\n      [name]=\"icon()\"\n      [size]=\"iconSize()\"\n      [variant]=\"iconVariant()\"\n      [ariaHidden]=\"true\"\n    />\n    } @else if (text()) {\n    <span [class]=\"textClass()\">{{ displayText() }}</span>\n    } @if (dot() && !text() && !icon()) {\n    <span class=\"os-badge__dot\" [attr.aria-label]=\"ariaLabel() || 'Badge'\"></span>\n    }\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "required": false
                },
                {
                    "name": "dot",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "required": false
                },
                {
                    "name": "maxValue",
                    "defaultValue": "99",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "required": false
                },
                {
                    "name": "outlined",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "required": false
                },
                {
                    "name": "pill",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "position",
                    "defaultValue": "'inline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsBadgePosition",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'decorative'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsBadgeRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsBadgeSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "required": false
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsBadgeVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ariaHidden",
                    "defaultValue": "computed(() => {\n    return this.role() === 'decorative';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "badgeClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-badge',\n      `os-badge--${this.variant()}`,\n      `os-badge--${this.size()}`,\n      `os-badge--${this.position()}`,\n      this.pill() ? 'os-badge--pill' : '',\n      this.outlined() ? 'os-badge--outlined' : '',\n      this.dot() ? 'os-badge--dot' : '',\n      this.animated() ? 'os-badge--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "badgeContent",
                    "defaultValue": "computed(() => {\n    if (this.text()) {\n      return this.displayText();\n    }\n    if (this.dot()) {\n      return '';\n    }\n    return null;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 213,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "badgeRole",
                    "defaultValue": "computed(() => {\n    switch (this.role()) {\n      case 'status':\n        return 'status';\n      case 'alert':\n        return 'alert';\n      default:\n        return null;\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "displayText",
                    "defaultValue": "computed(() => {\n    const text = this.text();\n    if (!text) return '';\n\n    // Verificar se é um número\n    const numValue = parseInt(text, 10);\n    if (!isNaN(numValue) && numValue > this.maxValue()) {\n      return `${this.maxValue()}+`;\n    }\n\n    return text;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "iconSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<OsBadgeSize, 'xs' | 'sm' | 'md' | 'lg'> = {\n      sm: 'xs',\n      md: 'sm',\n      lg: 'md',\n      xl: 'lg',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 133
                },
                {
                    "name": "iconVariant",
                    "defaultValue": "computed(() => {\n    if (this.outlined()) {\n      // Mapear variants específicos para variants de ícone suportados\n      switch (this.variant()) {\n        case 'goal-active':\n          return 'primary';\n        case 'goal-completed':\n          return 'success';\n        case 'goal-overdue':\n          return 'warning';\n        default:\n          return this.variant() as any;\n      }\n    }\n    return 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 143
                },
                {
                    "name": "matColor",
                    "defaultValue": "computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n      case 'goal-completed':\n        return 'primary';\n      case 'warning':\n      case 'goal-overdue':\n        return 'warn';\n      case 'error':\n        return 'warn';\n      case 'info':\n      case 'goal-active':\n        return 'accent';\n      default:\n        return undefined;\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 161,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "matPosition",
                    "defaultValue": "computed(() => {\n    switch (this.position()) {\n      case 'top-right':\n        return 'above after';\n      case 'top-left':\n        return 'above before';\n      case 'bottom-right':\n        return 'below after';\n      case 'bottom-left':\n        return 'below before';\n      default:\n        return 'above after';\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 198,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "matSize",
                    "defaultValue": "computed(() => {\n    switch (this.size()) {\n      case 'sm':\n        return 'small';\n      case 'md':\n        return 'medium';\n      case 'lg':\n        return 'large';\n      case 'xl':\n        return 'large';\n      default:\n        return 'medium';\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 183,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "shouldShowBadge",
                    "defaultValue": "computed(() => {\n    return this.text() || this.dot();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 223,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "textClass",
                    "defaultValue": "computed(() => {\n    return ['os-badge__text', this.outlined() ? 'os-badge__text--outlined' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatBadgeModule",
                    "type": "module"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { OsIconComponent } from '../os-icon/os-icon.component';\n\nexport type OsBadgeVariant =\n  | 'default'\n  | 'primary'\n  | 'secondary'\n  | 'success'\n  | 'warning'\n  | 'error'\n  | 'info'\n  | 'goal-active'\n  | 'goal-completed'\n  | 'goal-overdue';\nexport type OsBadgeSize = 'sm' | 'md' | 'lg' | 'xl';\nexport type OsBadgePosition = 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left' | 'inline';\nexport type OsBadgeRole = 'status' | 'alert' | 'decorative';\n\n@Component({\n  selector: 'os-badge',\n  standalone: true,\n  imports: [CommonModule, MatBadgeModule, OsIconComponent],\n  template: `\n    <div\n      [class]=\"badgeClass()\"\n      [attr.aria-label]=\"ariaLabel() || null\"\n      [attr.title]=\"title() || null\"\n      [attr.aria-hidden]=\"ariaHidden()\"\n      [attr.role]=\"badgeRole()\"\n    >\n      @if (position() === 'inline') { @if (icon() && !text()) {\n      <os-icon [name]=\"icon()\" [size]=\"iconSize()\" [variant]=\"iconVariant()\" [ariaHidden]=\"true\" />\n      } @else if (text()) {\n      <span [class]=\"textClass()\">{{ displayText() }}</span>\n      } @if (dot() && !text() && !icon()) {\n      <span class=\"os-badge__dot\" [attr.aria-label]=\"ariaLabel() || 'Badge'\"></span>\n      } } @else {\n      <div\n        [matBadge]=\"badgeContent()\"\n        [matBadgeColor]=\"matColor()\"\n        [matBadgeSize]=\"matSize()\"\n        [matBadgePosition]=\"matPosition()\"\n        [matBadgeOverlap]=\"false\"\n        [matBadgeHidden]=\"!shouldShowBadge()\"\n        class=\"os-badge__wrapper\"\n      >\n        @if (icon() && !text()) {\n        <os-icon\n          [name]=\"icon()\"\n          [size]=\"iconSize()\"\n          [variant]=\"iconVariant()\"\n          [ariaHidden]=\"true\"\n        />\n        } @else if (text()) {\n        <span [class]=\"textClass()\">{{ displayText() }}</span>\n        } @if (dot() && !text() && !icon()) {\n        <span class=\"os-badge__dot\" [attr.aria-label]=\"ariaLabel() || 'Badge'\"></span>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-badge.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsBadgeComponent {\n  text = input<string>('');\n  icon = input<string>('');\n  variant = input<OsBadgeVariant>('default');\n  size = input<OsBadgeSize>('md');\n  position = input<OsBadgePosition>('inline');\n  dot = input(false);\n  pill = input(false);\n  outlined = input(false);\n  role = input<OsBadgeRole>('decorative');\n  ariaLabel = input<string>('');\n  title = input<string>('');\n  animated = input(true);\n  maxValue = input<number>(99);\n  badgeClass = computed(() => {\n    return [\n      'os-badge',\n      `os-badge--${this.variant()}`,\n      `os-badge--${this.size()}`,\n      `os-badge--${this.position()}`,\n      this.pill() ? 'os-badge--pill' : '',\n      this.outlined() ? 'os-badge--outlined' : '',\n      this.dot() ? 'os-badge--dot' : '',\n      this.animated() ? 'os-badge--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  // Computed properties para acessibilidade\n  ariaHidden = computed(() => {\n    return this.role() === 'decorative';\n  });\n\n  badgeRole = computed(() => {\n    switch (this.role()) {\n      case 'status':\n        return 'status';\n      case 'alert':\n        return 'alert';\n      default:\n        return null;\n    }\n  });\n\n  // Formatação de números grandes\n  displayText = computed(() => {\n    const text = this.text();\n    if (!text) return '';\n\n    // Verificar se é um número\n    const numValue = parseInt(text, 10);\n    if (!isNaN(numValue) && numValue > this.maxValue()) {\n      return `${this.maxValue()}+`;\n    }\n\n    return text;\n  });\n\n  textClass = computed(() => {\n    return ['os-badge__text', this.outlined() ? 'os-badge__text--outlined' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  iconSize = computed(() => {\n    const sizeMap: Record<OsBadgeSize, 'xs' | 'sm' | 'md' | 'lg'> = {\n      sm: 'xs',\n      md: 'sm',\n      lg: 'md',\n      xl: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  iconVariant = computed(() => {\n    if (this.outlined()) {\n      // Mapear variants específicos para variants de ícone suportados\n      switch (this.variant()) {\n        case 'goal-active':\n          return 'primary';\n        case 'goal-completed':\n          return 'success';\n        case 'goal-overdue':\n          return 'warning';\n        default:\n          return this.variant() as any;\n      }\n    }\n    return 'default';\n  });\n\n  // Mapeamento interno para Material\n  protected matColor = computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n      case 'goal-completed':\n        return 'primary';\n      case 'warning':\n      case 'goal-overdue':\n        return 'warn';\n      case 'error':\n        return 'warn';\n      case 'info':\n      case 'goal-active':\n        return 'accent';\n      default:\n        return undefined;\n    }\n  });\n\n  protected matSize = computed(() => {\n    switch (this.size()) {\n      case 'sm':\n        return 'small';\n      case 'md':\n        return 'medium';\n      case 'lg':\n        return 'large';\n      case 'xl':\n        return 'large';\n      default:\n        return 'medium';\n    }\n  });\n\n  protected matPosition = computed(() => {\n    switch (this.position()) {\n      case 'top-right':\n        return 'above after';\n      case 'top-left':\n        return 'above before';\n      case 'bottom-right':\n        return 'below after';\n      case 'bottom-left':\n        return 'below before';\n      default:\n        return 'above after';\n    }\n  });\n\n  protected badgeContent = computed(() => {\n    if (this.text()) {\n      return this.displayText();\n    }\n    if (this.dot()) {\n      return '';\n    }\n    return null;\n  });\n\n  protected shouldShowBadge = computed(() => {\n    return this.text() || this.dot();\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-badge {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: var(--os-font-weight-medium);\n  line-height: 1;\n  white-space: nowrap;\n  border-radius: var(--os-border-radius-sm);\n  transition: all var(--os-transition-fast) ease-in-out;\n\n  &__wrapper {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  &--sm {\n    padding: 2px var(--os-spacing-xs);\n    font-size: var(--os-font-size-xs);\n    min-height: 16px;\n    min-width: 16px;\n  }\n\n  &--md {\n    padding: 4px var(--os-spacing-sm);\n    font-size: var(--os-font-size-sm);\n    min-height: 20px;\n    min-width: 20px;\n  }\n\n  &--lg {\n    padding: 6px var(--os-spacing-md);\n    font-size: var(--os-font-size-base);\n    min-height: 24px;\n    min-width: 24px;\n  }\n\n  &--xl {\n    padding: 8px var(--os-spacing-lg);\n    font-size: var(--os-font-size-lg);\n    min-height: 32px;\n    min-width: 32px;\n  }\n\n  &--default {\n    background-color: var(--os-color-neutral-100);\n    color: var(--os-color-neutral-700);\n    border: var(--os-border-width-thin) solid var(--os-color-neutral-200);\n  }\n\n  &--primary {\n    background-color: var(--os-color-primary-100);\n    color: var(--os-color-primary-700);\n    border: var(--os-border-width-thin) solid var(--os-color-primary-200);\n  }\n\n  &--secondary {\n    background-color: var(--os-color-secondary-100);\n    color: var(--os-color-secondary-700);\n    border: var(--os-border-width-thin) solid var(--os-color-secondary-200);\n  }\n\n  &--success {\n    background-color: var(--os-color-success-100);\n    color: var(--os-color-success-700);\n    border: var(--os-border-width-thin) solid var(--os-color-success-200);\n  }\n\n  &--warning {\n    background-color: var(--os-color-warning-100);\n    color: var(--os-color-warning-700);\n    border: var(--os-border-width-thin) solid var(--os-color-warning-200);\n  }\n\n  &--error {\n    background-color: var(--os-color-error-100);\n    color: var(--os-color-error-700);\n    border: var(--os-border-width-thin) solid var(--os-color-error-200);\n  }\n\n  &--info {\n    background-color: var(--os-color-info-100);\n    color: var(--os-color-info-700);\n    border: var(--os-border-width-thin) solid var(--os-color-info-200);\n  }\n\n  // Variants específicos para metas\n  &--goal-active {\n    background-color: var(--os-color-primary-100);\n    color: var(--os-color-primary-700);\n    border: var(--os-border-width-thin) solid var(--os-color-primary-200);\n  }\n\n  &--goal-completed {\n    background-color: var(--os-color-success-100);\n    color: var(--os-color-success-700);\n    border: var(--os-border-width-thin) solid var(--os-color-success-200);\n  }\n\n  &--goal-overdue {\n    background-color: var(--os-color-warning-100);\n    color: var(--os-color-warning-700);\n    border: var(--os-border-width-thin) solid var(--os-color-warning-200);\n  }\n\n  &--outlined {\n    background-color: transparent;\n\n    &.os-badge--default {\n      color: var(--os-color-neutral-600);\n      border-color: var(--os-color-neutral-300);\n    }\n\n    &.os-badge--primary {\n      color: var(--os-color-primary-600);\n      border-color: var(--os-color-primary-300);\n    }\n\n    &.os-badge--secondary {\n      color: var(--os-color-secondary-600);\n      border-color: var(--os-color-secondary-300);\n    }\n\n    &.os-badge--success {\n      color: var(--os-color-success-600);\n      border-color: var(--os-color-success-300);\n    }\n\n    &.os-badge--warning {\n      color: var(--os-color-warning-600);\n      border-color: var(--os-color-warning-300);\n    }\n\n    &.os-badge--error {\n      color: var(--os-color-error-600);\n      border-color: var(--os-color-error-300);\n    }\n\n    &.os-badge--info {\n      color: var(--os-color-info-600);\n      border-color: var(--os-color-info-300);\n    }\n\n    &.os-badge--goal-active {\n      color: var(--os-color-primary-600);\n      border-color: var(--os-color-primary-300);\n    }\n\n    &.os-badge--goal-completed {\n      color: var(--os-color-success-600);\n      border-color: var(--os-color-success-300);\n    }\n\n    &.os-badge--goal-overdue {\n      color: var(--os-color-warning-600);\n      border-color: var(--os-color-warning-300);\n    }\n  }\n\n  &--pill {\n    border-radius: var(--os-border-radius-full);\n  }\n\n  &--dot {\n    padding: 0;\n    min-width: 8px;\n    min-height: 8px;\n    border-radius: var(--os-border-radius-full);\n    border: none;\n\n    &.os-badge--sm {\n      min-width: 6px;\n      min-height: 6px;\n    }\n\n    &.os-badge--md {\n      min-width: 8px;\n      min-height: 8px;\n    }\n\n    &.os-badge--lg {\n      min-width: 10px;\n      min-height: 10px;\n    }\n\n    &.os-badge--xl {\n      min-width: 12px;\n      min-height: 12px;\n    }\n  }\n\n  &--top-right,\n  &--top-left,\n  &--bottom-right,\n  &--bottom-left {\n    position: absolute;\n    z-index: var(--os-z-sticky);\n    transform: translate(50%, -50%);\n\n    &.os-badge--top-right {\n      top: 0;\n      right: 0;\n    }\n\n    &.os-badge--top-left {\n      top: 0;\n      left: 0;\n      transform: translate(-50%, -50%);\n    }\n\n    &.os-badge--bottom-right {\n      bottom: 0;\n      right: 0;\n      transform: translate(50%, 50%);\n    }\n\n    &.os-badge--bottom-left {\n      bottom: 0;\n      left: 0;\n      transform: translate(-50%, 50%);\n    }\n  }\n\n  &__text {\n    font-weight: var(--os-font-weight-medium);\n    line-height: 1;\n\n    &--outlined {\n      font-weight: var(--os-font-weight-regular);\n    }\n  }\n\n  &__dot {\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: var(--os-border-radius-full);\n  }\n\n  // Animação de entrada\n  &--animated {\n    animation: os-badge-enter 0.3s ease-out;\n  }\n\n  &:hover {\n    opacity: 0.9;\n    transform: scale(1.05);\n  }\n\n  &:focus {\n    outline: 2px solid var(--os-color-primary-500);\n    outline-offset: 2px;\n  }\n}\n\n// Animação de entrada\n@keyframes os-badge-enter {\n  0% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@media (max-width: 768px) {\n  .os-badge {\n    &--sm {\n      min-height: 18px;\n      min-width: 18px;\n    }\n\n    &--md {\n      min-height: 22px;\n      min-width: 22px;\n    }\n\n    &--lg {\n      min-height: 26px;\n      min-width: 26px;\n    }\n\n    &--xl {\n      min-height: 30px;\n      min-width: 30px;\n    }\n  }\n}\n\n[data-theme='dark'] {\n  .os-badge {\n    &--default {\n      background-color: var(--os-color-neutral-800);\n      color: var(--os-color-neutral-200);\n      border-color: var(--os-color-neutral-600);\n    }\n\n    &--primary {\n      background-color: var(--os-color-primary-900);\n      color: var(--os-color-primary-100);\n      border-color: var(--os-color-primary-700);\n    }\n\n    &--secondary {\n      background-color: var(--os-color-secondary-900);\n      color: var(--os-color-secondary-100);\n      border-color: var(--os-color-secondary-700);\n    }\n\n    &--success {\n      background-color: var(--os-color-success-900);\n      color: var(--os-color-success-100);\n      border-color: var(--os-color-success-700);\n    }\n\n    &--warning {\n      background-color: var(--os-color-warning-900);\n      color: var(--os-color-warning-100);\n      border-color: var(--os-color-warning-700);\n    }\n\n    &--error {\n      background-color: var(--os-color-error-900);\n      color: var(--os-color-error-100);\n      border-color: var(--os-color-error-700);\n    }\n\n    &--info {\n      background-color: var(--os-color-info-900);\n      color: var(--os-color-info-100);\n      border-color: var(--os-color-info-700);\n    }\n\n    &--goal-active {\n      background-color: var(--os-color-primary-900);\n      color: var(--os-color-primary-100);\n      border-color: var(--os-color-primary-700);\n    }\n\n    &--goal-completed {\n      background-color: var(--os-color-success-900);\n      color: var(--os-color-success-100);\n      border-color: var(--os-color-success-700);\n    }\n\n    &--goal-overdue {\n      background-color: var(--os-color-warning-900);\n      color: var(--os-color-warning-100);\n      border-color: var(--os-color-warning-700);\n    }\n\n    &--outlined {\n      &.os-badge--default {\n        color: var(--os-color-neutral-300);\n        border-color: var(--os-color-neutral-500);\n      }\n\n      &.os-badge--primary {\n        color: var(--os-color-primary-300);\n        border-color: var(--os-color-primary-500);\n      }\n\n      &.os-badge--secondary {\n        color: var(--os-color-secondary-300);\n        border-color: var(--os-color-secondary-500);\n      }\n\n      &.os-badge--success {\n        color: var(--os-color-success-300);\n        border-color: var(--os-color-success-500);\n      }\n\n      &.os-badge--warning {\n        color: var(--os-color-warning-300);\n        border-color: var(--os-color-warning-500);\n      }\n\n      &.os-badge--error {\n        color: var(--os-color-error-300);\n        border-color: var(--os-color-error-500);\n      }\n\n      &.os-badge--info {\n        color: var(--os-color-info-300);\n        border-color: var(--os-color-info-500);\n      }\n\n      &.os-badge--goal-active {\n        color: var(--os-color-primary-300);\n        border-color: var(--os-color-primary-500);\n      }\n\n      &.os-badge--goal-completed {\n        color: var(--os-color-success-300);\n        border-color: var(--os-color-success-500);\n      }\n\n      &.os-badge--goal-overdue {\n        color: var(--os-color-warning-300);\n        border-color: var(--os-color-warning-500);\n      }\n    }\n  }\n}\n\n@media (prefers-contrast: high) {\n  .os-badge {\n    &--default {\n      border-width: var(--os-border-width-medium);\n    }\n\n    &--primary,\n    &--secondary,\n    &--success,\n    &--warning,\n    &--error,\n    &--info,\n    &--goal-active,\n    &--goal-completed,\n    &--goal-overdue {\n      border-width: var(--os-border-width-medium);\n    }\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .os-badge {\n    transition: none;\n\n    &--animated {\n      animation: none;\n    }\n\n    &:hover {\n      transform: none;\n    }\n  }\n}\n",
                    "styleUrl": "./os-badge.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsBudgetSummaryComponent",
            "id": "component-OsBudgetSummaryComponent-261c3659c4b2bf9e2dba3f98e01158af2ad2cf7ab308434e30b1c1788407de9c40bf3bad48490c5fd7c441083ff20351d9850bbde1f6381dbd549c41120129c2",
            "file": "src/app/shared/ui-components/organisms/os-budget-summary/os-budget-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-budget-summary",
            "styleUrls": [
                "./os-budget-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./os-budget-summary.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "required": false
                },
                {
                    "name": "budgetData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetSummaryData | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "required": true
                },
                {
                    "name": "clickable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "required": false
                },
                {
                    "name": "highlightTotals",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "required": false
                },
                {
                    "name": "showChart",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "required": false
                },
                {
                    "name": "showDates",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "required": false
                },
                {
                    "name": "showProgress",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "required": false
                },
                {
                    "name": "showStatus",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "cardClicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetSummaryData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "required": false
                },
                {
                    "name": "chartClicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ type: 'pie' | 'bar'; data: BudgetSummaryData }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "cardClasses",
                    "defaultValue": "computed(() => {\n    const variant = this.variant();\n    const size = this.size();\n    const clickable = this.clickable();\n    const loading = this.loading();\n    const animated = this.animated();\n\n    return [\n      'os-budget-summary',\n      `os-budget-summary--${variant}`,\n      `os-budget-summary--${size}`,\n      clickable ? 'os-budget-summary--clickable' : '',\n      loading ? 'os-budget-summary--loading' : '',\n      animated ? 'os-budget-summary--animated' : ''\n    ].filter(Boolean).join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "chartData",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showChart()) return null;\n\n    const spent = data.spentAmount;\n    const remaining = Math.max(0, data.remainingAmount);\n    const overBudget = Math.max(0, data.spentAmount - data.totalBudget);\n\n    return {\n      spent: { value: spent, percentage: (spent / data.totalBudget) * 100, color: 'var(--os-color-primary)' },\n      remaining: { value: remaining, percentage: (remaining / data.totalBudget) * 100, color: 'var(--os-color-success)' },\n      overBudget: { value: overBudget, percentage: (overBudget / data.totalBudget) * 100, color: 'var(--os-color-error)' }\n    };\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "effectiveAriaLabel",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    if (!data) return this.ariaLabel() || 'Resumo de orçamento';\n\n    const customLabel = this.ariaLabel();\n    if (customLabel) return customLabel;\n\n    return `Resumo do orçamento ${data.name}: ${data.percentage}% utilizado, ${data.status}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "formattedDates",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showDates()) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      end: data.endDate.toLocaleDateString('pt-BR'),\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n    };\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isCompleted",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    return data ? data.status === 'completed' : false;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isOverBudget",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    return data ? data.spentAmount > data.totalBudget : false;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "progressPercentage",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    return data ? Math.min(Math.max(data.percentage, 0), 100) : 0;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "statusInfo",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'on-track':\n        return { type: 'success' as const, label: 'No Prazo', icon: 'check_circle' };\n      case 'over-budget':\n        return { type: 'error' as const, label: 'Acima do Orçamento', icon: 'warning' };\n      case 'under-budget':\n        return { type: 'warning' as const, label: 'Abaixo do Orçamento', icon: 'info' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getChartType",
                    "args": [],
                    "optional": false,
                    "returnType": "\"pie\" | \"bar\"",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getStatusColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTotalHighlightClass",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCardClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChartClick",
                    "args": [
                        {
                            "name": "type",
                            "type": "\"pie\" | \"bar\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "\"pie\" | \"bar\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsCardComponent",
                    "type": "component"
                },
                {
                    "name": "OsMoneyDisplayComponent",
                    "type": "component"
                },
                {
                    "name": "OsBadgeComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output, signal } from '@angular/core';\n\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsMoneyDisplayComponent } from '../../molecules/os-money-display/os-money-display.component';\n\nexport interface BudgetSummaryData {\n  id: string;\n  name: string;\n  totalBudget: number;\n  spentAmount: number;\n  remainingAmount: number;\n  percentage: number;\n  status: 'on-track' | 'over-budget' | 'under-budget' | 'completed';\n  category: string;\n  startDate: Date;\n  endDate: Date;\n  lastUpdated: Date;\n}\n\n@Component({\n  selector: 'os-budget-summary',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsCardComponent,\n    OsMoneyDisplayComponent,\n    OsBadgeComponent,\n    OsIconComponent,\n  ],\n  templateUrl: './os-budget-summary.component.html',\n  styleUrls: ['./os-budget-summary.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsBudgetSummaryComponent {\n  // Inputs\n  budgetData = input.required<BudgetSummaryData | null>();\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  showProgress = input<boolean>(true);\n  showStatus = input<boolean>(true);\n  showDates = input<boolean>(false);\n  clickable = input<boolean>(false);\n  showChart = input<boolean>(true);\n  loading = input<boolean>(false);\n  highlightTotals = input<boolean>(true);\n  animated = input<boolean>(true);\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n\n  // Outputs\n  cardClicked = output<BudgetSummaryData>();\n  chartClicked = output<{ type: 'pie' | 'bar'; data: BudgetSummaryData }>();\n\n  // Computed properties\n  readonly progressPercentage = computed(() => {\n    const data = this.budgetData();\n    return data ? Math.min(Math.max(data.percentage, 0), 100) : 0;\n  });\n\n  readonly statusInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'on-track':\n        return { type: 'success' as const, label: 'No Prazo', icon: 'check_circle' };\n      case 'over-budget':\n        return { type: 'error' as const, label: 'Acima do Orçamento', icon: 'warning' };\n      case 'under-budget':\n        return { type: 'warning' as const, label: 'Abaixo do Orçamento', icon: 'info' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  });\n\n  readonly isOverBudget = computed(() => {\n    const data = this.budgetData();\n    return data ? data.spentAmount > data.totalBudget : false;\n  });\n\n  readonly isCompleted = computed(() => {\n    const data = this.budgetData();\n    return data ? data.status === 'completed' : false;\n  });\n\n  readonly formattedDates = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showDates()) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      end: data.endDate.toLocaleDateString('pt-BR'),\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n    };\n  });\n\n  readonly chartData = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showChart()) return null;\n\n    const spent = data.spentAmount;\n    const remaining = Math.max(0, data.remainingAmount);\n    const overBudget = Math.max(0, data.spentAmount - data.totalBudget);\n\n    return {\n      spent: { value: spent, percentage: (spent / data.totalBudget) * 100, color: 'var(--os-color-primary)' },\n      remaining: { value: remaining, percentage: (remaining / data.totalBudget) * 100, color: 'var(--os-color-success)' },\n      overBudget: { value: overBudget, percentage: (overBudget / data.totalBudget) * 100, color: 'var(--os-color-error)' }\n    };\n  });\n\n  readonly effectiveAriaLabel = computed(() => {\n    const data = this.budgetData();\n    if (!data) return this.ariaLabel() || 'Resumo de orçamento';\n\n    const customLabel = this.ariaLabel();\n    if (customLabel) return customLabel;\n\n    return `Resumo do orçamento ${data.name}: ${data.percentage}% utilizado, ${data.status}`;\n  });\n\n  readonly cardClasses = computed(() => {\n    const variant = this.variant();\n    const size = this.size();\n    const clickable = this.clickable();\n    const loading = this.loading();\n    const animated = this.animated();\n\n    return [\n      'os-budget-summary',\n      `os-budget-summary--${variant}`,\n      `os-budget-summary--${size}`,\n      clickable ? 'os-budget-summary--clickable' : '',\n      loading ? 'os-budget-summary--loading' : '',\n      animated ? 'os-budget-summary--animated' : ''\n    ].filter(Boolean).join(' ');\n  });\n\n  // Methods\n  onCardClick(): void {\n    if (this.clickable() && this.budgetData()) {\n      this.cardClicked.emit(this.budgetData()!);\n    }\n  }\n\n  onChartClick(type: 'pie' | 'bar'): void {\n    if (this.budgetData()) {\n      this.chartClicked.emit({ type, data: this.budgetData()! });\n    }\n  }\n\n  getStatusColor(): string {\n    const status = this.statusInfo();\n    switch (status.type) {\n      case 'success':\n        return 'var(--os-color-success)';\n      case 'warning':\n        return 'var(--os-color-warning)';\n      case 'error':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n\n  getTotalHighlightClass(): string {\n    if (!this.highlightTotals()) return '';\n    return 'os-budget-summary__total--highlighted';\n  }\n\n  getChartType(): 'pie' | 'bar' {\n    return this.variant() === 'compact' ? 'pie' : 'bar';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/variables' as *;\n\n.os-budget-summary {\n  // Base styles\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: var(--os-spacing-md);\n    gap: var(--os-spacing-sm);\n  }\n\n  &__title-section {\n    flex: 1;\n    min-width: 0;\n  }\n\n  &__title {\n    font-size: var(--os-font-size-lg);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n    margin: 0 0 var(--os-spacing-xs) 0;\n    line-height: 1.3;\n  }\n\n  &__category {\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n    background: var(--os-color-surface-secondary);\n    padding: var(--os-spacing-xs) var(--os-spacing-sm);\n    border-radius: var(--os-border-radius-sm);\n    display: inline-block;\n  }\n\n  // Progress section\n  &__progress {\n    margin-bottom: var(--os-spacing-md);\n  }\n\n  &__progress-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: var(--os-spacing-xs);\n  }\n\n  &__progress-label {\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  &__progress-percentage {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n  }\n\n  &__progress-bar {\n    height: 8px;\n    background: var(--os-color-surface-secondary);\n    border-radius: var(--os-border-radius-sm);\n    overflow: hidden;\n    position: relative;\n  }\n\n  &__progress-fill {\n    height: 100%;\n    background: var(--os-color-primary);\n    border-radius: var(--os-border-radius-sm);\n    transition: width 0.3s ease, background-color 0.3s ease;\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(\n        90deg,\n        transparent 0%,\n        rgba(255, 255, 255, 0.2) 50%,\n        transparent 100%\n      );\n      animation: shimmer 2s infinite;\n    }\n\n    &--over-budget {\n      background: var(--os-color-error);\n    }\n\n    &--completed {\n      background: var(--os-color-success);\n    }\n  }\n\n  // Financial section\n  &__financial {\n    margin-bottom: var(--os-spacing-md);\n  }\n\n  &__amount-group {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    gap: var(--os-spacing-md);\n  }\n\n  &__amount {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-xs);\n    transition: transform 0.2s ease, box-shadow 0.2s ease;\n\n    &:hover {\n      transform: translateY(-2px);\n    }\n  }\n\n  &__amount-label {\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  &__total--highlighted {\n    .os-budget-summary__amount-label {\n      font-weight: var(--os-font-weight-bold);\n      color: var(--os-color-primary);\n    }\n  }\n\n  // Dates section\n  &__dates {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-sm);\n    padding-top: var(--os-spacing-md);\n    border-top: 1px solid var(--os-color-border);\n  }\n\n  &__date-item {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n    font-size: var(--os-font-size-sm);\n  }\n\n  &__date-label {\n    color: var(--os-color-text-secondary);\n    font-weight: var(--os-font-weight-medium);\n    min-width: 60px;\n  }\n\n  &__date-value {\n    color: var(--os-color-text-primary);\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  // Compact variant\n  &__compact-info {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: var(--os-spacing-sm);\n    border-top: 1px solid var(--os-color-border);\n  }\n\n  &__compact-percentage {\n    font-size: var(--os-font-size-lg);\n    font-weight: var(--os-font-weight-bold);\n    color: var(--os-color-primary);\n  }\n\n  &__compact-status {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  // Size variants\n  &--small {\n    .os-budget-summary__title {\n      font-size: var(--os-font-size-md);\n    }\n\n    .os-budget-summary__amount-group {\n      grid-template-columns: 1fr;\n      gap: var(--os-spacing-sm);\n    }\n  }\n\n  &--large {\n    .os-budget-summary__title {\n      font-size: var(--os-font-size-xl);\n    }\n\n    .os-budget-summary__amount-group {\n      grid-template-columns: repeat(3, 1fr);\n      gap: var(--os-spacing-lg);\n    }\n\n    .os-budget-summary__progress-bar {\n      height: 12px;\n    }\n  }\n\n  // Variant styles\n  &--compact {\n    .os-budget-summary__header {\n      margin-bottom: var(--os-spacing-sm);\n    }\n\n    .os-budget-summary__progress {\n      margin-bottom: var(--os-spacing-sm);\n    }\n\n    .os-budget-summary__financial {\n      margin-bottom: var(--os-spacing-sm);\n    }\n  }\n\n  &--detailed {\n    .os-budget-summary__header {\n      margin-bottom: var(--os-spacing-lg);\n    }\n\n    .os-budget-summary__progress {\n      margin-bottom: var(--os-spacing-lg);\n    }\n\n    .os-budget-summary__financial {\n      margin-bottom: var(--os-spacing-lg);\n    }\n  }\n\n  // Chart styles\n  &__chart {\n    margin-top: var(--os-spacing-md);\n    padding-top: var(--os-spacing-md);\n    border-top: 1px solid var(--os-color-border);\n  }\n\n  &__chart-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: var(--os-spacing-sm);\n  }\n\n  &__chart-title {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n  }\n\n  &__chart-toggle {\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: var(--os-spacing-xs);\n    border-radius: var(--os-border-radius-sm);\n    transition: background-color 0.2s ease;\n\n    &:hover {\n      background-color: var(--os-color-surface-hover);\n    }\n\n    &:focus-visible {\n      outline: 2px solid var(--os-color-primary);\n      outline-offset: 2px;\n    }\n  }\n\n  &__pie-chart {\n    width: 120px;\n    height: 120px;\n    border-radius: 50%;\n    position: relative;\n    margin: 0 auto;\n    background: conic-gradient(\n      var(--os-color-primary) 0deg 216deg,\n      var(--os-color-success) 216deg 360deg\n    );\n  }\n\n  &__pie-slice {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    transition: transform 0.3s ease;\n  }\n\n  &__bar-chart {\n    height: 80px;\n    display: flex;\n    align-items: end;\n    gap: var(--os-spacing-sm);\n  }\n\n  &__bar-group {\n    display: flex;\n    gap: var(--os-spacing-xs);\n    height: 100%;\n    width: 100%;\n  }\n\n  &__bar {\n    flex: 1;\n    min-height: 20px;\n    border-radius: var(--os-border-radius-sm) var(--os-border-radius-sm) 0 0;\n    transition: height 0.3s ease;\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0.2) 0%,\n        transparent 50%\n      );\n      border-radius: inherit;\n    }\n  }\n\n  // Loading states\n  &__loading {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--os-color-background-primary);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 10;\n  }\n\n  &__skeleton {\n    width: 100%;\n    padding: var(--os-spacing-md);\n  }\n\n  &__skeleton-header {\n    height: 24px;\n    background: var(--os-color-surface-secondary);\n    border-radius: var(--os-border-radius-sm);\n    margin-bottom: var(--os-spacing-md);\n    animation: skeleton-shimmer 1.5s infinite;\n  }\n\n  &__skeleton-progress {\n    height: 8px;\n    background: var(--os-color-surface-secondary);\n    border-radius: var(--os-border-radius-sm);\n    margin-bottom: var(--os-spacing-md);\n    animation: skeleton-shimmer 1.5s infinite;\n  }\n\n  &__skeleton-amounts {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: var(--os-spacing-md);\n  }\n\n  &__skeleton-amount {\n    height: 40px;\n    background: var(--os-color-surface-secondary);\n    border-radius: var(--os-border-radius-sm);\n    animation: skeleton-shimmer 1.5s infinite;\n  }\n\n  // Animation states\n  &--animated {\n    .os-budget-summary__amount {\n      animation: budget-summary-entrance 0.6s ease-out;\n      animation-fill-mode: both;\n\n      &:nth-child(1) { animation-delay: 0.1s; }\n      &:nth-child(2) { animation-delay: 0.2s; }\n      &:nth-child(3) { animation-delay: 0.3s; }\n    }\n\n    .os-budget-summary__progress-fill {\n      animation: budget-summary-progress 0.8s ease-out;\n    }\n\n    .os-budget-summary__chart {\n      animation: budget-summary-chart 0.6s ease-out;\n      animation-delay: 0.4s;\n      animation-fill-mode: both;\n    }\n  }\n\n  &--loading {\n    position: relative;\n    overflow: hidden;\n  }\n}\n\n// Animations\n@keyframes shimmer {\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n}\n\n@keyframes skeleton-shimmer {\n  0% {\n    background-position: -200px 0;\n  }\n  100% {\n    background-position: calc(200px + 100%) 0;\n  }\n}\n\n@keyframes budget-summary-entrance {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes budget-summary-progress {\n  0% {\n    width: 0%;\n  }\n  100% {\n    width: var(--progress-width, 0%);\n  }\n}\n\n@keyframes budget-summary-chart {\n  0% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n// Responsive design\n@media (max-width: 768px) {\n  .os-budget-summary {\n    &__header {\n      flex-direction: column;\n      align-items: flex-start;\n      gap: var(--os-spacing-sm);\n    }\n\n    &__amount-group {\n      grid-template-columns: 1fr;\n      gap: var(--os-spacing-sm);\n    }\n\n    &__dates {\n      .os-budget-summary__date-item {\n        flex-direction: column;\n        align-items: flex-start;\n        gap: var(--os-spacing-xs);\n      }\n    }\n  }\n}\n\n@media (max-width: 480px) {\n  .os-budget-summary {\n    &__compact-info {\n      flex-direction: column;\n      align-items: flex-start;\n      gap: var(--os-spacing-xs);\n    }\n  }\n}\n",
                    "styleUrl": "./os-budget-summary.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "@if (budgetData(); as data) {\n<os-card [variant]=\"variant() === 'compact' ? 'flat' : 'default'\" [size]=\"size()\" [clickable]=\"clickable()\"\n    (click)=\"onCardClick()\"\n    [class]=\"cardClasses()\"\n    [attr.aria-label]=\"effectiveAriaLabel()\"\n    [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n    role=\"region\">\n    <!-- Header -->\n    <div class=\"os-budget-summary__header\">\n        <div class=\"os-budget-summary__title-section\">\n            <h3 class=\"os-budget-summary__title\">{{ data.name }}</h3>\n            @if (data.category) {\n            <span class=\"os-budget-summary__category\">{{ data.category }}</span>\n            }\n        </div>\n\n        @if (showStatus()) {\n        <os-badge [variant]=\"statusInfo().type\" [size]=\"size() === 'large' ? 'md' : 'sm'\">\n            <os-icon [name]=\"statusInfo().icon\" [size]=\"size() === 'large' ? 'md' : 'sm'\"></os-icon>\n            {{ statusInfo().label }}\n        </os-badge>\n        }\n    </div>\n\n    <!-- Progress Section -->\n    @if (showProgress()) {\n    <div class=\"os-budget-summary__progress\">\n        <div class=\"os-budget-summary__progress-header\">\n            <span class=\"os-budget-summary__progress-label\">Progresso</span>\n            <span class=\"os-budget-summary__progress-percentage\">{{ progressPercentage() }}%</span>\n        </div>\n\n        <div class=\"os-budget-summary__progress-bar\">\n            <div class=\"os-budget-summary__progress-fill\" [style.width.%]=\"progressPercentage()\"\n                [class.os-budget-summary__progress-fill--over-budget]=\"isOverBudget()\"\n                [class.os-budget-summary__progress-fill--completed]=\"isCompleted()\"></div>\n        </div>\n    </div>\n    }\n\n    <!-- Financial Summary -->\n    <div class=\"os-budget-summary__financial\">\n        <div class=\"os-budget-summary__amount-group\">\n            <div class=\"os-budget-summary__amount\" [class]=\"getTotalHighlightClass()\">\n                <span class=\"os-budget-summary__amount-label\">Orçamento Total</span>\n                <os-money-display [value]=\"data.totalBudget\" [variant]=\"'default'\" [size]=\"size()\" \n                    [class]=\"highlightTotals() ? 'os-budget-summary__total--highlighted' : ''\"></os-money-display>\n            </div>\n\n            <div class=\"os-budget-summary__amount\">\n                <span class=\"os-budget-summary__amount-label\">Gasto</span>\n                <os-money-display [value]=\"data.spentAmount\" [variant]=\"isOverBudget() ? 'error' : 'default'\"\n                    [size]=\"size()\"></os-money-display>\n            </div>\n\n            <div class=\"os-budget-summary__amount\">\n                <span class=\"os-budget-summary__amount-label\">Restante</span>\n                <os-money-display [value]=\"data.remainingAmount\"\n                    [variant]=\"data.remainingAmount >= 0 ? 'success' : 'error'\" [size]=\"size()\"></os-money-display>\n            </div>\n        </div>\n    </div>\n\n    <!-- Chart Section -->\n    @if (showChart() && chartData(); as chart) {\n    <div class=\"os-budget-summary__chart\" [attr.aria-label]=\"'Gráfico de distribuição do orçamento'\">\n        <div class=\"os-budget-summary__chart-header\">\n            <span class=\"os-budget-summary__chart-title\">Distribuição</span>\n            <button class=\"os-budget-summary__chart-toggle\" \n                (click)=\"onChartClick(getChartType())\"\n                [attr.aria-label]=\"'Alternar tipo de gráfico'\">\n                <os-icon [name]=\"getChartType() === 'pie' ? 'bar_chart' : 'pie_chart'\" size=\"sm\"></os-icon>\n            </button>\n        </div>\n        \n        @if (getChartType() === 'pie') {\n        <div class=\"os-budget-summary__pie-chart\">\n            <div class=\"os-budget-summary__pie-slice\" \n                [style.background]=\"chart.spent.color\"\n                [style.transform]=\"'rotate(0deg) scale(' + (chart.spent.percentage / 100) + ')'\"\n                [attr.aria-label]=\"'Gasto: ' + chart.spent.value + ' reais'\">\n            </div>\n            <div class=\"os-budget-summary__pie-slice\" \n                [style.background]=\"chart.remaining.color\"\n                [style.transform]=\"'rotate(' + (chart.spent.percentage * 3.6) + 'deg) scale(' + (chart.remaining.percentage / 100) + ')'\"\n                [attr.aria-label]=\"'Restante: ' + chart.remaining.value + ' reais'\">\n            </div>\n        </div>\n        } @else {\n        <div class=\"os-budget-summary__bar-chart\">\n            <div class=\"os-budget-summary__bar-group\">\n                <div class=\"os-budget-summary__bar\" \n                    [style.height.%]=\"chart.spent.percentage\"\n                    [style.background]=\"chart.spent.color\"\n                    [attr.aria-label]=\"'Gasto: ' + chart.spent.value + ' reais'\">\n                </div>\n                <div class=\"os-budget-summary__bar\" \n                    [style.height.%]=\"chart.remaining.percentage\"\n                    [style.background]=\"chart.remaining.color\"\n                    [attr.aria-label]=\"'Restante: ' + chart.remaining.value + ' reais'\">\n                </div>\n            </div>\n        </div>\n        }\n    </div>\n    }\n\n    <!-- Dates Section (only for detailed variant) -->\n    @if (variant() === 'detailed' && showDates() && formattedDates(); as dates) {\n    <div class=\"os-budget-summary__dates\">\n        <div class=\"os-budget-summary__date-item\">\n            <os-icon name=\"calendar_today\" size=\"sm\"></os-icon>\n            <span class=\"os-budget-summary__date-label\">Início:</span>\n            <span class=\"os-budget-summary__date-value\">{{ dates.start }}</span>\n        </div>\n\n        <div class=\"os-budget-summary__date-item\">\n            <os-icon name=\"event\" size=\"sm\"></os-icon>\n            <span class=\"os-budget-summary__date-label\">Fim:</span>\n            <span class=\"os-budget-summary__date-value\">{{ dates.end }}</span>\n        </div>\n\n        <div class=\"os-budget-summary__date-item\">\n            <os-icon name=\"update\" size=\"sm\"></os-icon>\n            <span class=\"os-budget-summary__date-label\">Atualizado:</span>\n            <span class=\"os-budget-summary__date-value\">{{ dates.lastUpdated }}</span>\n        </div>\n    </div>\n    }\n\n    <!-- Compact variant additional info -->\n    @if (variant() === 'compact') {\n    <div class=\"os-budget-summary__compact-info\">\n        <span class=\"os-budget-summary__compact-percentage\">{{ progressPercentage() }}%</span>\n        <span class=\"os-budget-summary__compact-status\" [style.color]=\"getStatusColor()\">\n            {{ statusInfo().label }}\n        </span>\n    </div>\n    }\n\n    <!-- Loading State -->\n    @if (loading()) {\n    <div class=\"os-budget-summary__loading\" aria-live=\"polite\" aria-label=\"Carregando dados do orçamento\">\n        <div class=\"os-budget-summary__skeleton\">\n            <div class=\"os-budget-summary__skeleton-header\"></div>\n            <div class=\"os-budget-summary__skeleton-progress\"></div>\n            <div class=\"os-budget-summary__skeleton-amounts\">\n                <div class=\"os-budget-summary__skeleton-amount\"></div>\n                <div class=\"os-budget-summary__skeleton-amount\"></div>\n                <div class=\"os-budget-summary__skeleton-amount\"></div>\n            </div>\n        </div>\n    </div>\n    }\n</os-card>\n}"
        },
        {
            "name": "OsBudgetTrackerComponent",
            "id": "component-OsBudgetTrackerComponent-d345ac5e34787c9687b6b0592404f17afde997e52d3c5f0319e5c5c730c4a92e685c3a0359e322e031f0f2e711a913a8cc1d9cae9321d9eefbfe2ea3516a7239",
            "file": "src/app/shared/ui-components/organisms/os-budget-tracker/os-budget-tracker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-budget-tracker",
            "styleUrls": [
                "./os-budget-tracker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./os-budget-tracker.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "budgetData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetTrackerData | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "required": true
                },
                {
                    "name": "clickable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "required": false
                },
                {
                    "name": "showCharts",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "required": false
                },
                {
                    "name": "showProjections",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "required": false
                },
                {
                    "name": "showStatus",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "required": false
                },
                {
                    "name": "showTrends",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "budgetClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BudgetTrackerData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "exportClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "refreshClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "formattedDates",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    if (!data) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      end: data.endDate.toLocaleDateString('pt-BR'),\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n    };\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 142,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isCompleted",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    return data ? data.status === 'completed' : false;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isOverBudget",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    return data ? data.spentAmount > data.totalBudget : false;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "monthlyData",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showCharts()) return [];\n\n    return data.monthlySpending.slice(-6); // Last 6 months\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 135,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "progressPercentage",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    return data ? Math.min(Math.max(data.percentage, 0), 100) : 0;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "projectionInfo",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showProjections()) return null;\n\n    const projection = data.trends.projection;\n    const remaining = data.remainingAmount;\n    const isProjectedOver = projection > remaining;\n\n    return {\n      value: projection,\n      isOver: isProjectedOver,\n      percentage: data.totalBudget > 0 ? (projection / data.totalBudget) * 100 : 0,\n    };\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 120,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "statusInfo",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'on-track':\n        return { type: 'success' as const, label: 'No Prazo', icon: 'check_circle' };\n      case 'over-budget':\n        return { type: 'error' as const, label: 'Acima do Orçamento', icon: 'warning' };\n      case 'under-budget':\n        return { type: 'warning' as const, label: 'Abaixo do Orçamento', icon: 'info' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "trendInfo",
                    "defaultValue": "computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showTrends()) return null;\n\n    const trend = data.trends;\n    return {\n      icon: this.getTrendIcon(trend.spendingTrend),\n      label: this.getTrendLabel(trend.spendingTrend),\n      color: this.getTrendColor(trend.riskLevel),\n      riskLevel: trend.riskLevel,\n    };\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getMonthName",
                    "args": [
                        {
                            "name": "month",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 222,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "month",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getStatusColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTrendColor",
                    "args": [
                        {
                            "name": "riskLevel",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "riskLevel",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTrendIcon",
                    "args": [
                        {
                            "name": "trend",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "trend",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTrendLabel",
                    "args": [
                        {
                            "name": "trend",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 196,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "trend",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCardClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onExportClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRefreshClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsCardComponent",
                    "type": "component"
                },
                {
                    "name": "OsMoneyDisplayComponent",
                    "type": "component"
                },
                {
                    "name": "OsBadgeComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                },
                {
                    "name": "OsProgressBarComponent",
                    "type": "component"
                },
                {
                    "name": "OsSpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\n\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsMoneyDisplayComponent } from '../../molecules/os-money-display/os-money-display.component';\n\nexport interface BudgetTrackerData {\n  id: string;\n  name: string;\n  totalBudget: number;\n  spentAmount: number;\n  remainingAmount: number;\n  percentage: number;\n  status: 'on-track' | 'over-budget' | 'under-budget' | 'completed';\n  category: string;\n  startDate: Date;\n  endDate: Date;\n  lastUpdated: Date;\n  monthlySpending: MonthlySpending[];\n  trends: BudgetTrends;\n}\n\nexport interface MonthlySpending {\n  month: string;\n  year: number;\n  amount: number;\n  percentage: number;\n}\n\nexport interface BudgetTrends {\n  spendingTrend: 'increasing' | 'decreasing' | 'stable';\n  projection: number;\n  riskLevel: 'low' | 'medium' | 'high';\n}\n\n@Component({\n  selector: 'os-budget-tracker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsCardComponent,\n    OsMoneyDisplayComponent,\n    OsBadgeComponent,\n    OsIconComponent,\n    OsProgressBarComponent,\n    OsSpinnerComponent,\n  ],\n  templateUrl: './os-budget-tracker.component.html',\n  styleUrls: ['./os-budget-tracker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsBudgetTrackerComponent {\n  // Inputs\n  budgetData = input.required<BudgetTrackerData | null>();\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  showCharts = input<boolean>(true);\n  showTrends = input<boolean>(true);\n  showProjections = input<boolean>(true);\n  showStatus = input<boolean>(true);\n  loading = input<boolean>(false);\n  clickable = input<boolean>(false);\n\n  // Outputs\n  readonly budgetClick = output<BudgetTrackerData>();\n  readonly refreshClick = output<void>();\n  readonly exportClick = output<void>();\n\n  // Computed properties\n  readonly progressPercentage = computed(() => {\n    const data = this.budgetData();\n    return data ? Math.min(Math.max(data.percentage, 0), 100) : 0;\n  });\n\n  readonly statusInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'on-track':\n        return { type: 'success' as const, label: 'No Prazo', icon: 'check_circle' };\n      case 'over-budget':\n        return { type: 'error' as const, label: 'Acima do Orçamento', icon: 'warning' };\n      case 'under-budget':\n        return { type: 'warning' as const, label: 'Abaixo do Orçamento', icon: 'info' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  });\n\n  readonly isOverBudget = computed(() => {\n    const data = this.budgetData();\n    return data ? data.spentAmount > data.totalBudget : false;\n  });\n\n  readonly isCompleted = computed(() => {\n    const data = this.budgetData();\n    return data ? data.status === 'completed' : false;\n  });\n\n  readonly trendInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showTrends()) return null;\n\n    const trend = data.trends;\n    return {\n      icon: this.getTrendIcon(trend.spendingTrend),\n      label: this.getTrendLabel(trend.spendingTrend),\n      color: this.getTrendColor(trend.riskLevel),\n      riskLevel: trend.riskLevel,\n    };\n  });\n\n  readonly projectionInfo = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showProjections()) return null;\n\n    const projection = data.trends.projection;\n    const remaining = data.remainingAmount;\n    const isProjectedOver = projection > remaining;\n\n    return {\n      value: projection,\n      isOver: isProjectedOver,\n      percentage: data.totalBudget > 0 ? (projection / data.totalBudget) * 100 : 0,\n    };\n  });\n\n  readonly monthlyData = computed(() => {\n    const data = this.budgetData();\n    if (!data || !this.showCharts()) return [];\n\n    return data.monthlySpending.slice(-6); // Last 6 months\n  });\n\n  readonly formattedDates = computed(() => {\n    const data = this.budgetData();\n    if (!data) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      end: data.endDate.toLocaleDateString('pt-BR'),\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n    };\n  });\n\n  // Methods\n  onCardClick(): void {\n    const data = this.budgetData();\n    if (this.clickable() && data) {\n      this.budgetClick.emit(data);\n    }\n  }\n\n  onRefreshClick(): void {\n    this.refreshClick.emit();\n  }\n\n  onExportClick(): void {\n    this.exportClick.emit();\n  }\n\n  getStatusColor(): string {\n    const status = this.statusInfo();\n    switch (status.type) {\n      case 'success':\n        return 'var(--os-color-success)';\n      case 'warning':\n        return 'var(--os-color-warning)';\n      case 'error':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n\n  private getTrendIcon(trend: string): string {\n    switch (trend) {\n      case 'increasing':\n        return 'trending_up';\n      case 'decreasing':\n        return 'trending_down';\n      case 'stable':\n        return 'trending_flat';\n      default:\n        return 'trending_flat';\n    }\n  }\n\n  private getTrendLabel(trend: string): string {\n    switch (trend) {\n      case 'increasing':\n        return 'Crescendo';\n      case 'decreasing':\n        return 'Diminuindo';\n      case 'stable':\n        return 'Estável';\n      default:\n        return 'N/A';\n    }\n  }\n\n  private getTrendColor(riskLevel: string): string {\n    switch (riskLevel) {\n      case 'low':\n        return 'var(--os-color-success)';\n      case 'medium':\n        return 'var(--os-color-warning)';\n      case 'high':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n\n  getMonthName(month: string): string {\n    const months = {\n      '01': 'Jan',\n      '02': 'Fev',\n      '03': 'Mar',\n      '04': 'Abr',\n      '05': 'Mai',\n      '06': 'Jun',\n      '07': 'Jul',\n      '08': 'Ago',\n      '09': 'Set',\n      '10': 'Out',\n      '11': 'Nov',\n      '12': 'Dez',\n    };\n    return months[month as keyof typeof months] || month;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-budget-tracker {\n  &--loading {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 200px;\n    padding: var(--os-spacing-lg);\n  }\n\n  &__loading {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: var(--os-spacing-md);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__loading-text {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: var(--os-spacing-lg);\n    gap: var(--os-spacing-md);\n  }\n\n  &__title-section {\n    flex: 1;\n    min-width: 0;\n  }\n\n  &__title {\n    font-size: var(--os-font-size-lg);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n    margin: 0 0 var(--os-spacing-xs) 0;\n    line-height: 1.3;\n  }\n\n  &__category {\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n    background: var(--os-color-background-secondary);\n    padding: var(--os-spacing-xs) var(--os-spacing-sm);\n    border-radius: var(--os-border-radius-sm);\n    display: inline-block;\n  }\n\n  &__actions {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n    flex-shrink: 0;\n  }\n\n  &__action-buttons {\n    display: flex;\n    gap: var(--os-spacing-xs);\n  }\n\n  &__action-btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 32px;\n    height: 32px;\n    border: 1px solid var(--os-color-border);\n    background: var(--os-color-background);\n    border-radius: var(--os-border-radius-sm);\n    color: var(--os-color-text-secondary);\n    cursor: pointer;\n    transition: all var(--os-transition-fast);\n\n    &:hover {\n      background: var(--os-color-background-secondary);\n      color: var(--os-color-text-primary);\n      border-color: var(--os-color-primary);\n    }\n\n    &:focus {\n      outline: 2px solid var(--os-color-primary);\n      outline-offset: 2px;\n    }\n  }\n\n  &__progress {\n    margin-bottom: var(--os-spacing-lg);\n  }\n\n  &__progress-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: var(--os-spacing-sm);\n  }\n\n  &__progress-label {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__progress-percentage {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n  }\n\n  &__financial {\n    margin-bottom: var(--os-spacing-lg);\n  }\n\n  &__amount-group {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    gap: var(--os-spacing-md);\n  }\n\n  &__amount {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-xs);\n  }\n\n  &__amount-label {\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-text-secondary);\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  &__trends {\n    margin-bottom: var(--os-spacing-lg);\n    padding: var(--os-spacing-md);\n    background: var(--os-color-background-secondary);\n    border-radius: var(--os-border-radius-md);\n    border-left: 4px solid var(--os-color-primary);\n  }\n\n  &__trend-header {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n    margin-bottom: var(--os-spacing-sm);\n  }\n\n  &__trend-label {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__trend-info {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: var(--os-spacing-sm);\n  }\n\n  &__trend-value {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-semibold);\n  }\n\n  &__projections {\n    margin-bottom: var(--os-spacing-lg);\n    padding: var(--os-spacing-md);\n    background: var(--os-color-background-secondary);\n    border-radius: var(--os-border-radius-md);\n    border-left: 4px solid var(--os-color-warning);\n  }\n\n  &__projection-header {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n    margin-bottom: var(--os-spacing-sm);\n  }\n\n  &__projection-label {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__projection-info {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: var(--os-spacing-sm);\n  }\n\n  &__projection-percentage {\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__chart {\n    margin-bottom: var(--os-spacing-lg);\n    padding: var(--os-spacing-md);\n    background: var(--os-color-background-secondary);\n    border-radius: var(--os-border-radius-md);\n  }\n\n  &__chart-header {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n    margin-bottom: var(--os-spacing-md);\n  }\n\n  &__chart-label {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__chart-bars {\n    display: flex;\n    align-items: end;\n    gap: var(--os-spacing-sm);\n    height: 120px;\n    padding: var(--os-spacing-sm) 0;\n  }\n\n  &__chart-bar {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: var(--os-spacing-xs);\n    min-width: 0;\n  }\n\n  &__chart-bar-fill {\n    width: 100%;\n    min-height: 4px;\n    background: var(--os-color-primary);\n    border-radius: var(--os-border-radius-sm) var(--os-border-radius-sm) 0 0;\n    transition: all var(--os-transition-fast);\n\n    &--high {\n      background: var(--os-color-error);\n    }\n  }\n\n  &__chart-bar-label {\n    font-size: var(--os-font-size-xs);\n    color: var(--os-color-text-secondary);\n    text-align: center;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 100%;\n  }\n\n  &__chart-bar-value {\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n  }\n\n  &__dates {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-sm);\n    padding: var(--os-spacing-md);\n    background: var(--os-color-background-secondary);\n    border-radius: var(--os-border-radius-md);\n  }\n\n  &__date-item {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n    font-size: var(--os-font-size-sm);\n  }\n\n  &__date-label {\n    color: var(--os-color-text-secondary);\n    font-weight: var(--os-font-weight-medium);\n    min-width: 60px;\n  }\n\n  &__date-value {\n    color: var(--os-color-text-primary);\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  &__compact-info {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: var(--os-spacing-sm);\n    padding: var(--os-spacing-sm);\n    background: var(--os-color-background-secondary);\n    border-radius: var(--os-border-radius-sm);\n    font-size: var(--os-font-size-sm);\n  }\n\n  &__compact-percentage {\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n  }\n\n  &__compact-status {\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  &__compact-trend {\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  // Size variants\n  &--small {\n    .os-budget-tracker__title {\n      font-size: var(--os-font-size-md);\n    }\n\n    .os-budget-tracker__amount-group {\n      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n      gap: var(--os-spacing-sm);\n    }\n\n    .os-budget-tracker__chart-bars {\n      height: 80px;\n    }\n  }\n\n  &--large {\n    .os-budget-tracker__title {\n      font-size: var(--os-font-size-xl);\n    }\n\n    .os-budget-tracker__amount-group {\n      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n      gap: var(--os-spacing-lg);\n    }\n\n    .os-budget-tracker__chart-bars {\n      height: 160px;\n    }\n  }\n\n  // Variant styles\n  &--compact {\n    .os-budget-tracker__header {\n      margin-bottom: var(--os-spacing-md);\n    }\n\n    .os-budget-tracker__progress,\n    .os-budget-tracker__financial,\n    .os-budget-tracker__trends,\n    .os-budget-tracker__projections,\n    .os-budget-tracker__chart,\n    .os-budget-tracker__dates {\n      margin-bottom: var(--os-spacing-md);\n    }\n  }\n\n  &--detailed {\n    .os-budget-tracker__header {\n      margin-bottom: var(--os-spacing-xl);\n    }\n\n    .os-budget-tracker__progress,\n    .os-budget-tracker__financial,\n    .os-budget-tracker__trends,\n    .os-budget-tracker__projections,\n    .os-budget-tracker__chart,\n    .os-budget-tracker__dates {\n      margin-bottom: var(--os-spacing-xl);\n    }\n  }\n\n  // Responsive design\n  @media (max-width: 768px) {\n    &__header {\n      flex-direction: column;\n      align-items: stretch;\n      gap: var(--os-spacing-sm);\n    }\n\n    &__actions {\n      justify-content: space-between;\n    }\n\n    &__amount-group {\n      grid-template-columns: 1fr;\n      gap: var(--os-spacing-sm);\n    }\n\n    &__chart-bars {\n      gap: var(--os-spacing-xs);\n    }\n\n    &__trend-info,\n    &__projection-info {\n      flex-direction: column;\n      align-items: flex-start;\n      gap: var(--os-spacing-xs);\n    }\n\n    &__compact-info {\n      flex-direction: column;\n      align-items: flex-start;\n      gap: var(--os-spacing-xs);\n    }\n  }\n}\n",
                    "styleUrl": "./os-budget-tracker.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "@if (loading()) {\n<div class=\"os-budget-tracker os-budget-tracker--loading\">\n    <div class=\"os-budget-tracker__loading\">\n        <os-spinner [variant]=\"'default'\"\n            [size]=\"size() === 'large' ? 'md' : size() === 'medium' ? 'sm' : 'xs'\"></os-spinner>\n        <span class=\"os-budget-tracker__loading-text\">Carregando dados do orçamento...</span>\n    </div>\n</div>\n} @else if (budgetData(); as data) {\n<os-card [variant]=\"variant() === 'compact' ? 'flat' : 'default'\" [size]=\"size()\" [clickable]=\"clickable()\"\n    (click)=\"onCardClick()\"\n    [class]=\"'os-budget-tracker os-budget-tracker--' + variant() + ' os-budget-tracker--' + size()\">\n\n    <!-- Header -->\n    <div class=\"os-budget-tracker__header\">\n        <div class=\"os-budget-tracker__title-section\">\n            <h3 class=\"os-budget-tracker__title\">{{ data.name }}</h3>\n            @if (data.category) {\n            <span class=\"os-budget-tracker__category\">{{ data.category }}</span>\n            }\n        </div>\n\n        <div class=\"os-budget-tracker__actions\">\n            @if (showStatus()) {\n            <os-badge [variant]=\"statusInfo().type\" [size]=\"size() === 'large' ? 'md' : 'sm'\">\n                <os-icon [name]=\"statusInfo().icon\" [size]=\"size() === 'large' ? 'md' : 'sm'\"></os-icon>\n                {{ statusInfo().label }}\n            </os-badge>\n            }\n\n            <div class=\"os-budget-tracker__action-buttons\">\n                <button class=\"os-budget-tracker__action-btn\" (click)=\"onRefreshClick()\"\n                    [attr.aria-label]=\"'Atualizar dados do orçamento'\">\n                    <os-icon name=\"refresh\" [size]=\"size() === 'large' ? 'md' : 'sm'\"></os-icon>\n                </button>\n                <button class=\"os-budget-tracker__action-btn\" (click)=\"onExportClick()\"\n                    [attr.aria-label]=\"'Exportar dados do orçamento'\">\n                    <os-icon name=\"download\" [size]=\"size() === 'large' ? 'md' : 'sm'\"></os-icon>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Progress Section -->\n    <div class=\"os-budget-tracker__progress\">\n        <div class=\"os-budget-tracker__progress-header\">\n            <span class=\"os-budget-tracker__progress-label\">Progresso do Orçamento</span>\n            <span class=\"os-budget-tracker__progress-percentage\">{{ progressPercentage() }}%</span>\n        </div>\n\n        <os-progress-bar [value]=\"progressPercentage()\"\n            [variant]=\"isOverBudget() ? 'danger' : isCompleted() ? 'success' : 'primary'\" [size]=\"size()\">\n        </os-progress-bar>\n    </div>\n\n    <!-- Financial Summary -->\n    <div class=\"os-budget-tracker__financial\">\n        <div class=\"os-budget-tracker__amount-group\">\n            <div class=\"os-budget-tracker__amount\">\n                <span class=\"os-budget-tracker__amount-label\">Orçamento Total</span>\n                <os-money-display [value]=\"data.totalBudget\" [variant]=\"'default'\" [size]=\"size()\"></os-money-display>\n            </div>\n\n            <div class=\"os-budget-tracker__amount\">\n                <span class=\"os-budget-tracker__amount-label\">Gasto</span>\n                <os-money-display [value]=\"data.spentAmount\" [variant]=\"isOverBudget() ? 'error' : 'default'\"\n                    [size]=\"size()\"></os-money-display>\n            </div>\n\n            <div class=\"os-budget-tracker__amount\">\n                <span class=\"os-budget-tracker__amount-label\">Restante</span>\n                <os-money-display [value]=\"data.remainingAmount\"\n                    [variant]=\"data.remainingAmount >= 0 ? 'success' : 'error'\" [size]=\"size()\"></os-money-display>\n            </div>\n        </div>\n    </div>\n\n    <!-- Trends Section -->\n    @if (showTrends() && trendInfo(); as trend) {\n    <div class=\"os-budget-tracker__trends\">\n        <div class=\"os-budget-tracker__trend-header\">\n            <os-icon [name]=\"trend.icon\" [size]=\"size() === 'large' ? 'md' : 'sm'\"></os-icon>\n            <span class=\"os-budget-tracker__trend-label\">Tendência de Gastos</span>\n        </div>\n\n        <div class=\"os-budget-tracker__trend-info\">\n            <span class=\"os-budget-tracker__trend-value\" [style.color]=\"trend.color\">\n                {{ trend.label }}\n            </span>\n            <os-badge\n                [variant]=\"trend.riskLevel === 'high' ? 'error' : trend.riskLevel === 'medium' ? 'warning' : 'success'\"\n                [size]=\"size() === 'large' ? 'md' : 'sm'\">\n                Risco {{ trend.riskLevel === 'high' ? 'Alto' : trend.riskLevel === 'medium' ? 'Médio' : 'Baixo' }}\n            </os-badge>\n        </div>\n    </div>\n    }\n\n    <!-- Projections Section -->\n    @if (showProjections() && projectionInfo(); as projection) {\n    <div class=\"os-budget-tracker__projections\">\n        <div class=\"os-budget-tracker__projection-header\">\n            <os-icon name=\"trending_up\" [size]=\"size() === 'large' ? 'md' : 'sm'\"></os-icon>\n            <span class=\"os-budget-tracker__projection-label\">Projeção</span>\n        </div>\n\n        <div class=\"os-budget-tracker__projection-info\">\n            <os-money-display [value]=\"projection.value\" [variant]=\"projection.isOver ? 'error' : 'default'\"\n                [size]=\"size()\"></os-money-display>\n            <span class=\"os-budget-tracker__projection-percentage\">\n                {{ projection.percentage.toFixed(1) }}% do orçamento\n            </span>\n        </div>\n    </div>\n    }\n\n    <!-- Monthly Chart (only for detailed variant) -->\n    @if (variant() === 'detailed' && showCharts() && monthlyData().length > 0) {\n    <div class=\"os-budget-tracker__chart\">\n        <div class=\"os-budget-tracker__chart-header\">\n            <os-icon name=\"bar_chart\" [size]=\"size() === 'large' ? 'md' : 'sm'\"></os-icon>\n            <span class=\"os-budget-tracker__chart-label\">Gastos Mensais (Últimos 6 meses)</span>\n        </div>\n\n        <div class=\"os-budget-tracker__chart-bars\">\n            @for (month of monthlyData(); track month.month + month.year) {\n            <div class=\"os-budget-tracker__chart-bar\">\n                <div class=\"os-budget-tracker__chart-bar-fill\" [style.height.%]=\"month.percentage\"\n                    [class.os-budget-tracker__chart-bar-fill--high]=\"month.percentage > 80\">\n                </div>\n                <span class=\"os-budget-tracker__chart-bar-label\">\n                    {{ getMonthName(month.month) }}/{{ month.year.toString().slice(-2) }}\n                </span>\n                <span class=\"os-budget-tracker__chart-bar-value\">\n                    {{ month.percentage.toFixed(0) }}%\n                </span>\n            </div>\n            }\n        </div>\n    </div>\n    }\n\n    <!-- Dates Section (only for detailed variant) -->\n    @if (variant() === 'detailed' && formattedDates(); as dates) {\n    <div class=\"os-budget-tracker__dates\">\n        <div class=\"os-budget-tracker__date-item\">\n            <os-icon name=\"calendar_today\" size=\"sm\"></os-icon>\n            <span class=\"os-budget-tracker__date-label\">Início:</span>\n            <span class=\"os-budget-tracker__date-value\">{{ dates.start }}</span>\n        </div>\n\n        <div class=\"os-budget-tracker__date-item\">\n            <os-icon name=\"event\" size=\"sm\"></os-icon>\n            <span class=\"os-budget-tracker__date-label\">Fim:</span>\n            <span class=\"os-budget-tracker__date-value\">{{ dates.end }}</span>\n        </div>\n\n        <div class=\"os-budget-tracker__date-item\">\n            <os-icon name=\"update\" size=\"sm\"></os-icon>\n            <span class=\"os-budget-tracker__date-label\">Atualizado:</span>\n            <span class=\"os-budget-tracker__date-value\">{{ dates.lastUpdated }}</span>\n        </div>\n    </div>\n    }\n\n    <!-- Compact variant additional info -->\n    @if (variant() === 'compact') {\n    <div class=\"os-budget-tracker__compact-info\">\n        <span class=\"os-budget-tracker__compact-percentage\">{{ progressPercentage() }}%</span>\n        <span class=\"os-budget-tracker__compact-status\" [style.color]=\"getStatusColor()\">\n            {{ statusInfo().label }}\n        </span>\n        @if (trendInfo(); as trend) {\n        <span class=\"os-budget-tracker__compact-trend\" [style.color]=\"trend.color\">\n            {{ trend.label }}\n        </span>\n        }\n    </div>\n    }\n</os-card>\n}"
        },
        {
            "name": "OsButtonComponent",
            "id": "component-OsButtonComponent-b563eb43a14f254c2a9c59b422545a9d8135208c1ac094418334360eeab6b8228d47f8ad921468e1f93eb6c8d385e523ff38d9e7ad0399c7fd1f2ba8367c7f53",
            "file": "src/app/shared/ui-components/atoms/os-button/os-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-button",
            "styleUrls": [
                "./os-button.component.scss"
            ],
            "styles": [],
            "template": "<button\n  [matButton]=\"buttonVariant\"\n  [disabled]=\"disabled() || loading()\"\n  [type]=\"type()\"\n  [class]=\"buttonClass()\"\n  matRipple\n  [matRippleDisabled]=\"disabled() || loading()\"\n  [matRippleColor]=\"rippleColor()\"\n  (click)=\"handleClick($event)\"\n>\n  @if (loading()) {\n  <span class=\"os-button__spinner\" aria-hidden=\"true\"></span>\n  } @else if (icon() && !loading()) {\n  <span class=\"os-button__icon\" [attr.aria-hidden]=\"true\">\n    {{ icon() }}\n  </span>\n  }\n  <span class=\"os-button__content\">\n    <ng-content />\n  </span>\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsButtonSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "required": false
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsButtonVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MouseEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "buttonClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-button',\n      `os-button--${this.variant()}`,\n      `os-button--${this.size()}`,\n      this.disabled() ? 'os-button--disabled' : '',\n      this.loading() ? 'os-button--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "rippleColor",
                    "defaultValue": "computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n      case 'success':\n        return 'rgba(255, 255, 255, 0.3)';\n      case 'secondary':\n      case 'tertiary':\n        return 'rgba(59, 130, 246, 0.3)';\n      case 'danger':\n      case 'warning':\n        return 'rgba(255, 255, 255, 0.3)';\n      default:\n        return 'rgba(0, 0, 0, 0.1)';\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatRippleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\n\nexport type OsButtonVariant =\n  | 'primary'\n  | 'secondary'\n  | 'tertiary'\n  | 'danger'\n  | 'success'\n  | 'warning';\nexport type OsButtonSize = 'small' | 'medium' | 'large';\n\n@Component({\n  selector: 'os-button',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule, MatRippleModule],\n  template: `\n    <button\n      [matButton]=\"buttonVariant\"\n      [disabled]=\"disabled() || loading()\"\n      [type]=\"type()\"\n      [class]=\"buttonClass()\"\n      matRipple\n      [matRippleDisabled]=\"disabled() || loading()\"\n      [matRippleColor]=\"rippleColor()\"\n      (click)=\"handleClick($event)\"\n    >\n      @if (loading()) {\n      <span class=\"os-button__spinner\" aria-hidden=\"true\"></span>\n      } @else if (icon() && !loading()) {\n      <span class=\"os-button__icon\" [attr.aria-hidden]=\"true\">\n        {{ icon() }}\n      </span>\n      }\n      <span class=\"os-button__content\">\n        <ng-content />\n      </span>\n    </button>\n  `,\n  styleUrls: ['./os-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsButtonComponent {\n  variant = input<OsButtonVariant>('primary');\n  size = input<OsButtonSize>('medium');\n  disabled = input(false);\n  loading = input(false);\n  icon = input<string>('');\n  type = input<'button' | 'submit' | 'reset'>('button');\n\n  buttonClick = output<MouseEvent>();\n\n  buttonClass = computed(() => {\n    return [\n      'os-button',\n      `os-button--${this.variant()}`,\n      `os-button--${this.size()}`,\n      this.disabled() ? 'os-button--disabled' : '',\n      this.loading() ? 'os-button--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  handleClick(event: MouseEvent): void {\n    if (!this.disabled() && !this.loading()) {\n      this.buttonClick.emit(event);\n    }\n  }\n\n  protected rippleColor = computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n      case 'success':\n        return 'rgba(255, 255, 255, 0.3)';\n      case 'secondary':\n      case 'tertiary':\n        return 'rgba(59, 130, 246, 0.3)';\n      case 'danger':\n      case 'warning':\n        return 'rgba(255, 255, 255, 0.3)';\n      default:\n        return 'rgba(0, 0, 0, 0.1)';\n    }\n  });\n\n  get buttonVariant() {\n    switch (this.variant()) {\n      case 'primary':\n      case 'danger':\n      case 'success':\n      case 'warning':\n        return 'filled';\n\n      case 'secondary':\n        return 'outlined';\n\n      case 'tertiary':\n        return '';\n\n      default:\n        return 'elevated';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens' as tokens;\n\n.os-button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--os-spacing-xs);\n  border: none;\n  border-radius: var(--os-border-radius-md);\n  font-family: var(--os-font-family-primary);\n  font-weight: var(--os-font-weight-medium);\n  line-height: 1;\n  text-decoration: none;\n  cursor: pointer;\n  transition: all var(--os-transition-fast) ease;\n  position: relative;\n  overflow: hidden;\n\n  // Override Material button styles\n  ::ng-deep .mat-mdc-button {\n    font-family: var(--os-font-family-primary);\n    font-weight: var(--os-font-weight-medium);\n    line-height: 1;\n    border-radius: var(--os-border-radius-md);\n  }\n\n  ::ng-deep .mat-mdc-button .mdc-button__label {\n    color: inherit !important;\n    opacity: 1 !important;\n    visibility: visible !important;\n    display: block !important;\n  }\n\n  ::ng-deep .mat-mdc-button .mat-mdc-button-touch-target {\n    display: none;\n  }\n\n  &:focus-visible {\n    outline: var(--os-focus-ring-width) solid var(--os-focus-ring-color);\n    outline-offset: 2px;\n  }\n\n  &--small {\n    padding: var(--os-spacing-xs) var(--os-spacing-sm);\n    font-size: var(--os-font-size-sm);\n    min-height: 44px; // Touch target mínimo\n  }\n\n  &--medium {\n    padding: var(--os-spacing-sm) var(--os-spacing-md);\n    font-size: var(--os-font-size-base);\n    min-height: 44px; // Touch target mínimo\n  }\n\n  &--large {\n    padding: var(--os-spacing-md) var(--os-spacing-lg);\n    font-size: var(--os-font-size-lg);\n    min-height: 48px;\n  }\n\n  &--primary {\n    background-color: var(--os-color-primary-500);\n    color: var(--os-color-surface);\n\n    &:hover:not(:disabled) {\n      background-color: var(--os-color-primary-600);\n      transform: scale(1.02);\n    }\n\n    &:active:not(:disabled) {\n      background-color: var(--os-color-primary-700);\n      transform: scale(0.98);\n    }\n  }\n\n  &--secondary {\n    background-color: transparent;\n    color: var(--os-color-primary-500);\n    border: 1px solid var(--os-color-primary-500);\n\n    &:hover:not(:disabled) {\n      background-color: var(--os-color-primary-50);\n      transform: scale(1.02);\n    }\n\n    &:active:not(:disabled) {\n      background-color: var(--os-color-primary-100);\n      transform: scale(0.98);\n    }\n  }\n\n  &--tertiary {\n    background-color: transparent;\n    color: var(--os-color-primary-500);\n\n    &:hover:not(:disabled) {\n      background-color: var(--os-color-primary-50);\n      transform: scale(1.02);\n    }\n\n    &:active:not(:disabled) {\n      background-color: var(--os-color-primary-100);\n      transform: scale(0.98);\n    }\n  }\n\n  &--danger {\n    background-color: var(--os-color-error) !important;\n    color: var(--os-color-surface) !important;\n\n    &:hover:not(:disabled) {\n      background-color: var(--os-color-error-600) !important;\n      transform: scale(1.02);\n    }\n\n    &:active:not(:disabled) {\n      background-color: var(--os-color-error-700) !important;\n      transform: scale(0.98);\n    }\n\n    // Override Material theme colors\n    ::ng-deep &.mat-mdc-unelevated-button {\n      --mdc-filled-button-container-color: var(--os-color-error) !important;\n      --mdc-filled-button-label-text-color: var(--os-color-surface) !important;\n    }\n  }\n\n  &--success {\n    background-color: var(--os-color-success) !important;\n    color: var(--os-color-surface) !important;\n\n    &:hover:not(:disabled) {\n      background-color: var(--os-color-success-600) !important;\n      transform: scale(1.02);\n    }\n\n    &:active:not(:disabled) {\n      background-color: var(--os-color-success-700) !important;\n      transform: scale(0.98);\n    }\n\n    // Override Material theme colors\n    ::ng-deep &.mat-mdc-unelevated-button {\n      --mdc-filled-button-container-color: var(--os-color-success) !important;\n      --mdc-filled-button-label-text-color: var(--os-color-surface) !important;\n    }\n  }\n\n  &--warning {\n    background-color: var(--os-color-warning) !important;\n    color: var(--os-color-surface) !important;\n\n    &:hover:not(:disabled) {\n      background-color: var(--os-color-warning-600) !important;\n      transform: scale(1.02);\n    }\n\n    &:active:not(:disabled) {\n      background-color: var(--os-color-warning-700) !important;\n      transform: scale(0.98);\n    }\n\n    // Override Material theme colors\n    ::ng-deep &.mat-mdc-unelevated-button {\n      --mdc-filled-button-container-color: var(--os-color-warning) !important;\n      --mdc-filled-button-label-text-color: var(--os-color-surface) !important;\n    }\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    pointer-events: none;\n  }\n\n  &--loading {\n    cursor: wait;\n    pointer-events: none;\n  }\n\n  &__spinner {\n    width: 16px;\n    height: 16px;\n    border: 2px solid transparent;\n    border-top: 2px solid currentColor;\n    border-radius: 50%;\n    animation: os-button-spin 1s linear infinite;\n    opacity: 1 !important;\n    visibility: visible !important;\n  }\n\n  &__icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: inherit !important;\n    opacity: 1 !important;\n    visibility: visible !important;\n  }\n\n  &__content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: inherit !important;\n    opacity: 1 !important;\n    visibility: visible !important;\n  }\n\n  &__spinner {\n    display: inline-block;\n    width: 16px;\n    height: 16px;\n    border: 2px solid transparent;\n    border-top: 2px solid currentColor;\n    border-radius: 50%;\n    animation: os-button-spin 1s linear infinite;\n    margin-right: var(--os-spacing-xs);\n  }\n}\n\n@keyframes os-button-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n",
                    "styleUrl": "./os-button.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "buttonVariant": {
                    "name": "buttonVariant",
                    "getSignature": {
                        "name": "buttonVariant",
                        "type": "",
                        "returnType": "",
                        "line": 89
                    }
                }
            }
        },
        {
            "name": "OsCardComponent",
            "id": "component-OsCardComponent-496d3076e6f51cadb8a23d499ab662a4875e901576b8dd967a4655405d3d10b505e20413c46303d28993d71d55d8c73411c6780752a8525414579015bd8521f9",
            "file": "src/app/shared/ui-components/molecules/os-card/os-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-card",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  [class]=\"cardClasses()\"\n  [attr.data-variant]=\"variant()\"\n  [attr.data-size]=\"size()\"\n  [attr.role]=\"clickable() ? 'button' : null\"\n  [attr.tabindex]=\"clickable() ? '0' : null\"\n  [attr.aria-disabled]=\"disabled() ? 'true' : null\"\n  [attr.aria-selected]=\"selected() ? 'true' : null\"\n  [attr.aria-label]=\"ariaLabel()\"\n  [attr.aria-describedby]=\"ariaDescribedBy()\"\n  (click)=\"onCardClick()\"\n  (keydown.enter)=\"onCardClick()\"\n  (keydown.space)=\"onCardClick()\"\n>\n  @if (header()) {\n  <div class=\"os-card__header\">\n    <ng-content select=\"[slot=header]\"></ng-content>\n  </div>\n  }\n\n  <div class=\"os-card__content\">\n    <ng-content></ng-content>\n  </div>\n\n  @if (actions()) {\n  <div class=\"os-card__actions\">\n    <ng-content select=\"[slot=actions]\"></ng-content>\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "required": false
                },
                {
                    "name": "clickable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "required": false
                },
                {
                    "name": "header",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "required": false
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsCardSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsCardVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "cardClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "cardClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-card'];\n\n    // Variant\n    if (this.variant() !== 'default') {\n      classes.push(`os-card--${this.variant()}`);\n    }\n\n    // Size\n    if (this.size() !== 'medium') {\n      classes.push(`os-card--${this.size()}`);\n    }\n\n    // States\n    if (this.clickable()) {\n      classes.push('os-card--clickable');\n    }\n\n    if (this.loading()) {\n      classes.push('os-card--loading');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66
                }
            ],
            "methodsClass": [
                {
                    "name": "onCardClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, ChangeDetectionStrategy, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport type OsCardVariant = 'default' | 'outlined' | 'elevated' | 'flat';\nexport type OsCardSize = 'small' | 'medium' | 'large';\n\n@Component({\n  selector: 'os-card',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div\n      [class]=\"cardClasses()\"\n      [attr.data-variant]=\"variant()\"\n      [attr.data-size]=\"size()\"\n      [attr.role]=\"clickable() ? 'button' : null\"\n      [attr.tabindex]=\"clickable() ? '0' : null\"\n      [attr.aria-disabled]=\"disabled() ? 'true' : null\"\n      [attr.aria-selected]=\"selected() ? 'true' : null\"\n      [attr.aria-label]=\"ariaLabel()\"\n      [attr.aria-describedby]=\"ariaDescribedBy()\"\n      (click)=\"onCardClick()\"\n      (keydown.enter)=\"onCardClick()\"\n      (keydown.space)=\"onCardClick()\"\n    >\n      @if (header()) {\n      <div class=\"os-card__header\">\n        <ng-content select=\"[slot=header]\"></ng-content>\n      </div>\n      }\n\n      <div class=\"os-card__content\">\n        <ng-content></ng-content>\n      </div>\n\n      @if (actions()) {\n      <div class=\"os-card__actions\">\n        <ng-content select=\"[slot=actions]\"></ng-content>\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-card.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-card-host',\n  },\n})\nexport class OsCardComponent {\n  // ===== INPUTS =====\n  variant = input<OsCardVariant>('default');\n  size = input<OsCardSize>('medium');\n  header = input<boolean>(false);\n  actions = input<boolean>(false);\n  clickable = input<boolean>(false);\n  loading = input<boolean>(false);\n  disabled = input<boolean>(false);\n  selected = input<boolean>(false);\n  ariaLabel = input<string | null>(null);\n  ariaDescribedBy = input<string | null>(null);\n\n  // ===== OUTPUTS =====\n  cardClick = output<void>();\n\n  // ===== COMPUTED PROPERTIES =====\n  cardClasses = computed(() => {\n    const classes = ['os-card'];\n\n    // Variant\n    if (this.variant() !== 'default') {\n      classes.push(`os-card--${this.variant()}`);\n    }\n\n    // Size\n    if (this.size() !== 'medium') {\n      classes.push(`os-card--${this.size()}`);\n    }\n\n    // States\n    if (this.clickable()) {\n      classes.push('os-card--clickable');\n    }\n\n    if (this.loading()) {\n      classes.push('os-card--loading');\n    }\n\n    return classes.join(' ');\n  });\n\n  // ===== METHODS =====\n  onCardClick(): void {\n    if (this.clickable() && !this.disabled() && !this.loading()) {\n      this.cardClick.emit();\n    }\n  }\n}\n",
            "styleUrl": "./os-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsCategoryManagerComponent",
            "id": "component-OsCategoryManagerComponent-73907cd018e2c210042e745090330fc50ad91a75e64d2503351cbb2cfa2e5363ba55a8f2b3522ebe34f0b984d63143e1d65664782da04e77275597b83c82c107",
            "file": "src/app/shared/ui-components/organisms/os-category-manager/os-category-manager.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-category-manager",
            "styleUrls": [
                "./os-category-manager.component.scss"
            ],
            "styles": [],
            "template": "<div\n  class=\"os-category-manager\"\n  [class]=\"categoryManagerClasses()\"\n  [attr.aria-label]=\"ariaLabel()\"\n>\n  <div class=\"os-category-manager__header\">\n    <h2 class=\"os-category-manager__title\">{{ title() }}</h2>\n    <div class=\"os-category-manager__actions\">\n      <os-button\n        variant=\"primary\"\n        size=\"small\"\n        (click)=\"onAddCategory()\"\n        [disabled]=\"loading()\"\n        [loading]=\"loading()\"\n      >\n        <os-icon name=\"plus\" size=\"sm\"></os-icon>\n        Adicionar Categoria\n      </os-button>\n    </div>\n  </div>\n\n  <div class=\"os-category-manager__content\">\n    <!-- Formulário de Categoria -->\n    <div class=\"os-category-manager__form\" *ngIf=\"showForm()\" [formGroup]=\"categoryForm\">\n      <os-form-group variant=\"default\" size=\"medium\">\n        <os-form-field variant=\"default\" size=\"medium\">\n          <os-label variant=\"default\" size=\"medium\" [required]=\"true\">\n            Nome da Categoria\n          </os-label>\n          <os-input\n            formControlName=\"name\"\n            variant=\"default\"\n            size=\"medium\"\n            placeholder=\"Digite o nome da categoria\"\n            [required]=\"true\"\n            [disabled]=\"loading()\"\n          ></os-input>\n          <div\n            class=\"os-category-manager__error\"\n            *ngIf=\"categoryForm.get('name')?.invalid && categoryForm.get('name')?.touched\"\n          >\n            <span *ngIf=\"categoryForm.get('name')?.errors?.['required']\"\n              >Nome é obrigatório</span\n            >\n            <span *ngIf=\"categoryForm.get('name')?.errors?.['minlength']\"\n              >Nome deve ter pelo menos 2 caracteres</span\n            >\n          </div>\n        </os-form-field>\n\n        <os-form-field variant=\"default\" size=\"medium\">\n          <os-label variant=\"default\" size=\"medium\"> Descrição </os-label>\n          <os-input\n            formControlName=\"description\"\n            variant=\"default\"\n            size=\"medium\"\n            placeholder=\"Descrição opcional da categoria\"\n            [disabled]=\"loading()\"\n          ></os-input>\n        </os-form-field>\n\n        <os-form-field variant=\"default\" size=\"medium\">\n          <os-label variant=\"default\" size=\"medium\" [required]=\"true\"> Tipo </os-label>\n          <os-select\n            formControlName=\"type\"\n            variant=\"default\"\n            size=\"medium\"\n            [options]=\"categoryTypeOptions\"\n            [required]=\"true\"\n            [disabled]=\"loading()\"\n          ></os-select>\n        </os-form-field>\n\n        <os-form-field variant=\"default\" size=\"medium\">\n          <os-label variant=\"default\" size=\"medium\"> Cor </os-label>\n          <os-input\n            formControlName=\"color\"\n            variant=\"default\"\n            size=\"medium\"\n            type=\"text\"\n            [disabled]=\"loading()\"\n          ></os-input>\n        </os-form-field>\n\n        <os-form-field variant=\"default\" size=\"medium\">\n          <os-label variant=\"default\" size=\"medium\"> Ícone </os-label>\n          <os-input\n            formControlName=\"icon\"\n            variant=\"default\"\n            size=\"medium\"\n            placeholder=\"Nome do ícone Font Awesome\"\n            [disabled]=\"loading()\"\n          ></os-input>\n        </os-form-field>\n\n        <div class=\"os-category-manager__form-actions\">\n          <os-button\n            variant=\"secondary\"\n            size=\"medium\"\n            (click)=\"onCancelEdit()\"\n            [disabled]=\"loading()\"\n          >\n            Cancelar\n          </os-button>\n          <os-button\n            variant=\"primary\"\n            size=\"medium\"\n            (click)=\"onSaveCategory()\"\n            [disabled]=\"categoryForm.invalid || loading()\"\n            [loading]=\"loading()\"\n          >\n            {{ editingCategory() ? 'Atualizar' : 'Criar' }}\n          </os-button>\n        </div>\n      </os-form-group>\n    </div>\n\n    <!-- Lista de Categorias -->\n    <div class=\"os-category-manager__list\">\n      <div class=\"os-category-manager__list-header\">\n        <h3 class=\"os-category-manager__list-title\">\n          Categorias ({{ filteredCategories().length }})\n        </h3>\n        <div class=\"os-category-manager__list-actions\">\n          <os-button\n            variant=\"tertiary\"\n            size=\"small\"\n            (click)=\"onToggleFilter()\"\n            [disabled]=\"loading()\"\n          >\n            <os-icon name=\"filter\" size=\"sm\"></os-icon>\n            {{ showFilter() ? 'Ocultar Filtros' : 'Mostrar Filtros' }}\n          </os-button>\n        </div>\n      </div>\n\n      <!-- Filtros -->\n      <div class=\"os-category-manager__filters\" *ngIf=\"showFilter()\">\n        <os-form-group variant=\"default\" size=\"small\">\n          <os-form-field variant=\"default\" size=\"small\">\n            <os-label variant=\"default\" size=\"small\"> Buscar </os-label>\n            <os-input\n              [(ngModel)]=\"searchTerm\"\n              variant=\"default\"\n              size=\"small\"\n              placeholder=\"Buscar por nome ou descrição\"\n              [disabled]=\"loading()\"\n            ></os-input>\n          </os-form-field>\n\n          <os-form-field variant=\"default\" size=\"small\">\n            <os-label variant=\"default\" size=\"small\"> Tipo </os-label>\n            <os-select\n              [(ngModel)]=\"filterType\"\n              variant=\"default\"\n              size=\"small\"\n              [options]=\"filterTypeOptions\"\n              [disabled]=\"loading()\"\n            ></os-select>\n          </os-form-field>\n\n          <os-form-field variant=\"default\" size=\"small\">\n            <os-label variant=\"default\" size=\"small\"> Status </os-label>\n            <os-select\n              [(ngModel)]=\"filterStatus\"\n              variant=\"default\"\n              size=\"small\"\n              [options]=\"filterStatusOptions\"\n              [disabled]=\"loading()\"\n            ></os-select>\n          </os-form-field>\n        </os-form-group>\n      </div>\n\n      <!-- Lista -->\n      <div class=\"os-category-manager__items\">\n        <div\n          class=\"os-category-manager__item\"\n          *ngFor=\"let category of filteredCategories(); trackBy: trackByCategoryId\"\n          [class]=\"getCategoryItemClasses(category)\"\n        >\n          <div class=\"os-category-manager__item-content\">\n            <div class=\"os-category-manager__item-icon\" *ngIf=\"category.icon\">\n              <os-icon [name]=\"category.icon\" size=\"md\"></os-icon>\n            </div>\n            <div class=\"os-category-manager__item-info\">\n              <h4 class=\"os-category-manager__item-name\">{{ category.name }}</h4>\n              <p class=\"os-category-manager__item-description\" *ngIf=\"category.description\">\n                {{ category.description }}\n              </p>\n              <div class=\"os-category-manager__item-meta\">\n                <os-badge [variant]=\"getCategoryTypeVariant(category.type)\" size=\"sm\">\n                  {{ getCategoryTypeLabel(category.type) }}\n                </os-badge>\n                <span class=\"os-category-manager__item-date\">\n                  {{ formatDate(category.updatedAt) }}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"os-category-manager__item-actions\">\n            <os-button\n              variant=\"tertiary\"\n              size=\"small\"\n              (click)=\"onEditCategory(category)\"\n              [disabled]=\"loading()\"\n            >\n              <os-icon name=\"edit\" size=\"sm\"></os-icon>\n            </os-button>\n            <os-button\n              variant=\"danger\"\n              size=\"small\"\n              (click)=\"onDeleteCategory(category)\"\n              [disabled]=\"loading()\"\n            >\n              <os-icon name=\"trash\" size=\"sm\"></os-icon>\n            </os-button>\n          </div>\n        </div>\n\n        <!-- Estado Vazio -->\n        <div class=\"os-category-manager__empty\" *ngIf=\"filteredCategories().length === 0\">\n          <os-icon name=\"folder-open\" size=\"lg\"></os-icon>\n          <h3>Nenhuma categoria encontrada</h3>\n          <p *ngIf=\"searchTerm || filterType || filterStatus\">\n            Tente ajustar os filtros para encontrar mais categorias.\n          </p>\n          <p *ngIf=\"!searchTerm && !filterType && !filterStatus\">\n            Comece criando sua primeira categoria.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "categories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Category[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 298,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 300,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 299,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 296,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 297,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "'Gerenciador de Categorias'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 294,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 295,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "categoryAdded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CategoryFormData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 303,
                    "required": false
                },
                {
                    "name": "categoryDeleted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 305,
                    "required": false
                },
                {
                    "name": "categorySelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Category",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 306,
                    "required": false
                },
                {
                    "name": "categoryUpdated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ id: string; data: CategoryFormData }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 304,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "ariaLabel",
                    "defaultValue": "computed(() => {\n    return `Gerenciador de categorias ${this.variant()} ${this.size()}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 365
                },
                {
                    "name": "categoryForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 317
                },
                {
                    "name": "categoryManagerClasses",
                    "defaultValue": "computed(() => {\n    return [\n      'os-category-manager',\n      `os-category-manager--${this.variant()}`,\n      `os-category-manager--${this.size()}`,\n      `os-category-manager--${this.theme()}`,\n      this.disabled() ? 'os-category-manager--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 353
                },
                {
                    "name": "categoryTypeOptions",
                    "defaultValue": "[\n    { value: 'income', label: 'Receita' },\n    { value: 'expense', label: 'Despesa' },\n    { value: 'transfer', label: 'Transferência' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 320
                },
                {
                    "name": "editingCategory",
                    "defaultValue": "computed(() => this.editingCategorySignal())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 371
                },
                {
                    "name": "editingCategorySignal",
                    "defaultValue": "signal<Category | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 310
                },
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 339,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filteredCategories",
                    "defaultValue": "computed(() => {\n    let filtered = this.categories();\n\n    // Filter by search term\n    const searchTerm = this.searchTermSignal().toLowerCase();\n    if (searchTerm) {\n      filtered = filtered.filter(\n        (category) =>\n          category.name.toLowerCase().includes(searchTerm) ||\n          (category.description && category.description.toLowerCase().includes(searchTerm))\n      );\n    }\n\n    // Filter by type\n    const filterType = this.filterTypeSignal();\n    if (filterType) {\n      filtered = filtered.filter((category) => category.type === filterType);\n    }\n\n    // Filter by status\n    const filterStatus = this.filterStatusSignal();\n    if (filterStatus) {\n      const isActive = filterStatus === 'active';\n      filtered = filtered.filter((category) => category.active === isActive);\n    }\n\n    return filtered;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 375
                },
                {
                    "name": "filterStatusOptions",
                    "defaultValue": "[\n    { value: '', label: 'Todos os status' },\n    { value: 'active', label: 'Ativas' },\n    { value: 'inactive', label: 'Inativas' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 333
                },
                {
                    "name": "filterStatusSignal",
                    "defaultValue": "signal<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 314
                },
                {
                    "name": "filterTypeOptions",
                    "defaultValue": "[\n    { value: '', label: 'Todos os tipos' },\n    { value: 'income', label: 'Receita' },\n    { value: 'expense', label: 'Despesa' },\n    { value: 'transfer', label: 'Transferência' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 326
                },
                {
                    "name": "filterTypeSignal",
                    "defaultValue": "signal<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 313
                },
                {
                    "name": "searchTermSignal",
                    "defaultValue": "signal<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 312
                },
                {
                    "name": "showFilter",
                    "defaultValue": "computed(() => this.showFilterSignal())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 373
                },
                {
                    "name": "showFilterSignal",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 311
                },
                {
                    "name": "showForm",
                    "defaultValue": "computed(() => this.showFormSignal())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 369
                },
                {
                    "name": "showFormSignal",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 309
                }
            ],
            "methodsClass": [
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 533,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCategoryItemClasses",
                    "args": [
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 497,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCategoryTypeLabel",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 520,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCategoryTypeVariant",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"default\" | \"success\" | \"warning\" | \"error\"",
                    "typeParameters": [],
                    "line": 507,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onAddCategory",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 430,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancelEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 473,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteCategory",
                    "args": [
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 479,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEditCategory",
                    "args": [
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 443,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSaveCategory",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 456,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelectCategory",
                    "args": [
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 489,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onToggleFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 485,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "trackByCategoryId",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 493,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "category",
                            "type": "Category",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                },
                {
                    "name": "OsInputComponent",
                    "type": "component"
                },
                {
                    "name": "OsSelectComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                },
                {
                    "name": "OsBadgeComponent",
                    "type": "component"
                },
                {
                    "name": "OsLabelComponent",
                    "type": "component"
                },
                {
                    "name": "OsFormGroupComponent",
                    "type": "component"
                },
                {
                    "name": "OsFormFieldComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input, output, signal, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsInputComponent } from '../../atoms/os-input/os-input.component';\nimport { OsSelectComponent } from '../../atoms/os-select/os-select.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsLabelComponent } from '../../atoms/os-label/os-label.component';\nimport { OsFormGroupComponent } from '../../molecules/os-form-group/os-form-group.component';\nimport { OsFormFieldComponent } from '../../molecules/os-form-field/os-form-field.component';\nimport { FormsModule } from '@angular/forms';\n\nexport interface Category {\n  id: string;\n  name: string;\n  description?: string;\n  type: 'income' | 'expense' | 'transfer';\n  color?: string;\n  icon?: string;\n  active: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface CategoryFormData {\n  name: string;\n  description?: string;\n  type: 'income' | 'expense' | 'transfer';\n  color?: string;\n  icon?: string;\n  active: boolean;\n}\n\n@Component({\n  selector: 'os-category-manager',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    OsButtonComponent,\n    OsInputComponent,\n    OsSelectComponent,\n    OsIconComponent,\n    OsBadgeComponent,\n    OsLabelComponent,\n    OsFormGroupComponent,\n    OsFormFieldComponent,\n  ],\n  template: `\n    <div\n      class=\"os-category-manager\"\n      [class]=\"categoryManagerClasses()\"\n      [attr.aria-label]=\"ariaLabel()\"\n    >\n      <div class=\"os-category-manager__header\">\n        <h2 class=\"os-category-manager__title\">{{ title() }}</h2>\n        <div class=\"os-category-manager__actions\">\n          <os-button\n            variant=\"primary\"\n            size=\"small\"\n            (click)=\"onAddCategory()\"\n            [disabled]=\"loading()\"\n            [loading]=\"loading()\"\n          >\n            <os-icon name=\"plus\" size=\"sm\"></os-icon>\n            Adicionar Categoria\n          </os-button>\n        </div>\n      </div>\n\n      <div class=\"os-category-manager__content\">\n        <!-- Formulário de Categoria -->\n        <div class=\"os-category-manager__form\" *ngIf=\"showForm()\" [formGroup]=\"categoryForm\">\n          <os-form-group variant=\"default\" size=\"medium\">\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\" [required]=\"true\">\n                Nome da Categoria\n              </os-label>\n              <os-input\n                formControlName=\"name\"\n                variant=\"default\"\n                size=\"medium\"\n                placeholder=\"Digite o nome da categoria\"\n                [required]=\"true\"\n                [disabled]=\"loading()\"\n              ></os-input>\n              <div\n                class=\"os-category-manager__error\"\n                *ngIf=\"categoryForm.get('name')?.invalid && categoryForm.get('name')?.touched\"\n              >\n                <span *ngIf=\"categoryForm.get('name')?.errors?.['required']\"\n                  >Nome é obrigatório</span\n                >\n                <span *ngIf=\"categoryForm.get('name')?.errors?.['minlength']\"\n                  >Nome deve ter pelo menos 2 caracteres</span\n                >\n              </div>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\"> Descrição </os-label>\n              <os-input\n                formControlName=\"description\"\n                variant=\"default\"\n                size=\"medium\"\n                placeholder=\"Descrição opcional da categoria\"\n                [disabled]=\"loading()\"\n              ></os-input>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\" [required]=\"true\"> Tipo </os-label>\n              <os-select\n                formControlName=\"type\"\n                variant=\"default\"\n                size=\"medium\"\n                [options]=\"categoryTypeOptions\"\n                [required]=\"true\"\n                [disabled]=\"loading()\"\n              ></os-select>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\"> Cor </os-label>\n              <os-input\n                formControlName=\"color\"\n                variant=\"default\"\n                size=\"medium\"\n                type=\"text\"\n                [disabled]=\"loading()\"\n              ></os-input>\n            </os-form-field>\n\n            <os-form-field variant=\"default\" size=\"medium\">\n              <os-label variant=\"default\" size=\"medium\"> Ícone </os-label>\n              <os-input\n                formControlName=\"icon\"\n                variant=\"default\"\n                size=\"medium\"\n                placeholder=\"Nome do ícone Font Awesome\"\n                [disabled]=\"loading()\"\n              ></os-input>\n            </os-form-field>\n\n            <div class=\"os-category-manager__form-actions\">\n              <os-button\n                variant=\"secondary\"\n                size=\"medium\"\n                (click)=\"onCancelEdit()\"\n                [disabled]=\"loading()\"\n              >\n                Cancelar\n              </os-button>\n              <os-button\n                variant=\"primary\"\n                size=\"medium\"\n                (click)=\"onSaveCategory()\"\n                [disabled]=\"categoryForm.invalid || loading()\"\n                [loading]=\"loading()\"\n              >\n                {{ editingCategory() ? 'Atualizar' : 'Criar' }}\n              </os-button>\n            </div>\n          </os-form-group>\n        </div>\n\n        <!-- Lista de Categorias -->\n        <div class=\"os-category-manager__list\">\n          <div class=\"os-category-manager__list-header\">\n            <h3 class=\"os-category-manager__list-title\">\n              Categorias ({{ filteredCategories().length }})\n            </h3>\n            <div class=\"os-category-manager__list-actions\">\n              <os-button\n                variant=\"tertiary\"\n                size=\"small\"\n                (click)=\"onToggleFilter()\"\n                [disabled]=\"loading()\"\n              >\n                <os-icon name=\"filter\" size=\"sm\"></os-icon>\n                {{ showFilter() ? 'Ocultar Filtros' : 'Mostrar Filtros' }}\n              </os-button>\n            </div>\n          </div>\n\n          <!-- Filtros -->\n          <div class=\"os-category-manager__filters\" *ngIf=\"showFilter()\">\n            <os-form-group variant=\"default\" size=\"small\">\n              <os-form-field variant=\"default\" size=\"small\">\n                <os-label variant=\"default\" size=\"small\"> Buscar </os-label>\n                <os-input\n                  [(ngModel)]=\"searchTerm\"\n                  variant=\"default\"\n                  size=\"small\"\n                  placeholder=\"Buscar por nome ou descrição\"\n                  [disabled]=\"loading()\"\n                ></os-input>\n              </os-form-field>\n\n              <os-form-field variant=\"default\" size=\"small\">\n                <os-label variant=\"default\" size=\"small\"> Tipo </os-label>\n                <os-select\n                  [(ngModel)]=\"filterType\"\n                  variant=\"default\"\n                  size=\"small\"\n                  [options]=\"filterTypeOptions\"\n                  [disabled]=\"loading()\"\n                ></os-select>\n              </os-form-field>\n\n              <os-form-field variant=\"default\" size=\"small\">\n                <os-label variant=\"default\" size=\"small\"> Status </os-label>\n                <os-select\n                  [(ngModel)]=\"filterStatus\"\n                  variant=\"default\"\n                  size=\"small\"\n                  [options]=\"filterStatusOptions\"\n                  [disabled]=\"loading()\"\n                ></os-select>\n              </os-form-field>\n            </os-form-group>\n          </div>\n\n          <!-- Lista -->\n          <div class=\"os-category-manager__items\">\n            <div\n              class=\"os-category-manager__item\"\n              *ngFor=\"let category of filteredCategories(); trackBy: trackByCategoryId\"\n              [class]=\"getCategoryItemClasses(category)\"\n            >\n              <div class=\"os-category-manager__item-content\">\n                <div class=\"os-category-manager__item-icon\" *ngIf=\"category.icon\">\n                  <os-icon [name]=\"category.icon\" size=\"md\"></os-icon>\n                </div>\n                <div class=\"os-category-manager__item-info\">\n                  <h4 class=\"os-category-manager__item-name\">{{ category.name }}</h4>\n                  <p class=\"os-category-manager__item-description\" *ngIf=\"category.description\">\n                    {{ category.description }}\n                  </p>\n                  <div class=\"os-category-manager__item-meta\">\n                    <os-badge [variant]=\"getCategoryTypeVariant(category.type)\" size=\"sm\">\n                      {{ getCategoryTypeLabel(category.type) }}\n                    </os-badge>\n                    <span class=\"os-category-manager__item-date\">\n                      {{ formatDate(category.updatedAt) }}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"os-category-manager__item-actions\">\n                <os-button\n                  variant=\"tertiary\"\n                  size=\"small\"\n                  (click)=\"onEditCategory(category)\"\n                  [disabled]=\"loading()\"\n                >\n                  <os-icon name=\"edit\" size=\"sm\"></os-icon>\n                </os-button>\n                <os-button\n                  variant=\"danger\"\n                  size=\"small\"\n                  (click)=\"onDeleteCategory(category)\"\n                  [disabled]=\"loading()\"\n                >\n                  <os-icon name=\"trash\" size=\"sm\"></os-icon>\n                </os-button>\n              </div>\n            </div>\n\n            <!-- Estado Vazio -->\n            <div class=\"os-category-manager__empty\" *ngIf=\"filteredCategories().length === 0\">\n              <os-icon name=\"folder-open\" size=\"lg\"></os-icon>\n              <h3>Nenhuma categoria encontrada</h3>\n              <p *ngIf=\"searchTerm || filterType || filterStatus\">\n                Tente ajustar os filtros para encontrar mais categorias.\n              </p>\n              <p *ngIf=\"!searchTerm && !filterType && !filterStatus\">\n                Comece criando sua primeira categoria.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./os-category-manager.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsCategoryManagerComponent {\n  // Inputs\n  title = input<string>('Gerenciador de Categorias');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n  categories = input<Category[]>([]);\n  loading = input<boolean>(false);\n  disabled = input<boolean>(false);\n\n  // Outputs\n  categoryAdded = output<CategoryFormData>();\n  categoryUpdated = output<{ id: string; data: CategoryFormData }>();\n  categoryDeleted = output<string>();\n  categorySelected = output<Category>();\n\n  // Signals\n  showFormSignal = signal<boolean>(false);\n  editingCategorySignal = signal<Category | null>(null);\n  showFilterSignal = signal<boolean>(false);\n  searchTermSignal = signal<string>('');\n  filterTypeSignal = signal<string>('');\n  filterStatusSignal = signal<string>('');\n\n  // Form\n  categoryForm: FormGroup;\n\n  // Options\n  categoryTypeOptions = [\n    { value: 'income', label: 'Receita' },\n    { value: 'expense', label: 'Despesa' },\n    { value: 'transfer', label: 'Transferência' },\n  ];\n\n  filterTypeOptions = [\n    { value: '', label: 'Todos os tipos' },\n    { value: 'income', label: 'Receita' },\n    { value: 'expense', label: 'Despesa' },\n    { value: 'transfer', label: 'Transferência' },\n  ];\n\n  filterStatusOptions = [\n    { value: '', label: 'Todos os status' },\n    { value: 'active', label: 'Ativas' },\n    { value: 'inactive', label: 'Inativas' },\n  ];\n\n  private fb = inject(FormBuilder);\n\n  constructor() {\n    this.categoryForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      description: [''],\n      type: ['expense', [Validators.required]],\n      color: ['#3B82F6'],\n      icon: [''],\n      active: [true],\n    });\n  }\n\n  // Computed properties\n  categoryManagerClasses = computed(() => {\n    return [\n      'os-category-manager',\n      `os-category-manager--${this.variant()}`,\n      `os-category-manager--${this.size()}`,\n      `os-category-manager--${this.theme()}`,\n      this.disabled() ? 'os-category-manager--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  ariaLabel = computed(() => {\n    return `Gerenciador de categorias ${this.variant()} ${this.size()}`;\n  });\n\n  showForm = computed(() => this.showFormSignal());\n\n  editingCategory = computed(() => this.editingCategorySignal());\n\n  showFilter = computed(() => this.showFilterSignal());\n\n  filteredCategories = computed(() => {\n    let filtered = this.categories();\n\n    // Filter by search term\n    const searchTerm = this.searchTermSignal().toLowerCase();\n    if (searchTerm) {\n      filtered = filtered.filter(\n        (category) =>\n          category.name.toLowerCase().includes(searchTerm) ||\n          (category.description && category.description.toLowerCase().includes(searchTerm))\n      );\n    }\n\n    // Filter by type\n    const filterType = this.filterTypeSignal();\n    if (filterType) {\n      filtered = filtered.filter((category) => category.type === filterType);\n    }\n\n    // Filter by status\n    const filterStatus = this.filterStatusSignal();\n    if (filterStatus) {\n      const isActive = filterStatus === 'active';\n      filtered = filtered.filter((category) => category.active === isActive);\n    }\n\n    return filtered;\n  });\n\n  // Getters for template\n  get searchTerm(): string {\n    return this.searchTermSignal();\n  }\n\n  set searchTerm(value: string) {\n    this.searchTermSignal.set(value);\n  }\n\n  get filterType(): string {\n    return this.filterTypeSignal();\n  }\n\n  set filterType(value: string) {\n    this.filterTypeSignal.set(value);\n  }\n\n  get filterStatus(): string {\n    return this.filterStatusSignal();\n  }\n\n  set filterStatus(value: string) {\n    this.filterStatusSignal.set(value);\n  }\n\n  // Methods\n  onAddCategory(): void {\n    this.editingCategorySignal.set(null);\n    this.categoryForm.reset({\n      name: '',\n      description: '',\n      type: 'expense',\n      color: '#3B82F6',\n      icon: '',\n      active: true,\n    });\n    this.showFormSignal.set(true);\n  }\n\n  onEditCategory(category: Category): void {\n    this.editingCategorySignal.set(category);\n    this.categoryForm.patchValue({\n      name: category.name,\n      description: category.description || '',\n      type: category.type,\n      color: category.color || '#3B82F6',\n      icon: category.icon || '',\n      active: category.active,\n    });\n    this.showFormSignal.set(true);\n  }\n\n  onSaveCategory(): void {\n    if (this.categoryForm.valid) {\n      const formData = this.categoryForm.value as CategoryFormData;\n\n      if (this.editingCategory()) {\n        this.categoryUpdated.emit({\n          id: this.editingCategory()!.id,\n          data: formData,\n        });\n      } else {\n        this.categoryAdded.emit(formData);\n      }\n\n      this.onCancelEdit();\n    }\n  }\n\n  onCancelEdit(): void {\n    this.showFormSignal.set(false);\n    this.editingCategorySignal.set(null);\n    this.categoryForm.reset();\n  }\n\n  onDeleteCategory(category: Category): void {\n    if (confirm(`Tem certeza que deseja excluir a categoria \"${category.name}\"?`)) {\n      this.categoryDeleted.emit(category.id);\n    }\n  }\n\n  onToggleFilter(): void {\n    this.showFilterSignal.set(!this.showFilterSignal());\n  }\n\n  onSelectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n  }\n\n  trackByCategoryId(index: number, category: Category): string {\n    return category.id;\n  }\n\n  getCategoryItemClasses(category: Category): string {\n    return [\n      'os-category-manager__item',\n      `os-category-manager__item--${category.type}`,\n      category.active ? 'os-category-manager__item--active' : 'os-category-manager__item--inactive',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  getCategoryTypeVariant(type: string): 'default' | 'success' | 'warning' | 'error' {\n    switch (type) {\n      case 'income':\n        return 'success';\n      case 'expense':\n        return 'error';\n      case 'transfer':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  }\n\n  getCategoryTypeLabel(type: string): string {\n    switch (type) {\n      case 'income':\n        return 'Receita';\n      case 'expense':\n        return 'Despesa';\n      case 'transfer':\n        return 'Transferência';\n      default:\n        return type;\n    }\n  }\n\n  formatDate(date: Date): string {\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    }).format(new Date(date));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// Category Manager Component Styles\n.os-category-manager {\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-md);\n  padding: var(--os-spacing-lg);\n  background: var(--os-color-background);\n  border-radius: var(--os-border-radius-lg);\n  border: 1px solid var(--os-color-border);\n  box-shadow: var(--os-shadow-sm);\n\n  // Variants\n  &--compact {\n    padding: var(--os-spacing-sm);\n    gap: var(--os-spacing-sm);\n  }\n\n  &--detailed {\n    padding: var(--os-spacing-xl);\n    gap: var(--os-spacing-lg);\n  }\n\n  // Sizes\n  &--small {\n    font-size: var(--os-font-size-sm);\n  }\n\n  &--large {\n    font-size: var(--os-font-size-lg);\n  }\n\n  // Themes\n  &--dark {\n    background: var(--os-color-background-dark);\n    border-color: var(--os-color-border-dark);\n    color: var(--os-color-text-dark);\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  // Header\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: var(--os-spacing-md);\n    padding-bottom: var(--os-spacing-md);\n    border-bottom: 1px solid var(--os-color-border);\n  }\n\n  &__title {\n    margin: 0;\n    font-size: var(--os-font-size-xl);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n  }\n\n  &__actions {\n    display: flex;\n    gap: var(--os-spacing-sm);\n  }\n\n  // Content\n  &__content {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-lg);\n  }\n\n  // Form\n  &__form {\n    padding: var(--os-spacing-lg);\n    background: var(--os-color-background-secondary);\n    border-radius: var(--os-border-radius-md);\n    border: 1px solid var(--os-color-border);\n  }\n\n  &__form-actions {\n    display: flex;\n    gap: var(--os-spacing-sm);\n    justify-content: flex-end;\n    margin-top: var(--os-spacing-md);\n  }\n\n  &__error {\n    color: var(--os-color-danger);\n    font-size: var(--os-font-size-sm);\n    margin-top: var(--os-spacing-xs);\n  }\n\n  // List\n  &__list {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-md);\n  }\n\n  &__list-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: var(--os-spacing-md);\n  }\n\n  &__list-title {\n    margin: 0;\n    font-size: var(--os-font-size-lg);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-text-primary);\n  }\n\n  &__list-actions {\n    display: flex;\n    gap: var(--os-spacing-sm);\n  }\n\n  // Filters\n  &__filters {\n    padding: var(--os-spacing-md);\n    background: var(--os-color-background-secondary);\n    border-radius: var(--os-border-radius-md);\n    border: 1px solid var(--os-color-border);\n  }\n\n  // Items\n  &__items {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-sm);\n  }\n\n  &__item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: var(--os-spacing-md);\n    padding: var(--os-spacing-md);\n    background: var(--os-color-background);\n    border-radius: var(--os-border-radius-md);\n    border: 1px solid var(--os-color-border);\n    transition: all var(--os-transition-fast);\n\n    &:hover {\n      background: var(--os-color-background-hover);\n      border-color: var(--os-color-primary);\n      box-shadow: var(--os-shadow-sm);\n    }\n\n    &--income {\n      border-left: 4px solid var(--os-color-success);\n    }\n\n    &--expense {\n      border-left: 4px solid var(--os-color-danger);\n    }\n\n    &--transfer {\n      border-left: 4px solid var(--os-color-warning);\n    }\n\n    &--inactive {\n      opacity: 0.6;\n      background: var(--os-color-background-disabled);\n    }\n  }\n\n  &__item-content {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-md);\n    flex: 1;\n  }\n\n  &__item-icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 40px;\n    background: var(--os-color-background-secondary);\n    border-radius: var(--os-border-radius-md);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__item-info {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-xs);\n    flex: 1;\n  }\n\n  &__item-name {\n    margin: 0;\n    font-size: var(--os-font-size-md);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-text-primary);\n  }\n\n  &__item-description {\n    margin: 0;\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__item-meta {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n  }\n\n  &__item-date {\n    font-size: var(--os-font-size-xs);\n    color: var(--os-color-text-tertiary);\n  }\n\n  &__item-actions {\n    display: flex;\n    gap: var(--os-spacing-xs);\n  }\n\n  // Empty state\n  &__empty {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: var(--os-spacing-md);\n    padding: var(--os-spacing-xl);\n    text-align: center;\n    color: var(--os-color-text-secondary);\n\n    h3 {\n      margin: 0;\n      font-size: var(--os-font-size-lg);\n      font-weight: var(--os-font-weight-medium);\n      color: var(--os-color-text-primary);\n    }\n\n    p {\n      margin: 0;\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  // Responsive\n  @media (max-width: 768px) {\n    padding: var(--os-spacing-md);\n    gap: var(--os-spacing-md);\n\n    &__header {\n      flex-direction: column;\n      align-items: stretch;\n      gap: var(--os-spacing-sm);\n    }\n\n    &__actions {\n      justify-content: stretch;\n    }\n\n    &__item {\n      flex-direction: column;\n      align-items: stretch;\n      gap: var(--os-spacing-sm);\n    }\n\n    &__item-content {\n      flex-direction: column;\n      align-items: stretch;\n      gap: var(--os-spacing-sm);\n    }\n\n    &__item-actions {\n      justify-content: stretch;\n    }\n  }\n\n  // Dark theme\n  &--dark {\n    .os-category-manager__form {\n      background: var(--os-color-background-dark-secondary);\n      border-color: var(--os-color-border-dark);\n    }\n\n    .os-category-manager__filters {\n      background: var(--os-color-background-dark-secondary);\n      border-color: var(--os-color-border-dark);\n    }\n\n    .os-category-manager__item {\n      background: var(--os-color-background-dark);\n      border-color: var(--os-color-border-dark);\n\n      &:hover {\n        background: var(--os-color-background-hover-dark);\n        border-color: var(--os-color-primary-dark);\n      }\n\n      &--inactive {\n        background: var(--os-color-background-disabled-dark);\n      }\n    }\n\n    .os-category-manager__item-icon {\n      background: var(--os-color-background-dark-secondary);\n      color: var(--os-color-text-dark-secondary);\n    }\n  }\n}\n",
                    "styleUrl": "./os-category-manager.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 339
            },
            "extends": [],
            "accessors": {
                "searchTerm": {
                    "name": "searchTerm",
                    "setSignature": {
                        "name": "searchTerm",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 409,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "searchTerm",
                        "type": "string",
                        "returnType": "string",
                        "line": 405
                    }
                },
                "filterType": {
                    "name": "filterType",
                    "setSignature": {
                        "name": "filterType",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 417,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "filterType",
                        "type": "string",
                        "returnType": "string",
                        "line": 413
                    }
                },
                "filterStatus": {
                    "name": "filterStatus",
                    "setSignature": {
                        "name": "filterStatus",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 425,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "filterStatus",
                        "type": "string",
                        "returnType": "string",
                        "line": 421
                    }
                }
            }
        },
        {
            "name": "OsCheckboxComponent",
            "id": "component-OsCheckboxComponent-53c5fb7a93884e919df70b7ed9eb00cf1dee26576c9ffd8398d4bf1c1d94d3d1a02b04e77ff0a4f806b4baba1756c2cf0d9d7091fc7da82545486f6c72cee8d1",
            "file": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": ")"
                }
            ],
            "selector": "os-checkbox",
            "styleUrls": [
                "./os-checkbox.component.scss"
            ],
            "styles": [],
            "template": "<mat-checkbox\n  [id]=\"inputId\"\n  [checked]=\"checked()\"\n  [disabled]=\"disabled()\"\n  [indeterminate]=\"indeterminate()\"\n  [color]=\"matColor()\"\n  [class]=\"checkboxClass()\"\n  (change)=\"handleChange($event)\"\n  (blur)=\"handleBlur($event)\"\n  (focus)=\"handleFocus($event)\"\n  [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n  [attr.aria-label]=\"ariaLabel() || null\"\n  [attr.aria-labelledby]=\"ariaLabelledBy() || null\"\n  [attr.aria-checked]=\"ariaChecked()\"\n  [attr.role]=\"checkboxRole()\"\n  [attr.data-animated]=\"animated()\"\n>\n  @if (label()) {\n  {{ label() }}\n  }\n</mat-checkbox>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "required": false
                },
                {
                    "name": "ariaLabelledBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "required": false
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'checkbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsCheckboxRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsCheckboxSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsCheckboxVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "checkboxBlurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "required": false
                },
                {
                    "name": "checkboxChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "checkboxFocusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "required": false
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "ariaChecked",
                    "defaultValue": "computed(() => {\n    if (this.indeterminate()) return 'mixed';\n    return this.checked() ? 'true' : 'false';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "checkboxClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-checkbox',\n      `os-checkbox--${this.size()}`,\n      `os-checkbox--${this.variant()}`,\n      this.disabled() ? 'os-checkbox--disabled' : '',\n      this.checked() ? 'os-checkbox--checked' : '',\n      this.indeterminate() ? 'os-checkbox--indeterminate' : '',\n      this.animated() ? 'os-checkbox--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "checkboxRole",
                    "defaultValue": "computed(() => {\n    return this.role();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "inputId",
                    "defaultValue": "`os-checkbox-${Math.random().toString(36).substr(2, 9)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "matColor",
                    "defaultValue": "computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'error':\n        return 'warn';\n      default:\n        return undefined;\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  model,\n  ChangeDetectionStrategy,\n  forwardRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nexport type OsCheckboxSize = 'small' | 'medium' | 'large';\nexport type OsCheckboxVariant =\n  | 'default'\n  | 'primary'\n  | 'secondary'\n  | 'success'\n  | 'warning'\n  | 'error';\nexport type OsCheckboxRole = 'checkbox' | 'switch';\n\n@Component({\n  selector: 'os-checkbox',\n  standalone: true,\n  imports: [CommonModule, MatCheckboxModule],\n  template: `\n    <mat-checkbox\n      [id]=\"inputId\"\n      [checked]=\"checked()\"\n      [disabled]=\"disabled()\"\n      [indeterminate]=\"indeterminate()\"\n      [color]=\"matColor()\"\n      [class]=\"checkboxClass()\"\n      (change)=\"handleChange($event)\"\n      (blur)=\"handleBlur($event)\"\n      (focus)=\"handleFocus($event)\"\n      [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n      [attr.aria-label]=\"ariaLabel() || null\"\n      [attr.aria-labelledby]=\"ariaLabelledBy() || null\"\n      [attr.aria-checked]=\"ariaChecked()\"\n      [attr.role]=\"checkboxRole()\"\n      [attr.data-animated]=\"animated()\"\n    >\n      @if (label()) {\n      {{ label() }}\n      }\n    </mat-checkbox>\n  `,\n  styleUrls: ['./os-checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsCheckboxComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OsCheckboxComponent implements ControlValueAccessor {\n  size = input<OsCheckboxSize>('medium');\n  variant = input<OsCheckboxVariant>('default');\n  label = input<string>('');\n  checked = model(false);\n  disabled = model(false);\n  indeterminate = input(false);\n  required = input(false);\n  animated = input(true);\n  role = input<OsCheckboxRole>('checkbox');\n  ariaDescribedBy = input<string>('');\n  ariaLabel = input<string>('');\n  ariaLabelledBy = input<string>('');\n\n  checkboxChange = output<boolean>();\n  checkboxBlurEvent = output<FocusEvent>();\n  checkboxFocusEvent = output<FocusEvent>();\n\n  protected inputId = `os-checkbox-${Math.random().toString(36).substr(2, 9)}`;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private onChange = (value: boolean) => {\n    // This will be set by registerOnChange\n  };\n  private onTouched = () => {\n    // This will be set by registerOnTouched\n  };\n\n  // Mapeamento interno para Material\n  protected matColor = computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'error':\n        return 'warn';\n      default:\n        return undefined;\n    }\n  });\n\n  checkboxClass = computed(() => {\n    return [\n      'os-checkbox',\n      `os-checkbox--${this.size()}`,\n      `os-checkbox--${this.variant()}`,\n      this.disabled() ? 'os-checkbox--disabled' : '',\n      this.checked() ? 'os-checkbox--checked' : '',\n      this.indeterminate() ? 'os-checkbox--indeterminate' : '',\n      this.animated() ? 'os-checkbox--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  ariaChecked = computed(() => {\n    if (this.indeterminate()) return 'mixed';\n    return this.checked() ? 'true' : 'false';\n  });\n\n  checkboxRole = computed(() => {\n    return this.role();\n  });\n\n  handleChange(event: { checked: boolean }): void {\n    const isChecked = event.checked;\n\n    this.onChange(isChecked);\n    this.checkboxChange.emit(isChecked);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this.onTouched();\n    this.checkboxBlurEvent.emit(event);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.checkboxFocusEvent.emit(event);\n  }\n\n  writeValue(value: boolean): void {\n    // Update the model signal when FormControl value changes programmatically\n    if (value !== this.checked()) {\n      this.checked.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: boolean) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    // Update the disabled state when called by Angular Forms\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens';\n\n.os-checkbox {\n  display: inline-flex;\n  align-items: flex-start;\n  gap: var(--os-spacing-sm);\n  cursor: pointer;\n  user-select: none;\n  min-height: 44px; // Touch target mínimo\n  padding: var(--os-spacing-xs);\n\n  &--small {\n    gap: var(--os-spacing-xs);\n    min-height: 44px; // Touch target mínimo\n    padding: var(--os-spacing-xs);\n  }\n\n  &--large {\n    gap: var(--os-spacing-md);\n    min-height: 48px;\n    padding: var(--os-spacing-sm);\n  }\n\n  &--disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  &--animated {\n    transition: all var(--os-transition-fast) ease;\n  }\n\n  &__input {\n    position: absolute;\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  &__label {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n    cursor: pointer;\n    transition: var(--os-transition-fast);\n\n    &--disabled {\n      cursor: not-allowed;\n    }\n  }\n\n  &__box {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 2px solid var(--os-color-outline);\n    border-radius: var(--os-border-radius-sm);\n    background-color: var(--os-color-surface);\n    transition: all var(--os-transition-fast) ease;\n    flex-shrink: 0;\n    min-width: 44px; // Touch target mínimo\n    min-height: 44px; // Touch target mínimo\n\n    &--small {\n      width: 44px; // Touch target mínimo\n      height: 44px; // Touch target mínimo\n      border-radius: var(--os-border-radius-sm);\n    }\n\n    &--medium {\n      width: 44px; // Touch target mínimo\n      height: 44px; // Touch target mínimo\n    }\n\n    &--large {\n      width: 48px;\n      height: 48px;\n      border-radius: var(--os-border-radius-md);\n    }\n\n    &--default {\n      border-color: var(--os-color-outline);\n    }\n\n    &--primary {\n      border-color: var(--os-color-primary);\n    }\n\n    &--secondary {\n      border-color: var(--os-color-secondary);\n    }\n\n    &--success {\n      border-color: var(--os-color-success);\n    }\n\n    &--warning {\n      border-color: var(--os-color-warning);\n    }\n\n    &--error {\n      border-color: var(--os-color-error);\n    }\n\n    &--checked {\n      background-color: var(--os-color-primary);\n      border-color: var(--os-color-primary);\n      color: var(--os-color-on-primary);\n\n      &.os-checkbox__box--primary {\n        background-color: var(--os-color-primary);\n        border-color: var(--os-color-primary);\n      }\n\n      &.os-checkbox__box--secondary {\n        background-color: var(--os-color-secondary);\n        border-color: var(--os-color-secondary);\n        color: var(--os-color-on-secondary);\n      }\n\n      &.os-checkbox__box--success {\n        background-color: var(--os-color-success);\n        border-color: var(--os-color-success);\n        color: var(--os-color-on-success);\n      }\n\n      &.os-checkbox__box--warning {\n        background-color: var(--os-color-warning);\n        border-color: var(--os-color-warning);\n        color: var(--os-color-on-warning);\n      }\n\n      &.os-checkbox__box--error {\n        background-color: var(--os-color-error);\n        border-color: var(--os-color-error);\n        color: var(--os-color-on-error);\n      }\n    }\n\n    &--indeterminate {\n      background-color: var(--os-color-primary);\n      border-color: var(--os-color-primary);\n      color: var(--os-color-on-primary);\n\n      &.os-checkbox__box--primary {\n        background-color: var(--os-color-primary);\n        border-color: var(--os-color-primary);\n      }\n\n      &.os-checkbox__box--secondary {\n        background-color: var(--os-color-secondary);\n        border-color: var(--os-color-secondary);\n        color: var(--os-color-on-secondary);\n      }\n\n      &.os-checkbox__box--success {\n        background-color: var(--os-color-success);\n        border-color: var(--os-color-success);\n        color: var(--os-color-on-success);\n      }\n\n      &.os-checkbox__box--warning {\n        background-color: var(--os-color-warning);\n        border-color: var(--os-color-warning);\n        color: var(--os-color-on-warning);\n      }\n\n      &.os-checkbox__box--error {\n        background-color: var(--os-color-error);\n        border-color: var(--os-color-error);\n        color: var(--os-color-on-error);\n      }\n    }\n\n    &--disabled {\n      background-color: var(--os-color-surface-disabled);\n      border-color: var(--os-color-outline-disabled);\n      cursor: not-allowed;\n    }\n  }\n\n  &__checkmark {\n    font-size: 12px;\n    font-weight: var(--os-font-weight-bold);\n    line-height: 1;\n  }\n\n  &__indeterminate {\n    font-size: 14px;\n    font-weight: var(--os-font-weight-bold);\n    line-height: 1;\n  }\n\n  &__label-text {\n    font-size: var(--os-font-size-base);\n    font-weight: var(--os-font-weight-regular);\n    color: var(--os-color-on-surface);\n    line-height: var(--os-line-height-normal);\n\n    .os-checkbox--small & {\n      font-size: var(--os-font-size-sm);\n    }\n\n    .os-checkbox--large & {\n      font-size: var(--os-font-size-lg);\n    }\n\n    .os-checkbox--disabled & {\n      color: var(--os-color-on-surface-disabled);\n    }\n  }\n\n  &:hover:not(&--disabled) {\n    .os-checkbox__box:not(.os-checkbox__box--checked):not(.os-checkbox__box--indeterminate) {\n      border-color: var(--os-color-primary);\n      background-color: var(--os-color-primary-container);\n    }\n  }\n\n  &:focus-within {\n    .os-checkbox__box {\n      outline: var(--os-focus-ring-width) solid var(--os-focus-ring-color);\n      outline-offset: 2px;\n    }\n  }\n\n  // Animações de check\n  &--animated {\n    .os-checkbox__box {\n      &--checked {\n        animation: os-checkbox-check var(--os-transition-fast) ease-out;\n      }\n\n      &--indeterminate {\n        animation: os-checkbox-indeterminate var(--os-transition-fast) ease-out;\n      }\n    }\n  }\n\n  // Hover effects\n  &:hover:not(&--disabled) {\n    .os-checkbox__box:not(.os-checkbox__box--checked):not(.os-checkbox__box--indeterminate) {\n      border-color: var(--os-color-primary);\n      background-color: var(--os-color-primary-container);\n      transform: scale(1.02);\n    }\n  }\n\n  // Active effects\n  &:active:not(&--disabled) {\n    .os-checkbox__box {\n      transform: scale(0.98);\n    }\n  }\n}\n\n// Keyframes para animações\n@keyframes os-checkbox-check {\n  0% {\n    transform: scale(0.8);\n    opacity: 0.7;\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n@keyframes os-checkbox-indeterminate {\n  0% {\n    transform: scale(0.8);\n    opacity: 0.7;\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n// Suporte para prefers-reduced-motion\n@media (prefers-reduced-motion: reduce) {\n  .os-checkbox {\n    &--animated {\n      transition: none;\n    }\n\n    .os-checkbox__box {\n      transition: none;\n    }\n  }\n\n  @keyframes os-checkbox-check {\n    0%,\n    100% {\n      transform: none;\n      opacity: 1;\n    }\n  }\n\n  @keyframes os-checkbox-indeterminate {\n    0%,\n    100% {\n      transform: none;\n      opacity: 1;\n    }\n  }\n}\n",
                    "styleUrl": "./os-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "OsChipComponent",
            "id": "component-OsChipComponent-0700847dae50ee4e5b2612e72557a077fc2c6b6bb62d83cffddb2494063adadf5c2523d046f0185ae6271fd1f01ec5538dc3fccfb771b05bc3d7de8a742de069",
            "file": "src/app/shared/ui-components/atoms/os-chip/os-chip.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-chip",
            "styleUrls": [
                "./os-chip.component.scss"
            ],
            "styles": [],
            "template": "<mat-chip\n  [id]=\"chipId\"\n  [class]=\"chipClasses()\"\n  [disabled]=\"disabled()\"\n  [removable]=\"removable()\"\n  [color]=\"matColor()\"\n  [attr.aria-label]=\"ariaLabel() || text()\"\n  [attr.aria-describedby]=\"ariaDescribedBy()\"\n  [attr.aria-pressed]=\"selected() ? 'true' : 'false'\"\n  [attr.role]=\"role()\"\n  [attr.tabindex]=\"disabled() ? -1 : 0\"\n  (click)=\"onClick()\"\n  (removed)=\"onRemove()\"\n  (mouseenter)=\"onMouseEnter()\"\n  (mouseleave)=\"onMouseLeave()\"\n  (focus)=\"onFocus($event)\"\n  (blur)=\"onBlur($event)\"\n>\n  @if (icon()) {\n  <span class=\"os-chip__icon\" [attr.aria-hidden]=\"true\">{{ icon() }}</span>\n  }\n  <span class=\"os-chip__text\">{{ text() }}</span>\n  @if (removable()) {\n  <button\n    class=\"os-chip__remove\"\n    [attr.aria-label]=\"removeLabel()\"\n    [attr.aria-describedby]=\"chipId + '-remove-help'\"\n    (click)=\"onRemoveClick($event)\"\n  >\n    <span class=\"os-chip__remove-icon\" [attr.aria-hidden]=\"true\">×</span>\n  </button>\n  }\n</mat-chip>\n@if (removable()) {\n<span [id]=\"chipId + '-remove-help'\" class=\"os-chip__remove-help\" [attr.aria-hidden]=\"true\">\n  {{ removeLabel() }}\n</span>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "hapticFeedback",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "removable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "removeLabel",
                    "defaultValue": "'Remove'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"button\" | \"option\" | \"tab\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsChipSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'neutral'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsChipVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "clicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "focusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "removed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "chipClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-chip'];\n    classes.push(`os-chip--${this.size()}`);\n    classes.push(`os-chip--${this.variant()}`);\n\n    if (this.disabled()) {\n      classes.push('os-chip--disabled');\n    }\n\n    if (this.selected()) {\n      classes.push('os-chip--selected');\n    }\n\n    if (this.removable()) {\n      classes.push('os-chip--removable');\n    }\n\n    if (this.isFocused()) {\n      classes.push('os-chip--focused');\n    }\n\n    if (this.isHovered()) {\n      classes.push('os-chip--hovered');\n    }\n\n    if (this.animated()) {\n      classes.push('os-chip--animated');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "chipId",
                    "defaultValue": "`os-chip-${Math.random().toString(36).substr(2, 9)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "isFocused",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "isHovered",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "matColor",
                    "defaultValue": "computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'danger':\n        return 'warn';\n      case 'neutral':\n        return undefined;\n      default:\n        return undefined;\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 155,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRemove",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRemoveClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "triggerHapticFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatChipsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, computed, signal, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatChipsModule } from '@angular/material/chips';\n\nexport type OsChipSize = 'small' | 'medium' | 'large';\nexport type OsChipVariant = 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'neutral';\n\n@Component({\n  selector: 'os-chip',\n  standalone: true,\n  imports: [CommonModule, MatChipsModule],\n  template: `\n    <mat-chip\n      [id]=\"chipId\"\n      [class]=\"chipClasses()\"\n      [disabled]=\"disabled()\"\n      [removable]=\"removable()\"\n      [color]=\"matColor()\"\n      [attr.aria-label]=\"ariaLabel() || text()\"\n      [attr.aria-describedby]=\"ariaDescribedBy()\"\n      [attr.aria-pressed]=\"selected() ? 'true' : 'false'\"\n      [attr.role]=\"role()\"\n      [attr.tabindex]=\"disabled() ? -1 : 0\"\n      (click)=\"onClick()\"\n      (removed)=\"onRemove()\"\n      (mouseenter)=\"onMouseEnter()\"\n      (mouseleave)=\"onMouseLeave()\"\n      (focus)=\"onFocus($event)\"\n      (blur)=\"onBlur($event)\"\n    >\n      @if (icon()) {\n      <span class=\"os-chip__icon\" [attr.aria-hidden]=\"true\">{{ icon() }}</span>\n      }\n      <span class=\"os-chip__text\">{{ text() }}</span>\n      @if (removable()) {\n      <button\n        class=\"os-chip__remove\"\n        [attr.aria-label]=\"removeLabel()\"\n        [attr.aria-describedby]=\"chipId + '-remove-help'\"\n        (click)=\"onRemoveClick($event)\"\n      >\n        <span class=\"os-chip__remove-icon\" [attr.aria-hidden]=\"true\">×</span>\n      </button>\n      }\n    </mat-chip>\n    @if (removable()) {\n    <span [id]=\"chipId + '-remove-help'\" class=\"os-chip__remove-help\" [attr.aria-hidden]=\"true\">\n      {{ removeLabel() }}\n    </span>\n    }\n  `,\n  styleUrls: ['./os-chip.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsChipComponent {\n  readonly text = input<string>('');\n  readonly icon = input<string | null>(null);\n  readonly removable = input(false);\n  readonly disabled = input(false);\n  readonly selected = input(false);\n  readonly size = input<OsChipSize>('medium');\n  readonly variant = input<OsChipVariant>('neutral');\n  readonly removeLabel = input('Remove');\n  readonly ariaLabel = input<string>('');\n  readonly ariaDescribedBy = input<string>('');\n  readonly role = input<'button' | 'option' | 'tab'>('button');\n  readonly animated = input(true);\n  readonly hapticFeedback = input(true);\n\n  readonly clicked = output<void>();\n  readonly removed = output<void>();\n  readonly focusEvent = output<FocusEvent>();\n  readonly blurEvent = output<FocusEvent>();\n\n  chipId = `os-chip-${Math.random().toString(36).substr(2, 9)}`;\n  isFocused = signal(false);\n  isHovered = signal(false);\n\n  readonly chipClasses = computed(() => {\n    const classes = ['os-chip'];\n    classes.push(`os-chip--${this.size()}`);\n    classes.push(`os-chip--${this.variant()}`);\n\n    if (this.disabled()) {\n      classes.push('os-chip--disabled');\n    }\n\n    if (this.selected()) {\n      classes.push('os-chip--selected');\n    }\n\n    if (this.removable()) {\n      classes.push('os-chip--removable');\n    }\n\n    if (this.isFocused()) {\n      classes.push('os-chip--focused');\n    }\n\n    if (this.isHovered()) {\n      classes.push('os-chip--hovered');\n    }\n\n    if (this.animated()) {\n      classes.push('os-chip--animated');\n    }\n\n    return classes.join(' ');\n  });\n\n  onClick(): void {\n    if (!this.disabled()) {\n      this.triggerHapticFeedback();\n      this.clicked.emit();\n    }\n  }\n\n  onRemove(): void {\n    if (!this.disabled()) {\n      this.triggerHapticFeedback();\n      this.removed.emit();\n    }\n  }\n\n  onRemoveClick(event: Event): void {\n    event.stopPropagation();\n    this.onRemove();\n  }\n\n  onMouseEnter(): void {\n    this.isHovered.set(true);\n  }\n\n  onMouseLeave(): void {\n    this.isHovered.set(false);\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.isFocused.set(true);\n    this.focusEvent.emit(event);\n  }\n\n  onBlur(event: FocusEvent): void {\n    this.isFocused.set(false);\n    this.blurEvent.emit(event);\n  }\n\n  triggerHapticFeedback(): void {\n    if (this.hapticFeedback() && 'vibrate' in navigator) {\n      navigator.vibrate(50); // 50ms vibration\n    }\n  }\n\n  // Mapeamento interno para Material\n  protected matColor = computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'danger':\n        return 'warn';\n      case 'neutral':\n        return undefined;\n      default:\n        return undefined;\n    }\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens';\n\n.os-chip {\n  display: inline-flex;\n  align-items: center;\n  gap: var(--os-spacing-xs);\n  padding: var(--os-spacing-xs) var(--os-spacing-sm);\n  border-radius: var(--os-border-radius-full);\n  font-family: var(--os-font-family-base);\n  font-weight: var(--os-font-weight-medium);\n  cursor: pointer;\n  transition: all var(--os-transition-duration-fast) var(--os-transition-easing-standard);\n  user-select: none;\n  border: 1px solid transparent;\n  position: relative;\n  min-height: 44px; // Touch target minimum\n  min-width: 44px; // Touch target minimum\n\n  // Override Material chip styles\n  ::ng-deep .mat-mdc-chip {\n    font-family: var(--os-font-family-base);\n    font-weight: var(--os-font-weight-medium);\n    border-radius: var(--os-border-radius-full);\n  }\n\n  &__icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-shrink: 0;\n  }\n\n  &__text {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  &__remove {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: var(--os-spacing-xs);\n    border-radius: 50%;\n    transition: all var(--os-transition-duration-fast) var(--os-transition-easing-standard);\n    flex-shrink: 0;\n    min-width: 32px;\n    min-height: 32px;\n    margin-left: var(--os-spacing-xs);\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n      transform: scale(1.1);\n    }\n\n    &:active {\n      transform: scale(0.95);\n    }\n\n    &:focus {\n      outline: 2px solid var(--os-color-primary-500);\n      outline-offset: 1px;\n    }\n  }\n\n  &__remove-icon {\n    font-size: 1.2em;\n    line-height: 1;\n    font-weight: var(--os-font-weight-bold);\n  }\n\n  &__remove-help {\n    position: absolute;\n    left: -9999px;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  &--small {\n    padding: var(--os-spacing-xs) var(--os-spacing-sm);\n    font-size: var(--os-font-size-xs);\n    min-height: 44px; // Touch target minimum\n    min-width: 44px;\n\n    .os-chip__icon {\n      font-size: var(--os-font-size-xs);\n    }\n  }\n\n  &--medium {\n    padding: var(--os-spacing-sm) var(--os-spacing-md);\n    font-size: var(--os-font-size-sm);\n    min-height: 44px; // Touch target minimum\n    min-width: 44px;\n\n    .os-chip__icon {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  &--large {\n    padding: var(--os-spacing-md) var(--os-spacing-lg);\n    font-size: var(--os-font-size-base);\n    min-height: 48px; // Larger touch target\n    min-width: 48px;\n\n    .os-chip__icon {\n      font-size: var(--os-font-size-base);\n    }\n  }\n\n  &--primary {\n    background-color: var(--os-color-primary-100);\n    color: var(--os-color-primary-700);\n    border-color: var(--os-color-primary-200);\n\n    &.os-chip--selected {\n      background-color: var(--os-color-primary-500);\n      color: var(--os-color-white);\n      border-color: var(--os-color-primary-500);\n    }\n  }\n\n  &--secondary {\n    background-color: var(--os-color-secondary-100);\n    color: var(--os-color-secondary-700);\n    border-color: var(--os-color-secondary-200);\n\n    &.os-chip--selected {\n      background-color: var(--os-color-secondary-500);\n      color: var(--os-color-white);\n      border-color: var(--os-color-secondary-500);\n    }\n  }\n\n  &--success {\n    background-color: var(--os-color-success-100);\n    color: var(--os-color-success-700);\n    border-color: var(--os-color-success-200);\n\n    &.os-chip--selected {\n      background-color: var(--os-color-success-500);\n      color: var(--os-color-white);\n      border-color: var(--os-color-success-500);\n    }\n  }\n\n  &--warning {\n    background-color: var(--os-color-warning-100);\n    color: var(--os-color-warning-700);\n    border-color: var(--os-color-warning-200);\n\n    &.os-chip--selected {\n      background-color: var(--os-color-warning-500);\n      color: var(--os-color-white);\n      border-color: var(--os-color-warning-500);\n    }\n  }\n\n  &--danger {\n    background-color: var(--os-color-danger-100);\n    color: var(--os-color-danger-700);\n    border-color: var(--os-color-danger-200);\n\n    &.os-chip--selected {\n      background-color: var(--os-color-danger-500);\n      color: var(--os-color-white);\n      border-color: var(--os-color-danger-500);\n    }\n  }\n\n  &--neutral {\n    background-color: var(--os-color-neutral-100);\n    color: var(--os-color-neutral-700);\n    border-color: var(--os-color-neutral-200);\n\n    &.os-chip--selected {\n      background-color: var(--os-color-neutral-500);\n      color: var(--os-color-white);\n      border-color: var(--os-color-neutral-500);\n    }\n  }\n\n  &--selected {\n    box-shadow: var(--os-shadow-sm);\n  }\n\n  &--disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n    background-color: var(--os-color-neutral-100);\n    color: var(--os-color-neutral-400);\n    border-color: var(--os-color-neutral-200);\n  }\n\n  &--removable {\n    padding-right: var(--os-spacing-xs);\n  }\n\n  &--focused {\n    outline: 2px solid var(--os-color-primary-500);\n    outline-offset: 2px;\n    box-shadow: var(--os-shadow-md);\n  }\n\n  &--hovered:not(.os-chip--disabled) {\n    box-shadow: var(--os-shadow-lg);\n    transform: translateY(-2px);\n  }\n\n  &--animated {\n    transition: all var(--os-transition-duration-standard) var(--os-transition-easing-standard);\n  }\n\n  &:hover:not(.os-chip--disabled) {\n    box-shadow: var(--os-shadow-md);\n    transform: translateY(-1px);\n  }\n\n  &:active:not(.os-chip--disabled) {\n    transform: translateY(0);\n    box-shadow: var(--os-shadow-sm);\n  }\n\n  &:focus-within {\n    outline: 2px solid var(--os-color-primary-300);\n    outline-offset: 2px;\n  }\n}\n\n// Responsive design\n@media (max-width: 575px) {\n  .os-chip {\n    min-height: 48px; // Larger touch target on mobile\n    min-width: 48px;\n\n    &--small {\n      min-height: 48px;\n      min-width: 48px;\n    }\n\n    &--medium {\n      min-height: 48px;\n      min-width: 48px;\n    }\n\n    &--large {\n      min-height: 52px;\n      min-width: 52px;\n    }\n\n    &__remove {\n      min-width: 36px;\n      min-height: 36px;\n    }\n  }\n}\n\n// Dark mode support\n@media (prefers-color-scheme: dark) {\n  .os-chip {\n    &--primary {\n      background-color: var(--os-color-primary-900);\n      color: var(--os-color-primary-100);\n      border-color: var(--os-color-primary-700);\n\n      &.os-chip--selected {\n        background-color: var(--os-color-primary-600);\n        color: var(--os-color-white);\n        border-color: var(--os-color-primary-600);\n      }\n    }\n\n    &--secondary {\n      background-color: var(--os-color-secondary-900);\n      color: var(--os-color-secondary-100);\n      border-color: var(--os-color-secondary-700);\n\n      &.os-chip--selected {\n        background-color: var(--os-color-secondary-600);\n        color: var(--os-color-white);\n        border-color: var(--os-color-secondary-600);\n      }\n    }\n\n    &--success {\n      background-color: var(--os-color-success-900);\n      color: var(--os-color-success-100);\n      border-color: var(--os-color-success-700);\n\n      &.os-chip--selected {\n        background-color: var(--os-color-success-600);\n        color: var(--os-color-white);\n        border-color: var(--os-color-success-600);\n      }\n    }\n\n    &--warning {\n      background-color: var(--os-color-warning-900);\n      color: var(--os-color-warning-100);\n      border-color: var(--os-color-warning-700);\n\n      &.os-chip--selected {\n        background-color: var(--os-color-warning-600);\n        color: var(--os-color-white);\n        border-color: var(--os-color-warning-600);\n      }\n    }\n\n    &--danger {\n      background-color: var(--os-color-danger-900);\n      color: var(--os-color-danger-100);\n      border-color: var(--os-color-danger-700);\n\n      &.os-chip--selected {\n        background-color: var(--os-color-danger-600);\n        color: var(--os-color-white);\n        border-color: var(--os-color-danger-600);\n      }\n    }\n\n    &--neutral {\n      background-color: var(--os-color-neutral-800);\n      color: var(--os-color-neutral-100);\n      border-color: var(--os-color-neutral-600);\n\n      &.os-chip--selected {\n        background-color: var(--os-color-neutral-600);\n        color: var(--os-color-white);\n        border-color: var(--os-color-neutral-600);\n      }\n    }\n\n    &--disabled {\n      background-color: var(--os-color-neutral-800);\n      color: var(--os-color-neutral-500);\n      border-color: var(--os-color-neutral-600);\n    }\n  }\n}\n\n// High contrast mode support\n@media (prefers-contrast: high) {\n  .os-chip {\n    border-width: 2px;\n\n    &--focused {\n      outline-width: 3px;\n    }\n\n    &__remove:focus {\n      outline-width: 3px;\n    }\n  }\n}\n\n// Reduced motion support\n@media (prefers-reduced-motion: reduce) {\n  .os-chip {\n    &--animated {\n      transition: none;\n    }\n\n    &:hover:not(.os-chip--disabled) {\n      transform: none;\n    }\n\n    &--hovered:not(.os-chip--disabled) {\n      transform: none;\n    }\n\n    &__remove {\n      transition: none;\n\n      &:hover {\n        transform: none;\n      }\n\n      &:active {\n        transform: none;\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./os-chip.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsDashboardTemplateComponent",
            "id": "component-OsDashboardTemplateComponent-ad14cf1900516d48673867315a1fe3ac91d9218cca2a5d5befbbf5255f13b18b5b95837a50f51cf2124a5df50412715fd7e1f6348a18d13163b1b44192d997fc",
            "file": "src/app/shared/ui-components/templates/os-dashboard-template/os-dashboard-template.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-dashboard-template",
            "styleUrls": [
                "./os-dashboard-template.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"dashboardClass()\" [attr.aria-label]=\"ariaLabel()\">\n  @if (layout().showHeader) {\n  <os-header\n    [variant]=\"headerVariant()\"\n    [size]=\"layout().size\"\n    [theme]=\"layout().theme\"\n    [logo]=\"headerLogo()\"\n    (navigationClick)=\"onNavigationClick($event)\"\n    (userMenuItemClick)=\"onUserMenuClick($event)\"\n    (actionClick)=\"onActionClick($event)\"\n    (mobileMenuToggle)=\"onMobileMenuToggle($event)\"\n  />\n  }\n\n  <div class=\"os-dashboard-template__content\">\n    @if (layout().showSidebar) {\n    <os-sidebar\n      [items]=\"sidebarNavigation()\"\n      [variant]=\"sidebarVariant()\"\n      [size]=\"layout().size\"\n      [theme]=\"layout().theme\"\n      [collapsed]=\"layout().sidebarCollapsed\"\n      [title]=\"sidebarTitle()\"\n      [logo]=\"sidebarLogo()\"\n      [showHeader]=\"sidebarShowHeader()\"\n      [showFooter]=\"sidebarShowFooter()\"\n      [showToggleButton]=\"sidebarShowToggleButton()\"\n      (itemClick)=\"onSidebarNavigationClick($event)\"\n      (collapseChange)=\"onSidebarToggleClick($event)\"\n    />\n    }\n    <main class=\"os-dashboard-template__main\" [class]=\"mainClass()\">\n      @if (loading()) {\n      <div class=\"os-dashboard-template__loading\">\n        <div class=\"os-dashboard-template__spinner\"></div>\n        <p>Carregando dashboard...</p>\n      </div>\n      } @else if (emptyState() && widgets().length === 0) {\n      <div class=\"os-dashboard-template__empty\">\n        <div class=\"os-dashboard-template__empty-icon\">📊</div>\n        <h3>{{ emptyState()!.message }}</h3>\n        @if (emptyState()!.action) {\n        <button\n          class=\"os-dashboard-template__empty-action\"\n          (click)=\"onEmptyStateActionClick(emptyState()!.action!.action)\"\n        >\n          {{ emptyState()!.action!.label }}\n        </button>\n        }\n      </div>\n      } @else {\n      <div class=\"os-dashboard-template__grid\" [class]=\"gridClass()\">\n        @for (widget of widgets(); track widget.id) {\n        <div\n          class=\"os-dashboard-template__widget\"\n          [class]=\"widgetClass(widget)\"\n          [style.grid-column]=\"getWidgetGridColumn(widget)\"\n          [style.grid-row]=\"getWidgetGridRow(widget)\"\n          [attr.aria-label]=\"widget.title\"\n        >\n          @switch (widget.type) { @case ('budget-summary') {\n          <os-budget-summary\n            [variant]=\"getBudgetSummaryVariant(widget)\"\n            [size]=\"getWidgetSizeTyped(widget)\"\n            [budgetData]=\"getBudgetSummaryData(widget)\"\n            (click)=\"onWidgetClick(widget.type, $event)\"\n          />\n          } @case ('goal-progress') {\n          <os-goal-progress\n            [variant]=\"getGoalProgressVariant(widget)\"\n            [size]=\"getWidgetSizeTyped(widget)\"\n            [goalData]=\"getGoalProgressData(widget)\"\n            (click)=\"onWidgetClick(widget.type, $event)\"\n          />\n          } @case ('transaction-list') {\n          <os-transaction-list\n            [variant]=\"getTransactionListVariant(widget)\"\n            [size]=\"getWidgetSizeTyped(widget)\"\n            (click)=\"onWidgetClick(widget.type, $event)\"\n          />\n          } @case ('category-manager') {\n          <os-category-manager\n            [variant]=\"getCategoryManagerVariant(widget)\"\n            [size]=\"getWidgetSizeTyped(widget)\"\n            (click)=\"onWidgetClick(widget.type, $event)\"\n          />\n          } @case ('budget-tracker') {\n          <os-budget-tracker\n            [variant]=\"getBudgetTrackerVariant(widget)\"\n            [size]=\"getWidgetSizeTyped(widget)\"\n            [budgetData]=\"getBudgetTrackerData(widget)\"\n            (click)=\"onWidgetClick(widget.type, $event)\"\n          />\n          } @case ('goal-tracker') {\n          <os-goal-tracker\n            [variant]=\"getGoalTrackerVariant(widget)\"\n            [size]=\"getWidgetSizeTyped(widget)\"\n            [goalData]=\"getGoalTrackerData(widget)\"\n            (click)=\"onWidgetClick(widget.type, $event)\"\n          />\n          } }\n        </div>\n        }\n      </div>\n      }\n    </main>\n  </div>\n\n  @if (layout().showFooter) {\n  <os-footer\n    [variant]=\"footerVariant()\"\n    [size]=\"layout().size\"\n    [theme]=\"layout().theme\"\n    (linkClick)=\"onFooterLinkClick()\"\n    (socialClick)=\"onFooterSocialClick()\"\n  />\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "emptyState",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ message: string; action?: { label: string; action: string } } | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 207,
                    "required": false
                },
                {
                    "name": "footerCopyright",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 220,
                    "required": false
                },
                {
                    "name": "footerLinks",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ label: string; route?: string; href?: string; external?: boolean }[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 219,
                    "required": false
                },
                {
                    "name": "footerSocial",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ platform: string; url: string; icon?: string }[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 221,
                    "required": false
                },
                {
                    "name": "headerActions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ label: string; icon?: string; action: string }[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 211,
                    "required": false
                },
                {
                    "name": "headerLogo",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 208,
                    "required": false
                },
                {
                    "name": "headerMobileMenu",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ label: string; route?: string; href?: string; icon?: string }[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 212,
                    "required": false
                },
                {
                    "name": "headerNavigation",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ label: string; route?: string; href?: string; icon?: string }[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 209,
                    "required": false
                },
                {
                    "name": "headerUser",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ name: string; avatar?: string; email?: string } | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 210,
                    "required": false
                },
                {
                    "name": "layout",
                    "defaultValue": "{    variant: 'default',    size: 'medium',    theme: 'light',    showHeader: true,    showSidebar: true,    showFooter: true,    sidebarCollapsed: false,  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DashboardLayout",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 195,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 206,
                    "required": false
                },
                {
                    "name": "sidebarLogo",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 215,
                    "required": false
                },
                {
                    "name": "sidebarNavigation",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 213,
                    "required": false
                },
                {
                    "name": "sidebarShowFooter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 217,
                    "required": false
                },
                {
                    "name": "sidebarShowHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 216,
                    "required": false
                },
                {
                    "name": "sidebarShowToggleButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 218,
                    "required": false
                },
                {
                    "name": "sidebarTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 214,
                    "required": false
                },
                {
                    "name": "widgets",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DashboardWidget[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 205,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ action: string; label: string }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 225,
                    "required": false
                },
                {
                    "name": "emptyStateActionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ action: string }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 232,
                    "required": false
                },
                {
                    "name": "footerLinkClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ label: string; route?: string; href?: string }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 233,
                    "required": false
                },
                {
                    "name": "footerSocialClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ platform: string; url: string }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 234,
                    "required": false
                },
                {
                    "name": "mobileMenuToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ open: boolean }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 226,
                    "required": false
                },
                {
                    "name": "navigationClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ item: string; route?: string; href?: string }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 223,
                    "required": false
                },
                {
                    "name": "sidebarFooterClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ action: string }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 230,
                    "required": false
                },
                {
                    "name": "sidebarHeaderClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ action: string }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 229,
                    "required": false
                },
                {
                    "name": "sidebarNavigationClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarItem",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 227,
                    "required": false
                },
                {
                    "name": "sidebarToggleClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ collapsed: boolean }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 228,
                    "required": false
                },
                {
                    "name": "userMenuClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ action: string; user: { name: string; email?: string } }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 224,
                    "required": false
                },
                {
                    "name": "widgetClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ type: string; data: unknown; widget: DashboardWidget }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 231,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "ariaLabel",
                    "defaultValue": "computed(() => {\n    return `Dashboard template with ${this.widgets().length} widgets`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 271,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "dashboardClass",
                    "defaultValue": "computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template',\n      `os-dashboard-template--${layout.variant}`,\n      `os-dashboard-template--${layout.size}`,\n      `os-dashboard-template--${layout.theme}`,\n      layout.sidebarCollapsed ? 'os-dashboard-template--sidebar-collapsed' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 236,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "footerVariant",
                    "defaultValue": "computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'minimal' : 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 285,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getBudgetSummaryData",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 318,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getBudgetSummaryVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 334,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getBudgetTrackerData",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 326,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getBudgetTrackerVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 360,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getCategoryManagerVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 354,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getGoalProgressData",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 322,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getGoalProgressVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 340,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getGoalTrackerData",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 330,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getGoalTrackerVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 366,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getTransactionListVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 348,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getWidgetColumnSpan",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 385,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getWidgetData",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 314,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getWidgetGridColumn",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 374,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getWidgetGridRow",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 381,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getWidgetSize",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 304,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getWidgetSizeTyped",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 370,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getWidgetVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 300,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "gridClass",
                    "defaultValue": "computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template__grid',\n      `os-dashboard-template__grid--${layout.variant}`,\n      `os-dashboard-template__grid--${layout.size}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 260,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "headerVariant",
                    "defaultValue": "computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'compact' : 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 275,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "mainClass",
                    "defaultValue": "computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template__main',\n      layout.showSidebar ? 'os-dashboard-template__main--with-sidebar' : '',\n      layout.sidebarCollapsed ? 'os-dashboard-template__main--sidebar-collapsed' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 249,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sidebarVariant",
                    "defaultValue": "computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'minimal' : 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 280,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "widgetClass",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 290,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onActionClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 410,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEmptyStateActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 442,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFooterLinkClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 446,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onFooterSocialClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 454,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onMobileMenuToggle",
                    "args": [
                        {
                            "name": "open",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 417,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "open",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNavigationClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 395,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSidebarFooterClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 433,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSidebarHeaderClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 429,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSidebarNavigationClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "SidebarItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 421,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "SidebarItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSidebarToggleClick",
                    "args": [
                        {
                            "name": "collapsed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 425,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "collapsed",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onUserMenuClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 403,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onWidgetClick",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 437,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "OsHeaderComponent",
                    "type": "component"
                },
                {
                    "name": "OsFooterComponent",
                    "type": "component"
                },
                {
                    "name": "OsSidebarComponent",
                    "type": "component"
                },
                {
                    "name": "OsBudgetSummaryComponent",
                    "type": "component"
                },
                {
                    "name": "OsGoalProgressComponent",
                    "type": "component"
                },
                {
                    "name": "OsTransactionListComponent",
                    "type": "component"
                },
                {
                    "name": "OsCategoryManagerComponent",
                    "type": "component"
                },
                {
                    "name": "OsBudgetTrackerComponent",
                    "type": "component"
                },
                {
                    "name": "OsGoalTrackerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, computed, input, output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  OsHeaderComponent,\n  HeaderNavigationItem,\n  HeaderAction,\n} from '../../organisms/os-header/os-header.component';\nimport { OsFooterComponent } from '../../organisms/os-footer/os-footer.component';\nimport { OsSidebarComponent, SidebarItem } from '../../organisms/os-sidebar/os-sidebar.component';\nimport {\n  OsBudgetSummaryComponent,\n  BudgetSummaryData,\n} from '../../organisms/os-budget-summary/os-budget-summary.component';\nimport {\n  OsGoalProgressComponent,\n  GoalProgressData,\n} from '../../organisms/os-goal-progress/os-goal-progress.component';\nimport { OsTransactionListComponent } from '../../organisms/os-transaction-list/os-transaction-list.component';\nimport { OsCategoryManagerComponent } from '../../organisms/os-category-manager/os-category-manager.component';\nimport {\n  OsBudgetTrackerComponent,\n  BudgetTrackerData,\n} from '../../organisms/os-budget-tracker/os-budget-tracker.component';\nimport {\n  OsGoalTrackerComponent,\n  GoalTrackerData,\n} from '../../organisms/os-goal-tracker/os-goal-tracker.component';\n\nexport interface DashboardWidget {\n  id: string;\n  title: string;\n  type:\n    | 'budget-summary'\n    | 'goal-progress'\n    | 'transaction-list'\n    | 'category-manager'\n    | 'budget-tracker'\n    | 'goal-tracker';\n  size: 'small' | 'medium' | 'large' | 'full';\n  position: { row: number; col: number };\n  data?: Record<string, unknown>;\n}\n\nexport interface DashboardLayout {\n  variant: 'default' | 'compact' | 'extended';\n  size: 'small' | 'medium' | 'large';\n  theme: 'light' | 'dark';\n  showHeader: boolean;\n  showSidebar: boolean;\n  showFooter: boolean;\n  sidebarCollapsed: boolean;\n}\n\n@Component({\n  selector: 'os-dashboard-template',\n  template: `\n    <div [class]=\"dashboardClass()\" [attr.aria-label]=\"ariaLabel()\">\n      @if (layout().showHeader) {\n      <os-header\n        [variant]=\"headerVariant()\"\n        [size]=\"layout().size\"\n        [theme]=\"layout().theme\"\n        [logo]=\"headerLogo()\"\n        (navigationClick)=\"onNavigationClick($event)\"\n        (userMenuItemClick)=\"onUserMenuClick($event)\"\n        (actionClick)=\"onActionClick($event)\"\n        (mobileMenuToggle)=\"onMobileMenuToggle($event)\"\n      />\n      }\n\n      <div class=\"os-dashboard-template__content\">\n        @if (layout().showSidebar) {\n        <os-sidebar\n          [items]=\"sidebarNavigation()\"\n          [variant]=\"sidebarVariant()\"\n          [size]=\"layout().size\"\n          [theme]=\"layout().theme\"\n          [collapsed]=\"layout().sidebarCollapsed\"\n          [title]=\"sidebarTitle()\"\n          [logo]=\"sidebarLogo()\"\n          [showHeader]=\"sidebarShowHeader()\"\n          [showFooter]=\"sidebarShowFooter()\"\n          [showToggleButton]=\"sidebarShowToggleButton()\"\n          (itemClick)=\"onSidebarNavigationClick($event)\"\n          (collapseChange)=\"onSidebarToggleClick($event)\"\n        />\n        }\n        <main class=\"os-dashboard-template__main\" [class]=\"mainClass()\">\n          @if (loading()) {\n          <div class=\"os-dashboard-template__loading\">\n            <div class=\"os-dashboard-template__spinner\"></div>\n            <p>Carregando dashboard...</p>\n          </div>\n          } @else if (emptyState() && widgets().length === 0) {\n          <div class=\"os-dashboard-template__empty\">\n            <div class=\"os-dashboard-template__empty-icon\">📊</div>\n            <h3>{{ emptyState()!.message }}</h3>\n            @if (emptyState()!.action) {\n            <button\n              class=\"os-dashboard-template__empty-action\"\n              (click)=\"onEmptyStateActionClick(emptyState()!.action!.action)\"\n            >\n              {{ emptyState()!.action!.label }}\n            </button>\n            }\n          </div>\n          } @else {\n          <div class=\"os-dashboard-template__grid\" [class]=\"gridClass()\">\n            @for (widget of widgets(); track widget.id) {\n            <div\n              class=\"os-dashboard-template__widget\"\n              [class]=\"widgetClass(widget)\"\n              [style.grid-column]=\"getWidgetGridColumn(widget)\"\n              [style.grid-row]=\"getWidgetGridRow(widget)\"\n              [attr.aria-label]=\"widget.title\"\n            >\n              @switch (widget.type) { @case ('budget-summary') {\n              <os-budget-summary\n                [variant]=\"getBudgetSummaryVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [budgetData]=\"getBudgetSummaryData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('goal-progress') {\n              <os-goal-progress\n                [variant]=\"getGoalProgressVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [goalData]=\"getGoalProgressData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('transaction-list') {\n              <os-transaction-list\n                [variant]=\"getTransactionListVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('category-manager') {\n              <os-category-manager\n                [variant]=\"getCategoryManagerVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('budget-tracker') {\n              <os-budget-tracker\n                [variant]=\"getBudgetTrackerVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [budgetData]=\"getBudgetTrackerData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } @case ('goal-tracker') {\n              <os-goal-tracker\n                [variant]=\"getGoalTrackerVariant(widget)\"\n                [size]=\"getWidgetSizeTyped(widget)\"\n                [goalData]=\"getGoalTrackerData(widget)\"\n                (click)=\"onWidgetClick(widget.type, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n          }\n        </main>\n      </div>\n\n      @if (layout().showFooter) {\n      <os-footer\n        [variant]=\"footerVariant()\"\n        [size]=\"layout().size\"\n        [theme]=\"layout().theme\"\n        (linkClick)=\"onFooterLinkClick()\"\n        (socialClick)=\"onFooterSocialClick()\"\n      />\n      }\n    </div>\n  `,\n  styleUrls: ['./os-dashboard-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsHeaderComponent,\n    OsFooterComponent,\n    OsSidebarComponent,\n    OsBudgetSummaryComponent,\n    OsGoalProgressComponent,\n    OsTransactionListComponent,\n    OsCategoryManagerComponent,\n    OsBudgetTrackerComponent,\n    OsGoalTrackerComponent,\n  ],\n})\nexport class OsDashboardTemplateComponent {\n  layout = input<DashboardLayout>({\n    variant: 'default',\n    size: 'medium',\n    theme: 'light',\n    showHeader: true,\n    showSidebar: true,\n    showFooter: true,\n    sidebarCollapsed: false,\n  });\n\n  widgets = input<DashboardWidget[]>([]);\n  loading = input<boolean>(false);\n  emptyState = input<{ message: string; action?: { label: string; action: string } } | null>(null);\n  headerLogo = input<string>('');\n  headerNavigation = input<{ label: string; route?: string; href?: string; icon?: string }[]>([]);\n  headerUser = input<{ name: string; avatar?: string; email?: string } | null>(null);\n  headerActions = input<{ label: string; icon?: string; action: string }[]>([]);\n  headerMobileMenu = input<{ label: string; route?: string; href?: string; icon?: string }[]>([]);\n  sidebarNavigation = input<SidebarItem[]>([]);\n  sidebarTitle = input<string>('');\n  sidebarLogo = input<string>('');\n  sidebarShowHeader = input<boolean>(true);\n  sidebarShowFooter = input<boolean>(false);\n  sidebarShowToggleButton = input<boolean>(true);\n  footerLinks = input<{ label: string; route?: string; href?: string; external?: boolean }[]>([]);\n  footerCopyright = input<string>('');\n  footerSocial = input<{ platform: string; url: string; icon?: string }[]>([]);\n\n  navigationClick = output<{ item: string; route?: string; href?: string }>();\n  userMenuClick = output<{ action: string; user: { name: string; email?: string } }>();\n  actionClick = output<{ action: string; label: string }>();\n  mobileMenuToggle = output<{ open: boolean }>();\n  sidebarNavigationClick = output<SidebarItem>();\n  sidebarToggleClick = output<{ collapsed: boolean }>();\n  sidebarHeaderClick = output<{ action: string }>();\n  sidebarFooterClick = output<{ action: string }>();\n  widgetClick = output<{ type: string; data: unknown; widget: DashboardWidget }>();\n  emptyStateActionClick = output<{ action: string }>();\n  footerLinkClick = output<{ label: string; route?: string; href?: string }>();\n  footerSocialClick = output<{ platform: string; url: string }>();\n\n  public dashboardClass = computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template',\n      `os-dashboard-template--${layout.variant}`,\n      `os-dashboard-template--${layout.size}`,\n      `os-dashboard-template--${layout.theme}`,\n      layout.sidebarCollapsed ? 'os-dashboard-template--sidebar-collapsed' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public mainClass = computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template__main',\n      layout.showSidebar ? 'os-dashboard-template__main--with-sidebar' : '',\n      layout.sidebarCollapsed ? 'os-dashboard-template__main--sidebar-collapsed' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public gridClass = computed(() => {\n    const layout = this.layout();\n    return [\n      'os-dashboard-template__grid',\n      `os-dashboard-template__grid--${layout.variant}`,\n      `os-dashboard-template__grid--${layout.size}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public ariaLabel = computed(() => {\n    return `Dashboard template with ${this.widgets().length} widgets`;\n  });\n\n  public headerVariant = computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'compact' : 'default';\n  });\n\n  public sidebarVariant = computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'minimal' : 'default';\n  });\n\n  public footerVariant = computed(() => {\n    const layout = this.layout();\n    return layout.variant === 'compact' ? 'minimal' : 'default';\n  });\n\n  public widgetClass = (widget: DashboardWidget) => {\n    return [\n      'os-dashboard-template__widget',\n      `os-dashboard-template__widget--${widget.type}`,\n      `os-dashboard-template__widget--${widget.size}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  };\n\n  public getWidgetVariant = (widget: DashboardWidget): string => {\n    return ((widget.data as Record<string, unknown>)?.['variant'] as string) || 'default';\n  };\n\n  public getWidgetSize = (widget: DashboardWidget): string => {\n    const sizeMap: Record<string, string> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n      full: 'large',\n    };\n    return sizeMap[widget.size] || 'medium';\n  };\n\n  public getWidgetData = (widget: DashboardWidget): Record<string, unknown> => {\n    return widget.data || {};\n  };\n\n  public getBudgetSummaryData = (widget: DashboardWidget): BudgetSummaryData => {\n    return widget.data as unknown as BudgetSummaryData;\n  };\n\n  public getGoalProgressData = (widget: DashboardWidget): GoalProgressData => {\n    return widget.data as unknown as GoalProgressData;\n  };\n\n  public getBudgetTrackerData = (widget: DashboardWidget): BudgetTrackerData => {\n    return widget.data as unknown as BudgetTrackerData;\n  };\n\n  public getGoalTrackerData = (widget: DashboardWidget): GoalTrackerData => {\n    return widget.data as unknown as GoalTrackerData;\n  };\n\n  public getBudgetSummaryVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getGoalProgressVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' | 'minimal' => {\n    return (\n      (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed' | 'minimal') || 'default'\n    );\n  };\n\n  public getTransactionListVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getCategoryManagerVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getBudgetTrackerVariant = (\n    widget: DashboardWidget\n  ): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getGoalTrackerVariant = (widget: DashboardWidget): 'default' | 'compact' | 'detailed' => {\n    return (this.getWidgetVariant(widget) as 'default' | 'compact' | 'detailed') || 'default';\n  };\n\n  public getWidgetSizeTyped = (widget: DashboardWidget): 'small' | 'medium' | 'large' => {\n    return (this.getWidgetSize(widget) as 'small' | 'medium' | 'large') || 'medium';\n  };\n\n  public getWidgetGridColumn = (widget: DashboardWidget): string => {\n    const colSpan = this.getWidgetColumnSpan(widget);\n    const startCol = widget.position.col;\n    const endCol = startCol + colSpan;\n    return `${startCol} / ${endCol}`;\n  };\n\n  public getWidgetGridRow = (widget: DashboardWidget): string => {\n    return `${widget.position.row}`;\n  };\n\n  private getWidgetColumnSpan = (widget: DashboardWidget): number => {\n    const sizeMap: Record<string, number> = {\n      small: 3, // 3 colunas\n      medium: 6, // 6 colunas\n      large: 9, // 9 colunas\n      full: 12, // 12 colunas (toda a largura)\n    };\n    return sizeMap[widget.size] || 6;\n  };\n\n  public onNavigationClick(event: { item: HeaderNavigationItem; event: MouseEvent }) {\n    this.navigationClick.emit({\n      item: event.item.label,\n      route: event.item.route,\n      href: undefined,\n    });\n  }\n\n  public onUserMenuClick(event: { item: { action?: string; label?: string }; event: MouseEvent }) {\n    this.userMenuClick.emit({\n      action: event.item.action || 'unknown',\n      user: { name: 'User', email: undefined },\n    });\n  }\n\n  public onActionClick(event: { action: HeaderAction; event: MouseEvent }) {\n    this.actionClick.emit({\n      action: event.action.label,\n      label: event.action.label,\n    });\n  }\n\n  public onMobileMenuToggle(open: boolean) {\n    this.mobileMenuToggle.emit({ open });\n  }\n\n  public onSidebarNavigationClick(event: SidebarItem) {\n    this.sidebarNavigationClick.emit(event);\n  }\n\n  public onSidebarToggleClick(collapsed: boolean) {\n    this.sidebarToggleClick.emit({ collapsed });\n  }\n\n  public onSidebarHeaderClick(event: { action: string }) {\n    this.sidebarHeaderClick.emit(event);\n  }\n\n  public onSidebarFooterClick(event: { action: string }) {\n    this.sidebarFooterClick.emit(event);\n  }\n\n  public onWidgetClick(type: string, event: MouseEvent) {\n    const widget = this.widgets().find((w) => w.type === type);\n    this.widgetClick.emit({ type, data: event, widget: widget! });\n  }\n\n  public onEmptyStateActionClick(action: string) {\n    this.emptyStateActionClick.emit({ action });\n  }\n\n  public onFooterLinkClick() {\n    this.footerLinkClick.emit({\n      label: 'Link',\n      route: undefined,\n      href: undefined,\n    });\n  }\n\n  public onFooterSocialClick() {\n    this.footerSocialClick.emit({\n      platform: 'social',\n      url: '#',\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-dashboard-template {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #fff;\n  color: #1f2937;\n\n  &--dark {\n    background-color: #111827;\n    color: #fff;\n\n    .os-dashboard-template__widget {\n      background-color: #1f2937;\n      color: #fff;\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n\n      &:hover {\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\n      }\n    }\n\n    .os-dashboard-template__widget-placeholder {\n      color: #9ca3af;\n\n      h3 {\n        color: #e5e7eb;\n      }\n\n      p {\n        color: #6b7280;\n      }\n    }\n  }\n\n  &__content {\n    display: flex;\n    flex: 1;\n    min-height: 0;\n  }\n\n  &__main {\n    flex: 1;\n    padding: 1rem;\n    overflow-y: auto;\n    transition: margin-left 0.3s ease;\n\n    &--with-sidebar {\n      margin-left: 0;\n    }\n\n    &--sidebar-collapsed {\n      margin-left: 0;\n    }\n  }\n\n  &__grid {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    gap: 1rem;\n    width: 100%;\n  }\n\n  &__widget {\n    display: flex;\n    flex-direction: column;\n    background-color: #fff;\n    border-radius: 0.5rem;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n    transition: all 0.3s ease;\n\n    &:hover {\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      transform: translateY(-2px);\n    }\n\n    &--small {\n      min-height: 200px;\n    }\n    &--medium {\n      min-height: 300px;\n    }\n    &--large {\n      min-height: 400px;\n    }\n    &--full {\n      grid-column: 1 / -1;\n      min-height: 500px;\n    }\n  }\n\n  &__widget-placeholder {\n    padding: 1rem;\n    text-align: center;\n    color: #6b7280;\n\n    h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 1.125rem;\n      font-weight: 600;\n      color: #374151;\n    }\n\n    p {\n      margin: 0;\n      font-size: 0.875rem;\n      color: #9ca3af;\n    }\n  }\n\n  &__loading {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 3rem 1rem;\n    text-align: center;\n    color: #6b7280;\n\n    p {\n      margin: 1rem 0 0 0;\n      font-size: 1rem;\n    }\n  }\n\n  &__spinner {\n    width: 2rem;\n    height: 2rem;\n    border: 3px solid #e5e7eb;\n    border-top: 3px solid #3b82f6;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n\n  &__empty {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 3rem 1rem;\n    text-align: center;\n    color: #6b7280;\n\n    h3 {\n      margin: 1rem 0;\n      font-size: 1.25rem;\n      font-weight: 600;\n      color: #374151;\n    }\n  }\n\n  &__empty-icon {\n    font-size: 3rem;\n    margin-bottom: 1rem;\n  }\n\n  &__empty-action {\n    margin-top: 1rem;\n    padding: 0.75rem 1.5rem;\n    background-color: #3b82f6;\n    color: white;\n    border: none;\n    border-radius: 0.5rem;\n    font-size: 0.875rem;\n    font-weight: 500;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n\n    &:hover {\n      background-color: #2563eb;\n    }\n\n    &:focus {\n      outline: 2px solid #3b82f6;\n      outline-offset: 2px;\n    }\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@media (max-width: 1200px) {\n  .os-dashboard-template {\n    &__grid {\n      grid-template-columns: repeat(8, 1fr);\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .os-dashboard-template {\n    &__main {\n      padding: 0.5rem;\n    }\n    &__grid {\n      grid-template-columns: 1fr;\n      gap: 0.5rem;\n    }\n    &__widget {\n      min-height: 200px;\n      grid-column: 1 / -1 !important;\n    }\n  }\n}\n",
                    "styleUrl": "./os-dashboard-template.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsDataGridComponent",
            "id": "component-OsDataGridComponent-a4be0db578bd437bed30d42dcecea47506433023cece76ddadb15d6f06c1fc7e9ee42513b5a7a6ec14e191784b37b585828645a9bbe8735a475b212f079060dc",
            "file": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-data-grid",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"os-data-grid\" [class]=\"dataGridClasses()\">\n  <!-- Header -->\n  @if (title() || showHeaderActions()) {\n  <div class=\"os-data-grid__header\">\n    @if (title()) {\n    <div class=\"os-data-grid__title-section\">\n      <h2 class=\"os-data-grid__title\">{{ title() }}</h2>\n      @if (subtitle()) {\n      <p class=\"os-data-grid__subtitle\">{{ subtitle() }}</p>\n      }\n    </div>\n    } @if (showHeaderActions()) {\n    <div class=\"os-data-grid__header-actions\">\n      @if (showRefreshButton()) {\n      <os-button\n        variant=\"tertiary\"\n        [size]=\"getButtonSize()\"\n        icon=\"refresh\"\n        [loading]=\"isLoading()\"\n        (buttonClick)=\"onRefresh()\"\n        [attr.aria-label]=\"'Atualizar dados'\"\n      >\n        Atualizar\n      </os-button>\n      } @if (showExportButton()) {\n      <os-button\n        variant=\"secondary\"\n        [size]=\"getButtonSize()\"\n        icon=\"download\"\n        (buttonClick)=\"onExport()\"\n        [attr.aria-label]=\"'Exportar dados'\"\n      >\n        Exportar\n      </os-button>\n      } @if (showAddButton()) {\n      <os-button\n        variant=\"primary\"\n        [size]=\"getButtonSize()\"\n        icon=\"add\"\n        (buttonClick)=\"onAdd()\"\n        [attr.aria-label]=\"'Adicionar novo item'\"\n      >\n        {{ addButtonText() }}\n      </os-button>\n      }\n    </div>\n    }\n  </div>\n  }\n\n  <!-- Filters -->\n  @if (showFilters() && filterOptions().length > 0) {\n  <div class=\"os-data-grid__filters\">\n    <os-filter-bar\n      [variant]=\"getFilterBarVariant()\"\n      [size]=\"getFilterBarSize()\"\n      [hasActiveFilters]=\"hasActiveFilters()\"\n      (clear)=\"onClearFilters()\"\n      (apply)=\"onApplyFilters()\"\n    >\n      <div class=\"os-data-grid__filter-content\">\n        @for (option of filterOptions(); track option.key) {\n        <div class=\"os-data-grid__filter-item\">\n          <label [for]=\"'filter-' + option.key\" class=\"os-data-grid__filter-label\">{{\n            option.label\n          }}</label>\n          @switch (option.type) { @case ('text') {\n          <input\n            [id]=\"'filter-' + option.key\"\n            type=\"text\"\n            class=\"os-data-grid__filter-input\"\n            [placeholder]=\"'Filtrar por ' + option.label\"\n            [value]=\"getFilterValue(option.key)\"\n            (input)=\"onFilterChange(option.key, $event)\"\n          />\n          } @case ('select') {\n          <select\n            class=\"os-data-grid__filter-select\"\n            [value]=\"getFilterValue(option.key)\"\n            (change)=\"onFilterChange(option.key, $event)\"\n          >\n            <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n            @for (opt of option.options; track opt.value) {\n            <option [value]=\"opt.value\">{{ opt.label }}</option>\n            }\n          </select>\n          } @case ('date') {\n          <input\n            type=\"date\"\n            class=\"os-data-grid__filter-input\"\n            [value]=\"getFilterValue(option.key)\"\n            (change)=\"onFilterChange(option.key, $event)\"\n          />\n          } @case ('number') {\n          <input\n            type=\"number\"\n            class=\"os-data-grid__filter-input\"\n            [placeholder]=\"'Filtrar por ' + option.label\"\n            [value]=\"getFilterValue(option.key)\"\n            (input)=\"onFilterChange(option.key, $event)\"\n          />\n          } }\n        </div>\n        }\n      </div>\n    </os-filter-bar>\n  </div>\n  }\n\n  <!-- Data Table -->\n  <div class=\"os-data-grid__table\">\n    <os-data-table\n      [data]=\"filteredData()\"\n      [columns]=\"columns()\"\n      [actions]=\"tableActions()\"\n      [size]=\"getTableSize()\"\n      [variant]=\"getTableVariant()\"\n      [showPagination]=\"showPagination()\"\n      [showNoData]=\"showNoData()\"\n      [noDataText]=\"noDataText()\"\n      [pageSize]=\"pagination().pageSize\"\n      [pageIndex]=\"pagination().page\"\n      [totalItems]=\"totalItems()\"\n      [pageSizeOptions]=\"pageSizeOptions()\"\n      [showFirstLastButtons]=\"showFirstLastButtons()\"\n      (rowClick)=\"onRowClick($event)\"\n      (actionClick)=\"onTableActionClick($event)\"\n      (sortChange)=\"onSortChange($event)\"\n      (pageChange)=\"onPageChange($event)\"\n    />\n  </div>\n\n  <!-- Footer -->\n  @if (showFooter()) {\n  <div class=\"os-data-grid__footer\">\n    <div class=\"os-data-grid__footer-info\">\n      @if (showItemCount()) {\n      <span class=\"os-data-grid__item-count\">\n        {{ getItemCountText() }}\n      </span>\n      } @if (showLastUpdated()) {\n      <span class=\"os-data-grid__last-updated\">\n        Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n      </span>\n      }\n    </div>\n\n    @if (showFooterActions()) {\n    <div class=\"os-data-grid__footer-actions\">\n      <ng-content select=\"[slot=footer-actions]\"></ng-content>\n    </div>\n    }\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "addButtonText",
                    "defaultValue": "'Adicionar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 218,
                    "required": false
                },
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableColumn[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 205,
                    "required": false
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, unknown>[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 204,
                    "required": false
                },
                {
                    "name": "filterOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFilterOption[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 206,
                    "required": false
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 233,
                    "required": false
                },
                {
                    "name": "lastUpdated",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 234,
                    "required": false
                },
                {
                    "name": "noDataText",
                    "defaultValue": "'Nenhum dado encontrado'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 222,
                    "required": false
                },
                {
                    "name": "pageSizeOptions",
                    "defaultValue": "[5, 10, 25, 50]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 229,
                    "required": false
                },
                {
                    "name": "showAddButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 217,
                    "required": false
                },
                {
                    "name": "showExportButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 216,
                    "required": false
                },
                {
                    "name": "showFilters",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 219,
                    "required": false
                },
                {
                    "name": "showFirstLastButtons",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 230,
                    "required": false
                },
                {
                    "name": "showFooter",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 223,
                    "required": false
                },
                {
                    "name": "showFooterActions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 226,
                    "required": false
                },
                {
                    "name": "showHeaderActions",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 214,
                    "required": false
                },
                {
                    "name": "showItemCount",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 224,
                    "required": false
                },
                {
                    "name": "showLastUpdated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 225,
                    "required": false
                },
                {
                    "name": "showNoData",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 221,
                    "required": false
                },
                {
                    "name": "showPagination",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 220,
                    "required": false
                },
                {
                    "name": "showRefreshButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 215,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataGridSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 210,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 209,
                    "required": false
                },
                {
                    "name": "tableActions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableAction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 207,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 208,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataGridVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 211,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "add",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 241,
                    "required": false
                },
                {
                    "name": "export",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 240,
                    "required": false
                },
                {
                    "name": "filterChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataGridFilter[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 242,
                    "required": false
                },
                {
                    "name": "pageChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataGridPagination",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 244,
                    "required": false
                },
                {
                    "name": "refresh",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 239,
                    "required": false
                },
                {
                    "name": "rowClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, unknown>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 237,
                    "required": false
                },
                {
                    "name": "sortChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataGridSort",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 243,
                    "required": false
                },
                {
                    "name": "tableActionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableAction",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 238,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "dataGridClasses",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 309
                },
                {
                    "name": "filteredData",
                    "defaultValue": "computed(() => {\n    let result = [...this.data()];\n\n    // Apply filters\n    const activeFilters = this.filters().filter(\n      (f) => f.value !== null && f.value !== undefined && f.value !== ''\n    );\n    if (activeFilters.length > 0) {\n      result = result.filter((item) => {\n        return activeFilters.every((filter) => {\n          const itemValue = this.getNestedValue(item, filter.key);\n          return this.matchesFilter(itemValue, filter.value, filter.operator || 'contains');\n        });\n      });\n    }\n\n    // Apply sorting\n    if (this.sort()) {\n      result = this.applySorting(result, this.sort()!);\n    }\n\n    // Apply pagination\n    const startIndex = this.pagination().page * this.pagination().pageSize;\n    const endIndex = startIndex + this.pagination().pageSize;\n\n    return result.slice(startIndex, endIndex);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 256
                },
                {
                    "name": "filters",
                    "defaultValue": "signal<OsDataGridFilter[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 247,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getButtonSize",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 327
                },
                {
                    "name": "getFilterBarSize",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 345
                },
                {
                    "name": "getFilterBarVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 336
                },
                {
                    "name": "getFilterValue",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 372
                },
                {
                    "name": "getItemCountText",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 377
                },
                {
                    "name": "getTableSize",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 354
                },
                {
                    "name": "getTableVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 363
                },
                {
                    "name": "hasActiveFilters",
                    "defaultValue": "computed(() => {\n    return this.filters().some((f) => f.value !== null && f.value !== undefined && f.value !== '');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 304
                },
                {
                    "name": "pagination",
                    "defaultValue": "signal<OsDataGridPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 249,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "sort",
                    "defaultValue": "signal<OsDataGridSort | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 248,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "totalItems",
                    "defaultValue": "computed(() => {\n    let result = [...this.data()];\n\n    // Apply filters\n    const activeFilters = this.filters().filter(\n      (f) => f.value !== null && f.value !== undefined && f.value !== ''\n    );\n    if (activeFilters.length > 0) {\n      result = result.filter((item) => {\n        return activeFilters.every((filter) => {\n          const itemValue = this.getNestedValue(item, filter.key);\n          return this.matchesFilter(itemValue, filter.value, filter.operator || 'contains');\n        });\n      });\n    }\n\n    return result.length;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 285
                }
            ],
            "methodsClass": [
                {
                    "name": "applySorting",
                    "args": [
                        {
                            "name": "data",
                            "type": "Record<string, >[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sort",
                            "type": "OsDataGridSort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Record[]",
                    "typeParameters": [],
                    "line": 503,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Record<string, >[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sort",
                            "type": "OsDataGridSort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNestedValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "",
                    "typeParameters": [],
                    "line": 467,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "matchesFilter",
                    "args": [
                        {
                            "name": "itemValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filterValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "operator",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 473,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "itemValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filterValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "operator",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 398,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onApplyFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 420,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClearFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 415,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onExport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 394,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFilterChange",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event | literal type | ",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 410,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "Event | literal type | ",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 434,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRefresh",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 390,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRowClick",
                    "args": [
                        {
                            "name": "row",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 402,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSortChange",
                    "args": [
                        {
                            "name": "sort",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 424,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTableActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "OsDataTableAction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 406,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "OsDataTableAction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateFilter",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string | number | Date | boolean | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 444,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string | number | Date | boolean | null | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsDataTableComponent",
                    "type": "component"
                },
                {
                    "name": "OsFilterBarComponent",
                    "type": "component"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output, signal } from '@angular/core';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport {\n  OsDataTableAction,\n  OsDataTableColumn,\n  OsDataTableComponent,\n} from '../../molecules/os-data-table/os-data-table.component';\nimport {\n  OsFilterBarComponent,\n  OsFilterOption,\n} from '../../molecules/os-filter-bar/os-filter-bar.component';\n\nexport type OsDataGridSize = 'small' | 'medium' | 'large';\nexport type OsDataGridVariant = 'default' | 'compact' | 'detailed';\n\nexport interface OsDataGridFilter {\n  key: string;\n  value: string | number | Date | boolean;\n  operator?: 'equals' | 'contains' | 'startsWith' | 'endsWith' | 'gt' | 'lt' | 'gte' | 'lte';\n}\n\nexport interface OsDataGridSort {\n  column: string;\n  direction: 'asc' | 'desc';\n}\n\nexport interface OsDataGridPagination {\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\n@Component({\n  selector: 'os-data-grid',\n  standalone: true,\n  imports: [CommonModule, OsDataTableComponent, OsFilterBarComponent, OsButtonComponent],\n  template: `\n    <div class=\"os-data-grid\" [class]=\"dataGridClasses()\">\n      <!-- Header -->\n      @if (title() || showHeaderActions()) {\n      <div class=\"os-data-grid__header\">\n        @if (title()) {\n        <div class=\"os-data-grid__title-section\">\n          <h2 class=\"os-data-grid__title\">{{ title() }}</h2>\n          @if (subtitle()) {\n          <p class=\"os-data-grid__subtitle\">{{ subtitle() }}</p>\n          }\n        </div>\n        } @if (showHeaderActions()) {\n        <div class=\"os-data-grid__header-actions\">\n          @if (showRefreshButton()) {\n          <os-button\n            variant=\"tertiary\"\n            [size]=\"getButtonSize()\"\n            icon=\"refresh\"\n            [loading]=\"isLoading()\"\n            (buttonClick)=\"onRefresh()\"\n            [attr.aria-label]=\"'Atualizar dados'\"\n          >\n            Atualizar\n          </os-button>\n          } @if (showExportButton()) {\n          <os-button\n            variant=\"secondary\"\n            [size]=\"getButtonSize()\"\n            icon=\"download\"\n            (buttonClick)=\"onExport()\"\n            [attr.aria-label]=\"'Exportar dados'\"\n          >\n            Exportar\n          </os-button>\n          } @if (showAddButton()) {\n          <os-button\n            variant=\"primary\"\n            [size]=\"getButtonSize()\"\n            icon=\"add\"\n            (buttonClick)=\"onAdd()\"\n            [attr.aria-label]=\"'Adicionar novo item'\"\n          >\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <!-- Filters -->\n      @if (showFilters() && filterOptions().length > 0) {\n      <div class=\"os-data-grid__filters\">\n        <os-filter-bar\n          [variant]=\"getFilterBarVariant()\"\n          [size]=\"getFilterBarSize()\"\n          [hasActiveFilters]=\"hasActiveFilters()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        >\n          <div class=\"os-data-grid__filter-content\">\n            @for (option of filterOptions(); track option.key) {\n            <div class=\"os-data-grid__filter-item\">\n              <label [for]=\"'filter-' + option.key\" class=\"os-data-grid__filter-label\">{{\n                option.label\n              }}</label>\n              @switch (option.type) { @case ('text') {\n              <input\n                [id]=\"'filter-' + option.key\"\n                type=\"text\"\n                class=\"os-data-grid__filter-input\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('select') {\n              <select\n                class=\"os-data-grid__filter-select\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              >\n                <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n                @for (opt of option.options; track opt.value) {\n                <option [value]=\"opt.value\">{{ opt.label }}</option>\n                }\n              </select>\n              } @case ('date') {\n              <input\n                type=\"date\"\n                class=\"os-data-grid__filter-input\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('number') {\n              <input\n                type=\"number\"\n                class=\"os-data-grid__filter-input\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n        </os-filter-bar>\n      </div>\n      }\n\n      <!-- Data Table -->\n      <div class=\"os-data-grid__table\">\n        <os-data-table\n          [data]=\"filteredData()\"\n          [columns]=\"columns()\"\n          [actions]=\"tableActions()\"\n          [size]=\"getTableSize()\"\n          [variant]=\"getTableVariant()\"\n          [showPagination]=\"showPagination()\"\n          [showNoData]=\"showNoData()\"\n          [noDataText]=\"noDataText()\"\n          [pageSize]=\"pagination().pageSize\"\n          [pageIndex]=\"pagination().page\"\n          [totalItems]=\"totalItems()\"\n          [pageSizeOptions]=\"pageSizeOptions()\"\n          [showFirstLastButtons]=\"showFirstLastButtons()\"\n          (rowClick)=\"onRowClick($event)\"\n          (actionClick)=\"onTableActionClick($event)\"\n          (sortChange)=\"onSortChange($event)\"\n          (pageChange)=\"onPageChange($event)\"\n        />\n      </div>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-data-grid__footer\">\n        <div class=\"os-data-grid__footer-info\">\n          @if (showItemCount()) {\n          <span class=\"os-data-grid__item-count\">\n            {{ getItemCountText() }}\n          </span>\n          } @if (showLastUpdated()) {\n          <span class=\"os-data-grid__last-updated\">\n            Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n\n        @if (showFooterActions()) {\n        <div class=\"os-data-grid__footer-actions\">\n          <ng-content select=\"[slot=footer-actions]\"></ng-content>\n        </div>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-data-grid.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-data-grid-host',\n  },\n})\nexport class OsDataGridComponent {\n  // Inputs\n  data = input<Record<string, unknown>[]>([]);\n  columns = input<OsDataTableColumn[]>([]);\n  filterOptions = input<OsFilterOption[]>([]);\n  tableActions = input<OsDataTableAction[]>([]);\n  title = input<string>('');\n  subtitle = input<string>('');\n  size = input<OsDataGridSize>('medium');\n  variant = input<OsDataGridVariant>('default');\n\n  // Display options\n  showHeaderActions = input<boolean>(true);\n  showRefreshButton = input<boolean>(true);\n  showExportButton = input<boolean>(true);\n  showAddButton = input<boolean>(true);\n  addButtonText = input<string>('Adicionar');\n  showFilters = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showNoData = input<boolean>(true);\n  noDataText = input<string>('Nenhum dado encontrado');\n  showFooter = input<boolean>(true);\n  showItemCount = input<boolean>(true);\n  showLastUpdated = input<boolean>(true);\n  showFooterActions = input<boolean>(false);\n\n  // Pagination\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  // Loading state\n  isLoading = input<boolean>(false);\n  lastUpdated = input<Date>(new Date());\n\n  // Outputs\n  rowClick = output<Record<string, unknown>>();\n  tableActionClick = output<OsDataTableAction>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  filterChange = output<OsDataGridFilter[]>();\n  sortChange = output<OsDataGridSort>();\n  pageChange = output<OsDataGridPagination>();\n\n  // Internal state\n  private filters = signal<OsDataGridFilter[]>([]);\n  private sort = signal<OsDataGridSort | null>(null);\n  protected pagination = signal<OsDataGridPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  });\n\n  // Computed properties\n  filteredData = computed(() => {\n    let result = [...this.data()];\n\n    // Apply filters\n    const activeFilters = this.filters().filter(\n      (f) => f.value !== null && f.value !== undefined && f.value !== ''\n    );\n    if (activeFilters.length > 0) {\n      result = result.filter((item) => {\n        return activeFilters.every((filter) => {\n          const itemValue = this.getNestedValue(item, filter.key);\n          return this.matchesFilter(itemValue, filter.value, filter.operator || 'contains');\n        });\n      });\n    }\n\n    // Apply sorting\n    if (this.sort()) {\n      result = this.applySorting(result, this.sort()!);\n    }\n\n    // Apply pagination\n    const startIndex = this.pagination().page * this.pagination().pageSize;\n    const endIndex = startIndex + this.pagination().pageSize;\n\n    return result.slice(startIndex, endIndex);\n  });\n\n  // Computed for total items\n  totalItems = computed(() => {\n    let result = [...this.data()];\n\n    // Apply filters\n    const activeFilters = this.filters().filter(\n      (f) => f.value !== null && f.value !== undefined && f.value !== ''\n    );\n    if (activeFilters.length > 0) {\n      result = result.filter((item) => {\n        return activeFilters.every((filter) => {\n          const itemValue = this.getNestedValue(item, filter.key);\n          return this.matchesFilter(itemValue, filter.value, filter.operator || 'contains');\n        });\n      });\n    }\n\n    return result.length;\n  });\n\n  hasActiveFilters = computed(() => {\n    return this.filters().some((f) => f.value !== null && f.value !== undefined && f.value !== '');\n  });\n\n  // Methods\n  dataGridClasses = () => {\n    const classes = ['os-data-grid'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-data-grid--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-data-grid--${this.variant()}`);\n    }\n\n    if (this.isLoading()) {\n      classes.push('os-data-grid--loading');\n    }\n\n    return classes.join(' ');\n  };\n\n  getButtonSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getFilterBarVariant = () => {\n    const variantMap: Record<OsDataGridVariant, 'default' | 'compact' | 'expanded'> = {\n      default: 'default',\n      compact: 'compact',\n      detailed: 'expanded',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getFilterBarSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getTableSize = () => {\n    const sizeMap: Record<OsDataGridSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getTableVariant = () => {\n    const variantMap: Record<OsDataGridVariant, 'default' | 'striped' | 'bordered'> = {\n      default: 'default',\n      compact: 'striped',\n      detailed: 'bordered',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getFilterValue = (key: string) => {\n    const filter = this.filters().find((f) => f.key === key);\n    return filter?.value || '';\n  };\n\n  getItemCountText = () => {\n    const total = this.totalItems();\n    const start = this.pagination().page * this.pagination().pageSize + 1;\n    const end = Math.min(start + this.pagination().pageSize - 1, total);\n\n    if (total === 0) {\n      return 'Nenhum item encontrado';\n    }\n\n    return `Mostrando ${start}-${end} de ${total} itens`;\n  };\n\n  // Event handlers\n  onRefresh(): void {\n    this.refresh.emit();\n  }\n\n  onExport(): void {\n    this.export.emit();\n  }\n\n  onAdd(): void {\n    this.add.emit();\n  }\n\n  onRowClick(row: Record<string, unknown>): void {\n    this.rowClick.emit(row);\n  }\n\n  onTableActionClick(action: OsDataTableAction): void {\n    this.tableActionClick.emit(action);\n  }\n\n  onFilterChange(key: string, event: Event | { target?: { value: unknown } } | unknown): void {\n    const value = (event as { target?: { value: unknown } })?.target?.value || event;\n    this.updateFilter(key, value as string | number | Date | boolean | null | undefined);\n  }\n\n  onClearFilters(): void {\n    this.filters.set([]);\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters(): void {\n    this.filterChange.emit([...this.filters()]);\n  }\n\n  onSortChange(sort: { active: string; direction: 'asc' | 'desc' | '' }): void {\n    if (sort.direction === '') return;\n\n    this.sort.set({\n      column: sort.active,\n      direction: sort.direction as 'asc' | 'desc',\n    });\n    this.sortChange.emit(this.sort()!);\n  }\n\n  onPageChange(event: { pageIndex: number; pageSize: number }): void {\n    this.pagination.update((p) => ({\n      ...p,\n      page: event.pageIndex,\n      pageSize: event.pageSize,\n    }));\n    this.pageChange.emit(this.pagination());\n  }\n\n  // Helper methods\n  private updateFilter(\n    key: string,\n    value: string | number | Date | boolean | null | undefined\n  ): void {\n    const currentFilters = [...this.filters()];\n    const existingIndex = currentFilters.findIndex((f) => f.key === key);\n\n    if (value === null || value === undefined || value === '') {\n      if (existingIndex >= 0) {\n        currentFilters.splice(existingIndex, 1);\n      }\n    } else {\n      const filter: OsDataGridFilter = { key, value };\n      if (existingIndex >= 0) {\n        currentFilters[existingIndex] = filter;\n      } else {\n        currentFilters.push(filter);\n      }\n    }\n\n    this.filters.set(currentFilters);\n  }\n\n  private getNestedValue(obj: Record<string, unknown>, path: string): unknown {\n    return path\n      .split('.')\n      .reduce((current: unknown, key: string) => (current as Record<string, unknown>)?.[key], obj);\n  }\n\n  private matchesFilter(itemValue: unknown, filterValue: unknown, operator: string): boolean {\n    if (itemValue === null || itemValue === undefined) {\n      return false;\n    }\n\n    const itemStr = String(itemValue).toLowerCase();\n    const filterStr = String(filterValue).toLowerCase();\n\n    switch (operator) {\n      case 'equals':\n        return itemStr === filterStr;\n      case 'contains':\n        return itemStr.includes(filterStr);\n      case 'startsWith':\n        return itemStr.startsWith(filterStr);\n      case 'endsWith':\n        return itemStr.endsWith(filterStr);\n      case 'gt':\n        return Number(itemValue) > Number(filterValue);\n      case 'lt':\n        return Number(itemValue) < Number(filterValue);\n      case 'gte':\n        return Number(itemValue) >= Number(filterValue);\n      case 'lte':\n        return Number(itemValue) <= Number(filterValue);\n      default:\n        return itemStr.includes(filterStr);\n    }\n  }\n\n  private applySorting(\n    data: Record<string, unknown>[],\n    sort: OsDataGridSort\n  ): Record<string, unknown>[] {\n    return [...data].sort((a, b) => {\n      const aValue = this.getNestedValue(a, sort.column);\n      const bValue = this.getNestedValue(b, sort.column);\n\n      if (aValue === bValue) return 0;\n\n      const aStr = String(aValue || '');\n      const bStr = String(bValue || '');\n      const comparison = aStr < bStr ? -1 : aStr > bStr ? 1 : 0;\n      return sort.direction === 'asc' ? comparison : -comparison;\n    });\n  }\n}\n",
            "styleUrl": "./os-data-grid.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsDataTableComponent",
            "id": "component-OsDataTableComponent-428f244a83e5176a1b68f335061e032005615d0089fa80e94a28738b6dafaeac680a03ea7df71d89763fbfa03ff5f2dc18a43fcf8a25855091a942037c8245fc",
            "file": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-data-table",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"os-data-table\" [class]=\"dataTableClasses()\">\n  @if (title()) {\n  <div class=\"os-data-table__header\">\n    <h3 class=\"os-data-table__title\">{{ title() }}</h3>\n    @if (showActions() && actions().length > 0) {\n    <div class=\"os-data-table__actions\">\n      @for (action of actions(); track action.key) {\n      <os-button\n        [variant]=\"getButtonVariant(action.color)\"\n        [size]=\"getButtonSize()\"\n        [icon]=\"action.icon || ''\"\n        (buttonClick)=\"onActionClick(action)\"\n        [attr.aria-label]=\"action.label\"\n      >\n        {{ action.label }}\n      </os-button>\n      }\n    </div>\n    }\n  </div>\n  }\n\n  <div class=\"os-data-table__content\">\n    <table mat-table [dataSource]=\"data()\" matSort class=\"os-data-table__table\">\n      @for (column of columns(); track column.key) {\n      <ng-container [matColumnDef]=\"column.key\">\n        <th\n          mat-header-cell\n          *matHeaderCellDef\n          [class]=\"headerCellClass(column)\"\n          [style.width]=\"column.width || 'auto'\"\n          [style.text-align]=\"column.align || 'left'\"\n          [mat-sort-header]=\"column.sortable ? column.key : ''\"\n        >\n          {{ column.label }}\n        </th>\n        <td\n          mat-cell\n          *matCellDef=\"let row\"\n          [class]=\"cellClass(column)\"\n          [style.text-align]=\"column.align || 'left'\"\n        >\n          {{ getCellValue(row, column.key) }}\n        </td>\n      </ng-container>\n      }\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns()\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let row; columns: displayedColumns()\"\n        [class]=\"rowClass(row)\"\n        (click)=\"onRowClick(row)\"\n      ></tr>\n    </table>\n\n    @if (showNoData() && data().length === 0) {\n    <div class=\"os-data-table__no-data\">\n      <os-icon name=\"inbox\" size=\"lg\" />\n      <p>{{ noDataText() }}</p>\n    </div>\n    }\n  </div>\n\n  @if (showPagination() && data().length > 0) {\n  <mat-paginator\n    [length]=\"totalItems()\"\n    [pageSize]=\"pageSize()\"\n    [pageIndex]=\"pageIndex()\"\n    [pageSizeOptions]=\"pageSizeOptions()\"\n    [showFirstLastButtons]=\"showFirstLastButtons()\"\n    (page)=\"onPageChange($event)\"\n    class=\"os-data-table__paginator\"\n  ></mat-paginator>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableAction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "required": false
                },
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableColumn[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "required": false
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableRow[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "required": false
                },
                {
                    "name": "noDataText",
                    "defaultValue": "'Nenhum dado encontrado'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 137,
                    "required": false
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 139,
                    "required": false
                },
                {
                    "name": "pageSize",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "required": false
                },
                {
                    "name": "pageSizeOptions",
                    "defaultValue": "[5, 10, 25, 50]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "required": false
                },
                {
                    "name": "showActions",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "required": false
                },
                {
                    "name": "showFirstLastButtons",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 142,
                    "required": false
                },
                {
                    "name": "showNoData",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "required": false
                },
                {
                    "name": "showPagination",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 135,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "required": false
                },
                {
                    "name": "sortable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 131,
                    "required": false
                },
                {
                    "name": "sortActive",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "required": false
                },
                {
                    "name": "sortDirection",
                    "defaultValue": "'asc'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"asc\" | \"desc\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127,
                    "required": false
                },
                {
                    "name": "totalItems",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableAction",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 145,
                    "required": false
                },
                {
                    "name": "pageChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PageEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 147,
                    "required": false
                },
                {
                    "name": "rowClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableRow",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "required": false
                },
                {
                    "name": "sortChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Sort",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "cellClass",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 196
                },
                {
                    "name": "dataTableClasses",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 172
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "computed(() => this.columns().map((col) => col.key))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 151
                },
                {
                    "name": "getButtonSize",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 163,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "getButtonVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 154,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "getCellValue",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 219
                },
                {
                    "name": "headerCellClass",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "rowClass",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 206
                },
                {
                    "name": "sort",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 149,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "OsDataTableAction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "OsDataTableAction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 235,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRowClick",
                    "args": [
                        {
                            "name": "row",
                            "type": "OsDataTableRow",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "OsDataTableRow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSortChange",
                    "args": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, ChangeDetectionStrategy, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule, Sort } from '@angular/material/sort';\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport type OsDataTableSize = 'small' | 'medium' | 'large';\nexport type OsDataTableVariant = 'default' | 'striped' | 'bordered';\n\nexport interface OsDataTableColumn {\n  key: string;\n  label: string;\n  sortable?: boolean;\n  width?: string;\n  align?: 'left' | 'center' | 'right';\n}\n\nexport type OsDataTableRow = Record<string, unknown>;\n\nexport interface OsDataTableAction {\n  key: string;\n  label: string;\n  icon?: string;\n  color?: 'primary' | 'secondary' | 'warn';\n}\n\n@Component({\n  selector: 'os-data-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    OsButtonComponent,\n    OsIconComponent,\n  ],\n  template: `\n    <div class=\"os-data-table\" [class]=\"dataTableClasses()\">\n      @if (title()) {\n      <div class=\"os-data-table__header\">\n        <h3 class=\"os-data-table__title\">{{ title() }}</h3>\n        @if (showActions() && actions().length > 0) {\n        <div class=\"os-data-table__actions\">\n          @for (action of actions(); track action.key) {\n          <os-button\n            [variant]=\"getButtonVariant(action.color)\"\n            [size]=\"getButtonSize()\"\n            [icon]=\"action.icon || ''\"\n            (buttonClick)=\"onActionClick(action)\"\n            [attr.aria-label]=\"action.label\"\n          >\n            {{ action.label }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <div class=\"os-data-table__content\">\n        <table mat-table [dataSource]=\"data()\" matSort class=\"os-data-table__table\">\n          @for (column of columns(); track column.key) {\n          <ng-container [matColumnDef]=\"column.key\">\n            <th\n              mat-header-cell\n              *matHeaderCellDef\n              [class]=\"headerCellClass(column)\"\n              [style.width]=\"column.width || 'auto'\"\n              [style.text-align]=\"column.align || 'left'\"\n              [mat-sort-header]=\"column.sortable ? column.key : ''\"\n            >\n              {{ column.label }}\n            </th>\n            <td\n              mat-cell\n              *matCellDef=\"let row\"\n              [class]=\"cellClass(column)\"\n              [style.text-align]=\"column.align || 'left'\"\n            >\n              {{ getCellValue(row, column.key) }}\n            </td>\n          </ng-container>\n          }\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns()\"></tr>\n          <tr\n            mat-row\n            *matRowDef=\"let row; columns: displayedColumns()\"\n            [class]=\"rowClass(row)\"\n            (click)=\"onRowClick(row)\"\n          ></tr>\n        </table>\n\n        @if (showNoData() && data().length === 0) {\n        <div class=\"os-data-table__no-data\">\n          <os-icon name=\"inbox\" size=\"lg\" />\n          <p>{{ noDataText() }}</p>\n        </div>\n        }\n      </div>\n\n      @if (showPagination() && data().length > 0) {\n      <mat-paginator\n        [length]=\"totalItems()\"\n        [pageSize]=\"pageSize()\"\n        [pageIndex]=\"pageIndex()\"\n        [pageSizeOptions]=\"pageSizeOptions()\"\n        [showFirstLastButtons]=\"showFirstLastButtons()\"\n        (page)=\"onPageChange($event)\"\n        class=\"os-data-table__paginator\"\n      ></mat-paginator>\n      }\n    </div>\n  `,\n  styleUrl: './os-data-table.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-data-table-host',\n  },\n})\nexport class OsDataTableComponent {\n  data = input<OsDataTableRow[]>([]);\n  columns = input<OsDataTableColumn[]>([]);\n  title = input<string>('');\n  actions = input<OsDataTableAction[]>([]);\n  size = input<OsDataTableSize>('medium');\n  variant = input<OsDataTableVariant>('default');\n  sortable = input<boolean>(true);\n  sortActive = input<string>('');\n  sortDirection = input<'asc' | 'desc'>('asc');\n  showActions = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showNoData = input<boolean>(true);\n  noDataText = input<string>('Nenhum dado encontrado');\n  pageSize = input<number>(10);\n  pageIndex = input<number>(0);\n  totalItems = input<number>(0);\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  rowClick = output<OsDataTableRow>();\n  actionClick = output<OsDataTableAction>();\n  sortChange = output<Sort>();\n  pageChange = output<PageEvent>();\n\n  protected sort = true;\n\n  displayedColumns = computed(() => this.columns().map((col) => col.key));\n\n  // Mapeamento interno para Atoms\n  protected getButtonVariant = (color?: string) => {\n    const colorMap: Record<string, 'primary' | 'secondary' | 'tertiary' | 'danger'> = {\n      primary: 'primary',\n      secondary: 'secondary',\n      warn: 'danger',\n    };\n    return colorMap[color || 'primary'] || 'primary';\n  };\n\n  protected getButtonSize = () => {\n    const sizeMap: Record<OsDataTableSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  };\n\n  dataTableClasses = () => {\n    const classes = ['os-data-table'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-data-table--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-data-table--${this.variant()}`);\n    }\n\n    return classes.join(' ');\n  };\n\n  headerCellClass = (column: OsDataTableColumn) => {\n    const classes = ['os-data-table__header-cell'];\n\n    if (column.sortable) {\n      classes.push('os-data-table__header-cell--sortable');\n    }\n\n    return classes.join(' ');\n  };\n\n  cellClass = (column: OsDataTableColumn) => {\n    const classes = ['os-data-table__cell'];\n\n    if (column.align) {\n      classes.push(`os-data-table__cell--${column.align}`);\n    }\n\n    return classes.join(' ');\n  };\n\n  rowClass = (row: OsDataTableRow) => {\n    const classes = ['os-data-table__row'];\n\n    if (this.variant() === 'striped') {\n      const index = this.data().indexOf(row);\n      if (index % 2 === 1) {\n        classes.push('os-data-table__row--striped');\n      }\n    }\n\n    return classes.join(' ');\n  };\n\n  getCellValue = (row: OsDataTableRow, key: string) => {\n    return row[key] || '';\n  };\n\n  onRowClick(row: OsDataTableRow): void {\n    this.rowClick.emit(row);\n  }\n\n  onActionClick(action: OsDataTableAction): void {\n    this.actionClick.emit(action);\n  }\n\n  onSortChange(sort: Sort): void {\n    this.sortChange.emit(sort);\n  }\n\n  onPageChange(event: PageEvent): void {\n    this.pageChange.emit(event);\n  }\n}\n",
            "styleUrl": "./os-data-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsDateInputComponent",
            "id": "component-OsDateInputComponent-e69b33bdab109e8dd754331716d22267a76821882d8b4fbf7df5a95aa9484bda3dc2d497514c5e989eea032ee380cac6afbad1c748c3c2c7b43a4ddb772d69e5",
            "file": "src/app/shared/ui-components/atoms/os-date-input/os-date-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": ")"
                }
            ],
            "selector": "os-date-input",
            "styleUrls": [
                "./os-date-input.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"containerClass()\">\n  <mat-form-field [appearance]=\"appearance()\" [class]=\"formFieldClass()\">\n    @if (label()) {\n    <mat-label>{{ label() }}</mat-label>\n    } @if (prefixIcon()) {\n    <mat-icon matPrefix [class]=\"prefixIconClass()\">{{ prefixIcon() }}</mat-icon>\n    }\n\n    <input\n      matInput\n      [matDatepicker]=\"picker\"\n      [id]=\"inputId\"\n      [placeholder]=\"placeholder()\"\n      [disabled]=\"disabled()\"\n      [readonly]=\"readonly()\"\n      [required]=\"required()\"\n      [value]=\"displayValue()\"\n      [min]=\"minDate()\"\n      [max]=\"maxDate()\"\n      [class]=\"inputClass()\"\n      [attr.aria-label]=\"ariaLabel() || label()\"\n      [attr.aria-describedby]=\"computedAriaDescribedBy()\"\n      [attr.aria-invalid]=\"hasError()\"\n      [attr.aria-required]=\"required() ? 'true' : 'false'\"\n      [attr.aria-disabled]=\"disabled() ? 'true' : 'false'\"\n      [attr.tabindex]=\"disabled() ? -1 : 0\"\n      (input)=\"handleInput($event)\"\n      (blur)=\"handleBlur($event)\"\n      (focus)=\"handleFocus($event)\"\n      (mouseenter)=\"onMouseEnter()\"\n      (mouseleave)=\"onMouseLeave()\"\n    />\n\n    @if (suffixIcon()) {\n    <mat-icon matSuffix [class]=\"suffixIconClass()\">{{ suffixIcon() }}</mat-icon>\n    } @else {\n    <mat-datepicker-toggle matSuffix [for]=\"picker\" [disabled]=\"disabled()\">\n      <mat-icon matDatepickerToggleIcon>calendar_today</mat-icon>\n    </mat-datepicker-toggle>\n    }\n    <mat-datepicker #picker></mat-datepicker>\n\n    @if (helperText() || hasError()) {\n    <mat-hint [id]=\"inputId + '-helper'\" [class]=\"helperClass()\">\n      {{ errorMessage() || helperText() }}\n    </mat-hint>\n    }\n  </mat-form-field>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 101,
                    "required": false
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "required": false
                },
                {
                    "name": "hapticFeedback",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "required": false
                },
                {
                    "name": "helperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "required": false
                },
                {
                    "name": "maxDate",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "required": false
                },
                {
                    "name": "minDate",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "required": false
                },
                {
                    "name": "prefixIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 104,
                    "required": false
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDateInputSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "required": false
                },
                {
                    "name": "suffixIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 101,
                    "required": false
                },
                {
                    "name": "focusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "required": false
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "_onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "appearance",
                    "defaultValue": "computed((): MatFormFieldAppearance => 'outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 195,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "computedAriaDescribedBy",
                    "defaultValue": "computed(() => {\n    const helperId = this.helperText() ? this.inputId + '-helper' : null;\n    const describedBy = this.ariaDescribedBy();\n    return describedBy || helperId;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 188
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-date-input-container',\n      `os-date-input-container--${this.size()}`,\n      this.hasError() ? 'os-date-input-container--error' : '',\n      this.disabled() ? 'os-date-input-container--disabled' : '',\n      this.isFocused() ? 'os-date-input-container--focused' : '',\n      this.isHovered() ? 'os-date-input-container--hovered' : '',\n      this.animated() ? 'os-date-input-container--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130
                },
                {
                    "name": "displayValue",
                    "defaultValue": "computed(() => {\n    const value = this.value();\n    if (!value) return '';\n    return this.formatDateForInput(value);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 182
                },
                {
                    "name": "formFieldClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-date-input__form-field',\n      `os-date-input__form-field--${this.size()}`,\n      this.hasError() ? 'os-date-input__form-field--error' : '',\n      this.disabled() ? 'os-date-input__form-field--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 197,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "hasError",
                    "defaultValue": "computed(() => {\n    return !!this.errorMessage();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 178
                },
                {
                    "name": "helperClass",
                    "defaultValue": "computed(() => {\n    return ['os-date-input__helper', this.hasError() ? 'os-date-input__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 172
                },
                {
                    "name": "inputClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-date-input',\n      `os-date-input--${this.size()}`,\n      this.hasError() ? 'os-date-input--error' : '',\n      this.disabled() ? 'os-date-input--disabled' : '',\n      this.readonly() ? 'os-date-input--readonly' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 160
                },
                {
                    "name": "inputId",
                    "defaultValue": "`os-date-input-${Math.random().toString(36).substr(2, 9)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "inputWrapperClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-date-input__wrapper',\n      this.prefixIcon() ? 'os-date-input__wrapper--with-prefix' : '',\n      this.suffixIcon() ? 'os-date-input__wrapper--with-suffix' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "isFocused",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127
                },
                {
                    "name": "isHovered",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "labelClass",
                    "defaultValue": "computed(() => {\n    return ['os-date-input__label', this.required() ? 'os-date-input__label--required' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "prefixIconClass",
                    "defaultValue": "computed(() => {\n    return ['os-date-input__prefix-icon', `os-date-input__prefix-icon--${this.size()}`]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 208,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "suffixIconClass",
                    "defaultValue": "computed(() => {\n    return ['os-date-input__suffix-icon', `os-date-input__suffix-icon--${this.size()}`]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 214,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formatDateForInput",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 248,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 233,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 253,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 257,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "parseDateFromInput",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Date | null",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "Date | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 274,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "Date | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 278,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 282,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "triggerHapticFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 261,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  model,\n  signal,\n  ChangeDetectionStrategy,\n  forwardRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule, MatFormFieldAppearance } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material/core';\n\nexport type OsDateInputSize = 'small' | 'medium' | 'large';\n\n@Component({\n  selector: 'os-date-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatNativeDateModule,\n  ],\n  template: `\n    <div [class]=\"containerClass()\">\n      <mat-form-field [appearance]=\"appearance()\" [class]=\"formFieldClass()\">\n        @if (label()) {\n        <mat-label>{{ label() }}</mat-label>\n        } @if (prefixIcon()) {\n        <mat-icon matPrefix [class]=\"prefixIconClass()\">{{ prefixIcon() }}</mat-icon>\n        }\n\n        <input\n          matInput\n          [matDatepicker]=\"picker\"\n          [id]=\"inputId\"\n          [placeholder]=\"placeholder()\"\n          [disabled]=\"disabled()\"\n          [readonly]=\"readonly()\"\n          [required]=\"required()\"\n          [value]=\"displayValue()\"\n          [min]=\"minDate()\"\n          [max]=\"maxDate()\"\n          [class]=\"inputClass()\"\n          [attr.aria-label]=\"ariaLabel() || label()\"\n          [attr.aria-describedby]=\"computedAriaDescribedBy()\"\n          [attr.aria-invalid]=\"hasError()\"\n          [attr.aria-required]=\"required() ? 'true' : 'false'\"\n          [attr.aria-disabled]=\"disabled() ? 'true' : 'false'\"\n          [attr.tabindex]=\"disabled() ? -1 : 0\"\n          (input)=\"handleInput($event)\"\n          (blur)=\"handleBlur($event)\"\n          (focus)=\"handleFocus($event)\"\n          (mouseenter)=\"onMouseEnter()\"\n          (mouseleave)=\"onMouseLeave()\"\n        />\n\n        @if (suffixIcon()) {\n        <mat-icon matSuffix [class]=\"suffixIconClass()\">{{ suffixIcon() }}</mat-icon>\n        } @else {\n        <mat-datepicker-toggle matSuffix [for]=\"picker\" [disabled]=\"disabled()\">\n          <mat-icon matDatepickerToggleIcon>calendar_today</mat-icon>\n        </mat-datepicker-toggle>\n        }\n        <mat-datepicker #picker></mat-datepicker>\n\n        @if (helperText() || hasError()) {\n        <mat-hint [id]=\"inputId + '-helper'\" [class]=\"helperClass()\">\n          {{ errorMessage() || helperText() }}\n        </mat-hint>\n        }\n      </mat-form-field>\n    </div>\n  `,\n  styleUrls: ['./os-date-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsDateInputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OsDateInputComponent implements ControlValueAccessor {\n  size = input<OsDateInputSize>('medium');\n  label = input<string>('');\n  placeholder = input<string>('');\n  helperText = input<string>('');\n  errorMessage = input<string>('');\n  disabled = model(false);\n  readonly = input(false);\n  required = input(false);\n  prefixIcon = input<string>('');\n  suffixIcon = input<string>('');\n  value = model<Date | null>(null);\n  minDate = input<string>('');\n  maxDate = input<string>('');\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n  animated = input(true);\n  hapticFeedback = input(true);\n\n  valueChange = output<Date | null>();\n  blurEvent = output<FocusEvent>();\n  focusEvent = output<FocusEvent>();\n\n  private _onChange = (value: Date | null) => {\n    // This will be set by registerOnChange\n    console.debug('onChange called with:', value);\n  };\n  private _onTouched = () => {\n    // This will be set by registerOnTouched\n  };\n\n  inputId = `os-date-input-${Math.random().toString(36).substr(2, 9)}`;\n  isFocused = signal(false);\n  isHovered = signal(false);\n\n  containerClass = computed(() => {\n    return [\n      'os-date-input-container',\n      `os-date-input-container--${this.size()}`,\n      this.hasError() ? 'os-date-input-container--error' : '',\n      this.disabled() ? 'os-date-input-container--disabled' : '',\n      this.isFocused() ? 'os-date-input-container--focused' : '',\n      this.isHovered() ? 'os-date-input-container--hovered' : '',\n      this.animated() ? 'os-date-input-container--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  labelClass = computed(() => {\n    return ['os-date-input__label', this.required() ? 'os-date-input__label--required' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  inputWrapperClass = computed(() => {\n    return [\n      'os-date-input__wrapper',\n      this.prefixIcon() ? 'os-date-input__wrapper--with-prefix' : '',\n      this.suffixIcon() ? 'os-date-input__wrapper--with-suffix' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  inputClass = computed(() => {\n    return [\n      'os-date-input',\n      `os-date-input--${this.size()}`,\n      this.hasError() ? 'os-date-input--error' : '',\n      this.disabled() ? 'os-date-input--disabled' : '',\n      this.readonly() ? 'os-date-input--readonly' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  helperClass = computed(() => {\n    return ['os-date-input__helper', this.hasError() ? 'os-date-input__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  hasError = computed(() => {\n    return !!this.errorMessage();\n  });\n\n  displayValue = computed(() => {\n    const value = this.value();\n    if (!value) return '';\n    return this.formatDateForInput(value);\n  });\n\n  computedAriaDescribedBy = computed(() => {\n    const helperId = this.helperText() ? this.inputId + '-helper' : null;\n    const describedBy = this.ariaDescribedBy();\n    return describedBy || helperId;\n  });\n\n  // Mapeamento interno para Material\n  protected appearance = computed((): MatFormFieldAppearance => 'outline');\n\n  protected formFieldClass = computed(() => {\n    return [\n      'os-date-input__form-field',\n      `os-date-input__form-field--${this.size()}`,\n      this.hasError() ? 'os-date-input__form-field--error' : '',\n      this.disabled() ? 'os-date-input__form-field--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected prefixIconClass = computed(() => {\n    return ['os-date-input__prefix-icon', `os-date-input__prefix-icon--${this.size()}`]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected suffixIconClass = computed(() => {\n    return ['os-date-input__suffix-icon', `os-date-input__suffix-icon--${this.size()}`]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  private formatDateForInput(date: Date): string {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n\n  private parseDateFromInput(value: string): Date | null {\n    if (!value) return null;\n    const date = new Date(value);\n    return isNaN(date.getTime()) ? null : date;\n  }\n\n  handleInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const dateValue = this.parseDateFromInput(target.value);\n\n    this.triggerHapticFeedback();\n    this._onChange(dateValue);\n    this.valueChange.emit(dateValue);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this.isFocused.set(false);\n    this._onTouched();\n    this.blurEvent.emit(event);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.isFocused.set(true);\n    this.focusEvent.emit(event);\n  }\n\n  onMouseEnter(): void {\n    this.isHovered.set(true);\n  }\n\n  onMouseLeave(): void {\n    this.isHovered.set(false);\n  }\n\n  triggerHapticFeedback(): void {\n    if (this.hapticFeedback() && 'vibrate' in navigator) {\n      navigator.vibrate(50); // 50ms vibration\n    }\n  }\n\n  writeValue(value: Date | null): void {\n    // Update the model signal when FormControl value changes programmatically\n    if (value !== this.value()) {\n      this.value.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: Date | null) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    // Update the disabled state when called by Angular Forms\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens' as tokens;\n\n// Container styles\n.os-date-input-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  position: relative;\n\n  &--small {\n    .os-date-input__form-field {\n      font-size: var(--os-font-size-sm);\n      min-height: 44px; // Touch target minimum\n    }\n  }\n\n  &--medium {\n    .os-date-input__form-field {\n      min-height: 44px; // Touch target minimum\n    }\n  }\n\n  &--large {\n    .os-date-input__form-field {\n      font-size: var(--os-font-size-lg);\n      min-height: 48px; // Larger touch target\n    }\n  }\n\n  &--focused {\n    .os-date-input__form-field {\n      --mdc-outlined-text-field-focus-outline-color: var(--os-color-primary-500);\n    }\n  }\n\n  &--hovered:not(&--disabled) {\n    .os-date-input__form-field {\n      --mdc-outlined-text-field-hover-outline-color: var(--os-color-primary-400);\n    }\n  }\n\n  &--animated {\n    .os-date-input__form-field {\n      transition: all var(--os-transition-duration-standard) var(--os-transition-easing-standard);\n    }\n  }\n}\n\n// Material form field customization\n.os-date-input__form-field {\n  width: 100%;\n\n  &--error {\n    .mat-mdc-form-field {\n      .mat-mdc-form-field-focus-overlay {\n        background-color: var(--os-color-error-100);\n      }\n    }\n  }\n\n  &--disabled {\n    .mat-mdc-form-field {\n      opacity: 0.6;\n    }\n  }\n}\n\n// Icon customization\n.os-date-input__prefix-icon,\n.os-date-input__suffix-icon {\n  color: var(--os-color-text-secondary);\n}\n\n// Helper text customization\n.os-date-input__helper {\n  &--error {\n    color: var(--os-color-error-600);\n  }\n}\n\n// Responsive design\n@media (max-width: 575px) {\n  .os-date-input-container {\n    &--small,\n    &--medium,\n    &--large {\n      .os-date-input__form-field {\n        min-height: 48px; // Larger touch target on mobile\n      }\n    }\n  }\n}\n\n// Dark mode support\n@media (prefers-color-scheme: dark) {\n  .os-date-input__prefix-icon,\n  .os-date-input__suffix-icon {\n    color: var(--os-color-text-secondary-dark);\n  }\n\n  .os-date-input__helper {\n    color: var(--os-color-text-secondary-dark);\n\n    &--error {\n      color: var(--os-color-error-400);\n    }\n  }\n}\n\n// High contrast mode support\n@media (prefers-contrast: high) {\n  .os-date-input__form-field {\n    .mat-mdc-form-field {\n      --mdc-outlined-text-field-outline-width: 2px;\n    }\n  }\n}\n\n// Reduced motion support\n@media (prefers-reduced-motion: reduce) {\n  .os-date-input-container--animated {\n    .os-date-input__form-field {\n      transition: none;\n    }\n  }\n}\n",
                    "styleUrl": "./os-date-input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "OsDatePickerComponent",
            "id": "component-OsDatePickerComponent-e02047e19f91d1c6ff988a0f086f5bd68b90e2b70d4e21bde2f66d27656a17cedb5b3af94263edf13f72b6ef2cc29ff4a85e713945f06b4db1edcc38360e87d1",
            "file": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": ")"
                }
            ],
            "selector": "os-date-picker",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"os-date-picker\" [class]=\"datePickerClasses()\" [attr.role]=\"role()\">\n  <!-- Quick Selection Buttons -->\n  @if (showQuickSelection() && quickDateOptions().length > 0) {\n  <div class=\"os-date-picker__quick-selection\" role=\"group\" aria-label=\"Seleção rápida de data\">\n    @for (option of quickDateOptions(); track option.label) {\n    <os-button\n      variant=\"tertiary\"\n      size=\"small\"\n      [ariaLabel]=\"option.ariaLabel || 'Selecionar ' + option.label\"\n      (click)=\"selectQuickDate(option)\"\n      [disabled]=\"disabled()\"\n    >\n      {{ option.label }}\n    </os-button>\n    }\n  </div>\n  }\n\n  <!-- Date Input Field -->\n  <os-date-input\n    [value]=\"value()\"\n    [label]=\"label()\"\n    [placeholder]=\"placeholder()\"\n    [disabled]=\"disabled()\"\n    [required]=\"required()\"\n    [minDate]=\"minDate()?.toISOString() || ''\"\n    [maxDate]=\"maxDate()?.toISOString() || ''\"\n    [size]=\"getInputSize()\"\n    [helperText]=\"effectiveHelperText()\"\n    [prefixIcon]=\"calendarIcon()\"\n    [ariaLabel]=\"ariaLabel()\"\n    [ariaDescribedBy]=\"ariaDescribedBy()\"\n    (valueChange)=\"onValueChange($event)\"\n    (blurEvent)=\"onBlur($event)\"\n    (focusEvent)=\"onFocus($event)\"\n  />\n\n  <!-- Range End Date (for range picker) -->\n  @if (isRangePicker() && showRangeEnd()) {\n  <div class=\"os-date-picker__range-separator\" aria-hidden=\"true\">até</div>\n  <os-date-input\n    [value]=\"endDate()\"\n    [label]=\"endDateLabel()\"\n    [placeholder]=\"endDatePlaceholder()\"\n    [disabled]=\"disabled()\"\n    [required]=\"required()\"\n    [minDate]=\"value()?.toISOString() || minDate()?.toISOString() || ''\"\n    [maxDate]=\"maxDate()?.toISOString() || ''\"\n    [size]=\"getInputSize()\"\n    [helperText]=\"endDateHelperText()\"\n    [prefixIcon]=\"calendarIcon()\"\n    [ariaLabel]=\"endDateAriaLabel()\"\n    (valueChange)=\"onEndDateChange($event)\"\n    (blurEvent)=\"onEndDateBlur($event)\"\n    (focusEvent)=\"onEndDateFocus($event)\"\n  />\n  }\n\n  <!-- Today Indicator -->\n  @if (showTodayIndicator() && isToday(value())) {\n  <div class=\"os-date-picker__today-indicator\" role=\"status\" aria-live=\"polite\">\n    <span class=\"os-date-picker__today-text\">Hoje</span>\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 155,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 154,
                    "required": false
                },
                {
                    "name": "calendarIcon",
                    "defaultValue": "'calendar_today'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 137,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "required": false
                },
                {
                    "name": "endDateAriaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 156,
                    "required": false
                },
                {
                    "name": "endDateHelperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 147,
                    "required": false
                },
                {
                    "name": "endDateLabel",
                    "defaultValue": "'Data final'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 145,
                    "required": false
                },
                {
                    "name": "endDatePlaceholder",
                    "defaultValue": "'Selecionar data final'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "required": false
                },
                {
                    "name": "helperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "required": false
                },
                {
                    "name": "isRangePicker",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "required": false
                },
                {
                    "name": "maxDate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "required": false
                },
                {
                    "name": "minDate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "required": false
                },
                {
                    "name": "mobileFriendly",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "required": false
                },
                {
                    "name": "opened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Selecionar data'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 131,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'group'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDatePickerRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 148,
                    "required": false
                },
                {
                    "name": "showQuickSelection",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "required": false
                },
                {
                    "name": "showRangeEnd",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "required": false
                },
                {
                    "name": "showTodayIndicator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 142,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDatePickerSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "required": false
                },
                {
                    "name": "startAt",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "required": false
                },
                {
                    "name": "touchUi",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 135,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDatePickerVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 165,
                    "required": false
                },
                {
                    "name": "dateChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 160,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "required": false
                },
                {
                    "name": "endDateBlurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 168,
                    "required": false
                },
                {
                    "name": "endDateChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 166,
                    "required": false
                },
                {
                    "name": "endDateFocusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 167,
                    "required": false
                },
                {
                    "name": "focusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 164,
                    "required": false
                },
                {
                    "name": "monthSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 162,
                    "required": false
                },
                {
                    "name": "openedChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 161,
                    "required": false
                },
                {
                    "name": "quickDateSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuickDateOption",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 169,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "required": false
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 159,
                    "required": false
                },
                {
                    "name": "yearSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 163,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "_onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 212,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 213,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "datePickerClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-date-picker'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-date-picker--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-date-picker--${this.variant()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-date-picker--disabled');\n    }\n\n    if (this.mobileFriendly()) {\n      classes.push('os-date-picker--mobile-friendly');\n    }\n\n    if (this.isRangePicker()) {\n      classes.push('os-date-picker--range');\n    }\n\n    if (this.showQuickSelection()) {\n      classes.push('os-date-picker--with-quick-selection');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 181
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "effectiveHelperText",
                    "defaultValue": "computed(() => {\n    const helper = this.helperText();\n    if (helper) return helper;\n\n    // Auto-generate helper text with format\n    const format = this.getDateFormat();\n    return `Formato: ${format}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 172
                },
                {
                    "name": "endDate",
                    "defaultValue": "signal<Date | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "quickDateOptions",
                    "defaultValue": "signal<QuickDateOption[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 151
                }
            ],
            "methodsClass": [
                {
                    "name": "getDateFormat",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 268,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDefaultQuickDateOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "QuickDateOption[]",
                    "typeParameters": [],
                    "line": 273,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getInputSize",
                    "args": [],
                    "optional": false,
                    "returnType": "\"small\" | \"medium\" | \"large\"",
                    "typeParameters": [],
                    "line": 259,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isToday",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 323,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEndDateBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 332,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEndDateChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 318,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEndDateFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 337,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 328,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onValueChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 311,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "Date | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 348,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "Date | null",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 352,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectQuickDate",
                    "args": [
                        {
                            "name": "option",
                            "type": "QuickDateOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 239,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "QuickDateOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 356,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 342,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "OsDateInputComponent",
                    "type": "component"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  ChangeDetectionStrategy,\n  forwardRef,\n  model,\n  computed,\n  signal,\n  effect,\n  inject,\n  DestroyRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { OsDateInputComponent } from '../../atoms/os-date-input/os-date-input.component';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport type OsDatePickerSize = 'small' | 'medium' | 'large';\nexport type OsDatePickerVariant = 'default' | 'outlined' | 'filled';\nexport type OsDatePickerRole = 'presentation' | 'dialog' | 'group';\n\nexport interface QuickDateOption {\n  label: string;\n  getValue: () => Date;\n  ariaLabel?: string;\n}\n\n@Component({\n  selector: 'os-date-picker',\n  standalone: true,\n  imports: [CommonModule, FormsModule, OsDateInputComponent, OsButtonComponent],\n  template: `\n    <div class=\"os-date-picker\" [class]=\"datePickerClasses()\" [attr.role]=\"role()\">\n      <!-- Quick Selection Buttons -->\n      @if (showQuickSelection() && quickDateOptions().length > 0) {\n      <div class=\"os-date-picker__quick-selection\" role=\"group\" aria-label=\"Seleção rápida de data\">\n        @for (option of quickDateOptions(); track option.label) {\n        <os-button\n          variant=\"tertiary\"\n          size=\"small\"\n          [ariaLabel]=\"option.ariaLabel || 'Selecionar ' + option.label\"\n          (click)=\"selectQuickDate(option)\"\n          [disabled]=\"disabled()\"\n        >\n          {{ option.label }}\n        </os-button>\n        }\n      </div>\n      }\n\n      <!-- Date Input Field -->\n      <os-date-input\n        [value]=\"value()\"\n        [label]=\"label()\"\n        [placeholder]=\"placeholder()\"\n        [disabled]=\"disabled()\"\n        [required]=\"required()\"\n        [minDate]=\"minDate()?.toISOString() || ''\"\n        [maxDate]=\"maxDate()?.toISOString() || ''\"\n        [size]=\"getInputSize()\"\n        [helperText]=\"effectiveHelperText()\"\n        [prefixIcon]=\"calendarIcon()\"\n        [ariaLabel]=\"ariaLabel()\"\n        [ariaDescribedBy]=\"ariaDescribedBy()\"\n        (valueChange)=\"onValueChange($event)\"\n        (blurEvent)=\"onBlur($event)\"\n        (focusEvent)=\"onFocus($event)\"\n      />\n\n      <!-- Range End Date (for range picker) -->\n      @if (isRangePicker() && showRangeEnd()) {\n      <div class=\"os-date-picker__range-separator\" aria-hidden=\"true\">até</div>\n      <os-date-input\n        [value]=\"endDate()\"\n        [label]=\"endDateLabel()\"\n        [placeholder]=\"endDatePlaceholder()\"\n        [disabled]=\"disabled()\"\n        [required]=\"required()\"\n        [minDate]=\"value()?.toISOString() || minDate()?.toISOString() || ''\"\n        [maxDate]=\"maxDate()?.toISOString() || ''\"\n        [size]=\"getInputSize()\"\n        [helperText]=\"endDateHelperText()\"\n        [prefixIcon]=\"calendarIcon()\"\n        [ariaLabel]=\"endDateAriaLabel()\"\n        (valueChange)=\"onEndDateChange($event)\"\n        (blurEvent)=\"onEndDateBlur($event)\"\n        (focusEvent)=\"onEndDateFocus($event)\"\n      />\n      }\n\n      <!-- Today Indicator -->\n      @if (showTodayIndicator() && isToday(value())) {\n      <div class=\"os-date-picker__today-indicator\" role=\"status\" aria-live=\"polite\">\n        <span class=\"os-date-picker__today-text\">Hoje</span>\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-date-picker.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsDatePickerComponent),\n      multi: true,\n    },\n  ],\n  host: {\n    class: 'os-date-picker-host',\n    '[attr.data-mobile-friendly]': 'mobileFriendly()',\n    '[attr.data-has-quick-selection]': 'showQuickSelection()',\n  },\n})\nexport class OsDatePickerComponent implements ControlValueAccessor {\n  private readonly destroyRef = inject(DestroyRef);\n\n  // Models\n  value = model<Date | null>(null);\n  disabled = model<boolean>(false);\n  endDate = signal<Date | null>(null);\n\n  // Basic Inputs\n  label = input<string>('');\n  placeholder = input<string>('Selecionar data');\n  helperText = input<string>('');\n  size = input<OsDatePickerSize>('medium');\n  variant = input<OsDatePickerVariant>('default');\n  required = input<boolean>(false);\n  minDate = input<Date | null>(null);\n  maxDate = input<Date | null>(null);\n  startAt = input<Date | null>(null);\n  touchUi = input<boolean>(false);\n  opened = input<boolean>(false);\n  calendarIcon = input<string>('calendar_today');\n\n  // New Inputs for Enhancements\n  mobileFriendly = input<boolean>(true);\n  showQuickSelection = input<boolean>(false);\n  showTodayIndicator = input<boolean>(true);\n  isRangePicker = input<boolean>(false);\n  showRangeEnd = input<boolean>(false);\n  endDateLabel = input<string>('Data final');\n  endDatePlaceholder = input<string>('Selecionar data final');\n  endDateHelperText = input<string>('');\n  role = input<OsDatePickerRole>('group');\n\n  // Quick date options as a signal (mutable)\n  quickDateOptions = signal<QuickDateOption[]>([]);\n\n  // Accessibility Inputs\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n  endDateAriaLabel = input<string>('');\n\n  // Outputs\n  valueChange = output<Date | null>();\n  dateChange = output<Date | null>();\n  openedChange = output<boolean>();\n  monthSelected = output<Date>();\n  yearSelected = output<Date>();\n  focusEvent = output<FocusEvent>();\n  blurEvent = output<FocusEvent>();\n  endDateChange = output<Date | null>();\n  endDateFocusEvent = output<FocusEvent>();\n  endDateBlurEvent = output<FocusEvent>();\n  quickDateSelected = output<QuickDateOption>();\n\n  // Computed Properties\n  effectiveHelperText = computed(() => {\n    const helper = this.helperText();\n    if (helper) return helper;\n\n    // Auto-generate helper text with format\n    const format = this.getDateFormat();\n    return `Formato: ${format}`;\n  });\n\n  datePickerClasses = computed(() => {\n    const classes = ['os-date-picker'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-date-picker--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-date-picker--${this.variant()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-date-picker--disabled');\n    }\n\n    if (this.mobileFriendly()) {\n      classes.push('os-date-picker--mobile-friendly');\n    }\n\n    if (this.isRangePicker()) {\n      classes.push('os-date-picker--range');\n    }\n\n    if (this.showQuickSelection()) {\n      classes.push('os-date-picker--with-quick-selection');\n    }\n\n    return classes.join(' ');\n  });\n\n  // ControlValueAccessor\n  private _onChange = (value: Date | null) => {};\n  private _onTouched = () => {};\n\n  constructor() {\n    // Initialize default quick date options if none provided\n    effect(\n      () => {\n        if (this.showQuickSelection() && this.quickDateOptions().length === 0) {\n          this.quickDateOptions.set(this.getDefaultQuickDateOptions());\n        }\n      },\n      { allowSignalWrites: true }\n    );\n\n    // Validate range dates\n    effect(() => {\n      if (this.isRangePicker() && this.value() && this.endDate()) {\n        const start = this.value();\n        const end = this.endDate();\n        if (start && end && start > end) {\n          console.warn('OsDatePicker: Start date is after end date');\n        }\n      }\n    });\n  }\n\n  // Public Methods\n  selectQuickDate(option: QuickDateOption): void {\n    if (this.disabled()) return;\n\n    const date = option.getValue();\n    this.onValueChange(date);\n    this.quickDateSelected.emit(option);\n  }\n\n  isToday(date: Date | null): boolean {\n    if (!date) return false;\n\n    const today = new Date();\n    return (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    );\n  }\n\n  // Internal Methods (public for testing)\n  getInputSize(): 'small' | 'medium' | 'large' {\n    const sizeMap: Record<OsDatePickerSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getDateFormat(): string {\n    // Return localized date format\n    return 'DD/MM/AAAA';\n  }\n\n  getDefaultQuickDateOptions(): QuickDateOption[] {\n    return [\n      {\n        label: 'Hoje',\n        getValue: () => new Date(),\n        ariaLabel: 'Selecionar data de hoje',\n      },\n      {\n        label: 'Amanhã',\n        getValue: () => {\n          const tomorrow = new Date();\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          return tomorrow;\n        },\n        ariaLabel: 'Selecionar data de amanhã',\n      },\n      {\n        label: 'Próxima Semana',\n        getValue: () => {\n          const nextWeek = new Date();\n          nextWeek.setDate(nextWeek.getDate() + 7);\n          return nextWeek;\n        },\n        ariaLabel: 'Selecionar data da próxima semana',\n      },\n      {\n        label: 'Próximo Mês',\n        getValue: () => {\n          const nextMonth = new Date();\n          nextMonth.setMonth(nextMonth.getMonth() + 1);\n          return nextMonth;\n        },\n        ariaLabel: 'Selecionar data do próximo mês',\n      },\n    ];\n  }\n\n  // Event Handlers\n  onValueChange(value: Date | null): void {\n    this.value.set(value);\n    this.valueChange.emit(value);\n    this.dateChange.emit(value);\n    this._onChange(value);\n  }\n\n  onEndDateChange(value: Date | null): void {\n    this.endDate.set(value);\n    this.endDateChange.emit(value);\n  }\n\n  onBlur(event: FocusEvent): void {\n    this.blurEvent.emit(event);\n    this._onTouched();\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.focusEvent.emit(event);\n  }\n\n  onEndDateBlur(event: FocusEvent): void {\n    this.endDateBlurEvent.emit(event);\n    this._onTouched();\n  }\n\n  onEndDateFocus(event: FocusEvent): void {\n    this.endDateFocusEvent.emit(event);\n  }\n\n  // ControlValueAccessor Implementation\n  writeValue(value: Date | null): void {\n    if (value !== this.value()) {\n      this.value.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: Date | null) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "styleUrl": "./os-date-picker.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 213
            },
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "OsDetailTemplateComponent",
            "id": "component-OsDetailTemplateComponent-409df63515b3bcb768b0c412bf59bee3ca6ea2a282e92ae18cb1c92b2e63d10842e950b487384ebcecdf32db5f9ec7fbcca7cad16a1727488572ca35d0b8f831",
            "file": "src/app/shared/ui-components/templates/os-detail-template/os-detail-template.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-detail-template",
            "styleUrls": [
                "./os-detail-template.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"templateClass()\">\n  @if (showHeader()) {\n  <os-page-header\n    [title]=\"title()\"\n    [subtitle]=\"subtitle()\"\n    [variant]=\"headerVariant()\"\n    [size]=\"size()\"\n    [actions]=\"headerActions()\"\n    (actionClick)=\"handleHeaderActionClick($event)\"\n  />\n  }\n\n  <div class=\"os-detail-template__content\">\n    @for (section of sections(); track section.title) {\n    <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"getSectionClass(section)\">\n      <div class=\"os-detail-template__section-header\">\n        <h3 class=\"os-detail-template__section-title\">{{ section.title }}</h3>\n        @if (section.collapsible) {\n        <os-button\n          variant=\"tertiary\"\n          size=\"small\"\n          [icon]=\"section.expanded ? 'chevron-up' : 'chevron-down'\"\n          (click)=\"toggleSection(section)\"\n        />\n        }\n      </div>\n\n      @if (!section.collapsible || section.expanded) {\n      <div class=\"os-detail-template__fields\">\n        @for (field of section.fields; track field.label) {\n        <div class=\"os-detail-template__field\">\n          <label [for]=\"'field-' + field.label\" class=\"os-detail-template__field-label\">{{\n            field.label\n          }}</label>\n          <div [id]=\"'field-' + field.label\" [class]=\"getFieldClass(field)\">\n            @switch (field.type) { @case ('currency') {\n            <span class=\"os-detail-template__currency\">\n              R$ {{ formatCurrency(field.value) }}\n            </span>\n            } @case ('percentage') {\n            <span class=\"os-detail-template__percentage\">\n              {{ formatPercentage(field.value) }}%\n            </span>\n            } @case ('date') {\n            <span class=\"os-detail-template__date\">\n              {{ formatDate(field.value) }}\n            </span>\n            } @default {\n            <span class=\"os-detail-template__text\">{{ field.value }}</span>\n            } }\n          </div>\n        </div>\n        }\n      </div>\n      }\n    </os-card>\n    }\n  </div>\n\n  @if (actions().length > 0) {\n  <div class=\"os-detail-template__actions\">\n    @for (action of actions(); track action.id) {\n    <os-button\n      [variant]=\"action.variant\"\n      [size]=\"size()\"\n      [icon]=\"action.icon || ''\"\n      [disabled]=\"action.disabled || disabled()\"\n      (click)=\"actionClicked.emit(action)\"\n    >\n      {{ action.label }}\n    </os-button>\n    }\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DetailTemplateAction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "required": false
                },
                {
                    "name": "breadcrumbItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ label: string; route?: string }[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "required": false
                },
                {
                    "name": "headerActions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DetailTemplateAction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "required": false
                },
                {
                    "name": "sections",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DetailTemplateSection[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "required": false
                },
                {
                    "name": "showBreadcrumb",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "required": false
                },
                {
                    "name": "showHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 120,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 119,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DetailTemplateAction",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "required": false
                },
                {
                    "name": "headerActionClicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ action: DetailTemplateAction; event: MouseEvent }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 135,
                    "required": false
                },
                {
                    "name": "sectionToggled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ section: DetailTemplateSection; expanded: boolean }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 137,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "cardVariant",
                    "defaultValue": "computed(() => {\n    const variantMap = {\n      default: 'default' as const,\n      compact: 'outlined' as const,\n      detailed: 'elevated' as const,\n    };\n    return variantMap[this.variant()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 161,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "headerVariant",
                    "defaultValue": "computed(() => {\n    const sizeMap = {\n      small: 'compact' as const,\n      medium: 'default' as const,\n      large: 'extended' as const,\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 152,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "templateClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-detail-template',\n      `os-detail-template--${this.variant()}`,\n      `os-detail-template--${this.size()}`,\n      `os-detail-template--${this.theme()}`,\n      this.disabled() ? 'os-detail-template--disabled' : '',\n      this.loading() ? 'os-detail-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 139,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formatCurrency",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number | Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 189,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number | Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number | Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number | Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatPercentage",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number | Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 197,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number | Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFieldClass",
                    "args": [
                        {
                            "name": "field",
                            "type": "DetailTemplateField",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "DetailTemplateField",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSectionClass",
                    "args": [
                        {
                            "name": "section",
                            "type": "DetailTemplateSection",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "section",
                            "type": "DetailTemplateSection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleHeaderActionClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageHeaderAction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 221,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageHeaderAction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleSection",
                    "args": [
                        {
                            "name": "section",
                            "type": "DetailTemplateSection",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "section",
                            "type": "DetailTemplateSection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                },
                {
                    "name": "OsCardComponent",
                    "type": "component"
                },
                {
                    "name": "OsPageHeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport {\n  OsPageHeaderComponent,\n  PageHeaderAction,\n} from '../../organisms/os-page-header/os-page-header.component';\n\nexport interface DetailTemplateAction {\n  id: string;\n  label: string;\n  variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  icon?: string;\n  disabled?: boolean;\n}\n\nexport interface DetailTemplateField {\n  label: string;\n  value: string | number | Date;\n  type: 'text' | 'number' | 'date' | 'currency' | 'percentage';\n  variant?: 'default' | 'highlight' | 'muted';\n}\n\nexport interface DetailTemplateSection {\n  title: string;\n  fields: DetailTemplateField[];\n  collapsible?: boolean;\n  expanded?: boolean;\n}\n\n@Component({\n  selector: 'os-detail-template',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsButtonComponent, OsCardComponent, OsPageHeaderComponent],\n  template: `\n    <div [class]=\"templateClass()\">\n      @if (showHeader()) {\n      <os-page-header\n        [title]=\"title()\"\n        [subtitle]=\"subtitle()\"\n        [variant]=\"headerVariant()\"\n        [size]=\"size()\"\n        [actions]=\"headerActions()\"\n        (actionClick)=\"handleHeaderActionClick($event)\"\n      />\n      }\n\n      <div class=\"os-detail-template__content\">\n        @for (section of sections(); track section.title) {\n        <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"getSectionClass(section)\">\n          <div class=\"os-detail-template__section-header\">\n            <h3 class=\"os-detail-template__section-title\">{{ section.title }}</h3>\n            @if (section.collapsible) {\n            <os-button\n              variant=\"tertiary\"\n              size=\"small\"\n              [icon]=\"section.expanded ? 'chevron-up' : 'chevron-down'\"\n              (click)=\"toggleSection(section)\"\n            />\n            }\n          </div>\n\n          @if (!section.collapsible || section.expanded) {\n          <div class=\"os-detail-template__fields\">\n            @for (field of section.fields; track field.label) {\n            <div class=\"os-detail-template__field\">\n              <label [for]=\"'field-' + field.label\" class=\"os-detail-template__field-label\">{{\n                field.label\n              }}</label>\n              <div [id]=\"'field-' + field.label\" [class]=\"getFieldClass(field)\">\n                @switch (field.type) { @case ('currency') {\n                <span class=\"os-detail-template__currency\">\n                  R$ {{ formatCurrency(field.value) }}\n                </span>\n                } @case ('percentage') {\n                <span class=\"os-detail-template__percentage\">\n                  {{ formatPercentage(field.value) }}%\n                </span>\n                } @case ('date') {\n                <span class=\"os-detail-template__date\">\n                  {{ formatDate(field.value) }}\n                </span>\n                } @default {\n                <span class=\"os-detail-template__text\">{{ field.value }}</span>\n                } }\n              </div>\n            </div>\n            }\n          </div>\n          }\n        </os-card>\n        }\n      </div>\n\n      @if (actions().length > 0) {\n      <div class=\"os-detail-template__actions\">\n        @for (action of actions(); track action.id) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"size()\"\n          [icon]=\"action.icon || ''\"\n          [disabled]=\"action.disabled || disabled()\"\n          (click)=\"actionClicked.emit(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-detail-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsDetailTemplateComponent {\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n\n  title = input<string>('');\n  subtitle = input<string>('');\n  showHeader = input(true);\n  showBreadcrumb = input(false);\n  breadcrumbItems = input<{ label: string; route?: string }[]>([]);\n  headerActions = input<DetailTemplateAction[]>([]);\n\n  sections = input<DetailTemplateSection[]>([]);\n  actions = input<DetailTemplateAction[]>([]);\n\n  headerActionClicked = output<{ action: DetailTemplateAction; event: MouseEvent }>();\n  actionClicked = output<DetailTemplateAction>();\n  sectionToggled = output<{ section: DetailTemplateSection; expanded: boolean }>();\n\n  protected templateClass = computed(() => {\n    return [\n      'os-detail-template',\n      `os-detail-template--${this.variant()}`,\n      `os-detail-template--${this.size()}`,\n      `os-detail-template--${this.theme()}`,\n      this.disabled() ? 'os-detail-template--disabled' : '',\n      this.loading() ? 'os-detail-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  public headerVariant = computed(() => {\n    const sizeMap = {\n      small: 'compact' as const,\n      medium: 'default' as const,\n      large: 'extended' as const,\n    };\n    return sizeMap[this.size()];\n  });\n\n  public cardVariant = computed(() => {\n    const variantMap = {\n      default: 'default' as const,\n      compact: 'outlined' as const,\n      detailed: 'elevated' as const,\n    };\n    return variantMap[this.variant()];\n  });\n\n  public getSectionClass(section: DetailTemplateSection): string {\n    return [\n      'os-detail-template__section',\n      section.collapsible ? 'os-detail-template__section--collapsible' : '',\n      section.expanded ? 'os-detail-template__section--expanded' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  public getFieldClass(field: DetailTemplateField): string {\n    return [\n      'os-detail-template__field-value',\n      `os-detail-template__field-value--${field.variant || 'default'}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  public formatCurrency(value: string | number | Date): string {\n    const numValue = typeof value === 'number' ? value : parseFloat(value.toString());\n    return new Intl.NumberFormat('pt-BR', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(numValue);\n  }\n\n  public formatPercentage(value: string | number | Date): string {\n    const numValue = typeof value === 'number' ? value : parseFloat(value.toString());\n    return new Intl.NumberFormat('pt-BR', {\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 2,\n    }).format(numValue);\n  }\n\n  public formatDate(value: string | number | Date): string {\n    const dateValue = value instanceof Date ? value : new Date(value);\n    return new Intl.DateTimeFormat('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    }).format(dateValue);\n  }\n\n  public toggleSection(section: DetailTemplateSection): void {\n    if (section.collapsible) {\n      section.expanded = !section.expanded;\n      this.sectionToggled.emit({ section, expanded: section.expanded });\n    }\n  }\n\n  public handleHeaderActionClick(event: PageHeaderAction): void {\n    const detailAction: DetailTemplateAction = {\n      id: event.label.toLowerCase().replace(/\\s+/g, '-'),\n      label: event.label,\n      variant: event.variant || 'primary',\n      icon: event.icon,\n      disabled: event.disabled,\n    };\n    this.headerActionClicked.emit({ action: detailAction, event: new MouseEvent('click') });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-detail-template {\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-md);\n  width: 100%;\n  min-height: 100vh;\n  background-color: var(--os-color-background);\n  color: var(--os-color-text);\n\n  &--small {\n    gap: var(--os-spacing-sm);\n  }\n\n  &--large {\n    gap: var(--os-spacing-lg);\n  }\n\n  &--compact {\n    .os-detail-template__content {\n      gap: var(--os-spacing-sm);\n    }\n  }\n\n  &--detailed {\n    .os-detail-template__content {\n      gap: var(--os-spacing-lg);\n    }\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--loading {\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: rgba(255, 255, 255, 0.8);\n      z-index: 10;\n    }\n  }\n\n  &--dark {\n    background-color: var(--os-color-background-dark);\n    color: var(--os-color-text-dark);\n  }\n}\n\n.os-detail-template__content {\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-md);\n  flex: 1;\n}\n\n.os-detail-template__section {\n  &--collapsible {\n    .os-detail-template__section-header {\n      cursor: pointer;\n      user-select: none;\n\n      &:hover {\n        background-color: var(--os-color-background-hover);\n      }\n    }\n  }\n}\n\n.os-detail-template__section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--os-spacing-sm) 0;\n  border-bottom: 1px solid var(--os-color-border);\n  margin-bottom: var(--os-spacing-md);\n}\n\n.os-detail-template__section-title {\n  font-size: var(--os-font-size-lg);\n  font-weight: var(--os-font-weight-semibold);\n  color: var(--os-color-text);\n  margin: 0;\n}\n\n.os-detail-template__fields {\n  display: grid;\n  gap: var(--os-spacing-md);\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n}\n\n.os-detail-template__field {\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-xs);\n}\n\n.os-detail-template__field-label {\n  font-size: var(--os-font-size-sm);\n  font-weight: var(--os-font-weight-medium);\n  color: var(--os-color-text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.os-detail-template__field-value {\n  font-size: var(--os-font-size-base);\n  color: var(--os-color-text);\n\n  &--highlight {\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-primary);\n  }\n\n  &--muted {\n    color: var(--os-color-text-secondary);\n  }\n}\n\n.os-detail-template__currency {\n  font-family: var(--os-font-family-mono);\n  font-weight: var(--os-font-weight-semibold);\n  color: var(--os-color-success);\n}\n\n.os-detail-template__percentage {\n  font-family: var(--os-font-family-mono);\n  font-weight: var(--os-font-weight-semibold);\n  color: var(--os-color-primary);\n}\n\n.os-detail-template__date {\n  font-family: var(--os-font-family-mono);\n  color: var(--os-color-text-secondary);\n}\n\n.os-detail-template__text {\n  word-break: break-word;\n}\n\n.os-detail-template__actions {\n  display: flex;\n  gap: var(--os-spacing-sm);\n  padding: var(--os-spacing-md);\n  background-color: var(--os-color-background-secondary);\n  border-top: 1px solid var(--os-color-border);\n  border-radius: 0 0 var(--os-border-radius-md) var(--os-border-radius-md);\n  flex-wrap: wrap;\n  justify-content: flex-end;\n}\n\n@media (max-width: 768px) {\n  .os-detail-template {\n    gap: var(--os-spacing-sm);\n  }\n\n  .os-detail-template__content {\n    gap: var(--os-spacing-sm);\n  }\n\n  .os-detail-template__fields {\n    grid-template-columns: 1fr;\n    gap: var(--os-spacing-sm);\n  }\n\n  .os-detail-template__actions {\n    flex-direction: column;\n    gap: var(--os-spacing-sm);\n\n    os-button {\n      width: 100%;\n    }\n  }\n\n  .os-detail-template__section-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: var(--os-spacing-xs);\n  }\n}\n\n@media (max-width: 480px) {\n  .os-detail-template__section-title {\n    font-size: var(--os-font-size-base);\n  }\n\n  .os-detail-template__field-label {\n    font-size: var(--os-font-size-xs);\n  }\n\n  .os-detail-template__field-value {\n    font-size: var(--os-font-size-sm);\n  }\n}\n",
                    "styleUrl": "./os-detail-template.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsDrawerTemplateComponent",
            "id": "component-OsDrawerTemplateComponent-6a71960546424f2ccaeb251cdf8ebff9b58aadab2328a10e9da3b2aede5fc8254ee5757b303bd3ee099fe049b739a868d3d7a5fbcb219c73e7f4a43967f08035",
            "file": "src/app/shared/ui-components/templates/os-drawer-template/os-drawer-template.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-drawer-template",
            "styleUrls": [
                "./os-drawer-template.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"drawerClass()\" [attr.aria-label]=\"ariaLabel()\">\n  @if (config().showHeader ?? true) {\n  <div class=\"os-drawer-template__header\" [class]=\"headerClass()\">\n    <div class=\"os-drawer-template__header-content\">\n      <h2 class=\"os-drawer-template__title\">{{ config().title }}</h2>\n      @if (config().subtitle) {\n      <p class=\"os-drawer-template__subtitle\">{{ config().subtitle }}</p>\n      }\n    </div>\n    @if (config().showCloseButton ?? true) {\n    <os-button\n      [variant]=\"'tertiary'\"\n      [size]=\"size()\"\n      [icon]=\"'close'\"\n      (click)=\"onClose()\"\n      [attr.aria-label]=\"'Fechar drawer'\"\n    />\n    }\n  </div>\n  }\n\n  <div class=\"os-drawer-template__content\" [class]=\"contentClass()\">\n    <ng-content />\n  </div>\n\n  @if (config().showActions ?? true) {\n  <div class=\"os-drawer-template__actions\" [class]=\"actionsClass()\">\n    @if (config().showCancelButton ?? true) {\n    <os-button\n      [variant]=\"'secondary'\"\n      [size]=\"size()\"\n      [disabled]=\"disabled()\"\n      (click)=\"onCancel()\"\n    >\n      {{ config().cancelButtonText || 'Cancelar' }}\n    </os-button>\n    } @if (config().showConfirmButton ?? true) {\n    <os-button\n      [variant]=\"'primary'\"\n      [size]=\"size()\"\n      [disabled]=\"disabled() || !isValid()\"\n      [loading]=\"loading()\"\n      (click)=\"onConfirm()\"\n    >\n      {{ config().confirmButtonText || 'Confirmar' }}\n    </os-button>\n    } @for (action of config().actions || []; track action.label) {\n    <os-button\n      [variant]=\"action.variant\"\n      [size]=\"action.size\"\n      [disabled]=\"action.disabled || disabled()\"\n      [loading]=\"action.loading || false\"\n      [icon]=\"action.icon || ''\"\n      (click)=\"onActionClick(action)\"\n    >\n      {{ action.label }}\n    </os-button>\n    }\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DrawerTemplateConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "required": true
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "required": false
                },
                {
                    "name": "position",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"left\" | \"right\" | \"top\" | \"bottom\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 101,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "required": false
                },
                {
                    "name": "valid",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 104,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{    label: string;    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';    size: 'small' | 'medium' | 'large';    disabled?: boolean;    loading?: boolean;    icon?: string;  }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "required": false
                },
                {
                    "name": "cancelled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "required": false
                },
                {
                    "name": "closed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "required": false
                },
                {
                    "name": "confirmed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "actionsClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-drawer-template__actions',\n      `os-drawer-template__actions--${this.variant()}`,\n      `os-drawer-template__actions--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 154
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "computed(() => {\n    return `Drawer: ${this.config().title}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 168
                },
                {
                    "name": "contentClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-drawer-template__content',\n      `os-drawer-template__content--${this.variant()}`,\n      `os-drawer-template__content--${this.size()}`,\n      this.disabled() ? 'os-drawer-template__content--disabled' : '',\n      this.loading() ? 'os-drawer-template__content--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 142
                },
                {
                    "name": "drawerClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-drawer-template',\n      `os-drawer-template--${this.variant()}`,\n      `os-drawer-template--${this.size()}`,\n      `os-drawer-template--${this.theme()}`,\n      `os-drawer-template--${this.position()}`,\n      this.disabled() ? 'os-drawer-template--disabled' : '',\n      this.loading() ? 'os-drawer-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "headerClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-drawer-template__header',\n      `os-drawer-template__header--${this.variant()}`,\n      `os-drawer-template__header--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132
                },
                {
                    "name": "isValid",
                    "defaultValue": "computed(() => {\n    return this.valid();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 164
                }
            ],
            "methodsClass": [
                {
                    "name": "onActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onConfirm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, input, output, ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport interface DrawerTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showCloseButton?: boolean;\n  showHeader?: boolean;\n  showFooter?: boolean;\n  showActions?: boolean;\n  closeButtonText?: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  showConfirmButton?: boolean;\n  showCancelButton?: boolean;\n  actions?: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }[];\n}\n\n@Component({\n  selector: 'os-drawer-template',\n  template: `\n    <div [class]=\"drawerClass()\" [attr.aria-label]=\"ariaLabel()\">\n      @if (config().showHeader ?? true) {\n      <div class=\"os-drawer-template__header\" [class]=\"headerClass()\">\n        <div class=\"os-drawer-template__header-content\">\n          <h2 class=\"os-drawer-template__title\">{{ config().title }}</h2>\n          @if (config().subtitle) {\n          <p class=\"os-drawer-template__subtitle\">{{ config().subtitle }}</p>\n          }\n        </div>\n        @if (config().showCloseButton ?? true) {\n        <os-button\n          [variant]=\"'tertiary'\"\n          [size]=\"size()\"\n          [icon]=\"'close'\"\n          (click)=\"onClose()\"\n          [attr.aria-label]=\"'Fechar drawer'\"\n        />\n        }\n      </div>\n      }\n\n      <div class=\"os-drawer-template__content\" [class]=\"contentClass()\">\n        <ng-content />\n      </div>\n\n      @if (config().showActions ?? true) {\n      <div class=\"os-drawer-template__actions\" [class]=\"actionsClass()\">\n        @if (config().showCancelButton ?? true) {\n        <os-button\n          [variant]=\"'secondary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled()\"\n          (click)=\"onCancel()\"\n        >\n          {{ config().cancelButtonText || 'Cancelar' }}\n        </os-button>\n        } @if (config().showConfirmButton ?? true) {\n        <os-button\n          [variant]=\"'primary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled() || !isValid()\"\n          [loading]=\"loading()\"\n          (click)=\"onConfirm()\"\n        >\n          {{ config().confirmButtonText || 'Confirmar' }}\n        </os-button>\n        } @for (action of config().actions || []; track action.label) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"action.size\"\n          [disabled]=\"action.disabled || disabled()\"\n          [loading]=\"action.loading || false\"\n          [icon]=\"action.icon || ''\"\n          (click)=\"onActionClick(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-drawer-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, OsButtonComponent],\n})\nexport class OsDrawerTemplateComponent {\n  config = input.required<DrawerTemplateConfig>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  position = input<'left' | 'right' | 'top' | 'bottom'>('right');\n  disabled = input(false);\n  loading = input(false);\n  valid = input(true);\n\n  closed = output<void>();\n  confirmed = output<void>();\n  cancelled = output<void>();\n  actionClick = output<{\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }>();\n\n  drawerClass = computed(() => {\n    return [\n      'os-drawer-template',\n      `os-drawer-template--${this.variant()}`,\n      `os-drawer-template--${this.size()}`,\n      `os-drawer-template--${this.theme()}`,\n      `os-drawer-template--${this.position()}`,\n      this.disabled() ? 'os-drawer-template--disabled' : '',\n      this.loading() ? 'os-drawer-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  headerClass = computed(() => {\n    return [\n      'os-drawer-template__header',\n      `os-drawer-template__header--${this.variant()}`,\n      `os-drawer-template__header--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  contentClass = computed(() => {\n    return [\n      'os-drawer-template__content',\n      `os-drawer-template__content--${this.variant()}`,\n      `os-drawer-template__content--${this.size()}`,\n      this.disabled() ? 'os-drawer-template__content--disabled' : '',\n      this.loading() ? 'os-drawer-template__content--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  actionsClass = computed(() => {\n    return [\n      'os-drawer-template__actions',\n      `os-drawer-template__actions--${this.variant()}`,\n      `os-drawer-template__actions--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  isValid = computed(() => {\n    return this.valid();\n  });\n\n  ariaLabel = computed(() => {\n    return `Drawer: ${this.config().title}`;\n  });\n\n  onClose(): void {\n    this.closed.emit();\n  }\n\n  onConfirm(): void {\n    this.confirmed.emit();\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n\n  onActionClick(action: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }): void {\n    this.actionClick.emit(action);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-drawer-template {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: var(--os-color-background);\n  color: var(--os-color-text);\n  border-radius: var(--os-border-radius);\n  box-shadow: var(--os-shadow-lg);\n  overflow: hidden;\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--loading {\n    pointer-events: none;\n  }\n\n  &--small {\n    min-width: 300px;\n    max-width: 400px;\n  }\n\n  &--medium {\n    min-width: 400px;\n    max-width: 600px;\n  }\n\n  &--large {\n    min-width: 600px;\n    max-width: 800px;\n  }\n\n  &--left {\n    border-radius: 0 var(--os-border-radius) var(--os-border-radius) 0;\n  }\n\n  &--right {\n    border-radius: var(--os-border-radius) 0 0 var(--os-border-radius);\n  }\n\n  &--top {\n    border-radius: 0 0 var(--os-border-radius) var(--os-border-radius);\n  }\n\n  &--bottom {\n    border-radius: var(--os-border-radius) var(--os-border-radius) 0 0;\n  }\n\n  &--compact {\n    min-width: 250px;\n    max-width: 350px;\n  }\n\n  &--detailed {\n    min-width: 500px;\n    max-width: 700px;\n  }\n\n  &--light {\n    background: var(--os-color-background);\n    color: var(--os-color-text);\n  }\n\n  &--dark {\n    background: var(--os-color-background-dark);\n    color: var(--os-color-text-light);\n  }\n}\n\n.os-drawer-template__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--os-spacing-md);\n  background: var(--os-color-background-secondary);\n  border-bottom: 1px solid var(--os-color-border);\n\n  &--small {\n    padding: var(--os-spacing-sm);\n  }\n\n  &--medium {\n    padding: var(--os-spacing-md);\n  }\n\n  &--large {\n    padding: var(--os-spacing-lg);\n  }\n\n  &--compact {\n    padding: var(--os-spacing-sm);\n  }\n\n  &--detailed {\n    padding: var(--os-spacing-lg);\n  }\n}\n\n.os-drawer-template__header-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.os-drawer-template__title {\n  margin: 0;\n  font-size: var(--os-font-size-lg);\n  font-weight: 600;\n  color: var(--os-color-text);\n  line-height: 1.2;\n}\n\n.os-drawer-template__subtitle {\n  margin: var(--os-spacing-xs) 0 0 0;\n  font-size: var(--os-font-size-sm);\n  color: var(--os-color-text-secondary);\n  line-height: 1.4;\n}\n\n.os-drawer-template__content {\n  flex: 1;\n  padding: var(--os-spacing-md);\n  overflow-y: auto;\n  background: var(--os-color-background);\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--loading {\n    pointer-events: none;\n  }\n\n  &--small {\n    padding: var(--os-spacing-sm);\n  }\n\n  &--medium {\n    padding: var(--os-spacing-md);\n  }\n\n  &--large {\n    padding: var(--os-spacing-lg);\n  }\n\n  &--compact {\n    padding: var(--os-spacing-sm);\n  }\n\n  &--detailed {\n    padding: var(--os-spacing-lg);\n  }\n}\n\n.os-drawer-template__actions {\n  display: flex;\n  gap: var(--os-spacing-sm);\n  justify-content: flex-end;\n  align-items: center;\n  padding: var(--os-spacing-md);\n  background: var(--os-color-background-secondary);\n  border-top: 1px solid var(--os-color-border);\n\n  &--small {\n    padding: var(--os-spacing-sm);\n    gap: var(--os-spacing-xs);\n  }\n\n  &--medium {\n    padding: var(--os-spacing-md);\n    gap: var(--os-spacing-sm);\n  }\n\n  &--large {\n    padding: var(--os-spacing-lg);\n    gap: var(--os-spacing-md);\n  }\n\n  &--compact {\n    padding: var(--os-spacing-sm);\n    gap: var(--os-spacing-xs);\n  }\n\n  &--detailed {\n    padding: var(--os-spacing-lg);\n    gap: var(--os-spacing-md);\n  }\n}\n\n@media (max-width: 768px) {\n  .os-drawer-template {\n    &--small,\n    &--medium,\n    &--large {\n      min-width: 100%;\n      max-width: 100%;\n      height: 100vh;\n    }\n  }\n\n  .os-drawer-template__actions {\n    flex-direction: column;\n    gap: var(--os-spacing-sm);\n\n    &--small {\n      gap: var(--os-spacing-xs);\n    }\n\n    &--medium {\n      gap: var(--os-spacing-sm);\n    }\n\n    &--large {\n      gap: var(--os-spacing-md);\n    }\n  }\n}\n\n@media (max-width: 480px) {\n  .os-drawer-template__header {\n    padding: var(--os-spacing-sm);\n\n    &--small,\n    &--medium,\n    &--large {\n      padding: var(--os-spacing-sm);\n    }\n  }\n\n  .os-drawer-template__content {\n    padding: var(--os-spacing-sm);\n\n    &--small,\n    &--medium,\n    &--large {\n      padding: var(--os-spacing-sm);\n    }\n  }\n\n  .os-drawer-template__actions {\n    padding: var(--os-spacing-sm);\n\n    &--small,\n    &--medium,\n    &--large {\n      padding: var(--os-spacing-sm);\n    }\n  }\n}\n",
                    "styleUrl": "./os-drawer-template.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsDropdownComponent",
            "id": "component-OsDropdownComponent-fb544af98b860ad0b0746e70b0210ff5521011e406bd64750895eb070e2ef5d4338b2480fdf1c8e910d52cf7f040240d289911276e689ec7e96885e6f15034ef",
            "file": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-dropdown",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  [class]=\"containerClass()\"\n  [attr.data-variant]=\"variant()\"\n  [attr.data-size]=\"size()\"\n  role=\"combobox\"\n  [attr.aria-expanded]=\"isOpen()\"\n  [attr.aria-haspopup]=\"'listbox'\"\n  [attr.aria-controls]=\"menuId()\"\n  [attr.aria-label]=\"ariaLabel() || 'Dropdown menu'\"\n>\n  <button\n    mat-button\n    #trigger\n    [matMenuTriggerFor]=\"menu\"\n    [disabled]=\"disabled()\"\n    [class]=\"triggerClass()\"\n    [attr.aria-label]=\"ariaLabel() || selectedLabel()\"\n    [attr.aria-expanded]=\"isOpen()\"\n    [attr.aria-haspopup]=\"'listbox'\"\n    [attr.aria-controls]=\"menuId()\"\n    (menuOpened)=\"handleMenuOpened()\"\n    (menuClosed)=\"handleMenuClosed()\"\n    (click)=\"handleTriggerClick()\"\n    (keydown)=\"handleTriggerKeydown($event)\"\n  >\n    @if (icon()) {\n    <os-icon [name]=\"icon()\" [size]=\"getIconSize()\" [variant]=\"getIconVariant()\" />\n    }\n    <span [class]=\"textClass()\">\n      {{ selectedLabel() }}\n    </span>\n    @if (showChevron()) {\n    <os-icon\n      [name]=\"isOpen() ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\"\n      [size]=\"getIconSize()\"\n      [variant]=\"getIconVariant()\"\n      aria-hidden=\"true\"\n    />\n    }\n  </button>\n\n  <mat-menu\n    #menu=\"matMenu\"\n    [class]=\"menuClass()\"\n    [xPosition]=\"xPosition()\"\n    [yPosition]=\"yPosition()\"\n    [attr.id]=\"menuId()\"\n    role=\"listbox\"\n    [attr.aria-label]=\"ariaLabel() || 'Options'\"\n  >\n    @if (searchable() && filteredOptions().length > searchThreshold()) {\n    <div class=\"os-dropdown__search\" (click)=\"$event.stopPropagation()\">\n      <os-input\n        #searchInput\n        [value]=\"searchQuery()\"\n        [placeholder]=\"searchPlaceholder()\"\n        [prefixIcon]=\"'search'\"\n        [size]=\"size()\"\n        [ariaLabel]=\"'Search options'\"\n        (valueChange)=\"handleSearchChange($event)\"\n        (keydown)=\"handleSearchKeydown($event)\"\n      />\n    </div>\n    <mat-divider></mat-divider>\n    } @if (placeholder() && !searchQuery()) {\n    <button\n      mat-menu-item\n      [disabled]=\"true\"\n      [class]=\"placeholderClass()\"\n      role=\"menuitem\"\n      [attr.aria-selected]=\"false\"\n    >\n      {{ placeholder() }}\n    </button>\n    @if (filteredOptions().length > 0) {\n    <mat-divider></mat-divider>\n    } } @if (useVirtualScroll() && filteredOptions().length > virtualScrollThreshold()) {\n    <cdk-virtual-scroll-viewport\n      [itemSize]=\"getItemHeight()\"\n      [class]=\"virtualScrollClass()\"\n      [attr.aria-label]=\"'Options list'\"\n    >\n      @for (item of virtualScrollItems(); track item.value; let idx = $index) { @if\n      (item.divider) {\n      <mat-divider></mat-divider>\n      } @else if (item.isGroupHeader) {\n      <div [class]=\"groupHeaderClass()\" role=\"group\" [attr.aria-label]=\"item.label\">\n        {{ item.label }}\n      </div>\n      } @else {\n      <button\n        mat-menu-item\n        [disabled]=\"item.disabled\"\n        [class]=\"optionClass(item)\"\n        [attr.aria-label]=\"item.label\"\n        [attr.aria-selected]=\"item.value === selectedValue()\"\n        [attr.data-index]=\"idx\"\n        role=\"menuitem\"\n        (click)=\"handleOptionClick(item)\"\n        (keydown)=\"handleOptionKeydown($event, item)\"\n      >\n        @if (item.icon) {\n        <os-icon\n          [name]=\"item.icon\"\n          [size]=\"getIconSize()\"\n          [variant]=\"getIconVariant()\"\n          aria-hidden=\"true\"\n        />\n        }\n        <span [class]=\"optionTextClass()\">{{ item.label }}</span>\n        @if (item.value === selectedValue()) {\n        <os-icon name=\"check\" [size]=\"getIconSize()\" [variant]=\"'primary'\" aria-hidden=\"true\" />\n        }\n      </button>\n      } }\n    </cdk-virtual-scroll-viewport>\n    } @else { @for (item of flattenedOptions(); track item.value; let idx = $index) { @if\n    (item.divider) {\n    <mat-divider></mat-divider>\n    } @else if (item.isGroupHeader) {\n    <div [class]=\"groupHeaderClass()\" role=\"group\" [attr.aria-label]=\"item.label\">\n      {{ item.label }}\n    </div>\n    } @else {\n    <button\n      mat-menu-item\n      [disabled]=\"item.disabled\"\n      [class]=\"optionClass(item)\"\n      [attr.aria-label]=\"item.label\"\n      [attr.aria-selected]=\"item.value === selectedValue()\"\n      [attr.data-index]=\"idx\"\n      role=\"menuitem\"\n      (click)=\"handleOptionClick(item)\"\n      (keydown)=\"handleOptionKeydown($event, item)\"\n    >\n      @if (item.icon) {\n      <os-icon\n        [name]=\"item.icon\"\n        [size]=\"getIconSize()\"\n        [variant]=\"getIconVariant()\"\n        aria-hidden=\"true\"\n      />\n      }\n      <span [class]=\"optionTextClass()\">{{ item.label }}</span>\n      @if (item.value === selectedValue()) {\n      <os-icon name=\"check\" [size]=\"getIconSize()\" [variant]=\"'primary'\" aria-hidden=\"true\" />\n      }\n    </button>\n    } } } @if (filteredOptions().length === 0 && searchQuery()) {\n    <div [class]=\"emptyStateClass()\" role=\"status\" aria-live=\"polite\">\n      {{ noResultsText() }}\n    </div>\n    }\n  </mat-menu>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "alignment",
                    "defaultValue": "'start'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDropdownAlignment",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 231,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 232,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 228,
                    "required": false
                },
                {
                    "name": "groups",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDropdownGroup[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 223,
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 229,
                    "required": false
                },
                {
                    "name": "noResultsText",
                    "defaultValue": "'No results found'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 238,
                    "required": false
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDropdownOption[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 222,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 224,
                    "required": false
                },
                {
                    "name": "searchable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 233,
                    "required": false
                },
                {
                    "name": "searchPlaceholder",
                    "defaultValue": "'Search...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 234,
                    "required": false
                },
                {
                    "name": "searchThreshold",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 235,
                    "required": false
                },
                {
                    "name": "selectedValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | boolean | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 225,
                    "required": false
                },
                {
                    "name": "showChevron",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 230,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDropdownSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 227,
                    "required": false
                },
                {
                    "name": "useVirtualScroll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 236,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDropdownVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 226,
                    "required": false
                },
                {
                    "name": "virtualScrollThreshold",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 237,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "menuClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 243,
                    "required": false
                },
                {
                    "name": "menuOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 242,
                    "required": false
                },
                {
                    "name": "optionSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDropdownOption",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 241,
                    "required": false
                },
                {
                    "name": "searchChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 244,
                    "required": false
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number | boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 240,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "_focusedOptionIndex",
                    "defaultValue": "signal(-1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 252,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_isMobile",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 253,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_isOpen",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 250,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_searchQuery",
                    "defaultValue": "signal('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 251,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 220,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dropdown'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-dropdown--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown--${this.size()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-dropdown--disabled');\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-dropdown--mobile');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 338
                },
                {
                    "name": "emptyStateClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dropdown__empty-state'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__empty-state--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 432
                },
                {
                    "name": "filteredOptions",
                    "defaultValue": "computed(() => {\n    const query = this._searchQuery().toLowerCase().trim();\n    if (!query) {\n      return this.flattenedOptions();\n    }\n\n    return this.flattenedOptions().filter((option) => {\n      if (option.isGroupHeader || option.divider) {\n        return false;\n      }\n      return option.label.toLowerCase().includes(query);\n    });\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 292
                },
                {
                    "name": "flattenedOptions",
                    "defaultValue": "computed(() => {\n    const result: Array<OsDropdownOption & { isGroupHeader?: boolean }> = [];\n    const groupsList = this.groups();\n    const optionsList = this.options();\n\n    if (groupsList.length > 0) {\n      groupsList.forEach((group) => {\n        if (group.options.length > 0) {\n          result.push({ value: '', label: group.name, isGroupHeader: true, disabled: true });\n          result.push(...group.options);\n        }\n      });\n    } else {\n      result.push(...optionsList);\n    }\n\n    return result;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 273
                },
                {
                    "name": "focusedOptionIndex",
                    "defaultValue": "computed(() => this._focusedOptionIndex())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 258
                },
                {
                    "name": "getIconSize",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 310
                },
                {
                    "name": "getIconVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 319
                },
                {
                    "name": "getItemHeight",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 329
                },
                {
                    "name": "groupHeaderClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dropdown__group-header'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__group-header--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 422
                },
                {
                    "name": "isMobile",
                    "defaultValue": "computed(() => this._isMobile())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 259
                },
                {
                    "name": "isOpen",
                    "defaultValue": "computed(() => this._isOpen())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 256
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatMenu",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 246,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'menu'"
                        }
                    ],
                    "modifierKind": [
                        171
                    ]
                },
                {
                    "name": "menuClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dropdown__menu'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__menu--${this.size()}`);\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-dropdown__menu--mobile');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 388
                },
                {
                    "name": "menuId",
                    "defaultValue": "computed(() => `os-dropdown-menu-${Math.random().toString(36).substr(2, 9)}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 255
                },
                {
                    "name": "optionClass",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 442
                },
                {
                    "name": "optionTextClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dropdown__option-text'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__option-text--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 460
                },
                {
                    "name": "placeholderClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dropdown__placeholder'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__placeholder--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 402
                },
                {
                    "name": "searchInputElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 248,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'searchInput', {read: ElementRef}"
                        }
                    ],
                    "modifierKind": [
                        171
                    ]
                },
                {
                    "name": "searchQuery",
                    "defaultValue": "computed(() => this._searchQuery())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 257
                },
                {
                    "name": "selectedLabel",
                    "defaultValue": "computed(() => {\n    const allOptions = this.getAllOptions();\n    const selected = allOptions.find((option) => option.value === this.selectedValue());\n    return selected ? selected.label : this.placeholder();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 267
                },
                {
                    "name": "textClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dropdown__text'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__text--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 378
                },
                {
                    "name": "triggerClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dropdown__trigger'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-dropdown__trigger--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__trigger--${this.size()}`);\n    }\n\n    if (this.isOpen()) {\n      classes.push('os-dropdown__trigger--open');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 360
                },
                {
                    "name": "triggerElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 247,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'trigger', {read: ElementRef}"
                        }
                    ],
                    "modifierKind": [
                        171
                    ]
                },
                {
                    "name": "virtualScrollClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-dropdown__virtual-scroll'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__virtual-scroll--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 412
                },
                {
                    "name": "virtualScrollItems",
                    "defaultValue": "computed(() => {\n    return this.filteredOptions();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 306
                },
                {
                    "name": "xPosition",
                    "defaultValue": "computed(() => {\n    switch (this.alignment()) {\n      case 'start':\n        return 'before';\n      case 'end':\n        return 'after';\n      case 'center':\n      default:\n        return 'after';\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 470
                },
                {
                    "name": "yPosition",
                    "defaultValue": "computed(() => 'below' as const)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 482
                }
            ],
            "methodsClass": [
                {
                    "name": "focusNextOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 603,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "focusPreviousOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 614,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getAllOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "OsDropdownOption[]",
                    "typeParameters": [],
                    "line": 625,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "handleDocumentKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 591,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:keydown', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        171
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleMenuClosed",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 503,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleMenuOpened",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 490,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleOptionClick",
                    "args": [
                        {
                            "name": "option",
                            "type": "OsDropdownOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 510,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "OsDropdownOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleOptionKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "option",
                            "type": "OsDropdownOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 548,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "option",
                            "type": "OsDropdownOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSearchChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 518,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSearchKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 571,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleTriggerClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 484,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleTriggerKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 523,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 591
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatDividerModule",
                    "type": "module"
                },
                {
                    "name": "ScrollingModule",
                    "type": "module"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                },
                {
                    "name": "OsInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  ElementRef,\n  HostListener,\n  inject,\n  input,\n  output,\n  signal,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenu, MatMenuModule } from '@angular/material/menu';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsInputComponent } from '../../atoms/os-input/os-input.component';\n\nexport type OsDropdownSize = 'small' | 'medium' | 'large';\nexport type OsDropdownVariant = 'default' | 'primary' | 'secondary' | 'accent';\nexport type OsDropdownAlignment = 'start' | 'center' | 'end';\n\nexport interface OsDropdownOption {\n  value: string | number | boolean;\n  label: string;\n  disabled?: boolean;\n  icon?: string;\n  divider?: boolean;\n  group?: string;\n}\n\nexport interface OsDropdownGroup {\n  name: string;\n  options: OsDropdownOption[];\n}\n\n@Component({\n  selector: 'os-dropdown',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatDividerModule,\n    ScrollingModule,\n    OsIconComponent,\n    OsInputComponent,\n  ],\n  template: `\n    <div\n      [class]=\"containerClass()\"\n      [attr.data-variant]=\"variant()\"\n      [attr.data-size]=\"size()\"\n      role=\"combobox\"\n      [attr.aria-expanded]=\"isOpen()\"\n      [attr.aria-haspopup]=\"'listbox'\"\n      [attr.aria-controls]=\"menuId()\"\n      [attr.aria-label]=\"ariaLabel() || 'Dropdown menu'\"\n    >\n      <button\n        mat-button\n        #trigger\n        [matMenuTriggerFor]=\"menu\"\n        [disabled]=\"disabled()\"\n        [class]=\"triggerClass()\"\n        [attr.aria-label]=\"ariaLabel() || selectedLabel()\"\n        [attr.aria-expanded]=\"isOpen()\"\n        [attr.aria-haspopup]=\"'listbox'\"\n        [attr.aria-controls]=\"menuId()\"\n        (menuOpened)=\"handleMenuOpened()\"\n        (menuClosed)=\"handleMenuClosed()\"\n        (click)=\"handleTriggerClick()\"\n        (keydown)=\"handleTriggerKeydown($event)\"\n      >\n        @if (icon()) {\n        <os-icon [name]=\"icon()\" [size]=\"getIconSize()\" [variant]=\"getIconVariant()\" />\n        }\n        <span [class]=\"textClass()\">\n          {{ selectedLabel() }}\n        </span>\n        @if (showChevron()) {\n        <os-icon\n          [name]=\"isOpen() ? 'keyboard_arrow_up' : 'keyboard_arrow_down'\"\n          [size]=\"getIconSize()\"\n          [variant]=\"getIconVariant()\"\n          aria-hidden=\"true\"\n        />\n        }\n      </button>\n\n      <mat-menu\n        #menu=\"matMenu\"\n        [class]=\"menuClass()\"\n        [xPosition]=\"xPosition()\"\n        [yPosition]=\"yPosition()\"\n        [attr.id]=\"menuId()\"\n        role=\"listbox\"\n        [attr.aria-label]=\"ariaLabel() || 'Options'\"\n      >\n        @if (searchable() && filteredOptions().length > searchThreshold()) {\n        <div class=\"os-dropdown__search\" (click)=\"$event.stopPropagation()\">\n          <os-input\n            #searchInput\n            [value]=\"searchQuery()\"\n            [placeholder]=\"searchPlaceholder()\"\n            [prefixIcon]=\"'search'\"\n            [size]=\"size()\"\n            [ariaLabel]=\"'Search options'\"\n            (valueChange)=\"handleSearchChange($event)\"\n            (keydown)=\"handleSearchKeydown($event)\"\n          />\n        </div>\n        <mat-divider></mat-divider>\n        } @if (placeholder() && !searchQuery()) {\n        <button\n          mat-menu-item\n          [disabled]=\"true\"\n          [class]=\"placeholderClass()\"\n          role=\"menuitem\"\n          [attr.aria-selected]=\"false\"\n        >\n          {{ placeholder() }}\n        </button>\n        @if (filteredOptions().length > 0) {\n        <mat-divider></mat-divider>\n        } } @if (useVirtualScroll() && filteredOptions().length > virtualScrollThreshold()) {\n        <cdk-virtual-scroll-viewport\n          [itemSize]=\"getItemHeight()\"\n          [class]=\"virtualScrollClass()\"\n          [attr.aria-label]=\"'Options list'\"\n        >\n          @for (item of virtualScrollItems(); track item.value; let idx = $index) { @if\n          (item.divider) {\n          <mat-divider></mat-divider>\n          } @else if (item.isGroupHeader) {\n          <div [class]=\"groupHeaderClass()\" role=\"group\" [attr.aria-label]=\"item.label\">\n            {{ item.label }}\n          </div>\n          } @else {\n          <button\n            mat-menu-item\n            [disabled]=\"item.disabled\"\n            [class]=\"optionClass(item)\"\n            [attr.aria-label]=\"item.label\"\n            [attr.aria-selected]=\"item.value === selectedValue()\"\n            [attr.data-index]=\"idx\"\n            role=\"menuitem\"\n            (click)=\"handleOptionClick(item)\"\n            (keydown)=\"handleOptionKeydown($event, item)\"\n          >\n            @if (item.icon) {\n            <os-icon\n              [name]=\"item.icon\"\n              [size]=\"getIconSize()\"\n              [variant]=\"getIconVariant()\"\n              aria-hidden=\"true\"\n            />\n            }\n            <span [class]=\"optionTextClass()\">{{ item.label }}</span>\n            @if (item.value === selectedValue()) {\n            <os-icon name=\"check\" [size]=\"getIconSize()\" [variant]=\"'primary'\" aria-hidden=\"true\" />\n            }\n          </button>\n          } }\n        </cdk-virtual-scroll-viewport>\n        } @else { @for (item of flattenedOptions(); track item.value; let idx = $index) { @if\n        (item.divider) {\n        <mat-divider></mat-divider>\n        } @else if (item.isGroupHeader) {\n        <div [class]=\"groupHeaderClass()\" role=\"group\" [attr.aria-label]=\"item.label\">\n          {{ item.label }}\n        </div>\n        } @else {\n        <button\n          mat-menu-item\n          [disabled]=\"item.disabled\"\n          [class]=\"optionClass(item)\"\n          [attr.aria-label]=\"item.label\"\n          [attr.aria-selected]=\"item.value === selectedValue()\"\n          [attr.data-index]=\"idx\"\n          role=\"menuitem\"\n          (click)=\"handleOptionClick(item)\"\n          (keydown)=\"handleOptionKeydown($event, item)\"\n        >\n          @if (item.icon) {\n          <os-icon\n            [name]=\"item.icon\"\n            [size]=\"getIconSize()\"\n            [variant]=\"getIconVariant()\"\n            aria-hidden=\"true\"\n          />\n          }\n          <span [class]=\"optionTextClass()\">{{ item.label }}</span>\n          @if (item.value === selectedValue()) {\n          <os-icon name=\"check\" [size]=\"getIconSize()\" [variant]=\"'primary'\" aria-hidden=\"true\" />\n          }\n        </button>\n        } } } @if (filteredOptions().length === 0 && searchQuery()) {\n        <div [class]=\"emptyStateClass()\" role=\"status\" aria-live=\"polite\">\n          {{ noResultsText() }}\n        </div>\n        }\n      </mat-menu>\n    </div>\n  `,\n  styleUrl: './os-dropdown.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-dropdown-host',\n  },\n})\nexport class OsDropdownComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  options = input<OsDropdownOption[]>([]);\n  groups = input<OsDropdownGroup[]>([]);\n  placeholder = input<string>('');\n  selectedValue = input<string | number | boolean | null>(null);\n  variant = input<OsDropdownVariant>('default');\n  size = input<OsDropdownSize>('medium');\n  disabled = input(false);\n  icon = input<string>('');\n  showChevron = input(true);\n  alignment = input<OsDropdownAlignment>('start');\n  ariaLabel = input<string>('');\n  searchable = input(false);\n  searchPlaceholder = input('Search...');\n  searchThreshold = input(5);\n  useVirtualScroll = input(false);\n  virtualScrollThreshold = input(20);\n  noResultsText = input('No results found');\n\n  valueChange = output<string | number | boolean>();\n  optionSelect = output<OsDropdownOption>();\n  menuOpen = output<void>();\n  menuClose = output<void>();\n  searchChange = output<string>();\n\n  @ViewChild('menu') menu!: MatMenu;\n  @ViewChild('trigger', { read: ElementRef }) triggerElement!: ElementRef;\n  @ViewChild('searchInput', { read: ElementRef }) searchInputElement!: ElementRef;\n\n  private _isOpen = signal(false);\n  private _searchQuery = signal('');\n  private _focusedOptionIndex = signal(-1);\n  private _isMobile = signal(false);\n\n  menuId = computed(() => `os-dropdown-menu-${Math.random().toString(36).substr(2, 9)}`);\n  isOpen = computed(() => this._isOpen());\n  searchQuery = computed(() => this._searchQuery());\n  focusedOptionIndex = computed(() => this._focusedOptionIndex());\n  isMobile = computed(() => this._isMobile());\n\n  constructor() {\n    this.breakpointObserver.observe([Breakpoints.HandsetPortrait]).subscribe((result) => {\n      this._isMobile.set(result.matches);\n    });\n  }\n\n  selectedLabel = computed(() => {\n    const allOptions = this.getAllOptions();\n    const selected = allOptions.find((option) => option.value === this.selectedValue());\n    return selected ? selected.label : this.placeholder();\n  });\n\n  flattenedOptions = computed(() => {\n    const result: Array<OsDropdownOption & { isGroupHeader?: boolean }> = [];\n    const groupsList = this.groups();\n    const optionsList = this.options();\n\n    if (groupsList.length > 0) {\n      groupsList.forEach((group) => {\n        if (group.options.length > 0) {\n          result.push({ value: '', label: group.name, isGroupHeader: true, disabled: true });\n          result.push(...group.options);\n        }\n      });\n    } else {\n      result.push(...optionsList);\n    }\n\n    return result;\n  });\n\n  filteredOptions = computed(() => {\n    const query = this._searchQuery().toLowerCase().trim();\n    if (!query) {\n      return this.flattenedOptions();\n    }\n\n    return this.flattenedOptions().filter((option) => {\n      if (option.isGroupHeader || option.divider) {\n        return false;\n      }\n      return option.label.toLowerCase().includes(query);\n    });\n  });\n\n  virtualScrollItems = computed(() => {\n    return this.filteredOptions();\n  });\n\n  getIconSize = () => {\n    const sizeMap: Record<OsDropdownSize, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  };\n\n  getIconVariant = () => {\n    const variantMap: Record<OsDropdownVariant, 'default' | 'primary' | 'secondary' | 'info'> = {\n      default: 'default',\n      primary: 'primary',\n      secondary: 'secondary',\n      accent: 'info',\n    };\n    return variantMap[this.variant()];\n  };\n\n  getItemHeight = () => {\n    const heightMap: Record<OsDropdownSize, number> = {\n      small: 32,\n      medium: 40,\n      large: 48,\n    };\n    return heightMap[this.size()];\n  };\n\n  containerClass = computed(() => {\n    const classes = ['os-dropdown'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-dropdown--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown--${this.size()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-dropdown--disabled');\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-dropdown--mobile');\n    }\n\n    return classes.join(' ');\n  });\n\n  triggerClass = computed(() => {\n    const classes = ['os-dropdown__trigger'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-dropdown__trigger--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__trigger--${this.size()}`);\n    }\n\n    if (this.isOpen()) {\n      classes.push('os-dropdown__trigger--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  textClass = computed(() => {\n    const classes = ['os-dropdown__text'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__text--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  menuClass = computed(() => {\n    const classes = ['os-dropdown__menu'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__menu--${this.size()}`);\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-dropdown__menu--mobile');\n    }\n\n    return classes.join(' ');\n  });\n\n  placeholderClass = computed(() => {\n    const classes = ['os-dropdown__placeholder'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__placeholder--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  virtualScrollClass = computed(() => {\n    const classes = ['os-dropdown__virtual-scroll'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__virtual-scroll--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  groupHeaderClass = computed(() => {\n    const classes = ['os-dropdown__group-header'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__group-header--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  emptyStateClass = computed(() => {\n    const classes = ['os-dropdown__empty-state'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__empty-state--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  optionClass = (option: OsDropdownOption) => {\n    const classes = ['os-dropdown__option'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__option--${this.size()}`);\n    }\n\n    if (option.disabled) {\n      classes.push('os-dropdown__option--disabled');\n    }\n\n    if (option.value === this.selectedValue()) {\n      classes.push('os-dropdown__option--selected');\n    }\n\n    return classes.join(' ');\n  };\n\n  optionTextClass = computed(() => {\n    const classes = ['os-dropdown__option-text'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-dropdown__option-text--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  xPosition = computed(() => {\n    switch (this.alignment()) {\n      case 'start':\n        return 'before';\n      case 'end':\n        return 'after';\n      case 'center':\n      default:\n        return 'after';\n    }\n  });\n\n  yPosition = computed(() => 'below' as const);\n\n  handleTriggerClick(): void {\n    if (!this.disabled()) {\n      this._isOpen.set(true);\n    }\n  }\n\n  handleMenuOpened(): void {\n    this._isOpen.set(true);\n    this._searchQuery.set('');\n    this._focusedOptionIndex.set(-1);\n    this.menuOpen.emit();\n\n    if (this.searchable() && this.filteredOptions().length > this.searchThreshold()) {\n      setTimeout(() => {\n        this.searchInputElement?.nativeElement?.querySelector('input')?.focus();\n      }, 100);\n    }\n  }\n\n  handleMenuClosed(): void {\n    this._isOpen.set(false);\n    this._searchQuery.set('');\n    this._focusedOptionIndex.set(-1);\n    this.menuClose.emit();\n  }\n\n  handleOptionClick(option: OsDropdownOption): void {\n    if (!option.disabled) {\n      this.valueChange.emit(option.value);\n      this.optionSelect.emit(option);\n      this._isOpen.set(false);\n    }\n  }\n\n  handleSearchChange(value: string): void {\n    this._searchQuery.set(value);\n    this.searchChange.emit(value);\n  }\n\n  handleTriggerKeydown(event: KeyboardEvent): void {\n    if (this.disabled()) {\n      return;\n    }\n\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'ArrowUp':\n        event.preventDefault();\n        if (!this.isOpen()) {\n          this._isOpen.set(true);\n        }\n        break;\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this._isOpen.set(!this.isOpen());\n        break;\n      case 'Escape':\n        event.preventDefault();\n        this._isOpen.set(false);\n        break;\n    }\n  }\n\n  handleOptionKeydown(event: KeyboardEvent, option: OsDropdownOption): void {\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this.handleOptionClick(option);\n        break;\n      case 'Escape':\n        event.preventDefault();\n        this._isOpen.set(false);\n        this.triggerElement?.nativeElement?.focus();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextOption();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPreviousOption();\n        break;\n    }\n  }\n\n  handleSearchKeydown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'Escape':\n        event.preventDefault();\n        this._searchQuery.set('');\n        this._isOpen.set(false);\n        this.triggerElement?.nativeElement?.focus();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusNextOption();\n        break;\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusPreviousOption();\n        break;\n    }\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleDocumentKeydown(event: KeyboardEvent): void {\n    if (!this.isOpen()) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      this._isOpen.set(false);\n      this.triggerElement?.nativeElement?.focus();\n    }\n  }\n\n  private focusNextOption(): void {\n    const options = this.filteredOptions().filter((opt) => !opt.disabled && !opt.isGroupHeader);\n    if (options.length === 0) {\n      return;\n    }\n\n    const currentIndex = this._focusedOptionIndex();\n    const nextIndex = (currentIndex + 1) % options.length;\n    this._focusedOptionIndex.set(nextIndex);\n  }\n\n  private focusPreviousOption(): void {\n    const options = this.filteredOptions().filter((opt) => !opt.disabled && !opt.isGroupHeader);\n    if (options.length === 0) {\n      return;\n    }\n\n    const currentIndex = this._focusedOptionIndex();\n    const previousIndex = currentIndex <= 0 ? options.length - 1 : currentIndex - 1;\n    this._focusedOptionIndex.set(previousIndex);\n  }\n\n  private getAllOptions(): OsDropdownOption[] {\n    const groupsList = this.groups();\n    const optionsList = this.options();\n\n    if (groupsList.length > 0) {\n      return groupsList.flatMap((group) => group.options);\n    }\n\n    return optionsList;\n  }\n}\n",
            "styleUrl": "./os-dropdown.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 259
            },
            "extends": []
        },
        {
            "name": "OsFilterBarComponent",
            "id": "component-OsFilterBarComponent-039e660c7bce7b6315873463da7b4f88978a8332847728ab05e8ab670916d4611a9cca65d816b011274baff63325f34283e6057308c4070bdd96e45089194f32",
            "file": "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-filter-bar",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  class=\"os-filter-bar\"\n  [class]=\"filterBarClasses()\"\n  role=\"search\"\n  [attr.aria-label]=\"ariaLabel()\"\n  [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n>\n  <div class=\"os-filter-bar__content\">\n    <ng-content></ng-content>\n  </div>\n\n  @if (showActions()) {\n  <div class=\"os-filter-bar__actions\">\n    @if (showClearButton()) {\n    <os-button\n      variant=\"tertiary\"\n      [size]=\"getButtonSize()\"\n      icon=\"clear\"\n      [disabled]=\"!hasActiveFilters()\"\n      [ariaLabel]=\"clearButtonAriaLabel()\"\n      (buttonClick)=\"onClear()\"\n    >\n      {{ clearButtonText() }}\n    </os-button>\n    } @if (showApplyButton()) {\n    <os-button\n      variant=\"primary\"\n      [size]=\"getButtonSize()\"\n      icon=\"check\"\n      [disabled]=\"!hasActiveFilters()\"\n      [ariaLabel]=\"applyButtonAriaLabel()\"\n      (buttonClick)=\"onApply()\"\n    >\n      {{ applyButtonText() }}\n    </os-button>\n    }\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "applyButtonAriaLabel",
                    "defaultValue": "'Aplicar filtros'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "required": false
                },
                {
                    "name": "applyButtonText",
                    "defaultValue": "'Aplicar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "'Barra de filtros'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "required": false
                },
                {
                    "name": "clearButtonAriaLabel",
                    "defaultValue": "'Limpar todos os filtros'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "required": false
                },
                {
                    "name": "clearButtonText",
                    "defaultValue": "'Limpar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "required": false
                },
                {
                    "name": "hasActiveFilters",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 104,
                    "required": false
                },
                {
                    "name": "persistFilters",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "required": false
                },
                {
                    "name": "persistKey",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "required": false
                },
                {
                    "name": "showActions",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "required": false
                },
                {
                    "name": "showApplyButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 101,
                    "required": false
                },
                {
                    "name": "showClearButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFilterBarSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFilterBarVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "apply",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "required": false
                },
                {
                    "name": "clear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "required": false
                },
                {
                    "name": "filtersRestored",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, unknown>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 119,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "filterBarClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-filter-bar'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-filter-bar--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-filter-bar--${this.size()}`);\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-filter-bar--mobile');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "isMobile",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearPersistedFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLimpa os filtros persistidos do localStorage\n",
                    "description": "<p>Limpa os filtros persistidos do localStorage</p>\n"
                },
                {
                    "name": "getButtonSize",
                    "args": [],
                    "optional": false,
                    "returnType": "\"small\" | \"medium\" | \"large\"",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRetorna o tamanho do botão baseado no tamanho da filter bar\n",
                    "description": "<p>Retorna o tamanho do botão baseado no tamanho da filter bar</p>\n"
                },
                {
                    "name": "getStorageKey",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 259,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRetorna a chave completa para o localStorage\n",
                    "description": "<p>Retorna a chave completa para o localStorage</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onApply",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 197,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandler para evento de aplicar filtros\n",
                    "description": "<p>Handler para evento de aplicar filtros</p>\n"
                },
                {
                    "name": "onClear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHandler para evento de limpar filtros\n",
                    "description": "<p>Handler para evento de limpar filtros</p>\n"
                },
                {
                    "name": "restoreFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRestaura os filtros do localStorage\n",
                    "description": "<p>Restaura os filtros do localStorage</p>\n"
                },
                {
                    "name": "saveFilters",
                    "args": [
                        {
                            "name": "filters",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 204,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPersiste os filtros atuais no localStorage\n",
                    "description": "<p>Persiste os filtros atuais no localStorage</p>\n",
                    "jsdoctags": [
                        {
                            "name": "filters",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                }
            ],
            "description": "<p>OsFilterBarComponent</p>\n<p>Barra de filtros responsiva com suporte a persistência em localStorage,\nacessibilidade WCAG 2.1 AA e touch targets &gt;= 44px para mobile.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;os-filter-bar\n  [persistKey]=&quot;&#39;budgets-filters&#39;&quot;\n  [hasActiveFilters]=&quot;hasFilters&quot;\n  (clear)=&quot;onClearFilters()&quot;\n  (apply)=&quot;onApplyFilters()&quot;&gt;\n  &lt;!-- Filter inputs here --&gt;\n&lt;/os-filter-bar&gt;</code></pre></div>",
            "rawdescription": "\n\nOsFilterBarComponent\n\nBarra de filtros responsiva com suporte a persistência em localStorage,\nacessibilidade WCAG 2.1 AA e touch targets >= 44px para mobile.\n\n```html\n<os-filter-bar\n  [persistKey]=\"'budgets-filters'\"\n  [hasActiveFilters]=\"hasFilters\"\n  (clear)=\"onClearFilters()\"\n  (apply)=\"onApplyFilters()\">\n  <!-- Filter inputs here -->\n</os-filter-bar>\n```",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  effect,\n  signal,\n  ChangeDetectionStrategy,\n  inject,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport type OsFilterBarVariant = 'default' | 'compact' | 'expanded';\nexport type OsFilterBarSize = 'small' | 'medium' | 'large';\n\nexport interface OsFilterOption {\n  key: string;\n  label: string;\n  value: string | number | Date | null;\n  type: 'text' | 'select' | 'date' | 'number';\n  options?: { value: string | number; label: string }[];\n}\n\n/**\n * OsFilterBarComponent\n *\n * Barra de filtros responsiva com suporte a persistência em localStorage,\n * acessibilidade WCAG 2.1 AA e touch targets >= 44px para mobile.\n *\n * @example\n * ```html\n * <os-filter-bar\n *   [persistKey]=\"'budgets-filters'\"\n *   [hasActiveFilters]=\"hasFilters\"\n *   (clear)=\"onClearFilters()\"\n *   (apply)=\"onApplyFilters()\">\n *   <!-- Filter inputs here -->\n * </os-filter-bar>\n * ```\n */\n@Component({\n  selector: 'os-filter-bar',\n  standalone: true,\n  imports: [CommonModule, OsButtonComponent],\n  template: `\n    <div\n      class=\"os-filter-bar\"\n      [class]=\"filterBarClasses()\"\n      role=\"search\"\n      [attr.aria-label]=\"ariaLabel()\"\n      [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n    >\n      <div class=\"os-filter-bar__content\">\n        <ng-content></ng-content>\n      </div>\n\n      @if (showActions()) {\n      <div class=\"os-filter-bar__actions\">\n        @if (showClearButton()) {\n        <os-button\n          variant=\"tertiary\"\n          [size]=\"getButtonSize()\"\n          icon=\"clear\"\n          [disabled]=\"!hasActiveFilters()\"\n          [ariaLabel]=\"clearButtonAriaLabel()\"\n          (buttonClick)=\"onClear()\"\n        >\n          {{ clearButtonText() }}\n        </os-button>\n        } @if (showApplyButton()) {\n        <os-button\n          variant=\"primary\"\n          [size]=\"getButtonSize()\"\n          icon=\"check\"\n          [disabled]=\"!hasActiveFilters()\"\n          [ariaLabel]=\"applyButtonAriaLabel()\"\n          (buttonClick)=\"onApply()\"\n        >\n          {{ applyButtonText() }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-filter-bar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-filter-bar-host',\n    '[attr.data-variant]': 'variant()',\n    '[attr.data-size]': 'size()',\n  },\n})\nexport class OsFilterBarComponent {\n  // --- INPUTS ---\n  variant = input<OsFilterBarVariant>('default');\n  size = input<OsFilterBarSize>('medium');\n  showActions = input<boolean>(true);\n  showClearButton = input<boolean>(true);\n  showApplyButton = input<boolean>(true);\n  clearButtonText = input<string>('Limpar');\n  applyButtonText = input<string>('Aplicar');\n  hasActiveFilters = input<boolean>(false);\n\n  // Persistência em localStorage\n  persistKey = input<string | null>(null);\n  persistFilters = input<boolean>(false);\n\n  // Acessibilidade\n  ariaLabel = input<string>('Barra de filtros');\n  ariaDescribedBy = input<string>('');\n  clearButtonAriaLabel = input<string>('Limpar todos os filtros');\n  applyButtonAriaLabel = input<string>('Aplicar filtros');\n\n  // --- OUTPUTS ---\n  clear = output<void>();\n  apply = output<void>();\n  filtersRestored = output<Record<string, unknown>>();\n\n  // --- SIGNALS INTERNOS ---\n  private isMobile = signal<boolean>(false);\n\n  // --- COMPUTED PROPERTIES ---\n  filterBarClasses = computed(() => {\n    const classes = ['os-filter-bar'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-filter-bar--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-filter-bar--${this.size()}`);\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-filter-bar--mobile');\n    }\n\n    return classes.join(' ');\n  });\n\n  // --- CONSTRUCTOR ---\n  constructor() {\n    // Effect para detectar mobile\n    effect(\n      () => {\n        if (typeof window !== 'undefined') {\n          const checkMobile = () => {\n            this.isMobile.set(window.innerWidth < 768);\n          };\n          checkMobile();\n          window.addEventListener('resize', checkMobile);\n        }\n      },\n      { allowSignalWrites: true }\n    );\n\n    // Effect para restaurar filtros persistidos\n    effect(\n      () => {\n        if (this.persistFilters() && this.persistKey()) {\n          this.restoreFilters();\n        }\n      },\n      { allowSignalWrites: true }\n    );\n  }\n\n  // --- MÉTODOS PÚBLICOS ---\n\n  /**\n   * Retorna o tamanho do botão baseado no tamanho da filter bar\n   */\n  getButtonSize(): 'small' | 'medium' | 'large' {\n    const sizeMap: Record<OsFilterBarSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  /**\n   * Handler para evento de limpar filtros\n   */\n  onClear(): void {\n    if (this.persistFilters() && this.persistKey()) {\n      this.clearPersistedFilters();\n    }\n    this.clear.emit();\n  }\n\n  /**\n   * Handler para evento de aplicar filtros\n   */\n  onApply(): void {\n    this.apply.emit();\n  }\n\n  /**\n   * Persiste os filtros atuais no localStorage\n   */\n  saveFilters(filters: Record<string, unknown>): void {\n    if (!this.persistFilters() || !this.persistKey() || typeof window === 'undefined') {\n      return;\n    }\n\n    try {\n      const key = this.getStorageKey();\n      localStorage.setItem(key, JSON.stringify(filters));\n    } catch (error) {\n      console.warn('Falha ao persistir filtros:', error);\n    }\n  }\n\n  /**\n   * Restaura os filtros do localStorage\n   */\n  restoreFilters(): void {\n    if (!this.persistFilters() || !this.persistKey() || typeof window === 'undefined') {\n      return;\n    }\n\n    try {\n      const key = this.getStorageKey();\n      const stored = localStorage.getItem(key);\n\n      if (stored) {\n        const filters = JSON.parse(stored) as Record<string, unknown>;\n        this.filtersRestored.emit(filters);\n      }\n    } catch (error) {\n      console.warn('Falha ao restaurar filtros:', error);\n    }\n  }\n\n  /**\n   * Limpa os filtros persistidos do localStorage\n   */\n  clearPersistedFilters(): void {\n    if (!this.persistKey() || typeof window === 'undefined') {\n      return;\n    }\n\n    try {\n      const key = this.getStorageKey();\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.warn('Falha ao limpar filtros persistidos:', error);\n    }\n  }\n\n  // --- MÉTODOS PRIVADOS ---\n\n  /**\n   * Retorna a chave completa para o localStorage\n   */\n  private getStorageKey(): string {\n    return `os-filter-bar:${this.persistKey()}`;\n  }\n}\n",
            "styleUrl": "./os-filter-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 141
            },
            "extends": []
        },
        {
            "name": "OsFooterComponent",
            "id": "component-OsFooterComponent-b79ef76162d81483a8e2b928634f8aa2fb6d881ee28b4505eff1532c3388e93d82906d5053db85f3d532cb5fdc77bbe0dff0214b5329c4dff3b3f63ba3b8638e",
            "file": "src/app/shared/ui-components/organisms/os-footer/os-footer.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-footer",
            "styleUrls": [
                "./os-footer.component.scss"
            ],
            "styles": [],
            "template": "<footer class=\"os-footer\" [class]=\"footerClasses()\">\n  <div class=\"os-footer__container\">\n    <div class=\"os-footer__content\">\n      @for (section of sections(); track section.title) {\n      <div class=\"os-footer__section\">\n        <h3 class=\"os-footer__section-title\">{{ section.title }}</h3>\n        <ul class=\"os-footer__links\">\n          @for (link of section.links; track link.label) {\n          <li class=\"os-footer__link-item\">\n            @if (link.routerLink) {\n            <a [routerLink]=\"link.routerLink\" class=\"os-footer__link\" [class]=\"linkClasses()\">\n              {{ link.label }}\n            </a>\n            } @else {\n            <a\n              [href]=\"link.href\"\n              class=\"os-footer__link\"\n              [class]=\"linkClasses()\"\n              [target]=\"link.external ? '_blank' : null\"\n              [rel]=\"link.external ? 'noopener noreferrer' : null\"\n            >\n              {{ link.label }}\n            </a>\n            }\n          </li>\n          }\n        </ul>\n      </div>\n      }\n    </div>\n\n    <div class=\"os-footer__bottom\">\n      <div class=\"os-footer__copyright\">\n        <p class=\"os-footer__copyright-text\">{{ copyrightText() }}</p>\n      </div>\n\n      @if (socialLinks().length > 0) {\n      <div class=\"os-footer__social\">\n        <ul class=\"os-footer__social-links\">\n          @for (social of socialLinks(); track social.label) {\n          <li class=\"os-footer__social-item\">\n            <a\n              [href]=\"social.href\"\n              class=\"os-footer__social-link\"\n              [class]=\"socialLinkClasses()\"\n              [target]=\"social.external ? '_blank' : null\"\n              [rel]=\"social.external ? 'noopener noreferrer' : null\"\n              [attr.aria-label]=\"social.label\"\n            >\n              <span class=\"os-footer__social-icon\" [attr.aria-hidden]=\"true\">\n                {{ social.icon }}\n              </span>\n            </a>\n          </li>\n          }\n        </ul>\n      </div>\n      }\n    </div>\n  </div>\n</footer>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "copyrightText",
                    "defaultValue": "'© 2024 OrçaSonhos. Todos os direitos reservados.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "required": false
                },
                {
                    "name": "sections",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FooterSection[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "required": false
                },
                {
                    "name": "socialLinks",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FooterLink[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"minimal\" | \"extended\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "footerClasses",
                    "defaultValue": "computed(() => {\n    return [\n      `os-footer--${this.variant()}`,\n      `os-footer--${this.size()}`,\n      `os-footer--${this.theme()}`,\n    ].join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "linkClasses",
                    "defaultValue": "computed(() => {\n    return [`os-footer__link--${this.variant()}`, `os-footer__link--${this.size()}`].join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "socialLinkClasses",
                    "defaultValue": "computed(() => {\n    return [\n      `os-footer__social-link--${this.variant()}`,\n      `os-footer__social-link--${this.size()}`,\n    ].join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 114
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nexport interface FooterLink {\n  label: string;\n  href?: string;\n  routerLink?: string;\n  external?: boolean;\n  icon?: string;\n}\n\nexport interface FooterSection {\n  title: string;\n  links: FooterLink[];\n}\n\n@Component({\n  selector: 'os-footer',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: `\n    <footer class=\"os-footer\" [class]=\"footerClasses()\">\n      <div class=\"os-footer__container\">\n        <div class=\"os-footer__content\">\n          @for (section of sections(); track section.title) {\n          <div class=\"os-footer__section\">\n            <h3 class=\"os-footer__section-title\">{{ section.title }}</h3>\n            <ul class=\"os-footer__links\">\n              @for (link of section.links; track link.label) {\n              <li class=\"os-footer__link-item\">\n                @if (link.routerLink) {\n                <a [routerLink]=\"link.routerLink\" class=\"os-footer__link\" [class]=\"linkClasses()\">\n                  {{ link.label }}\n                </a>\n                } @else {\n                <a\n                  [href]=\"link.href\"\n                  class=\"os-footer__link\"\n                  [class]=\"linkClasses()\"\n                  [target]=\"link.external ? '_blank' : null\"\n                  [rel]=\"link.external ? 'noopener noreferrer' : null\"\n                >\n                  {{ link.label }}\n                </a>\n                }\n              </li>\n              }\n            </ul>\n          </div>\n          }\n        </div>\n\n        <div class=\"os-footer__bottom\">\n          <div class=\"os-footer__copyright\">\n            <p class=\"os-footer__copyright-text\">{{ copyrightText() }}</p>\n          </div>\n\n          @if (socialLinks().length > 0) {\n          <div class=\"os-footer__social\">\n            <ul class=\"os-footer__social-links\">\n              @for (social of socialLinks(); track social.label) {\n              <li class=\"os-footer__social-item\">\n                <a\n                  [href]=\"social.href\"\n                  class=\"os-footer__social-link\"\n                  [class]=\"socialLinkClasses()\"\n                  [target]=\"social.external ? '_blank' : null\"\n                  [rel]=\"social.external ? 'noopener noreferrer' : null\"\n                  [attr.aria-label]=\"social.label\"\n                >\n                  <span class=\"os-footer__social-icon\" [attr.aria-hidden]=\"true\">\n                    {{ social.icon }}\n                  </span>\n                </a>\n              </li>\n              }\n            </ul>\n          </div>\n          }\n        </div>\n      </div>\n    </footer>\n  `,\n  styleUrls: ['./os-footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[attr.role]': '\"contentinfo\"',\n    '[attr.aria-label]': '\"Footer\"',\n  },\n})\nexport class OsFooterComponent {\n  // Inputs\n  sections = input<FooterSection[]>([]);\n  copyrightText = input('© 2024 OrçaSonhos. Todos os direitos reservados.');\n  socialLinks = input<FooterLink[]>([]);\n  variant = input<'default' | 'minimal' | 'extended'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n\n  // Computed properties\n  footerClasses = computed(() => {\n    return [\n      `os-footer--${this.variant()}`,\n      `os-footer--${this.size()}`,\n      `os-footer--${this.theme()}`,\n    ].join(' ');\n  });\n\n  linkClasses = computed(() => {\n    return [`os-footer__link--${this.variant()}`, `os-footer__link--${this.size()}`].join(' ');\n  });\n\n  socialLinkClasses = computed(() => {\n    return [\n      `os-footer__social-link--${this.variant()}`,\n      `os-footer__social-link--${this.size()}`,\n    ].join(' ');\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/variables' as *;\n\n.os-footer {\n  background-color: var(--os-color-background-secondary);\n  border-top: 1px solid var(--os-color-border);\n  color: var(--os-color-text-primary);\n  width: 100%;\n\n  &__container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: var(--os-spacing-lg) var(--os-spacing-md);\n\n    @media (max-width: 767px) {\n      padding: var(--os-spacing-md) var(--os-spacing-sm);\n    }\n  }\n\n  &__content {\n    display: grid;\n    gap: var(--os-spacing-xl);\n    margin-bottom: var(--os-spacing-lg);\n\n    @media (min-width: 480px) {\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: var(--os-spacing-lg);\n    }\n\n    @media (min-width: 768px) {\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n      gap: var(--os-spacing-xl);\n    }\n  }\n\n  &__section {\n    &-title {\n      font-size: var(--os-font-size-lg);\n      font-weight: var(--os-font-weight-semibold);\n      color: var(--os-color-text-primary);\n      margin: 0 0 var(--os-spacing-sm) 0;\n    }\n  }\n\n  &__links {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  &__link-item {\n    margin-bottom: var(--os-spacing-xs);\n  }\n\n  &__link {\n    color: var(--os-color-text-secondary);\n    text-decoration: none;\n    font-size: var(--os-font-size-sm);\n    line-height: var(--os-line-height-relaxed);\n    transition: color var(--os-transition-fast);\n\n    &:hover {\n      color: var(--os-color-primary);\n      text-decoration: underline;\n    }\n\n    &:focus {\n      outline: 2px solid var(--os-color-primary);\n      outline-offset: 2px;\n    }\n  }\n\n  &__bottom {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-md);\n    padding-top: var(--os-spacing-md);\n    border-top: 1px solid var(--os-color-border);\n\n    @media (min-width: 768px) {\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n\n  &__copyright {\n    &-text {\n      font-size: var(--os-font-size-sm);\n      color: var(--os-color-text-secondary);\n      margin: 0;\n    }\n  }\n\n  &__social {\n    &-links {\n      display: flex;\n      gap: var(--os-spacing-sm);\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      flex-wrap: wrap;\n      justify-content: center;\n\n      @media (min-width: 768px) {\n        justify-content: flex-end;\n      }\n    }\n\n    &-item {\n      // No additional styles needed\n    }\n\n    &-link {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 40px;\n      height: 40px;\n      background-color: var(--os-color-background-tertiary);\n      color: var(--os-color-text-secondary);\n      border-radius: var(--os-border-radius-md);\n      text-decoration: none;\n      transition: all var(--os-transition-fast);\n\n      @media (max-width: 767px) {\n        width: 36px;\n        height: 36px;\n      }\n\n      &:hover {\n        background-color: var(--os-color-primary);\n        color: var(--os-color-white);\n        transform: translateY(-2px);\n      }\n\n      &:focus {\n        outline: 2px solid var(--os-color-primary);\n        outline-offset: 2px;\n      }\n    }\n\n    &-icon {\n      font-size: var(--os-font-size-lg);\n    }\n  }\n\n  // Variants\n  &--minimal {\n    .os-footer__content {\n      display: none;\n    }\n\n    .os-footer__container {\n      padding: var(--os-spacing-md);\n    }\n  }\n\n  &--extended {\n    .os-footer__content {\n      @media (min-width: 1024px) {\n        grid-template-columns: repeat(4, 1fr);\n      }\n    }\n  }\n\n  // Sizes\n  &--small {\n    .os-footer__container {\n      padding: var(--os-spacing-sm) var(--os-spacing-md);\n    }\n\n    .os-footer__content {\n      gap: var(--os-spacing-md);\n      margin-bottom: var(--os-spacing-md);\n    }\n\n    .os-footer__section-title {\n      font-size: var(--os-font-size-md);\n    }\n\n    .os-footer__link {\n      font-size: var(--os-font-size-xs);\n    }\n  }\n\n  &--large {\n    .os-footer__container {\n      padding: var(--os-spacing-xl) var(--os-spacing-lg);\n    }\n\n    .os-footer__content {\n      gap: var(--os-spacing-2xl);\n      margin-bottom: var(--os-spacing-xl);\n    }\n\n    .os-footer__section-title {\n      font-size: var(--os-font-size-xl);\n    }\n\n    .os-footer__link {\n      font-size: var(--os-font-size-md);\n    }\n  }\n\n  // Themes\n  &--dark {\n    background-color: var(--os-color-background-dark);\n    color: var(--os-color-text-light);\n\n    .os-footer__section-title {\n      color: var(--os-color-text-light);\n    }\n\n    .os-footer__link {\n      color: var(--os-color-text-light-secondary);\n\n      &:hover {\n        color: var(--os-color-primary-light);\n      }\n    }\n\n    .os-footer__copyright-text {\n      color: var(--os-color-text-light-secondary);\n    }\n\n    .os-footer__social-link {\n      background-color: var(--os-color-background-dark-secondary);\n      color: var(--os-color-text-light-secondary);\n\n      &:hover {\n        background-color: var(--os-color-primary-light);\n        color: var(--os-color-white);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./os-footer.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsFormFieldComponent",
            "id": "component-OsFormFieldComponent-f3755638654fee0547ebfae171b2bd200c51db0ccab2cefd9cdd3be7d041df132f2ebb5d2c97bdb767acfa16084f8d650d0c0d9239a72c041219517c047ebc4a",
            "file": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": ")"
                }
            ],
            "selector": "os-form-field",
            "styleUrls": [
                "./os-form-field.component.scss"
            ],
            "styles": [],
            "template": "<div\n  [class]=\"containerClass()\"\n  [attr.aria-invalid]=\"hasError()\"\n  [attr.aria-describedby]=\"ariaDescribedBy()\"\n  [attr.aria-required]=\"required()\"\n  role=\"group\"\n>\n  @if (label()) {\n  <os-label\n    [for]=\"fieldId()\"\n    [size]=\"size()\"\n    [variant]=\"labelVariant()\"\n    [required]=\"required()\"\n    [id]=\"fieldId() + '-label'\"\n  >\n    {{ label() }}\n  </os-label>\n  }\n\n  <div class=\"os-form-field__input-container\">\n    <os-input\n      [id]=\"fieldId()\"\n      [type]=\"type()\"\n      [placeholder]=\"placeholder()\"\n      [disabled]=\"disabled()\"\n      [readonly]=\"readonly()\"\n      [required]=\"required()\"\n      [value]=\"value()\"\n      [errorMessage]=\"errorMessage()\"\n      [helperText]=\"helperText()\"\n      [size]=\"size()\"\n      [prefixIcon]=\"prefixIcon()\"\n      [suffixIcon]=\"suffixIcon()\"\n      [clearable]=\"clearable()\"\n      [aria-invalid]=\"hasError()\"\n      (valueChange)=\"onValueChange($event)\"\n      (blurEvent)=\"onBlur($event)\"\n      (focusEvent)=\"onFocus($event)\"\n    />\n\n    @if (showValidationIcon()) {\n    <div class=\"os-form-field__validation-icon\" [attr.aria-hidden]=\"true\">\n      <os-icon\n        [name]=\"validationIconName()\"\n        [size]=\"validationIconSize()\"\n        [variant]=\"validationIconVariant()\"\n      />\n    </div>\n    }\n  </div>\n\n  @if (errorMessage() && hasError()) {\n  <div\n    class=\"os-form-field__error-message\"\n    [id]=\"fieldId() + '-error'\"\n    role=\"alert\"\n    [attr.aria-live]=\"'assertive'\"\n  >\n    <os-icon name=\"error\" size=\"sm\" variant=\"error\" />\n    <span>{{ errorMessage() }}</span>\n  </div>\n  } @else if (hintText() && !hasError()) {\n  <div class=\"os-form-field__hint\" [id]=\"fieldId() + '-hint'\" [class]=\"hintClass()\">\n    {{ hintText() }}\n  </div>\n  } @if (showCharacterCount()) {\n  <div\n    class=\"os-form-field__character-count\"\n    [id]=\"fieldId() + '-count'\"\n    [attr.aria-live]=\"'polite'\"\n  >\n    {{ characterCount() }}/{{ maxLength() }}\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "clearable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 131,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "control",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "helperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "hintText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 120,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "maxLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 135,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "prefixIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showValidationIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormFieldSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "suffixIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormFieldType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "validationState",
                    "defaultValue": "'pristine'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormFieldValidationState",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 137,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormFieldVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "focusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 142,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "validationChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormFieldValidationState",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "_dirty",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 147,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 151,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 152,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_touched",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "computed(() => {\n    const ids = [];\n    if (this.hintText() && !this.hasError()) {\n      ids.push(this.fieldId() + '-hint');\n    }\n    if (this.hasError()) {\n      ids.push(this.fieldId() + '-error');\n    }\n    if (this.showCharacterCount()) {\n      ids.push(this.fieldId() + '-count');\n    }\n    return ids.length > 0 ? ids.join(' ') : null;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 208,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "characterCount",
                    "defaultValue": "computed(() => {\n    return this.value().length;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 184,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-form-field'];\n    classes.push(`os-form-field--${this.size()}`);\n    classes.push(`os-form-field--${this.variant()}`);\n\n    if (this.disabled()) {\n      classes.push('os-form-field--disabled');\n    }\n\n    if (this.hasError()) {\n      classes.push('os-form-field--error');\n    }\n\n    if (this.required()) {\n      classes.push('os-form-field--required');\n    }\n\n    if (this.isTouched()) {\n      classes.push('os-form-field--touched');\n    }\n\n    if (this.isDirty()) {\n      classes.push('os-form-field--dirty');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 233,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "fieldId",
                    "defaultValue": "computed(() => `field-${Math.random().toString(36).substr(2, 9)}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 149,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "hasError",
                    "defaultValue": "computed(() => {\n    const control = this.control();\n    if (control) {\n      return control.invalid && (control.touched || control.dirty);\n    }\n    return !!this.errorMessage();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 160,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hintClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-form-field__hint'];\n    classes.push(`os-form-field__hint--${this.size()}`);\n\n    if (this.disabled()) {\n      classes.push('os-form-field__hint--disabled');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 222,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isDirty",
                    "defaultValue": "computed(() => {\n    const control = this.control();\n    if (control) {\n      return control.dirty;\n    }\n    return this._dirty();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 176,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isTouched",
                    "defaultValue": "computed(() => {\n    const control = this.control();\n    if (control) {\n      return control.touched;\n    }\n    return this._touched();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 168,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isValid",
                    "defaultValue": "computed(() => {\n    const control = this.control();\n    if (control) {\n      return control.valid && (control.touched || control.dirty);\n    }\n    return !this.hasError() && this.value().length > 0;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 261,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "labelVariant",
                    "defaultValue": "computed(() => {\n    if (this.hasError()) return 'error';\n    return 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 155,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "showCharacterCount",
                    "defaultValue": "computed(() => {\n    return this.maxLength() > 0;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 188,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "validationIconName",
                    "defaultValue": "computed(() => {\n    if (this.hasError()) return 'error';\n    if (this.isValid()) return 'check_circle';\n    return '';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 192,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "validationIconSize",
                    "defaultValue": "computed(() => {\n    return this.size() === 'small' ? 'xs' : 'sm';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 198,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "validationIconVariant",
                    "defaultValue": "computed(() => {\n    if (this.hasError()) return 'error';\n    if (this.isValid()) return 'success';\n    return 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 202,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 278,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 285,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onValueChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 314,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 318,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 322,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateValidationState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 289,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 308,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "OsInputComponent",
                    "type": "component"
                },
                {
                    "name": "OsLabelComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  model,\n  ChangeDetectionStrategy,\n  forwardRef,\n  signal,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  FormsModule,\n  AbstractControl,\n} from '@angular/forms';\nimport { OsInputComponent } from '../../atoms/os-input/os-input.component';\nimport { OsLabelComponent } from '../../atoms/os-label/os-label.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport type OsFormFieldSize = 'small' | 'medium' | 'large';\nexport type OsFormFieldVariant = 'default' | 'outlined' | 'filled';\nexport type OsFormFieldType = 'text' | 'email' | 'password' | 'number' | 'tel' | 'url';\nexport type OsFormFieldValidationState = 'pristine' | 'dirty' | 'touched' | 'invalid' | 'valid';\n\n@Component({\n  selector: 'os-form-field',\n  standalone: true,\n  imports: [CommonModule, FormsModule, OsInputComponent, OsLabelComponent, OsIconComponent],\n  template: `\n    <div\n      [class]=\"containerClass()\"\n      [attr.aria-invalid]=\"hasError()\"\n      [attr.aria-describedby]=\"ariaDescribedBy()\"\n      [attr.aria-required]=\"required()\"\n      role=\"group\"\n    >\n      @if (label()) {\n      <os-label\n        [for]=\"fieldId()\"\n        [size]=\"size()\"\n        [variant]=\"labelVariant()\"\n        [required]=\"required()\"\n        [id]=\"fieldId() + '-label'\"\n      >\n        {{ label() }}\n      </os-label>\n      }\n\n      <div class=\"os-form-field__input-container\">\n        <os-input\n          [id]=\"fieldId()\"\n          [type]=\"type()\"\n          [placeholder]=\"placeholder()\"\n          [disabled]=\"disabled()\"\n          [readonly]=\"readonly()\"\n          [required]=\"required()\"\n          [value]=\"value()\"\n          [errorMessage]=\"errorMessage()\"\n          [helperText]=\"helperText()\"\n          [size]=\"size()\"\n          [prefixIcon]=\"prefixIcon()\"\n          [suffixIcon]=\"suffixIcon()\"\n          [clearable]=\"clearable()\"\n          [aria-invalid]=\"hasError()\"\n          (valueChange)=\"onValueChange($event)\"\n          (blurEvent)=\"onBlur($event)\"\n          (focusEvent)=\"onFocus($event)\"\n        />\n\n        @if (showValidationIcon()) {\n        <div class=\"os-form-field__validation-icon\" [attr.aria-hidden]=\"true\">\n          <os-icon\n            [name]=\"validationIconName()\"\n            [size]=\"validationIconSize()\"\n            [variant]=\"validationIconVariant()\"\n          />\n        </div>\n        }\n      </div>\n\n      @if (errorMessage() && hasError()) {\n      <div\n        class=\"os-form-field__error-message\"\n        [id]=\"fieldId() + '-error'\"\n        role=\"alert\"\n        [attr.aria-live]=\"'assertive'\"\n      >\n        <os-icon name=\"error\" size=\"sm\" variant=\"error\" />\n        <span>{{ errorMessage() }}</span>\n      </div>\n      } @else if (hintText() && !hasError()) {\n      <div class=\"os-form-field__hint\" [id]=\"fieldId() + '-hint'\" [class]=\"hintClass()\">\n        {{ hintText() }}\n      </div>\n      } @if (showCharacterCount()) {\n      <div\n        class=\"os-form-field__character-count\"\n        [id]=\"fieldId() + '-count'\"\n        [attr.aria-live]=\"'polite'\"\n      >\n        {{ characterCount() }}/{{ maxLength() }}\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-form-field.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsFormFieldComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OsFormFieldComponent implements ControlValueAccessor {\n  // Input properties\n  readonly label = input<string>('');\n  readonly placeholder = input<string>('');\n  readonly helperText = input<string>('');\n  readonly hintText = input<string>('');\n  readonly errorMessage = input<string>('');\n  readonly type = input<OsFormFieldType>('text');\n  readonly size = input<OsFormFieldSize>('medium');\n  readonly variant = input<OsFormFieldVariant>('default');\n  readonly required = input(false);\n  readonly disabled = model(false);\n  readonly readonly = input(false);\n  readonly clearable = input(false);\n  readonly prefixIcon = input<string>('');\n  readonly suffixIcon = input<string>('');\n  readonly value = model<string>('');\n  readonly maxLength = input<number>(0);\n  readonly showValidationIcon = input(true);\n  readonly validationState = input<OsFormFieldValidationState>('pristine');\n  readonly control = input<AbstractControl | null>(null);\n\n  readonly valueChange = output<string>();\n  readonly blurEvent = output<FocusEvent>();\n  readonly focusEvent = output<FocusEvent>();\n  readonly validationChange = output<OsFormFieldValidationState>();\n\n  // Internal state\n  private readonly _touched = signal(false);\n  private readonly _dirty = signal(false);\n\n  protected fieldId = computed(() => `field-${Math.random().toString(36).substr(2, 9)}`);\n\n  private _onChange = (value: string) => {};\n  private _onTouched = () => {};\n\n  // Computed properties\n  protected labelVariant = computed(() => {\n    if (this.hasError()) return 'error';\n    return 'default';\n  });\n\n  readonly hasError = computed(() => {\n    const control = this.control();\n    if (control) {\n      return control.invalid && (control.touched || control.dirty);\n    }\n    return !!this.errorMessage();\n  });\n\n  readonly isTouched = computed(() => {\n    const control = this.control();\n    if (control) {\n      return control.touched;\n    }\n    return this._touched();\n  });\n\n  readonly isDirty = computed(() => {\n    const control = this.control();\n    if (control) {\n      return control.dirty;\n    }\n    return this._dirty();\n  });\n\n  readonly characterCount = computed(() => {\n    return this.value().length;\n  });\n\n  readonly showCharacterCount = computed(() => {\n    return this.maxLength() > 0;\n  });\n\n  readonly validationIconName = computed(() => {\n    if (this.hasError()) return 'error';\n    if (this.isValid()) return 'check_circle';\n    return '';\n  });\n\n  readonly validationIconSize = computed(() => {\n    return this.size() === 'small' ? 'xs' : 'sm';\n  });\n\n  readonly validationIconVariant = computed(() => {\n    if (this.hasError()) return 'error';\n    if (this.isValid()) return 'success';\n    return 'default';\n  });\n\n  readonly ariaDescribedBy = computed(() => {\n    const ids = [];\n    if (this.hintText() && !this.hasError()) {\n      ids.push(this.fieldId() + '-hint');\n    }\n    if (this.hasError()) {\n      ids.push(this.fieldId() + '-error');\n    }\n    if (this.showCharacterCount()) {\n      ids.push(this.fieldId() + '-count');\n    }\n    return ids.length > 0 ? ids.join(' ') : null;\n  });\n\n  readonly hintClass = computed(() => {\n    const classes = ['os-form-field__hint'];\n    classes.push(`os-form-field__hint--${this.size()}`);\n\n    if (this.disabled()) {\n      classes.push('os-form-field__hint--disabled');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly containerClass = computed(() => {\n    const classes = ['os-form-field'];\n    classes.push(`os-form-field--${this.size()}`);\n    classes.push(`os-form-field--${this.variant()}`);\n\n    if (this.disabled()) {\n      classes.push('os-form-field--disabled');\n    }\n\n    if (this.hasError()) {\n      classes.push('os-form-field--error');\n    }\n\n    if (this.required()) {\n      classes.push('os-form-field--required');\n    }\n\n    if (this.isTouched()) {\n      classes.push('os-form-field--touched');\n    }\n\n    if (this.isDirty()) {\n      classes.push('os-form-field--dirty');\n    }\n\n    return classes.join(' ');\n  });\n\n  private isValid = computed(() => {\n    const control = this.control();\n    if (control) {\n      return control.valid && (control.touched || control.dirty);\n    }\n    return !this.hasError() && this.value().length > 0;\n  });\n\n  onValueChange(value: string): void {\n    this.value.set(value);\n    this.valueChange.emit(value);\n    this._onChange(value);\n\n    this._dirty.set(true);\n    this.updateValidationState();\n  }\n\n  onBlur(event: FocusEvent): void {\n    this.blurEvent.emit(event);\n    this._onTouched();\n    this._touched.set(true);\n    this.updateValidationState();\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.focusEvent.emit(event);\n  }\n\n  private updateValidationState(): void {\n    const control = this.control();\n    let state: OsFormFieldValidationState = 'pristine';\n\n    if (control) {\n      if (control.touched) state = 'touched';\n      if (control.dirty) state = 'dirty';\n      if (control.invalid) state = 'invalid';\n      if (control.valid) state = 'valid';\n    } else {\n      if (this._touched()) state = 'touched';\n      if (this._dirty()) state = 'dirty';\n      if (this.hasError()) state = 'invalid';\n      if (this.isValid()) state = 'valid';\n    }\n\n    this.validationChange.emit(state);\n  }\n\n  writeValue(value: string): void {\n    if (value !== this.value()) {\n      this.value.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-form-field {\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-xs);\n  width: 100%;\n  position: relative;\n\n  &--small {\n    gap: var(--os-spacing-xs);\n  }\n\n  &--medium {\n    gap: var(--os-spacing-sm);\n  }\n\n  &--large {\n    gap: var(--os-spacing-md);\n  }\n\n  &--default {\n  }\n\n  &--outlined {\n    .os-form-field__hint {\n      border-left: var(--os-border-width-thin) solid var(--os-color-primary-300);\n      padding-left: var(--os-spacing-sm);\n    }\n  }\n\n  &--filled {\n    background-color: var(--os-color-surface-variant);\n    padding: var(--os-spacing-sm);\n    border-radius: var(--os-border-radius-md);\n    border: var(--os-border-width-thin) solid transparent;\n\n    &:focus-within {\n      border-color: var(--os-color-primary-500);\n      background-color: var(--os-color-surface);\n    }\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--error {\n    .os-form-field__hint {\n      color: var(--os-color-error);\n    }\n  }\n\n  &--required {\n  }\n\n  &--touched {\n    .os-form-field__validation-icon {\n      opacity: 1;\n    }\n  }\n\n  &--dirty {\n    .os-form-field__validation-icon {\n      opacity: 1;\n    }\n  }\n\n  &__input-container {\n    position: relative;\n    display: flex;\n    align-items: center;\n  }\n\n  &__validation-icon {\n    position: absolute;\n    right: var(--os-spacing-sm);\n    top: 50%;\n    transform: translateY(-50%);\n    opacity: 0;\n    transition: opacity var(--os-transition-fast);\n    z-index: 1;\n    pointer-events: none;\n  }\n\n  &__error-message {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-xs);\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-error);\n    margin-top: var(--os-spacing-xs);\n    font-weight: var(--os-font-weight-medium);\n    line-height: var(--os-line-height-tight);\n    animation: shake 0.3s ease-in-out;\n\n    @media (prefers-reduced-motion: reduce) {\n      animation: none;\n    }\n  }\n\n  &__hint {\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-on-surface-variant);\n    margin-top: var(--os-spacing-xs);\n    transition: color var(--os-transition-fast);\n    line-height: var(--os-line-height-normal);\n\n    &--small {\n      font-size: var(--os-font-size-xs);\n    }\n\n    &--medium {\n      font-size: var(--os-font-size-sm);\n    }\n\n    &--large {\n      font-size: var(--os-font-size-base);\n    }\n\n    &--disabled {\n      color: var(--os-color-on-surface-variant);\n      opacity: 0.6;\n    }\n  }\n\n  &__character-count {\n    font-size: var(--os-font-size-xs);\n    color: var(--os-color-on-surface-variant);\n    margin-top: var(--os-spacing-xs);\n    text-align: right;\n    opacity: 0.7;\n    transition: color var(--os-transition-fast);\n\n    &:focus-within {\n      color: var(--os-color-primary-600);\n    }\n  }\n\n  @media (max-width: 768px) {\n    &--large {\n      gap: var(--os-spacing-sm);\n    }\n\n    &__validation-icon {\n      right: var(--os-spacing-xs);\n    }\n  }\n\n  @media (max-width: 480px) {\n    gap: var(--os-spacing-xs);\n\n    &__hint {\n      font-size: var(--os-font-size-xs);\n    }\n\n    &__error-message {\n      font-size: var(--os-font-size-xs);\n    }\n\n    &__character-count {\n      font-size: var(--os-font-size-xs);\n    }\n  }\n}\n\n.os-form-field:focus-within {\n  .os-form-field__hint {\n    color: var(--os-color-primary-600);\n  }\n}\n\n.os-form-field--error {\n  .os-form-field__hint {\n    color: var(--os-color-error);\n    font-weight: var(--os-font-weight-medium);\n  }\n}\n\n.os-form-field {\n  &:focus-within {\n    outline: none;\n  }\n\n  @media (prefers-contrast: high) {\n    &--error {\n      .os-form-field__hint {\n        color: var(--os-color-error);\n        font-weight: var(--os-font-weight-bold);\n      }\n\n      .os-form-field__error-message {\n        color: var(--os-color-error);\n        font-weight: var(--os-font-weight-bold);\n      }\n    }\n  }\n\n  @media (prefers-reduced-motion: reduce) {\n    .os-form-field__hint,\n    .os-form-field__validation-icon,\n    .os-form-field__character-count {\n      transition: none;\n    }\n\n    .os-form-field__error-message {\n      animation: none;\n    }\n  }\n}\n\n@keyframes shake {\n  0%,\n  100% {\n    transform: translateX(0);\n  }\n  10%,\n  30%,\n  50%,\n  70%,\n  90% {\n    transform: translateX(-2px);\n  }\n  20%,\n  40%,\n  60%,\n  80% {\n    transform: translateX(2px);\n  }\n}\n\n[data-theme='dark'] {\n  .os-form-field {\n    &--filled {\n      background-color: var(--os-color-surface-variant);\n\n      &:focus-within {\n        background-color: var(--os-color-surface);\n        border-color: var(--os-color-primary-400);\n      }\n    }\n\n    &__hint {\n      color: var(--os-color-on-surface-variant);\n    }\n\n    &__character-count {\n      color: var(--os-color-on-surface-variant);\n    }\n  }\n}\n\n// High contrast mode support\n@media (prefers-contrast: high) {\n  .os-form-field {\n    &--error {\n      .os-form-field__error-message {\n        border: 1px solid var(--os-color-error);\n        padding: var(--os-spacing-xs);\n        border-radius: var(--os-border-radius-sm);\n      }\n    }\n  }\n}\n\n// Touch target optimization for mobile\n@media (max-width: 768px) {\n  .os-form-field {\n    &__validation-icon {\n      width: 20px;\n      height: 20px;\n    }\n  }\n}\n",
                    "styleUrl": "./os-form-field.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "OsFormGroupComponent",
            "id": "component-OsFormGroupComponent-c9a2617ad9ab48fad499301e1293266de8dda98843cd158a76866fc3908f8de2df67c93e38410deba94339b11a5948d78b747f3e49a85b7c0d3e6a9169d4b7b8",
            "file": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-form-group",
            "styleUrls": [],
            "styles": [],
            "template": "<fieldset\n  class=\"os-form-group\"\n  [class]=\"formGroupClasses()\"\n  [attr.data-variant]=\"variant()\"\n  [attr.data-size]=\"size()\"\n  [attr.data-columns]=\"effectiveColumns()\"\n  [attr.disabled]=\"disabled() ? '' : null\"\n  [attr.aria-invalid]=\"invalid()\"\n  [attr.aria-describedby]=\"ariaDescribedby()\"\n  [attr.aria-required]=\"required()\"\n>\n  @if (title()) {\n  <legend class=\"os-form-group__title\" [id]=\"legendId()\">\n    {{ title() }}\n  </legend>\n  } @if (description()) {\n  <div class=\"os-form-group__description\" [id]=\"descriptionId()\">\n    {{ description() }}\n  </div>\n  } @if (invalid() && errorMessage()) {\n  <div\n    class=\"os-form-group__error\"\n    [id]=\"errorId()\"\n    role=\"alert\"\n    aria-live=\"polite\"\n  >\n    {{ errorMessage() }}\n  </div>\n  }\n\n  <div class=\"os-form-group__content\">\n    <ng-content></ng-content>\n  </div>\n\n  @if (helperText() && !invalid()) {\n  <div class=\"os-form-group__helper\" [id]=\"helperId()\">\n    {{ helperText() }}\n  </div>\n  }\n</fieldset>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "columns",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormGroupColumns",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "required": false
                },
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "required": false
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "helperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "required": false
                },
                {
                    "name": "invalid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormGroupSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormGroupVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ariaDescribedby",
                    "defaultValue": "computed(() => {\n    const ids: string[] = [];\n    if (this.description()) ids.push(this.descriptionId());\n    if (this.invalid() && this.errorMessage()) ids.push(this.errorId());\n    if (this.helperText() && !this.invalid()) ids.push(this.helperId());\n    return ids.length > 0 ? ids.join(' ') : null;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "descriptionId",
                    "defaultValue": "computed(() => `os-form-group-desc-${this.generateId()}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "effectiveColumns",
                    "defaultValue": "computed(() => {\n    return this.isMobile() ? 1 : this.columns();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "errorId",
                    "defaultValue": "computed(() => `os-form-group-error-${this.generateId()}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "formGroupClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-form-group'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-form-group--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-form-group--${this.size()}`);\n    }\n\n    if (this.required()) {\n      classes.push('os-form-group--required');\n    }\n\n    if (this.disabled()) {\n      classes.push('os-form-group--disabled');\n    }\n\n    if (this.invalid()) {\n      classes.push('os-form-group--invalid');\n    }\n\n    if (this.effectiveColumns() > 1) {\n      classes.push(`os-form-group--columns-${this.effectiveColumns()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "helperId",
                    "defaultValue": "computed(() => `os-form-group-helper-${this.generateId()}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "isMobile",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "legendId",
                    "defaultValue": "computed(() => `os-form-group-legend-${this.generateId()}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 85
                }
            ],
            "methodsClass": [
                {
                    "name": "generateId",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  computed,\n  inject,\n  signal,\n  ChangeDetectionStrategy,\n  effect,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nexport type OsFormGroupVariant = 'default' | 'compact' | 'spaced';\nexport type OsFormGroupSize = 'small' | 'medium' | 'large';\nexport type OsFormGroupColumns = 1 | 2 | 3;\n\n@Component({\n  selector: 'os-form-group',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <fieldset\n      class=\"os-form-group\"\n      [class]=\"formGroupClasses()\"\n      [attr.data-variant]=\"variant()\"\n      [attr.data-size]=\"size()\"\n      [attr.data-columns]=\"effectiveColumns()\"\n      [attr.disabled]=\"disabled() ? '' : null\"\n      [attr.aria-invalid]=\"invalid()\"\n      [attr.aria-describedby]=\"ariaDescribedby()\"\n      [attr.aria-required]=\"required()\"\n    >\n      @if (title()) {\n      <legend class=\"os-form-group__title\" [id]=\"legendId()\">\n        {{ title() }}\n      </legend>\n      } @if (description()) {\n      <div class=\"os-form-group__description\" [id]=\"descriptionId()\">\n        {{ description() }}\n      </div>\n      } @if (invalid() && errorMessage()) {\n      <div\n        class=\"os-form-group__error\"\n        [id]=\"errorId()\"\n        role=\"alert\"\n        aria-live=\"polite\"\n      >\n        {{ errorMessage() }}\n      </div>\n      }\n\n      <div class=\"os-form-group__content\">\n        <ng-content></ng-content>\n      </div>\n\n      @if (helperText() && !invalid()) {\n      <div class=\"os-form-group__helper\" [id]=\"helperId()\">\n        {{ helperText() }}\n      </div>\n      }\n    </fieldset>\n  `,\n  styleUrl: './os-form-group.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-form-group-host',\n  },\n})\nexport class OsFormGroupComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  title = input<string>('');\n  description = input<string>('');\n  helperText = input<string>('');\n  errorMessage = input<string>('');\n  variant = input<OsFormGroupVariant>('default');\n  size = input<OsFormGroupSize>('medium');\n  columns = input<OsFormGroupColumns>(1);\n  required = input<boolean>(false);\n  disabled = input<boolean>(false);\n  invalid = input<boolean>(false);\n\n  isMobile = signal<boolean>(false);\n\n  legendId = computed(() => `os-form-group-legend-${this.generateId()}`);\n  descriptionId = computed(() => `os-form-group-desc-${this.generateId()}`);\n  helperId = computed(() => `os-form-group-helper-${this.generateId()}`);\n  errorId = computed(() => `os-form-group-error-${this.generateId()}`);\n\n  ariaDescribedby = computed(() => {\n    const ids: string[] = [];\n    if (this.description()) ids.push(this.descriptionId());\n    if (this.invalid() && this.errorMessage()) ids.push(this.errorId());\n    if (this.helperText() && !this.invalid()) ids.push(this.helperId());\n    return ids.length > 0 ? ids.join(' ') : null;\n  });\n\n  effectiveColumns = computed(() => {\n    return this.isMobile() ? 1 : this.columns();\n  });\n\n  formGroupClasses = computed(() => {\n    const classes = ['os-form-group'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-form-group--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-form-group--${this.size()}`);\n    }\n\n    if (this.required()) {\n      classes.push('os-form-group--required');\n    }\n\n    if (this.disabled()) {\n      classes.push('os-form-group--disabled');\n    }\n\n    if (this.invalid()) {\n      classes.push('os-form-group--invalid');\n    }\n\n    if (this.effectiveColumns() > 1) {\n      classes.push(`os-form-group--columns-${this.effectiveColumns()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  constructor() {\n    effect(() => {\n      this.breakpointObserver\n        .observe([Breakpoints.XSmall, Breakpoints.Small])\n        .subscribe((result) => {\n          this.isMobile.set(result.matches);\n        });\n    });\n  }\n\n  private generateId(): string {\n    return Math.random().toString(36).substring(2, 11);\n  }\n}\n",
            "styleUrl": "./os-form-group.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 130
            },
            "extends": []
        },
        {
            "name": "OsFormSectionComponent",
            "id": "component-OsFormSectionComponent-4f8e0861363fb3fb157a932e24b71e57f14adcc42168e2547ba17472a14df1e8d8eeea93f099ad2ba01f35b4270fa126802539495b54414aed582212615cce75",
            "file": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-form-section",
            "styleUrls": [],
            "styles": [],
            "template": "<section [class]=\"sectionClasses()\" [attr.aria-labelledby]=\"titleId()\">\n  @if (title()) {\n  <header class=\"os-form-section__header\">\n    <h2 [id]=\"titleId()\" class=\"os-form-section__title\">\n      {{ title() }}\n    </h2>\n    @if (description()) {\n    <p [id]=\"descriptionId()\" class=\"os-form-section__description\">\n      {{ description() }}\n    </p>\n    }\n  </header>\n  }\n\n  <div class=\"os-form-section__content\">\n    @if (fields().length > 0) {\n    <os-form-group\n      [title]=\"groupTitle()\"\n      [description]=\"groupDescription()\"\n      [variant]=\"groupVariant()\"\n      [size]=\"size()\"\n      [required]=\"required()\"\n    >\n      <ng-content></ng-content>\n    </os-form-group>\n    } @else {\n    <ng-content></ng-content>\n    }\n  </div>\n\n  @if (actions().length > 0) {\n  <footer class=\"os-form-section__actions\">\n    <ng-content select=\"[slot=actions]\"></ng-content>\n  </footer>\n  }\n</section>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ label: string; variant?: string; disabled?: boolean }[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "required": false
                },
                {
                    "name": "collapsed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "required": false
                },
                {
                    "name": "collapsible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "required": false
                },
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "required": false
                },
                {
                    "name": "fields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormSectionField[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "required": false
                },
                {
                    "name": "groupDescription",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "required": false
                },
                {
                    "name": "groupTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormSectionSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormSectionTheme",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFormSectionVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "descriptionId",
                    "defaultValue": "computed(\n    () => `form-section-description-${Math.random().toString(36).substr(2, 9)}`\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "groupVariant",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'default' | 'compact' | 'spaced'> = {\n      small: 'compact',\n      medium: 'default',\n      large: 'spaced',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "sectionClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-form-section'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-form-section--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-form-section--${this.size()}`);\n    }\n\n    if (this.theme() === 'dark') {\n      classes.push('os-form-section--dark');\n    }\n\n    if (this.collapsible()) {\n      classes.push('os-form-section--collapsible');\n    }\n\n    if (this.collapsed()) {\n      classes.push('os-form-section--collapsed');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-form-section--with-actions');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "titleId",
                    "defaultValue": "computed(\n    () => `form-section-title-${Math.random().toString(36).substr(2, 9)}`\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsFormGroupComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OsFormGroupComponent } from '../../molecules/os-form-group/os-form-group.component';\n\nexport type OsFormSectionVariant = 'default' | 'card' | 'outlined' | 'minimal';\nexport type OsFormSectionSize = 'small' | 'medium' | 'large';\nexport type OsFormSectionTheme = 'light' | 'dark';\n\nexport interface FormSectionField {\n  id: string;\n  label: string;\n  type:\n    | 'text'\n    | 'email'\n    | 'password'\n    | 'number'\n    | 'tel'\n    | 'url'\n    | 'textarea'\n    | 'select'\n    | 'checkbox'\n    | 'radio';\n  required?: boolean;\n  placeholder?: string;\n  options?: { value: string; label: string }[];\n  validation?: {\n    min?: number;\n    max?: number;\n    pattern?: string;\n    message?: string;\n  };\n}\n\n@Component({\n  selector: 'os-form-section',\n  imports: [CommonModule, OsFormGroupComponent],\n  template: `\n    <section [class]=\"sectionClasses()\" [attr.aria-labelledby]=\"titleId()\">\n      @if (title()) {\n      <header class=\"os-form-section__header\">\n        <h2 [id]=\"titleId()\" class=\"os-form-section__title\">\n          {{ title() }}\n        </h2>\n        @if (description()) {\n        <p [id]=\"descriptionId()\" class=\"os-form-section__description\">\n          {{ description() }}\n        </p>\n        }\n      </header>\n      }\n\n      <div class=\"os-form-section__content\">\n        @if (fields().length > 0) {\n        <os-form-group\n          [title]=\"groupTitle()\"\n          [description]=\"groupDescription()\"\n          [variant]=\"groupVariant()\"\n          [size]=\"size()\"\n          [required]=\"required()\"\n        >\n          <ng-content></ng-content>\n        </os-form-group>\n        } @else {\n        <ng-content></ng-content>\n        }\n      </div>\n\n      @if (actions().length > 0) {\n      <footer class=\"os-form-section__actions\">\n        <ng-content select=\"[slot=actions]\"></ng-content>\n      </footer>\n      }\n    </section>\n  `,\n  styleUrl: './os-form-section.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[attr.role]': '\"region\"',\n    '[attr.aria-labelledby]': 'titleId()',\n  },\n})\nexport class OsFormSectionComponent {\n  title = input<string>('');\n  description = input<string>('');\n  groupTitle = input<string>('');\n  groupDescription = input<string>('');\n  fields = input<FormSectionField[]>([]);\n  actions = input<{ label: string; variant?: string; disabled?: boolean }[]>([]);\n  variant = input<OsFormSectionVariant>('default');\n  size = input<OsFormSectionSize>('medium');\n  theme = input<OsFormSectionTheme>('light');\n  required = input(false);\n  collapsible = input(false);\n  collapsed = input(false);\n\n  readonly titleId = computed(\n    () => `form-section-title-${Math.random().toString(36).substr(2, 9)}`\n  );\n  readonly descriptionId = computed(\n    () => `form-section-description-${Math.random().toString(36).substr(2, 9)}`\n  );\n\n  readonly sectionClasses = computed(() => {\n    const classes = ['os-form-section'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-form-section--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-form-section--${this.size()}`);\n    }\n\n    if (this.theme() === 'dark') {\n      classes.push('os-form-section--dark');\n    }\n\n    if (this.collapsible()) {\n      classes.push('os-form-section--collapsible');\n    }\n\n    if (this.collapsed()) {\n      classes.push('os-form-section--collapsed');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-form-section--with-actions');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly groupVariant = computed(() => {\n    const sizeMap: Record<string, 'default' | 'compact' | 'spaced'> = {\n      small: 'compact',\n      medium: 'default',\n      large: 'spaced',\n    };\n    return sizeMap[this.size()];\n  });\n}\n",
            "styleUrl": "./os-form-section.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsFormTemplateComponent",
            "id": "component-OsFormTemplateComponent-2cb1763f4a7013ba9b2987c1d8979abdfb2658b5c8e6f196459c204f55d66d2f5e61cb4cb1430f0b28e9e8b68e6a7a4700ce6e70663649ba2e4bb2ca4f8aa28e",
            "file": "src/app/shared/ui-components/templates/os-form-template/os-form-template.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-form-template",
            "styleUrls": [
                "./os-form-template.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"templateClass()\">\n  @if (showHeader()) {\n  <os-page-header\n    [variant]=\"headerVariant()\"\n    [size]=\"size()\"\n    [title]=\"config().title\"\n    [subtitle]=\"config().subtitle || null\"\n    [actions]=\"headerActions()\"\n  />\n  }\n\n  <div class=\"os-form-template__content\">\n    <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"cardClass()\">\n      @if (showProgress() && progressValue() !== undefined) {\n      <div class=\"os-form-template__progress\">\n        <os-progress-bar\n          [variant]=\"'primary'\"\n          [size]=\"size()\"\n          [value]=\"progressValue()\"\n          [label]=\"'Progresso: ' + progressValue() + '%'\"\n        />\n      </div>\n      }\n\n      <div class=\"os-form-template__form\">\n        <ng-content />\n      </div>\n\n      @if (showActions()) {\n      <div class=\"os-form-template__actions\">\n        @if (config().showCancelButton) {\n        <os-button\n          [variant]=\"'secondary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled()\"\n          (click)=\"cancelClick.emit()\"\n        >\n          {{ config().cancelButtonText || 'Cancelar' }}\n        </os-button>\n        } @if (config().showSaveButton) {\n        <os-button\n          [variant]=\"'primary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled() || !isFormValid()\"\n          [loading]=\"loading()\"\n          (click)=\"save.emit()\"\n        >\n          {{ config().saveButtonText || 'Salvar' }}\n        </os-button>\n        } @for (action of config().actions; track action.label) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"action.size\"\n          [disabled]=\"action.disabled || disabled()\"\n          [loading]=\"action.loading || false\"\n          [icon]=\"action.icon || ''\"\n          (click)=\"actionClick.emit(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </os-card>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormTemplateConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "required": true
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 120,
                    "required": false
                },
                {
                    "name": "form",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "required": false
                },
                {
                    "name": "showActions",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "required": false
                },
                {
                    "name": "showHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "required": false
                },
                {
                    "name": "showProgress",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 119,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{    label: string;    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';    size: 'small' | 'medium' | 'large';    disabled?: boolean;    loading?: boolean;    icon?: string;  }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "required": false
                },
                {
                    "name": "cancelClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "required": false
                },
                {
                    "name": "save",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "cardClass",
                    "defaultValue": "computed(() => {\n    return ['os-form-template__card', `os-form-template__card--${this.variant()}`]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 151,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "cardVariant",
                    "defaultValue": "computed(() => {\n    const variant = this.variant();\n    return variant === 'detailed' ? 'elevated' : 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 162,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "headerActions",
                    "defaultValue": "computed(() => {\n    if (!this.showHeader()) return [];\n\n    const actions = [];\n\n    if (this.config().showBackButton && this.config().backUrl) {\n      actions.push({\n        label: 'Voltar',\n        variant: 'secondary' as const,\n        size: this.size(),\n        icon: 'arrow-left',\n      });\n    }\n\n    return actions;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 167,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "headerVariant",
                    "defaultValue": "computed(() => {\n    const variant = this.variant();\n    return variant === 'compact' ? 'compact' : 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 157,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isFormValid",
                    "defaultValue": "computed(() => {\n    const form = this.form();\n    return form ? form.valid : true;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 188,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "progressValue",
                    "defaultValue": "computed(() => {\n    return this.config().progressValue || 0;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 184,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "templateClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-form-template',\n      `os-form-template--${this.variant()}`,\n      `os-form-template--${this.size()}`,\n      `os-form-template--${this.theme()}`,\n      this.disabled() ? 'os-form-template--disabled' : '',\n      this.loading() ? 'os-form-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                },
                {
                    "name": "OsCardComponent",
                    "type": "component"
                },
                {
                    "name": "OsProgressBarComponent",
                    "type": "component"
                },
                {
                    "name": "OsPageHeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormGroup } from '@angular/forms';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsPageHeaderComponent } from '../../organisms/os-page-header/os-page-header.component';\n\nexport interface FormTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showBackButton?: boolean;\n  backUrl?: string;\n  showSaveButton?: boolean;\n  showCancelButton?: boolean;\n  saveButtonText?: string;\n  cancelButtonText?: string;\n  showProgress?: boolean;\n  progressValue?: number;\n  showActions?: boolean;\n  actions?: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }[];\n}\n\n@Component({\n  selector: 'os-form-template',\n  template: `\n    <div [class]=\"templateClass()\">\n      @if (showHeader()) {\n      <os-page-header\n        [variant]=\"headerVariant()\"\n        [size]=\"size()\"\n        [title]=\"config().title\"\n        [subtitle]=\"config().subtitle || null\"\n        [actions]=\"headerActions()\"\n      />\n      }\n\n      <div class=\"os-form-template__content\">\n        <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"cardClass()\">\n          @if (showProgress() && progressValue() !== undefined) {\n          <div class=\"os-form-template__progress\">\n            <os-progress-bar\n              [variant]=\"'primary'\"\n              [size]=\"size()\"\n              [value]=\"progressValue()\"\n              [label]=\"'Progresso: ' + progressValue() + '%'\"\n            />\n          </div>\n          }\n\n          <div class=\"os-form-template__form\">\n            <ng-content />\n          </div>\n\n          @if (showActions()) {\n          <div class=\"os-form-template__actions\">\n            @if (config().showCancelButton) {\n            <os-button\n              [variant]=\"'secondary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled()\"\n              (click)=\"cancelClick.emit()\"\n            >\n              {{ config().cancelButtonText || 'Cancelar' }}\n            </os-button>\n            } @if (config().showSaveButton) {\n            <os-button\n              [variant]=\"'primary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled() || !isFormValid()\"\n              [loading]=\"loading()\"\n              (click)=\"save.emit()\"\n            >\n              {{ config().saveButtonText || 'Salvar' }}\n            </os-button>\n            } @for (action of config().actions; track action.label) {\n            <os-button\n              [variant]=\"action.variant\"\n              [size]=\"action.size\"\n              [disabled]=\"action.disabled || disabled()\"\n              [loading]=\"action.loading || false\"\n              [icon]=\"action.icon || ''\"\n              (click)=\"actionClick.emit(action)\"\n            >\n              {{ action.label }}\n            </os-button>\n            }\n          </div>\n          }\n        </os-card>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./os-form-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    OsButtonComponent,\n    OsCardComponent,\n    OsProgressBarComponent,\n    OsPageHeaderComponent,\n  ],\n})\nexport class OsFormTemplateComponent {\n  config = input.required<FormTemplateConfig>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n  form = input<FormGroup | null>(null);\n  showHeader = input(true);\n  showProgress = input(true);\n  showActions = input(true);\n\n  save = output<void>();\n  cancelClick = output<void>();\n  actionClick = output<{\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }>();\n\n  protected templateClass = computed(() => {\n    return [\n      'os-form-template',\n      `os-form-template--${this.variant()}`,\n      `os-form-template--${this.size()}`,\n      `os-form-template--${this.theme()}`,\n      this.disabled() ? 'os-form-template--disabled' : '',\n      this.loading() ? 'os-form-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected cardClass = computed(() => {\n    return ['os-form-template__card', `os-form-template__card--${this.variant()}`]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected headerVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'compact' ? 'compact' : 'default';\n  });\n\n  protected cardVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'detailed' ? 'elevated' : 'default';\n  });\n\n  protected headerActions = computed(() => {\n    if (!this.showHeader()) return [];\n\n    const actions = [];\n\n    if (this.config().showBackButton && this.config().backUrl) {\n      actions.push({\n        label: 'Voltar',\n        variant: 'secondary' as const,\n        size: this.size(),\n        icon: 'arrow-left',\n      });\n    }\n\n    return actions;\n  });\n\n  protected progressValue = computed(() => {\n    return this.config().progressValue || 0;\n  });\n\n  protected isFormValid = computed(() => {\n    const form = this.form();\n    return form ? form.valid : true;\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens' as tokens;\n\n.os-form-template {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: var(--os-color-background-primary);\n  color: var(--os-color-text-primary);\n\n  &--small {\n    .os-form-template__content {\n      max-width: 600px;\n    }\n  }\n\n  &--medium {\n    .os-form-template__content {\n      max-width: 800px;\n    }\n  }\n\n  &--large {\n    .os-form-template__content {\n      max-width: 1200px;\n    }\n  }\n\n  &--compact {\n    .os-form-template__content {\n      padding: var(--os-spacing-md);\n    }\n\n    .os-form-template__form {\n      padding: var(--os-spacing-lg);\n    }\n  }\n\n  &--detailed {\n    .os-form-template__content {\n      padding: var(--os-spacing-xl);\n    }\n\n    .os-form-template__form {\n      padding: var(--os-spacing-2xl);\n    }\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--loading {\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: rgba(255, 255, 255, 0.8);\n      z-index: 10;\n    }\n  }\n\n  &__content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    padding: var(--os-spacing-lg);\n    width: 100%;\n  }\n\n  &__progress {\n    margin-bottom: var(--os-spacing-lg);\n    padding: var(--os-spacing-md);\n    background-color: var(--os-color-background-secondary);\n    border-radius: var(--os-border-radius-md);\n  }\n\n  &__form {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-lg);\n  }\n\n  &__actions {\n    display: flex;\n    gap: var(--os-spacing-md);\n    justify-content: flex-end;\n    align-items: center;\n    padding-top: var(--os-spacing-lg);\n    border-top: 1px solid var(--os-color-border-primary);\n    margin-top: var(--os-spacing-lg);\n\n    @media (max-width: 768px) {\n      flex-direction: column;\n      gap: var(--os-spacing-sm);\n    }\n  }\n\n  &__card {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n\n    &--compact {\n      .os-form-template__form {\n        padding: var(--os-spacing-md);\n      }\n    }\n\n    &--detailed {\n      .os-form-template__form {\n        padding: var(--os-spacing-2xl);\n      }\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .os-form-template {\n    &__content {\n      padding: var(--os-spacing-md);\n    }\n\n    &__form {\n      padding: var(--os-spacing-md);\n    }\n\n    &__actions {\n      flex-direction: column;\n      gap: var(--os-spacing-sm);\n    }\n  }\n}\n\n@media (max-width: 1024px) {\n  .os-form-template {\n    &__content {\n      padding: var(--os-spacing-md);\n    }\n  }\n}\n\n@media (min-width: 1200px) {\n  .os-form-template {\n    &__content {\n      padding: var(--os-spacing-xl);\n    }\n  }\n}\n",
                    "styleUrl": "./os-form-template.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsGoalProgressComponent",
            "id": "component-OsGoalProgressComponent-d791e4462d9252a8bc30754ef19d58bed84481cd962c9a132fa47e39bebec1d75ab5b1611dfaeaf14d5ff1f57762470a9b922cb015e681395d51e1fb343dd7e5",
            "file": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-goal-progress",
            "styleUrls": [
                "./os-goal-progress.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"os-goal-progress\" [class]=\"goalClasses()\" [attr.aria-label]=\"ariaLabel()\">\n  <div class=\"os-goal-progress__header\">\n    @if (showIcon()) {\n    <div class=\"os-goal-progress__icon\">\n      <os-icon [name]=\"iconName()\" [size]=\"iconSize()\" [attr.aria-hidden]=\"true\" />\n    </div>\n    }\n\n    <div class=\"os-goal-progress__title-section\">\n      <h3 class=\"os-goal-progress__title\" [id]=\"titleId()\">\n        {{ goalData().title }}\n      </h3>\n      @if (goalData().description && showDescription()) {\n      <p class=\"os-goal-progress__description\" [id]=\"descriptionId()\">\n        {{ goalData().description }}\n      </p>\n      }\n    </div>\n\n    @if (showCategory() && goalData().category) {\n    <div class=\"os-goal-progress__category\">\n      <span class=\"os-goal-progress__category-text\">{{ goalData().category }}</span>\n    </div>\n    }\n  </div>\n\n  <div class=\"os-goal-progress__content\">\n    <div class=\"os-goal-progress__amounts\">\n      <div class=\"os-goal-progress__current\">\n        <os-money-display\n          [value]=\"goalData().currentAmount\"\n          [currency]=\"goalData().currency\"\n          [variant]=\"currentAmountVariant()\"\n          [size]=\"amountSize()\"\n        />\n        <span class=\"os-goal-progress__current-label\">Arrecadado</span>\n      </div>\n\n      <div class=\"os-goal-progress__target\">\n        <os-money-display\n          [value]=\"goalData().targetAmount\"\n          [currency]=\"goalData().currency\"\n          [variant]=\"targetAmountVariant()\"\n          [size]=\"amountSize()\"\n        />\n        <span class=\"os-goal-progress__target-label\">Meta</span>\n      </div>\n    </div>\n\n    <div class=\"os-goal-progress__progress\">\n      <os-progress-bar\n        [value]=\"progressPercentage()\"\n        [variant]=\"progressVariant()\"\n        [size]=\"progressSize()\"\n        [showPercentage]=\"showPercentage()\"\n        [animated]=\"animated()\"\n        [showCelebration]=\"shouldShowCelebration()\"\n        [celebrationText]=\"celebrationText()\"\n      />\n\n      @if (shouldShowMilestone()) {\n      <div class=\"os-goal-progress__milestone\" [attr.aria-live]=\"'polite'\">\n        <os-icon name=\"celebration\" size=\"sm\" [attr.aria-hidden]=\"true\" />\n        <span class=\"os-goal-progress__milestone-text\">\n          {{ currentMilestone() }}% alcançado! 🎯\n        </span>\n      </div>\n      }\n    </div>\n\n    @if (showStats()) {\n    <div class=\"os-goal-progress__stats\">\n      <div class=\"os-goal-progress__stat\">\n        <span class=\"os-goal-progress__stat-label\">Progresso</span>\n        <span class=\"os-goal-progress__stat-value\">{{ progressPercentage() }}%</span>\n      </div>\n\n      @if (remainingAmount() > 0) {\n      <div class=\"os-goal-progress__stat\">\n        <span class=\"os-goal-progress__stat-label\">Restante</span>\n        <span class=\"os-goal-progress__stat-value\">\n          <os-money-display\n            [value]=\"remainingAmount()\"\n            [currency]=\"goalData().currency\"\n            [variant]=\"'default'\"\n            [size]=\"'small'\"\n          />\n        </span>\n      </div>\n      } @if (goalData().deadline && showDeadline()) {\n      <div class=\"os-goal-progress__stat\">\n        <span class=\"os-goal-progress__stat-label\">Prazo</span>\n        <span class=\"os-goal-progress__stat-value\">{{ formattedDeadline() }}</span>\n      </div>\n      }\n    </div>\n    }\n  </div>\n\n  @if (showActions() && actions().length > 0) {\n  <div class=\"os-goal-progress__actions\">\n    <ng-content select=\"[slot=actions]\"></ng-content>\n  </div>\n  } @if (shouldShowCelebration()) {\n  <div class=\"os-goal-progress__celebration\" [attr.aria-live]=\"'assertive'\">\n    <div class=\"os-goal-progress__celebration-content\">\n      <os-icon name=\"celebration\" size=\"lg\" [attr.aria-hidden]=\"true\" />\n      <span class=\"os-goal-progress__celebration-text\">{{ celebrationText() }}</span>\n    </div>\n    <div class=\"os-goal-progress__confetti\">\n      <div\n        class=\"os-goal-progress__confetti-piece\"\n        *ngFor=\"let piece of [1, 2, 3, 4, 5, 6, 7, 8]\"\n      ></div>\n    </div>\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ label: string; variant?: string; disabled?: boolean }[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 179,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 178,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 180,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "celebrationText",
                    "defaultValue": "'Meta alcançada! 🎉'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 183,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "enableHapticFeedback",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 184,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "goalData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GoalProgressData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 167,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "showActions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 177,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showCategory",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 173,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showCelebration",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 181,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showDeadline",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 176,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showDescription",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 172,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showIcon",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 171,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showMilestones",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 182,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showPercentage",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 175,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showStats",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 174,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GoalProgressSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 169,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GoalProgressTheme",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 170,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GoalProgressVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 168,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{    action: { label: string; variant?: string; disabled?: boolean };    goal: GoalProgressData;  }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 187,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "goalClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GoalProgressData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 186,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "goalCompleted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GoalProgressData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 195,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "milestoneReached",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{    milestone: GoalProgressMilestone;    goal: GoalProgressData;  }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 191,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "amountSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 309,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "currentAmountVariant",
                    "defaultValue": "computed((): OsMoneyDisplayVariant => {\n    if (this.isCompleted()) return 'success';\n    if (this.isOverdue()) return 'error';\n    return 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 299,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "currentMilestone",
                    "defaultValue": "computed((): GoalProgressMilestone | null => {\n    const percentage = this.progressPercentage();\n    if (percentage >= 100) return 100;\n    if (percentage >= 90) return 90;\n    if (percentage >= 75) return 75;\n    if (percentage >= 50) return 50;\n    if (percentage >= 25) return 25;\n    return null;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 223,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "descriptionId",
                    "defaultValue": "signal(`goal-description-${Math.random().toString(36).substr(2, 9)}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 198,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "formattedDeadline",
                    "defaultValue": "computed(() => {\n    const deadline = this.goalData().deadline;\n    if (!deadline) return '';\n\n    const now = new Date();\n    const diffTime = deadline.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays < 0) return 'Vencido';\n    if (diffDays === 0) return 'Hoje';\n    if (diffDays === 1) return 'Amanhã';\n    if (diffDays <= 7) return `${diffDays} dias`;\n    if (diffDays <= 30) return `${Math.ceil(diffDays / 7)} semanas`;\n    return `${Math.ceil(diffDays / 30)} meses`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 318,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "goalClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-goal-progress'];\n    classes.push(`os-goal-progress--${this.variant()}`);\n    classes.push(`os-goal-progress--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-goal-progress--dark');\n    }\n\n    if (this.isCompleted()) {\n      classes.push('os-goal-progress--completed');\n    }\n\n    if (this.isOverdue()) {\n      classes.push('os-goal-progress--overdue');\n    }\n\n    if (this.goalData().priority) {\n      classes.push(`os-goal-progress--priority-${this.goalData().priority}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 244,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "iconName",
                    "defaultValue": "computed(() => {\n    if (this.isCompleted()) return 'check-circle';\n    if (this.isOverdue()) return 'alert-circle';\n    return 'target';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 268,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "iconSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 274,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isCelebrating",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 199,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isCompleted",
                    "defaultValue": "computed(() => {\n    return this.progressPercentage() >= 100;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 213,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isOverdue",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (!data.deadline) return false;\n    return new Date() > data.deadline && !this.isCompleted();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 217,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "progressPercentage",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (data.targetAmount <= 0) return 0;\n    return Math.min(Math.round((data.currentAmount / data.targetAmount) * 100), 100);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 202,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "progressSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 290,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "progressVariant",
                    "defaultValue": "computed(() => {\n    if (this.isCompleted()) return 'success';\n    if (this.isOverdue()) return 'danger';\n    if (this.goalData().priority === 'high') return 'warning';\n    return 'primary';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 283,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "reachedMilestones",
                    "defaultValue": "signal<Set<GoalProgressMilestone>>(new Set())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 200,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "remainingAmount",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    return Math.max(data.targetAmount - data.currentAmount, 0);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 208,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "shouldShowCelebration",
                    "defaultValue": "computed(() => {\n    return this.showCelebration() && this.isCompleted() && !this.isCelebrating();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 233,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "shouldShowMilestone",
                    "defaultValue": "computed(() => {\n    if (!this.showMilestones()) return false;\n    const current = this.currentMilestone();\n    const reached = this.reachedMilestones();\n    return current !== null && !reached.has(current);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 237,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "targetAmountVariant",
                    "defaultValue": "computed((): OsMoneyDisplayVariant => {\n    return 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 305,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "titleId",
                    "defaultValue": "signal(`goal-title-${Math.random().toString(36).substr(2, 9)}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 197,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 375,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onGoalClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 371,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsProgressBarComponent",
                    "type": "component"
                },
                {
                    "name": "OsMoneyDisplayComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  computed,\n  input,\n  output,\n  signal,\n  ChangeDetectionStrategy,\n  effect,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport {\n  OsMoneyDisplayComponent,\n  OsMoneyDisplayVariant,\n} from '../../molecules/os-money-display/os-money-display.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport interface GoalProgressData {\n  id: string;\n  title: string;\n  description?: string;\n  targetAmount: number;\n  currentAmount: number;\n  currency: string;\n  deadline?: Date;\n  category?: string;\n  priority?: 'low' | 'medium' | 'high';\n}\n\nexport type GoalProgressVariant = 'default' | 'compact' | 'detailed' | 'minimal';\nexport type GoalProgressSize = 'small' | 'medium' | 'large';\nexport type GoalProgressTheme = 'light' | 'dark';\nexport type GoalProgressMilestone = 25 | 50 | 75 | 90 | 100;\n\n@Component({\n  selector: 'os-goal-progress',\n  standalone: true,\n  imports: [CommonModule, OsProgressBarComponent, OsMoneyDisplayComponent, OsIconComponent],\n  template: `\n    <div class=\"os-goal-progress\" [class]=\"goalClasses()\" [attr.aria-label]=\"ariaLabel()\">\n      <div class=\"os-goal-progress__header\">\n        @if (showIcon()) {\n        <div class=\"os-goal-progress__icon\">\n          <os-icon [name]=\"iconName()\" [size]=\"iconSize()\" [attr.aria-hidden]=\"true\" />\n        </div>\n        }\n\n        <div class=\"os-goal-progress__title-section\">\n          <h3 class=\"os-goal-progress__title\" [id]=\"titleId()\">\n            {{ goalData().title }}\n          </h3>\n          @if (goalData().description && showDescription()) {\n          <p class=\"os-goal-progress__description\" [id]=\"descriptionId()\">\n            {{ goalData().description }}\n          </p>\n          }\n        </div>\n\n        @if (showCategory() && goalData().category) {\n        <div class=\"os-goal-progress__category\">\n          <span class=\"os-goal-progress__category-text\">{{ goalData().category }}</span>\n        </div>\n        }\n      </div>\n\n      <div class=\"os-goal-progress__content\">\n        <div class=\"os-goal-progress__amounts\">\n          <div class=\"os-goal-progress__current\">\n            <os-money-display\n              [value]=\"goalData().currentAmount\"\n              [currency]=\"goalData().currency\"\n              [variant]=\"currentAmountVariant()\"\n              [size]=\"amountSize()\"\n            />\n            <span class=\"os-goal-progress__current-label\">Arrecadado</span>\n          </div>\n\n          <div class=\"os-goal-progress__target\">\n            <os-money-display\n              [value]=\"goalData().targetAmount\"\n              [currency]=\"goalData().currency\"\n              [variant]=\"targetAmountVariant()\"\n              [size]=\"amountSize()\"\n            />\n            <span class=\"os-goal-progress__target-label\">Meta</span>\n          </div>\n        </div>\n\n        <div class=\"os-goal-progress__progress\">\n          <os-progress-bar\n            [value]=\"progressPercentage()\"\n            [variant]=\"progressVariant()\"\n            [size]=\"progressSize()\"\n            [showPercentage]=\"showPercentage()\"\n            [animated]=\"animated()\"\n            [showCelebration]=\"shouldShowCelebration()\"\n            [celebrationText]=\"celebrationText()\"\n          />\n\n          @if (shouldShowMilestone()) {\n          <div class=\"os-goal-progress__milestone\" [attr.aria-live]=\"'polite'\">\n            <os-icon name=\"celebration\" size=\"sm\" [attr.aria-hidden]=\"true\" />\n            <span class=\"os-goal-progress__milestone-text\">\n              {{ currentMilestone() }}% alcançado! 🎯\n            </span>\n          </div>\n          }\n        </div>\n\n        @if (showStats()) {\n        <div class=\"os-goal-progress__stats\">\n          <div class=\"os-goal-progress__stat\">\n            <span class=\"os-goal-progress__stat-label\">Progresso</span>\n            <span class=\"os-goal-progress__stat-value\">{{ progressPercentage() }}%</span>\n          </div>\n\n          @if (remainingAmount() > 0) {\n          <div class=\"os-goal-progress__stat\">\n            <span class=\"os-goal-progress__stat-label\">Restante</span>\n            <span class=\"os-goal-progress__stat-value\">\n              <os-money-display\n                [value]=\"remainingAmount()\"\n                [currency]=\"goalData().currency\"\n                [variant]=\"'default'\"\n                [size]=\"'small'\"\n              />\n            </span>\n          </div>\n          } @if (goalData().deadline && showDeadline()) {\n          <div class=\"os-goal-progress__stat\">\n            <span class=\"os-goal-progress__stat-label\">Prazo</span>\n            <span class=\"os-goal-progress__stat-value\">{{ formattedDeadline() }}</span>\n          </div>\n          }\n        </div>\n        }\n      </div>\n\n      @if (showActions() && actions().length > 0) {\n      <div class=\"os-goal-progress__actions\">\n        <ng-content select=\"[slot=actions]\"></ng-content>\n      </div>\n      } @if (shouldShowCelebration()) {\n      <div class=\"os-goal-progress__celebration\" [attr.aria-live]=\"'assertive'\">\n        <div class=\"os-goal-progress__celebration-content\">\n          <os-icon name=\"celebration\" size=\"lg\" [attr.aria-hidden]=\"true\" />\n          <span class=\"os-goal-progress__celebration-text\">{{ celebrationText() }}</span>\n        </div>\n        <div class=\"os-goal-progress__confetti\">\n          <div\n            class=\"os-goal-progress__confetti-piece\"\n            *ngFor=\"let piece of [1, 2, 3, 4, 5, 6, 7, 8]\"\n          ></div>\n        </div>\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-goal-progress.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[attr.role]': '\"region\"',\n    '[attr.aria-labelledby]': 'titleId()',\n  },\n})\nexport class OsGoalProgressComponent {\n  readonly goalData = input.required<GoalProgressData>();\n  readonly variant = input<GoalProgressVariant>('default');\n  readonly size = input<GoalProgressSize>('medium');\n  readonly theme = input<GoalProgressTheme>('light');\n  readonly showIcon = input(true);\n  readonly showDescription = input(true);\n  readonly showCategory = input(true);\n  readonly showStats = input(true);\n  readonly showPercentage = input(true);\n  readonly showDeadline = input(true);\n  readonly showActions = input(false);\n  readonly animated = input(true);\n  readonly actions = input<{ label: string; variant?: string; disabled?: boolean }[]>([]);\n  readonly ariaLabel = input<string | null>(null);\n  readonly showCelebration = input(true);\n  readonly showMilestones = input(true);\n  readonly celebrationText = input('Meta alcançada! 🎉');\n  readonly enableHapticFeedback = input(false);\n\n  readonly goalClick = output<GoalProgressData>();\n  readonly actionClick = output<{\n    action: { label: string; variant?: string; disabled?: boolean };\n    goal: GoalProgressData;\n  }>();\n  readonly milestoneReached = output<{\n    milestone: GoalProgressMilestone;\n    goal: GoalProgressData;\n  }>();\n  readonly goalCompleted = output<GoalProgressData>();\n\n  readonly titleId = signal(`goal-title-${Math.random().toString(36).substr(2, 9)}`);\n  readonly descriptionId = signal(`goal-description-${Math.random().toString(36).substr(2, 9)}`);\n  readonly isCelebrating = signal(false);\n  readonly reachedMilestones = signal<Set<GoalProgressMilestone>>(new Set());\n\n  readonly progressPercentage = computed(() => {\n    const data = this.goalData();\n    if (data.targetAmount <= 0) return 0;\n    return Math.min(Math.round((data.currentAmount / data.targetAmount) * 100), 100);\n  });\n\n  readonly remainingAmount = computed(() => {\n    const data = this.goalData();\n    return Math.max(data.targetAmount - data.currentAmount, 0);\n  });\n\n  readonly isCompleted = computed(() => {\n    return this.progressPercentage() >= 100;\n  });\n\n  readonly isOverdue = computed(() => {\n    const data = this.goalData();\n    if (!data.deadline) return false;\n    return new Date() > data.deadline && !this.isCompleted();\n  });\n\n  readonly currentMilestone = computed((): GoalProgressMilestone | null => {\n    const percentage = this.progressPercentage();\n    if (percentage >= 100) return 100;\n    if (percentage >= 90) return 90;\n    if (percentage >= 75) return 75;\n    if (percentage >= 50) return 50;\n    if (percentage >= 25) return 25;\n    return null;\n  });\n\n  readonly shouldShowCelebration = computed(() => {\n    return this.showCelebration() && this.isCompleted() && !this.isCelebrating();\n  });\n\n  readonly shouldShowMilestone = computed(() => {\n    if (!this.showMilestones()) return false;\n    const current = this.currentMilestone();\n    const reached = this.reachedMilestones();\n    return current !== null && !reached.has(current);\n  });\n\n  readonly goalClasses = computed(() => {\n    const classes = ['os-goal-progress'];\n    classes.push(`os-goal-progress--${this.variant()}`);\n    classes.push(`os-goal-progress--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-goal-progress--dark');\n    }\n\n    if (this.isCompleted()) {\n      classes.push('os-goal-progress--completed');\n    }\n\n    if (this.isOverdue()) {\n      classes.push('os-goal-progress--overdue');\n    }\n\n    if (this.goalData().priority) {\n      classes.push(`os-goal-progress--priority-${this.goalData().priority}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly iconName = computed(() => {\n    if (this.isCompleted()) return 'check-circle';\n    if (this.isOverdue()) return 'alert-circle';\n    return 'target';\n  });\n\n  readonly iconSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly progressVariant = computed(() => {\n    if (this.isCompleted()) return 'success';\n    if (this.isOverdue()) return 'danger';\n    if (this.goalData().priority === 'high') return 'warning';\n    return 'primary';\n  });\n\n  readonly progressSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly currentAmountVariant = computed((): OsMoneyDisplayVariant => {\n    if (this.isCompleted()) return 'success';\n    if (this.isOverdue()) return 'error';\n    return 'default';\n  });\n\n  readonly targetAmountVariant = computed((): OsMoneyDisplayVariant => {\n    return 'default';\n  });\n\n  readonly amountSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly formattedDeadline = computed(() => {\n    const deadline = this.goalData().deadline;\n    if (!deadline) return '';\n\n    const now = new Date();\n    const diffTime = deadline.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays < 0) return 'Vencido';\n    if (diffDays === 0) return 'Hoje';\n    if (diffDays === 1) return 'Amanhã';\n    if (diffDays <= 7) return `${diffDays} dias`;\n    if (diffDays <= 30) return `${Math.ceil(diffDays / 7)} semanas`;\n    return `${Math.ceil(diffDays / 30)} meses`;\n  });\n\n  constructor() {\n    effect(() => {\n      const currentMilestone = this.currentMilestone();\n      const reachedMilestones = this.reachedMilestones();\n      const shouldShowMilestone = this.shouldShowMilestone();\n      const shouldShowCelebration = this.shouldShowCelebration();\n\n      if (shouldShowMilestone && currentMilestone !== null) {\n        const newReached = new Set(reachedMilestones);\n        newReached.add(currentMilestone);\n        this.reachedMilestones.set(newReached);\n\n        this.milestoneReached.emit({\n          milestone: currentMilestone,\n          goal: this.goalData(),\n        });\n\n        if (this.enableHapticFeedback() && 'vibrate' in navigator) {\n          navigator.vibrate(100);\n        }\n      }\n\n      if (shouldShowCelebration) {\n        this.isCelebrating.set(true);\n        this.goalCompleted.emit(this.goalData());\n\n        if (this.enableHapticFeedback() && 'vibrate' in navigator) {\n          navigator.vibrate([100, 50, 100]);\n        }\n\n        setTimeout(() => {\n          this.isCelebrating.set(false);\n        }, 3000);\n      }\n    });\n  }\n\n  onGoalClick(): void {\n    this.goalClick.emit(this.goalData());\n  }\n\n  onActionClick(action: { label: string; variant?: string; disabled?: boolean }): void {\n    this.actionClick.emit({ action, goal: this.goalData() });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/variables' as *;\n@use '../../theme/tokens' as *;\n\n.os-goal-progress {\n  display: flex;\n  flex-direction: column;\n  gap: $spacing-md;\n  padding: $spacing-lg;\n  border-radius: $border-radius-lg;\n  background: $color-background-primary;\n  border: 1px solid $color-border;\n  transition: all 0.2s ease-in-out;\n\n  &--small {\n    padding: $spacing-md;\n    gap: $spacing-sm;\n  }\n\n  &--large {\n    padding: $spacing-xl;\n    gap: $spacing-lg;\n  }\n\n  &--compact {\n    padding: $spacing-md;\n    gap: $spacing-sm;\n  }\n\n  &--detailed {\n    padding: $spacing-xl;\n    gap: $spacing-lg;\n  }\n\n  &--minimal {\n    padding: $spacing-sm;\n    gap: $spacing-xs;\n    border: none;\n    background: transparent;\n  }\n\n  &--dark {\n    background: $color-surface-variant;\n    border-color: $color-border;\n    color: $color-on-surface;\n  }\n\n  &--completed {\n    border-color: $color-success;\n    background: rgba($color-success, 0.05);\n  }\n\n  &--overdue {\n    border-color: $color-error;\n    background: rgba($color-error, 0.05);\n  }\n\n  &--priority-high {\n    border-left: 4px solid $color-warning;\n  }\n\n  &--priority-medium {\n    border-left: 4px solid $color-info;\n  }\n\n  &--priority-low {\n    border-left: 4px solid $color-border;\n  }\n\n  &__header {\n    display: flex;\n    align-items: flex-start;\n    gap: $spacing-md;\n  }\n\n  &__icon {\n    flex-shrink: 0;\n    margin-top: $spacing-xs;\n  }\n\n  &__title-section {\n    flex: 1;\n    min-width: 0;\n  }\n\n  &__title {\n    margin: 0 0 $spacing-xs 0;\n    font-size: $font-size-lg;\n    font-weight: $font-weight-semibold;\n    color: $color-text-primary;\n    line-height: $line-height-tight;\n  }\n\n  &__description {\n    margin: 0;\n    font-size: $font-size-sm;\n    color: $color-text-secondary;\n    line-height: $line-height-relaxed;\n  }\n\n  &__category {\n    flex-shrink: 0;\n  }\n\n  &__category-text {\n    display: inline-block;\n    padding: $spacing-xs $spacing-sm;\n    font-size: $font-size-xs;\n    font-weight: $font-weight-medium;\n    color: $color-text-secondary;\n    background: $color-background-secondary;\n    border-radius: $border-radius-sm;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  &__content {\n    display: flex;\n    flex-direction: column;\n    gap: $spacing-md;\n  }\n\n  &__amounts {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: $spacing-md;\n  }\n\n  &__current,\n  &__target {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n  }\n\n  &__current-label,\n  &__target-label {\n    font-size: $font-size-xs;\n    color: $color-text-secondary;\n    margin-top: $spacing-xs;\n    font-weight: $font-weight-medium;\n  }\n\n  &__progress {\n    width: 100%;\n    position: relative;\n  }\n\n  &__milestone {\n    display: flex;\n    align-items: center;\n    gap: $spacing-xs;\n    margin-top: $spacing-sm;\n    padding: $spacing-xs $spacing-sm;\n    background: rgba($color-success, 0.1);\n    border: 1px solid rgba($color-success, 0.3);\n    border-radius: $border-radius-sm;\n    animation: milestone-entrance 0.5s ease-out;\n  }\n\n  &__milestone-text {\n    font-size: $font-size-xs;\n    font-weight: $font-weight-medium;\n    color: $color-success;\n  }\n\n  &__celebration {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: rgba($color-success, 0.05);\n    border-radius: $border-radius-lg;\n    z-index: 10;\n    animation: celebration-entrance 0.6s ease-out;\n  }\n\n  &__celebration-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: $spacing-sm;\n    text-align: center;\n  }\n\n  &__celebration-text {\n    font-size: $font-size-lg;\n    font-weight: $font-weight-bold;\n    color: $color-success;\n    animation: celebration-pulse 1s ease-in-out infinite;\n  }\n\n  &__confetti {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    pointer-events: none;\n    overflow: hidden;\n  }\n\n  &__confetti-piece {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    background: $color-success;\n    border-radius: 50%;\n    animation: confetti-fall 3s ease-out infinite;\n\n    &:nth-child(1) {\n      left: 10%;\n      animation-delay: 0s;\n      background: $color-success;\n    }\n\n    &:nth-child(2) {\n      left: 20%;\n      animation-delay: 0.1s;\n      background: $color-warning;\n    }\n\n    &:nth-child(3) {\n      left: 30%;\n      animation-delay: 0.2s;\n      background: $color-error;\n    }\n\n    &:nth-child(4) {\n      left: 40%;\n      animation-delay: 0.3s;\n      background: $color-info;\n    }\n\n    &:nth-child(5) {\n      left: 50%;\n      animation-delay: 0.4s;\n      background: $color-success;\n    }\n\n    &:nth-child(6) {\n      left: 60%;\n      animation-delay: 0.5s;\n      background: $color-warning;\n    }\n\n    &:nth-child(7) {\n      left: 70%;\n      animation-delay: 0.6s;\n      background: $color-error;\n    }\n\n    &:nth-child(8) {\n      left: 80%;\n      animation-delay: 0.7s;\n      background: $color-info;\n    }\n  }\n\n  &__stats {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: $spacing-md;\n    padding: $spacing-sm;\n    background: $color-background-secondary;\n    border-radius: $border-radius-md;\n  }\n\n  &__stat {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n  }\n\n  &__stat-label {\n    font-size: $font-size-xs;\n    color: $color-text-secondary;\n    margin-bottom: $spacing-xs;\n    font-weight: $font-weight-medium;\n  }\n\n  &__stat-value {\n    font-size: $font-size-sm;\n    font-weight: $font-weight-semibold;\n    color: $color-text-primary;\n  }\n\n  &__actions {\n    display: flex;\n    gap: $spacing-sm;\n    justify-content: flex-end;\n    padding-top: $spacing-md;\n    border-top: 1px solid $color-border;\n  }\n\n  @media (max-width: 768px) {\n    &__header {\n      flex-direction: column;\n      align-items: flex-start;\n      gap: $spacing-sm;\n    }\n\n    &__amounts {\n      flex-direction: column;\n      align-items: stretch;\n      gap: $spacing-sm;\n    }\n\n    &__current,\n    &__target {\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    &__stats {\n      flex-direction: column;\n      align-items: stretch;\n      gap: $spacing-sm;\n    }\n\n    &__stat {\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    &__actions {\n      flex-direction: column;\n      align-items: stretch;\n    }\n  }\n\n  &--dark {\n    .os-goal-progress__title {\n      color: $color-on-surface;\n    }\n\n    .os-goal-progress__description {\n      color: $color-on-surface-variant;\n    }\n\n    .os-goal-progress__category-text {\n      background: $color-surface;\n      color: $color-on-surface-variant;\n    }\n\n    .os-goal-progress__stat-label {\n      color: $color-on-surface-variant;\n    }\n\n    .os-goal-progress__stat-value {\n      color: $color-on-surface;\n    }\n\n    .os-goal-progress__actions {\n      border-top-color: $color-border;\n    }\n  }\n\n  &:hover {\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    transform: translateY(-1px);\n  }\n\n  &--minimal:hover {\n    box-shadow: none;\n    transform: none;\n  }\n\n  &:focus-within {\n    outline: 2px solid $color-primary;\n    outline-offset: 2px;\n  }\n}\n\n@keyframes milestone-entrance {\n  0% {\n    opacity: 0;\n    transform: translateY(-10px) scale(0.9);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n@keyframes celebration-entrance {\n  0% {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1.1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes celebration-pulse {\n  0%,\n  100% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n}\n\n@keyframes confetti-fall {\n  0% {\n    transform: translateY(-100vh) rotate(0deg);\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(100vh) rotate(360deg);\n    opacity: 0;\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .os-goal-progress__milestone,\n  .os-goal-progress__celebration,\n  .os-goal-progress__celebration-text,\n  .os-goal-progress__confetti-piece {\n    animation: none;\n  }\n}\n",
                    "styleUrl": "./os-goal-progress.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 332
            },
            "extends": []
        },
        {
            "name": "OsGoalTrackerComponent",
            "id": "component-OsGoalTrackerComponent-466600ea9790e69cbb4c5fdf2c212e1588bf8dea3c0334e5afbee8768b27ce46818507bb899a57fc38d34d9b1d61abad048dc9d2b576cc446f59628193e8a1fb",
            "file": "src/app/shared/ui-components/organisms/os-goal-tracker/os-goal-tracker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-goal-tracker",
            "styleUrls": [
                "./os-goal-tracker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./os-goal-tracker.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "clickable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "required": false
                },
                {
                    "name": "goalData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GoalTrackerData | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "required": true
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "required": false
                },
                {
                    "name": "showContribution",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "required": false
                },
                {
                    "name": "showHistory",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "required": false
                },
                {
                    "name": "showStatus",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "required": false
                },
                {
                    "name": "showTimeline",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ action: string; goal: GoalTrackerData }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "goalClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GoalTrackerData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "refreshClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "badgeSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 191,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "cardVariant",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (!data) return 'default';\n\n    if (this.isCompleted()) return 'elevated';\n    if (this.isOverdue()) return 'outlined';\n    if (data.priority === 'high') return 'elevated';\n    return 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 229,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "contributionInfo",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showContribution() || !data.monthlyContribution) return null;\n\n    const remaining = this.remainingAmount();\n    const monthsNeeded = Math.ceil(remaining / data.monthlyContribution);\n\n    return {\n      monthly: data.monthlyContribution,\n      monthsNeeded,\n      isFeasible: monthsNeeded <= 12, // Consider feasible if less than 1 year\n    };\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 151,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "goalClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-goal-tracker'];\n    classes.push(`os-goal-tracker--${this.variant()}`);\n    classes.push(`os-goal-tracker--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-goal-tracker--dark');\n    }\n\n    if (this.isCompleted()) {\n      classes.push('os-goal-tracker--completed');\n    }\n\n    if (this.isOverdue()) {\n      classes.push('os-goal-tracker--overdue');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 209,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "iconSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 182,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isCompleted",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    return data ? data.status === 'completed' || this.progressPercentage() >= 100 : false;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isOverdue",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (!data || !data.deadline || this.isCompleted()) return false;\n    return new Date() > data.deadline;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "moneySize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 200,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "priorityInfo",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (!data) return { type: 'info' as const, label: 'N/A', color: 'var(--os-color-info)' };\n\n    switch (data.priority) {\n      case 'high':\n        return { type: 'error' as const, label: 'Alta', color: 'var(--os-color-error)' };\n      case 'medium':\n        return { type: 'warning' as const, label: 'Média', color: 'var(--os-color-warning)' };\n      case 'low':\n        return { type: 'success' as const, label: 'Baixa', color: 'var(--os-color-success)' };\n      default:\n        return { type: 'info' as const, label: 'N/A', color: 'var(--os-color-info)' };\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "progressPercentage",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (!data || data.targetAmount <= 0) return 0;\n    return Math.min(Math.round((data.currentAmount / data.targetAmount) * 100), 100);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "progressSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 173,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "progressVariant",
                    "defaultValue": "computed(() => {\n    if (this.isCompleted()) return 'success';\n    if (this.isOverdue()) return 'danger';\n    const data = this.goalData();\n    if (data?.priority === 'high') return 'warning';\n    return 'primary';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 165,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "recentHistory",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showHistory()) return [];\n\n    return data.progressHistory.slice(-3).reverse(); // Last 3 entries\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "remainingAmount",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (!data) return 0;\n    return Math.max(data.targetAmount - data.currentAmount, 0);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "statusInfo",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'active':\n        return this.isOverdue()\n          ? { type: 'error' as const, label: 'Atrasado', icon: 'warning' }\n          : { type: 'success' as const, label: 'Ativo', icon: 'play_circle' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check_circle' };\n      case 'paused':\n        return { type: 'warning' as const, label: 'Pausado', icon: 'pause_circle' };\n      case 'cancelled':\n        return { type: 'error' as const, label: 'Cancelado', icon: 'cancel' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "timelineInfo",
                    "defaultValue": "computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showTimeline()) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      deadline: data.deadline ? data.deadline.toLocaleDateString('pt-BR') : 'Sem prazo',\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n      daysRemaining: this.getDaysRemaining(),\n    };\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "formatHistoryDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDaysRemaining",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 258,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getStatusColor",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 275,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 251,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCardClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 240,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRefreshClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsCardComponent",
                    "type": "component"
                },
                {
                    "name": "OsMoneyDisplayComponent",
                    "type": "component"
                },
                {
                    "name": "OsBadgeComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                },
                {
                    "name": "OsProgressBarComponent",
                    "type": "component"
                },
                {
                    "name": "OsSpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\n\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsMoneyDisplayComponent } from '../../molecules/os-money-display/os-money-display.component';\n\nexport interface GoalTrackerData {\n  id: string;\n  title: string;\n  description?: string;\n  targetAmount: number;\n  currentAmount: number;\n  currency: string;\n  deadline?: Date;\n  startDate: Date;\n  lastUpdated: Date;\n  status: 'active' | 'completed' | 'paused' | 'cancelled';\n  priority: 'low' | 'medium' | 'high';\n  category?: string;\n  monthlyContribution?: number;\n  progressHistory: ProgressHistory[];\n}\n\nexport interface ProgressHistory {\n  date: Date;\n  amount: number;\n  percentage: number;\n  note?: string;\n}\n\n@Component({\n  selector: 'os-goal-tracker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsCardComponent,\n    OsMoneyDisplayComponent,\n    OsBadgeComponent,\n    OsIconComponent,\n    OsProgressBarComponent,\n    OsSpinnerComponent,\n  ],\n  templateUrl: './os-goal-tracker.component.html',\n  styleUrls: ['./os-goal-tracker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsGoalTrackerComponent {\n  // Inputs\n  goalData = input.required<GoalTrackerData | null>();\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n  showTimeline = input<boolean>(true);\n  showHistory = input<boolean>(true);\n  showContribution = input<boolean>(true);\n  showStatus = input<boolean>(true);\n  loading = input<boolean>(false);\n  clickable = input<boolean>(false);\n\n  // Outputs\n  readonly goalClick = output<GoalTrackerData>();\n  readonly refreshClick = output<void>();\n  readonly actionClick = output<{ action: string; goal: GoalTrackerData }>();\n\n  // Additional properties for template\n  readonly ariaLabel = input<string | null>(null);\n\n  // Computed properties\n  readonly progressPercentage = computed(() => {\n    const data = this.goalData();\n    if (!data || data.targetAmount <= 0) return 0;\n    return Math.min(Math.round((data.currentAmount / data.targetAmount) * 100), 100);\n  });\n\n  readonly remainingAmount = computed(() => {\n    const data = this.goalData();\n    if (!data) return 0;\n    return Math.max(data.targetAmount - data.currentAmount, 0);\n  });\n\n  readonly isCompleted = computed(() => {\n    const data = this.goalData();\n    return data ? data.status === 'completed' || this.progressPercentage() >= 100 : false;\n  });\n\n  readonly isOverdue = computed(() => {\n    const data = this.goalData();\n    if (!data || !data.deadline || this.isCompleted()) return false;\n    return new Date() > data.deadline;\n  });\n\n  readonly statusInfo = computed(() => {\n    const data = this.goalData();\n    if (!data) return { type: 'info' as const, label: 'N/A', icon: 'info' };\n\n    switch (data.status) {\n      case 'active':\n        return this.isOverdue()\n          ? { type: 'error' as const, label: 'Atrasado', icon: 'warning' }\n          : { type: 'success' as const, label: 'Ativo', icon: 'play_circle' };\n      case 'completed':\n        return { type: 'success' as const, label: 'Concluído', icon: 'check_circle' };\n      case 'paused':\n        return { type: 'warning' as const, label: 'Pausado', icon: 'pause_circle' };\n      case 'cancelled':\n        return { type: 'error' as const, label: 'Cancelado', icon: 'cancel' };\n      default:\n        return { type: 'info' as const, label: 'N/A', icon: 'info' };\n    }\n  });\n\n  readonly priorityInfo = computed(() => {\n    const data = this.goalData();\n    if (!data) return { type: 'info' as const, label: 'N/A', color: 'var(--os-color-info)' };\n\n    switch (data.priority) {\n      case 'high':\n        return { type: 'error' as const, label: 'Alta', color: 'var(--os-color-error)' };\n      case 'medium':\n        return { type: 'warning' as const, label: 'Média', color: 'var(--os-color-warning)' };\n      case 'low':\n        return { type: 'success' as const, label: 'Baixa', color: 'var(--os-color-success)' };\n      default:\n        return { type: 'info' as const, label: 'N/A', color: 'var(--os-color-info)' };\n    }\n  });\n\n  readonly timelineInfo = computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showTimeline()) return null;\n\n    return {\n      start: data.startDate.toLocaleDateString('pt-BR'),\n      deadline: data.deadline ? data.deadline.toLocaleDateString('pt-BR') : 'Sem prazo',\n      lastUpdated: data.lastUpdated.toLocaleDateString('pt-BR'),\n      daysRemaining: this.getDaysRemaining(),\n    };\n  });\n\n  readonly recentHistory = computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showHistory()) return [];\n\n    return data.progressHistory.slice(-3).reverse(); // Last 3 entries\n  });\n\n  readonly contributionInfo = computed(() => {\n    const data = this.goalData();\n    if (!data || !this.showContribution() || !data.monthlyContribution) return null;\n\n    const remaining = this.remainingAmount();\n    const monthsNeeded = Math.ceil(remaining / data.monthlyContribution);\n\n    return {\n      monthly: data.monthlyContribution,\n      monthsNeeded,\n      isFeasible: monthsNeeded <= 12, // Consider feasible if less than 1 year\n    };\n  });\n\n  readonly progressVariant = computed(() => {\n    if (this.isCompleted()) return 'success';\n    if (this.isOverdue()) return 'danger';\n    const data = this.goalData();\n    if (data?.priority === 'high') return 'warning';\n    return 'primary';\n  });\n\n  readonly progressSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly iconSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly badgeSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly moneySize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly goalClasses = computed(() => {\n    const classes = ['os-goal-tracker'];\n    classes.push(`os-goal-tracker--${this.variant()}`);\n    classes.push(`os-goal-tracker--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-goal-tracker--dark');\n    }\n\n    if (this.isCompleted()) {\n      classes.push('os-goal-tracker--completed');\n    }\n\n    if (this.isOverdue()) {\n      classes.push('os-goal-tracker--overdue');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly cardVariant = computed(() => {\n    const data = this.goalData();\n    if (!data) return 'default';\n\n    if (this.isCompleted()) return 'elevated';\n    if (this.isOverdue()) return 'outlined';\n    if (data.priority === 'high') return 'elevated';\n    return 'default';\n  });\n\n  // Methods\n  onCardClick(): void {\n    const data = this.goalData();\n    if (this.clickable() && data) {\n      this.goalClick.emit(data);\n    }\n  }\n\n  onRefreshClick(): void {\n    this.refreshClick.emit();\n  }\n\n  onActionClick(action: string): void {\n    const data = this.goalData();\n    if (data) {\n      this.actionClick.emit({ action, goal: data });\n    }\n  }\n\n  getDaysRemaining(): number {\n    const data = this.goalData();\n    if (!data || !data.deadline) return 0;\n\n    const now = new Date();\n    const diffTime = data.deadline.getTime() - now.getTime();\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  formatHistoryDate(date: Date): string {\n    return date.toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    });\n  }\n\n  getStatusColor(): string {\n    const status = this.statusInfo();\n    switch (status.type) {\n      case 'success':\n        return 'var(--os-color-success)';\n      case 'warning':\n        return 'var(--os-color-warning)';\n      case 'error':\n        return 'var(--os-color-error)';\n      default:\n        return 'var(--os-color-info)';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-goal-tracker {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 100%;\n\n  &--default {\n    .os-goal-tracker__card {\n      padding: var(--os-spacing-lg);\n    }\n  }\n\n  &--compact {\n    .os-goal-tracker__card {\n      padding: var(--os-spacing-md);\n    }\n\n    .os-goal-tracker__timeline,\n    .os-goal-tracker__history,\n    .os-goal-tracker__contribution {\n      display: none;\n    }\n  }\n\n  &--detailed {\n    .os-goal-tracker__card {\n      padding: var(--os-spacing-xl);\n    }\n  }\n\n  &--small {\n    .os-goal-tracker__title {\n      font-size: var(--os-font-size-md);\n    }\n\n    .os-goal-tracker__description {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  &--medium {\n    .os-goal-tracker__title {\n      font-size: var(--os-font-size-lg);\n    }\n\n    .os-goal-tracker__description {\n      font-size: var(--os-font-size-md);\n    }\n  }\n\n  &--large {\n    .os-goal-tracker__title {\n      font-size: var(--os-font-size-xl);\n    }\n\n    .os-goal-tracker__description {\n      font-size: var(--os-font-size-lg);\n    }\n  }\n\n  &--dark {\n    background-color: var(--os-color-gray-900);\n    color: var(--os-color-gray-100);\n\n    .os-goal-tracker__card {\n      background-color: var(--os-color-gray-800);\n      border-color: var(--os-color-gray-700);\n    }\n  }\n\n  &__loading {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: var(--os-spacing-2xl);\n    gap: var(--os-spacing-md);\n    color: var(--os-color-gray-500);\n  }\n\n  &__loading-text {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  &__empty {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: var(--os-spacing-2xl);\n    gap: var(--os-spacing-md);\n    color: var(--os-color-gray-500);\n    text-align: center;\n  }\n\n  &__empty-text {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n    margin: 0;\n  }\n\n  &__card {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-lg);\n    width: 100%;\n  }\n\n  &__header {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-md);\n  }\n\n  &__title-section {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-xs);\n  }\n\n  &__title {\n    font-weight: var(--os-font-weight-bold);\n    color: var(--os-color-gray-900);\n    margin: 0;\n    line-height: 1.2;\n  }\n\n  &__description {\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-gray-600);\n    margin: 0;\n    line-height: 1.4;\n  }\n\n  &__badges {\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--os-spacing-xs);\n  }\n\n  &__progress {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-md);\n  }\n\n  &__amounts {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    gap: var(--os-spacing-md);\n  }\n\n  &__current,\n  &__target,\n  &__remaining {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    gap: var(--os-spacing-xs);\n  }\n\n  &__current-label,\n  &__target-label,\n  &__remaining-label {\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-gray-600);\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  &__progress-bar {\n    width: 100%;\n  }\n\n  &__stats {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n    gap: var(--os-spacing-md);\n  }\n\n  &__stat {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    gap: var(--os-spacing-xs);\n  }\n\n  &__stat-label {\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-gray-600);\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  &__stat-value {\n    font-size: var(--os-font-size-md);\n    font-weight: var(--os-font-weight-bold);\n    color: var(--os-color-gray-900);\n  }\n\n  &__timeline {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-md);\n    padding: var(--os-spacing-md);\n    background-color: var(--os-color-gray-50);\n    border-radius: var(--os-radius-md);\n    border: 1px solid var(--os-color-gray-200);\n  }\n\n  &__timeline-title {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-xs);\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-bold);\n    color: var(--os-color-gray-900);\n    margin: 0;\n  }\n\n  &__timeline-content {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-sm);\n  }\n\n  &__timeline-item {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n    padding: var(--os-spacing-xs);\n    border-radius: var(--os-radius-sm);\n    background-color: var(--os-color-white);\n  }\n\n  &__timeline-label {\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-gray-600);\n    min-width: 80px;\n  }\n\n  &__timeline-value {\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-gray-900);\n  }\n\n  &__contribution {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-md);\n    padding: var(--os-spacing-md);\n    background-color: var(--os-color-primary-50);\n    border-radius: var(--os-radius-md);\n    border: 1px solid var(--os-color-primary-200);\n  }\n\n  &__contribution-title {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-xs);\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-bold);\n    color: var(--os-color-primary-700);\n    margin: 0;\n  }\n\n  &__contribution-content {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-sm);\n  }\n\n  &__contribution-info {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-xs);\n  }\n\n  &__contribution-label {\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-primary-600);\n  }\n\n  &__contribution-stats {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: var(--os-spacing-sm);\n  }\n\n  &__contribution-stat {\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-primary-600);\n  }\n\n  &__history {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-md);\n    padding: var(--os-spacing-md);\n    background-color: var(--os-color-gray-50);\n    border-radius: var(--os-radius-md);\n    border: 1px solid var(--os-color-gray-200);\n  }\n\n  &__history-title {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-xs);\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-bold);\n    color: var(--os-color-gray-900);\n    margin: 0;\n  }\n\n  &__history-list {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-sm);\n  }\n\n  &__history-item {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    gap: var(--os-spacing-sm);\n    padding: var(--os-spacing-sm);\n    background-color: var(--os-color-white);\n    border-radius: var(--os-radius-sm);\n    border: 1px solid var(--os-color-gray-200);\n  }\n\n  &__history-date {\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-gray-600);\n    min-width: 80px;\n  }\n\n  &__history-amount {\n    display: flex;\n    align-items: center;\n  }\n\n  &__history-percentage {\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-bold);\n    color: var(--os-color-primary-600);\n    text-align: right;\n  }\n\n  &__history-note {\n    grid-column: 1 / -1;\n    font-size: var(--os-font-size-xs);\n    color: var(--os-color-gray-600);\n    font-style: italic;\n    margin-top: var(--os-spacing-xs);\n  }\n\n  &__actions {\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--os-spacing-sm);\n    padding-top: var(--os-spacing-md);\n    border-top: 1px solid var(--os-color-gray-200);\n  }\n\n  &__action {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-xs);\n    padding: var(--os-spacing-xs) var(--os-spacing-sm);\n    background-color: var(--os-color-gray-100);\n    border: 1px solid var(--os-color-gray-300);\n    border-radius: var(--os-radius-sm);\n    font-size: var(--os-font-size-xs);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-gray-700);\n    cursor: pointer;\n    transition: all 0.2s ease;\n\n    &:hover {\n      background-color: var(--os-color-gray-200);\n      border-color: var(--os-color-gray-400);\n    }\n\n    &:active {\n      background-color: var(--os-color-gray-300);\n    }\n\n    &:focus {\n      outline: 2px solid var(--os-color-primary-500);\n      outline-offset: 2px;\n    }\n  }\n}\n\n// Responsive Design\n@media (max-width: 768px) {\n  .os-goal-tracker {\n    &__amounts {\n      grid-template-columns: 1fr;\n      gap: var(--os-spacing-sm);\n    }\n\n    &__stats {\n      grid-template-columns: repeat(2, 1fr);\n      gap: var(--os-spacing-sm);\n    }\n\n    &__timeline-content {\n      gap: var(--os-spacing-xs);\n    }\n\n    &__timeline-item {\n      flex-direction: column;\n      align-items: flex-start;\n      gap: var(--os-spacing-xs);\n    }\n\n    &__timeline-label {\n      min-width: auto;\n    }\n\n    &__history-item {\n      grid-template-columns: 1fr;\n      gap: var(--os-spacing-xs);\n    }\n\n    &__history-date {\n      min-width: auto;\n    }\n\n    &__history-percentage {\n      text-align: left;\n    }\n\n    &__actions {\n      flex-direction: column;\n    }\n\n    &__action {\n      justify-content: center;\n    }\n  }\n}\n\n@media (max-width: 480px) {\n  .os-goal-tracker {\n    &__stats {\n      grid-template-columns: 1fr;\n    }\n\n    &__contribution-stats {\n      flex-direction: column;\n      align-items: flex-start;\n      gap: var(--os-spacing-xs);\n    }\n  }\n}\n\n// Dark theme adjustments\n.os-goal-tracker--dark {\n  .os-goal-tracker {\n    &__title {\n      color: var(--os-color-gray-100);\n    }\n\n    &__description {\n      color: var(--os-color-gray-300);\n    }\n\n    &__stat-value {\n      color: var(--os-color-gray-100);\n    }\n\n    &__timeline {\n      background-color: var(--os-color-gray-800);\n      border-color: var(--os-color-gray-700);\n    }\n\n    &__timeline-title {\n      color: var(--os-color-gray-100);\n    }\n\n    &__timeline-item {\n      background-color: var(--os-color-gray-700);\n    }\n\n    &__timeline-label {\n      color: var(--os-color-gray-300);\n    }\n\n    &__timeline-value {\n      color: var(--os-color-gray-100);\n    }\n\n    &__contribution {\n      background-color: var(--os-color-primary-900);\n      border-color: var(--os-color-primary-700);\n    }\n\n    &__contribution-title {\n      color: var(--os-color-primary-300);\n    }\n\n    &__contribution-label,\n    &__contribution-stat {\n      color: var(--os-color-primary-400);\n    }\n\n    &__history {\n      background-color: var(--os-color-gray-800);\n      border-color: var(--os-color-gray-700);\n    }\n\n    &__history-title {\n      color: var(--os-color-gray-100);\n    }\n\n    &__history-item {\n      background-color: var(--os-color-gray-700);\n      border-color: var(--os-color-gray-600);\n    }\n\n    &__history-date {\n      color: var(--os-color-gray-300);\n    }\n\n    &__history-note {\n      color: var(--os-color-gray-300);\n    }\n\n    &__actions {\n      border-color: var(--os-color-gray-700);\n    }\n\n    &__action {\n      background-color: var(--os-color-gray-700);\n      border-color: var(--os-color-gray-600);\n      color: var(--os-color-gray-300);\n\n      &:hover {\n        background-color: var(--os-color-gray-600);\n        border-color: var(--os-color-gray-500);\n      }\n\n      &:active {\n        background-color: var(--os-color-gray-500);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./os-goal-tracker.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"os-goal-tracker\" [class]=\"goalClasses()\" [attr.aria-label]=\"ariaLabel()\">\n    @if (loading()) {\n    <div class=\"os-goal-tracker__loading\">\n        <os-spinner [size]=\"iconSize()\" />\n        <span class=\"os-goal-tracker__loading-text\">Carregando meta...</span>\n    </div>\n    } @else if (goalData()) {\n    <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [clickable]=\"clickable()\" (cardClick)=\"onCardClick()\"\n        class=\"os-goal-tracker__card\">\n\n        <!-- Header -->\n        <div class=\"os-goal-tracker__header\">\n            <div class=\"os-goal-tracker__title-section\">\n                <h3 class=\"os-goal-tracker__title\">{{ goalData()!.title }}</h3>\n                @if (goalData()!.description && variant() !== 'compact') {\n                <p class=\"os-goal-tracker__description\">{{ goalData()!.description }}</p>\n                }\n            </div>\n\n            <div class=\"os-goal-tracker__badges\">\n                @if (showStatus()) {\n                <os-badge [variant]=\"statusInfo().type\" [size]=\"badgeSize()\" [icon]=\"statusInfo().icon\">\n                    {{ statusInfo().label }}\n                </os-badge>\n                }\n\n                <os-badge variant=\"info\" [size]=\"badgeSize()\" [style.color]=\"priorityInfo().color\">\n                    {{ priorityInfo().label }} Prioridade\n                </os-badge>\n\n                @if (goalData()!.category) {\n                <os-badge variant=\"default\" [size]=\"badgeSize()\">\n                    {{ goalData()!.category }}\n                </os-badge>\n                }\n            </div>\n        </div>\n\n        <!-- Progress Section -->\n        <div class=\"os-goal-tracker__progress\">\n            <div class=\"os-goal-tracker__amounts\">\n                <div class=\"os-goal-tracker__current\">\n                    <os-money-display [value]=\"goalData()!.currentAmount\" [currency]=\"goalData()!.currency\"\n                        [variant]=\"isCompleted() ? 'success' : 'default'\" [size]=\"moneySize()\" />\n                    <span class=\"os-goal-tracker__current-label\">Arrecadado</span>\n                </div>\n\n                <div class=\"os-goal-tracker__target\">\n                    <os-money-display [value]=\"goalData()!.targetAmount\" [currency]=\"goalData()!.currency\"\n                        variant=\"default\" [size]=\"moneySize()\" />\n                    <span class=\"os-goal-tracker__target-label\">Meta</span>\n                </div>\n\n                @if (remainingAmount() > 0) {\n                <div class=\"os-goal-tracker__remaining\">\n                    <os-money-display [value]=\"remainingAmount()\" [currency]=\"goalData()!.currency\" variant=\"info\"\n                        [size]=\"moneySize()\" />\n                    <span class=\"os-goal-tracker__remaining-label\">Restante</span>\n                </div>\n                }\n            </div>\n\n            <div class=\"os-goal-tracker__progress-bar\">\n                <os-progress-bar [value]=\"progressPercentage()\" [variant]=\"progressVariant()\" [size]=\"progressSize()\"\n                    [showPercentage]=\"true\" [animated]=\"true\" />\n            </div>\n\n            <div class=\"os-goal-tracker__stats\">\n                <div class=\"os-goal-tracker__stat\">\n                    <span class=\"os-goal-tracker__stat-label\">Progresso</span>\n                    <span class=\"os-goal-tracker__stat-value\">{{ progressPercentage() }}%</span>\n                </div>\n\n                @if (timelineInfo()) {\n                <div class=\"os-goal-tracker__stat\">\n                    <span class=\"os-goal-tracker__stat-label\">Prazo</span>\n                    <span class=\"os-goal-tracker__stat-value\">{{ timelineInfo()!.deadline }}</span>\n                </div>\n                }\n\n                @if (timelineInfo() && timelineInfo()!.daysRemaining > 0) {\n                <div class=\"os-goal-tracker__stat\">\n                    <span class=\"os-goal-tracker__stat-label\">Dias Restantes</span>\n                    <span class=\"os-goal-tracker__stat-value\">{{ timelineInfo()!.daysRemaining }}</span>\n                </div>\n                }\n            </div>\n        </div>\n\n        <!-- Timeline Section -->\n        @if (showTimeline() && timelineInfo()) {\n        <div class=\"os-goal-tracker__timeline\">\n            <h4 class=\"os-goal-tracker__timeline-title\">\n                <os-icon name=\"schedule\" [size]=\"iconSize()\" />\n                Timeline\n            </h4>\n\n            <div class=\"os-goal-tracker__timeline-content\">\n                <div class=\"os-goal-tracker__timeline-item\">\n                    <os-icon name=\"play_arrow\" [size]=\"iconSize()\" />\n                    <span class=\"os-goal-tracker__timeline-label\">Início</span>\n                    <span class=\"os-goal-tracker__timeline-value\">{{ timelineInfo()!.start }}</span>\n                </div>\n\n                @if (goalData()!.deadline) {\n                <div class=\"os-goal-tracker__timeline-item\">\n                    <os-icon name=\"flag\" [size]=\"iconSize()\" />\n                    <span class=\"os-goal-tracker__timeline-label\">Prazo</span>\n                    <span class=\"os-goal-tracker__timeline-value\">{{ timelineInfo()!.deadline }}</span>\n                </div>\n                }\n\n                <div class=\"os-goal-tracker__timeline-item\">\n                    <os-icon name=\"update\" [size]=\"iconSize()\" />\n                    <span class=\"os-goal-tracker__timeline-label\">Última Atualização</span>\n                    <span class=\"os-goal-tracker__timeline-value\">{{ timelineInfo()!.lastUpdated }}</span>\n                </div>\n            </div>\n        </div>\n        }\n\n        <!-- Contribution Section -->\n        @if (showContribution() && contributionInfo()) {\n        <div class=\"os-goal-tracker__contribution\">\n            <h4 class=\"os-goal-tracker__contribution-title\">\n                <os-icon name=\"savings\" [size]=\"iconSize()\" />\n                Contribuição Mensal\n            </h4>\n\n            <div class=\"os-goal-tracker__contribution-content\">\n                <div class=\"os-goal-tracker__contribution-info\">\n                    <os-money-display [value]=\"contributionInfo()!.monthly\" [currency]=\"goalData()!.currency\"\n                        variant=\"default\" [size]=\"moneySize()\" />\n                    <span class=\"os-goal-tracker__contribution-label\">por mês</span>\n                </div>\n\n                <div class=\"os-goal-tracker__contribution-stats\">\n                    <span class=\"os-goal-tracker__contribution-stat\">\n                        {{ contributionInfo()!.monthsNeeded }} meses para completar\n                    </span>\n\n                    @if (contributionInfo()!.isFeasible) {\n                    <os-badge variant=\"success\" [size]=\"badgeSize()\">\n                        Viável\n                    </os-badge>\n                    } @else {\n                    <os-badge variant=\"warning\" [size]=\"badgeSize()\">\n                        Longo Prazo\n                    </os-badge>\n                    }\n                </div>\n            </div>\n        </div>\n        }\n\n        <!-- History Section -->\n        @if (showHistory() && recentHistory().length > 0) {\n        <div class=\"os-goal-tracker__history\">\n            <h4 class=\"os-goal-tracker__history-title\">\n                <os-icon name=\"history\" [size]=\"iconSize()\" />\n                Histórico Recente\n            </h4>\n\n            <div class=\"os-goal-tracker__history-list\">\n                @for (entry of recentHistory(); track entry.date) {\n                <div class=\"os-goal-tracker__history-item\">\n                    <div class=\"os-goal-tracker__history-date\">\n                        {{ formatHistoryDate(entry.date) }}\n                    </div>\n                    <div class=\"os-goal-tracker__history-amount\">\n                        <os-money-display [value]=\"entry.amount\" [currency]=\"goalData()!.currency\" variant=\"default\"\n                            [size]=\"moneySize()\" />\n                    </div>\n                    <div class=\"os-goal-tracker__history-percentage\">\n                        {{ entry.percentage }}%\n                    </div>\n                    @if (entry.note) {\n                    <div class=\"os-goal-tracker__history-note\">\n                        {{ entry.note }}\n                    </div>\n                    }\n                </div>\n                }\n            </div>\n        </div>\n        }\n\n        <!-- Actions -->\n        <div class=\"os-goal-tracker__actions\">\n            <button type=\"button\" class=\"os-goal-tracker__action\" (click)=\"onRefreshClick()\"\n                [attr.aria-label]=\"'Atualizar meta ' + goalData()!.title\">\n                <os-icon name=\"refresh\" [size]=\"iconSize()\" />\n                Atualizar\n            </button>\n\n            @if (goalData()!.status === 'active') {\n            <button type=\"button\" class=\"os-goal-tracker__action\" (click)=\"onActionClick('pause')\"\n                [attr.aria-label]=\"'Pausar meta ' + goalData()!.title\">\n                <os-icon name=\"pause\" [size]=\"iconSize()\" />\n                Pausar\n            </button>\n            }\n\n            @if (goalData()!.status === 'paused') {\n            <button type=\"button\" class=\"os-goal-tracker__action\" (click)=\"onActionClick('resume')\"\n                [attr.aria-label]=\"'Retomar meta ' + goalData()!.title\">\n                <os-icon name=\"play_arrow\" [size]=\"iconSize()\" />\n                Retomar\n            </button>\n            }\n\n            @if (!isCompleted()) {\n            <button type=\"button\" class=\"os-goal-tracker__action\" (click)=\"onActionClick('cancel')\"\n                [attr.aria-label]=\"'Cancelar meta ' + goalData()!.title\">\n                <os-icon name=\"cancel\" [size]=\"iconSize()\" />\n                Cancelar\n            </button>\n            }\n        </div>\n    </os-card>\n    } @else {\n    <div class=\"os-goal-tracker__empty\">\n        <os-icon name=\"target\" [size]=\"iconSize()\" />\n        <p class=\"os-goal-tracker__empty-text\">Nenhuma meta encontrada</p>\n    </div>\n    }\n</div>"
        },
        {
            "name": "OsHeaderComponent",
            "id": "component-OsHeaderComponent-840731b53ed87350615e318359d1965504863599715bd91e183711efeec37e0c4f2ed728fd2f75c131b76302bf020aa88fa1fb48687c9277bae99f39cac14bed",
            "file": "src/app/shared/ui-components/organisms/os-header/os-header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-header",
            "styleUrls": [
                "./os-header.component.scss"
            ],
            "styles": [],
            "template": "<header class=\"os-header\" [class]=\"headerClasses()\" [attr.aria-label]=\"ariaLabel()\">\n  <div class=\"os-header__container\">\n    <!-- Logo/Brand Section -->\n    <div class=\"os-header__brand\">\n      @if (logo()) {\n      <a\n        class=\"os-header__logo\"\n        [routerLink]=\"logoRoute()\"\n        [attr.aria-label]=\"logoAlt()\"\n        (click)=\"onLogoClick($event)\"\n      >\n        @if (logoImage()) {\n        <img [src]=\"logoImage()\" [alt]=\"logoAlt()\" class=\"os-header__logo-image\" />\n        } @else {\n        <span class=\"os-header__logo-text\">{{ logoText() }}</span>\n        }\n      </a>\n      } @else if (logoText()) {\n      <div class=\"os-header__logo-text-only\">{{ logoText() }}</div>\n      }\n    </div>\n\n    <!-- Navigation Section -->\n    @if (navigationItems().length > 0) {\n    <nav class=\"os-header__navigation\" [attr.aria-label]=\"navigationAriaLabel()\">\n      <ul class=\"os-header__nav-list\">\n        @for (item of navigationItems(); track item.label) {\n        <li class=\"os-header__nav-item\">\n          <os-navigation-item\n            [label]=\"item.label\"\n            [icon]=\"item.icon || ''\"\n            [routerLink]=\"item.route\"\n            [active]=\"item.active || false\"\n            [badge]=\"item.badge || null\"\n            [disabled]=\"item.disabled || false\"\n            [variant]=\"getNavigationVariant()\"\n            [size]=\"getNavigationSize()\"\n            (itemClick)=\"onNavigationClick(item, $event)\"\n          />\n        </li>\n        }\n      </ul>\n    </nav>\n    }\n\n    <!-- Actions Section -->\n    <div class=\"os-header__actions\">\n      @if (actions().length > 0) {\n      <div class=\"os-header__action-buttons\">\n        @for (action of actions(); track action.label) {\n        <os-button\n          [variant]=\"action.variant || 'secondary'\"\n          [size]=\"action.size || 'medium'\"\n          [disabled]=\"action.disabled || false\"\n          [loading]=\"action.loading || false\"\n          [icon]=\"action.icon || ''\"\n          (buttonClick)=\"onActionClick(action, $event)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n\n      <!-- User Menu -->\n      @if (showUserMenu()) {\n      <div class=\"os-header__user-menu\">\n        <button\n          class=\"os-header__user-trigger\"\n          [class]=\"userTriggerClasses()\"\n          [disabled]=\"userMenuDisabled()\"\n          [attr.aria-label]=\"userMenuAriaLabel()\"\n          [attr.aria-expanded]=\"userMenuOpen()\"\n          [attr.aria-haspopup]=\"'menu'\"\n          (click)=\"toggleUserMenu()\"\n        >\n          <os-avatar\n            [image]=\"userAvatar() || ''\"\n            [initials]=\"userInitials() || ''\"\n            [size]=\"getAvatarSize()\"\n            [variant]=\"'circle'\"\n            [ariaLabel]=\"userName() || 'User'\"\n          />\n          @if (showUserInfo()) {\n          <div class=\"os-header__user-info\">\n            <span class=\"os-header__user-name\">{{ userName() }}</span>\n            @if (userRole()) {\n            <span class=\"os-header__user-role\">{{ userRole() }}</span>\n            }\n          </div>\n          }\n          <os-icon\n            name=\"chevron-down\"\n            size=\"sm\"\n            class=\"os-header__user-chevron\"\n            [class]=\"userChevronClasses()\"\n            [attr.aria-hidden]=\"true\"\n          />\n        </button>\n\n        @if (userMenuOpen()) {\n        <div class=\"os-header__user-dropdown\" [attr.role]=\"'menu'\">\n          @for (menuItem of userMenuItems(); track menuItem.label) { @if (menuItem.divider) {\n          <div class=\"os-header__user-divider\" role=\"separator\"></div>\n          } @else {\n          <button\n            class=\"os-header__user-menu-item\"\n            [class]=\"getUserMenuItemClasses(menuItem)\"\n            [disabled]=\"menuItem.disabled || false\"\n            [attr.aria-label]=\"menuItem.label\"\n            (click)=\"onUserMenuItemClick(menuItem, $event)\"\n          >\n            @if (menuItem.icon) {\n            <os-icon\n              [name]=\"menuItem.icon\"\n              size=\"sm\"\n              class=\"os-header__user-menu-icon\"\n              [attr.aria-hidden]=\"true\"\n            />\n            }\n            <span class=\"os-header__user-menu-text\">{{ menuItem.label }}</span>\n          </button>\n          } }\n        </div>\n        }\n      </div>\n      }\n\n      <!-- Mobile Menu Toggle -->\n      @if (showMobileMenu()) {\n      <button\n        class=\"os-header__mobile-toggle\"\n        [class]=\"mobileToggleClasses()\"\n        [attr.aria-label]=\"mobileMenuAriaLabel()\"\n        [attr.aria-expanded]=\"mobileMenuOpen()\"\n        (click)=\"toggleMobileMenu()\"\n      >\n        <os-icon\n          [name]=\"mobileMenuOpen() ? 'close' : 'menu'\"\n          size=\"md\"\n          [attr.aria-hidden]=\"true\"\n        />\n      </button>\n      }\n    </div>\n  </div>\n\n  <!-- Mobile Navigation -->\n  @if (showMobileMenu() && mobileMenuOpen()) {\n  <div class=\"os-header__mobile-navigation\" [attr.role]=\"'navigation'\">\n    <nav class=\"os-header__mobile-nav\" [attr.aria-label]=\"mobileNavigationAriaLabel()\">\n      <ul class=\"os-header__mobile-nav-list\">\n        @for (item of navigationItems(); track item.label) {\n        <li class=\"os-header__mobile-nav-item\">\n          <os-navigation-item\n            [label]=\"item.label\"\n            [icon]=\"item.icon || ''\"\n            [routerLink]=\"item.route\"\n            [active]=\"item.active || false\"\n            [badge]=\"item.badge || null\"\n            [disabled]=\"item.disabled || false\"\n            [variant]=\"getMobileNavigationVariant()\"\n            [size]=\"getMobileNavigationSize()\"\n            (itemClick)=\"onMobileNavigationClick(item, $event)\"\n          />\n        </li>\n        }\n      </ul>\n    </nav>\n  </div>\n  }\n</header>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeaderAction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 248,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 260,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "logo",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 227,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "logoAlt",
                    "defaultValue": "'Logo'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 231,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "logoImage",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 229,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "logoRoute",
                    "defaultValue": "'/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 230,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "logoText",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 228,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "mobileMenuAriaLabel",
                    "defaultValue": "'Mobile menu'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 252,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "mobileNavigationAriaLabel",
                    "defaultValue": "'Mobile navigation'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 253,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "navigationAriaLabel",
                    "defaultValue": "'Main navigation'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 235,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "navigationItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeaderNavigationItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 234,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showMobileMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 251,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showUserMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 238,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 257,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "sticky",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 259,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 258,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "userAvatar",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 241,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "userInitials",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 242,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "userMenuAriaLabel",
                    "defaultValue": "'User menu'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 245,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "userMenuDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 244,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "userMenuItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeaderUserMenu[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 243,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "userName",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 239,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "userRole",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 240,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"extended\" | \"minimal\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 256,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ action: HeaderAction; event: MouseEvent }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 269,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "logoClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MouseEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 267,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "mobileMenuToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 272,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "mobileNavigationClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ item: HeaderNavigationItem; event: MouseEvent }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 271,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "navigationClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ item: HeaderNavigationItem; event: MouseEvent }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 268,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "userMenuItemClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ item: HeaderUserMenu; event: MouseEvent }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 270,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "getAvatarSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 348,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "getMobileNavigationSize",
                    "defaultValue": "computed(() => {\n    return 'large' as const;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 374,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "getMobileNavigationVariant",
                    "defaultValue": "computed(() => {\n    return 'primary' as const;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 370,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "getNavigationSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 361,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "getNavigationVariant",
                    "defaultValue": "computed(() => {\n    return this.theme() === 'dark' ? ('accent' as const) : ('default' as const);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 357,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "headerClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-header'];\n    classes.push(`os-header--${this.variant()}`);\n    classes.push(`os-header--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-header--dark');\n    }\n\n    if (this.sticky()) {\n      classes.push('os-header--sticky');\n    }\n\n    if (this.navigationItems().length > 0) {\n      classes.push('os-header--with-navigation');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-header--with-actions');\n    }\n\n    if (this.showUserMenu()) {\n      classes.push('os-header--with-user-menu');\n    }\n\n    if (this.showMobileMenu()) {\n      classes.push('os-header--with-mobile-menu');\n    }\n\n    if (this.mobileMenuOpen()) {\n      classes.push('os-header--mobile-open');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 274,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "mobileMenuOpen",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 264,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "mobileToggleClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-header__mobile-toggle'];\n\n    if (this.mobileMenuOpen()) {\n      classes.push('os-header__mobile-toggle--open');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 334,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "showUserInfo",
                    "defaultValue": "computed(() => {\n    return this.variant() === 'extended' && (this.userName() || this.userRole());\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 344,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "userChevronClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-header__user-chevron'];\n\n    if (this.userMenuOpen()) {\n      classes.push('os-header__user-chevron--open');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 324,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "userMenuOpen",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 263,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "userTriggerClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-header__user-trigger'];\n\n    if (this.userMenuOpen()) {\n      classes.push('os-header__user-trigger--open');\n    }\n\n    if (this.userMenuDisabled()) {\n      classes.push('os-header__user-trigger--disabled');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 310,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getUserMenuItemClasses",
                    "args": [
                        {
                            "name": "menuItem",
                            "type": "HeaderUserMenu",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 378,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "menuItem",
                            "type": "HeaderUserMenu",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "HeaderAction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 396,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "HeaderAction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLogoClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 388,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMobileNavigationClick",
                    "args": [
                        {
                            "name": "item",
                            "type": "HeaderNavigationItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 407,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "HeaderNavigationItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNavigationClick",
                    "args": [
                        {
                            "name": "item",
                            "type": "HeaderNavigationItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 392,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "HeaderNavigationItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onUserMenuItemClick",
                    "args": [
                        {
                            "name": "menuItem",
                            "type": "HeaderUserMenu",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 400,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "menuItem",
                            "type": "HeaderUserMenu",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMobileMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 418,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleUserMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 412,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                },
                {
                    "name": "OsAvatarComponent",
                    "type": "component"
                },
                {
                    "name": "OsNavigationItemComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input, output, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsAvatarComponent } from '../../atoms/os-avatar/os-avatar.component';\nimport { OsNavigationItemComponent } from '../../molecules/os-navigation-item/os-navigation-item.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport interface HeaderNavigationItem {\n  label: string;\n  icon?: string;\n  route?: string;\n  active?: boolean;\n  badge?: number;\n  disabled?: boolean;\n}\n\nexport interface HeaderUserMenu {\n  label: string;\n  icon?: string;\n  route?: string;\n  action?: string;\n  disabled?: boolean;\n  divider?: boolean;\n}\n\nexport interface HeaderAction {\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  size?: 'small' | 'medium' | 'large';\n  disabled?: boolean;\n  loading?: boolean;\n}\n\n@Component({\n  selector: 'os-header',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsButtonComponent,\n    OsAvatarComponent,\n    OsNavigationItemComponent,\n    OsIconComponent,\n  ],\n  template: `\n    <header class=\"os-header\" [class]=\"headerClasses()\" [attr.aria-label]=\"ariaLabel()\">\n      <div class=\"os-header__container\">\n        <!-- Logo/Brand Section -->\n        <div class=\"os-header__brand\">\n          @if (logo()) {\n          <a\n            class=\"os-header__logo\"\n            [routerLink]=\"logoRoute()\"\n            [attr.aria-label]=\"logoAlt()\"\n            (click)=\"onLogoClick($event)\"\n          >\n            @if (logoImage()) {\n            <img [src]=\"logoImage()\" [alt]=\"logoAlt()\" class=\"os-header__logo-image\" />\n            } @else {\n            <span class=\"os-header__logo-text\">{{ logoText() }}</span>\n            }\n          </a>\n          } @else if (logoText()) {\n          <div class=\"os-header__logo-text-only\">{{ logoText() }}</div>\n          }\n        </div>\n\n        <!-- Navigation Section -->\n        @if (navigationItems().length > 0) {\n        <nav class=\"os-header__navigation\" [attr.aria-label]=\"navigationAriaLabel()\">\n          <ul class=\"os-header__nav-list\">\n            @for (item of navigationItems(); track item.label) {\n            <li class=\"os-header__nav-item\">\n              <os-navigation-item\n                [label]=\"item.label\"\n                [icon]=\"item.icon || ''\"\n                [routerLink]=\"item.route\"\n                [active]=\"item.active || false\"\n                [badge]=\"item.badge || null\"\n                [disabled]=\"item.disabled || false\"\n                [variant]=\"getNavigationVariant()\"\n                [size]=\"getNavigationSize()\"\n                (itemClick)=\"onNavigationClick(item, $event)\"\n              />\n            </li>\n            }\n          </ul>\n        </nav>\n        }\n\n        <!-- Actions Section -->\n        <div class=\"os-header__actions\">\n          @if (actions().length > 0) {\n          <div class=\"os-header__action-buttons\">\n            @for (action of actions(); track action.label) {\n            <os-button\n              [variant]=\"action.variant || 'secondary'\"\n              [size]=\"action.size || 'medium'\"\n              [disabled]=\"action.disabled || false\"\n              [loading]=\"action.loading || false\"\n              [icon]=\"action.icon || ''\"\n              (buttonClick)=\"onActionClick(action, $event)\"\n            >\n              {{ action.label }}\n            </os-button>\n            }\n          </div>\n          }\n\n          <!-- User Menu -->\n          @if (showUserMenu()) {\n          <div class=\"os-header__user-menu\">\n            <button\n              class=\"os-header__user-trigger\"\n              [class]=\"userTriggerClasses()\"\n              [disabled]=\"userMenuDisabled()\"\n              [attr.aria-label]=\"userMenuAriaLabel()\"\n              [attr.aria-expanded]=\"userMenuOpen()\"\n              [attr.aria-haspopup]=\"'menu'\"\n              (click)=\"toggleUserMenu()\"\n            >\n              <os-avatar\n                [image]=\"userAvatar() || ''\"\n                [initials]=\"userInitials() || ''\"\n                [size]=\"getAvatarSize()\"\n                [variant]=\"'circle'\"\n                [ariaLabel]=\"userName() || 'User'\"\n              />\n              @if (showUserInfo()) {\n              <div class=\"os-header__user-info\">\n                <span class=\"os-header__user-name\">{{ userName() }}</span>\n                @if (userRole()) {\n                <span class=\"os-header__user-role\">{{ userRole() }}</span>\n                }\n              </div>\n              }\n              <os-icon\n                name=\"chevron-down\"\n                size=\"sm\"\n                class=\"os-header__user-chevron\"\n                [class]=\"userChevronClasses()\"\n                [attr.aria-hidden]=\"true\"\n              />\n            </button>\n\n            @if (userMenuOpen()) {\n            <div class=\"os-header__user-dropdown\" [attr.role]=\"'menu'\">\n              @for (menuItem of userMenuItems(); track menuItem.label) { @if (menuItem.divider) {\n              <div class=\"os-header__user-divider\" role=\"separator\"></div>\n              } @else {\n              <button\n                class=\"os-header__user-menu-item\"\n                [class]=\"getUserMenuItemClasses(menuItem)\"\n                [disabled]=\"menuItem.disabled || false\"\n                [attr.aria-label]=\"menuItem.label\"\n                (click)=\"onUserMenuItemClick(menuItem, $event)\"\n              >\n                @if (menuItem.icon) {\n                <os-icon\n                  [name]=\"menuItem.icon\"\n                  size=\"sm\"\n                  class=\"os-header__user-menu-icon\"\n                  [attr.aria-hidden]=\"true\"\n                />\n                }\n                <span class=\"os-header__user-menu-text\">{{ menuItem.label }}</span>\n              </button>\n              } }\n            </div>\n            }\n          </div>\n          }\n\n          <!-- Mobile Menu Toggle -->\n          @if (showMobileMenu()) {\n          <button\n            class=\"os-header__mobile-toggle\"\n            [class]=\"mobileToggleClasses()\"\n            [attr.aria-label]=\"mobileMenuAriaLabel()\"\n            [attr.aria-expanded]=\"mobileMenuOpen()\"\n            (click)=\"toggleMobileMenu()\"\n          >\n            <os-icon\n              [name]=\"mobileMenuOpen() ? 'close' : 'menu'\"\n              size=\"md\"\n              [attr.aria-hidden]=\"true\"\n            />\n          </button>\n          }\n        </div>\n      </div>\n\n      <!-- Mobile Navigation -->\n      @if (showMobileMenu() && mobileMenuOpen()) {\n      <div class=\"os-header__mobile-navigation\" [attr.role]=\"'navigation'\">\n        <nav class=\"os-header__mobile-nav\" [attr.aria-label]=\"mobileNavigationAriaLabel()\">\n          <ul class=\"os-header__mobile-nav-list\">\n            @for (item of navigationItems(); track item.label) {\n            <li class=\"os-header__mobile-nav-item\">\n              <os-navigation-item\n                [label]=\"item.label\"\n                [icon]=\"item.icon || ''\"\n                [routerLink]=\"item.route\"\n                [active]=\"item.active || false\"\n                [badge]=\"item.badge || null\"\n                [disabled]=\"item.disabled || false\"\n                [variant]=\"getMobileNavigationVariant()\"\n                [size]=\"getMobileNavigationSize()\"\n                (itemClick)=\"onMobileNavigationClick(item, $event)\"\n              />\n            </li>\n            }\n          </ul>\n        </nav>\n      </div>\n      }\n    </header>\n  `,\n  styleUrls: ['./os-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsHeaderComponent {\n  // Logo/Brand inputs\n  readonly logo = input<string | null>(null);\n  readonly logoText = input<string | null>(null);\n  readonly logoImage = input<string | null>(null);\n  readonly logoRoute = input<string>('/');\n  readonly logoAlt = input<string>('Logo');\n\n  // Navigation inputs\n  readonly navigationItems = input<HeaderNavigationItem[]>([]);\n  readonly navigationAriaLabel = input<string>('Main navigation');\n\n  // User menu inputs\n  readonly showUserMenu = input(false);\n  readonly userName = input<string | null>(null);\n  readonly userRole = input<string | null>(null);\n  readonly userAvatar = input<string | null>(null);\n  readonly userInitials = input<string | null>(null);\n  readonly userMenuItems = input<HeaderUserMenu[]>([]);\n  readonly userMenuDisabled = input(false);\n  readonly userMenuAriaLabel = input<string>('User menu');\n\n  // Actions inputs\n  readonly actions = input<HeaderAction[]>([]);\n\n  // Mobile menu inputs\n  readonly showMobileMenu = input(false);\n  readonly mobileMenuAriaLabel = input<string>('Mobile menu');\n  readonly mobileNavigationAriaLabel = input<string>('Mobile navigation');\n\n  // Styling inputs\n  readonly variant = input<'default' | 'compact' | 'extended' | 'minimal'>('default');\n  readonly size = input<'small' | 'medium' | 'large'>('medium');\n  readonly theme = input<'light' | 'dark'>('light');\n  readonly sticky = input(false);\n  readonly ariaLabel = input<string | null>(null);\n\n  // State signals\n  readonly userMenuOpen = signal(false);\n  readonly mobileMenuOpen = signal(false);\n\n  // Outputs\n  readonly logoClick = output<MouseEvent>();\n  readonly navigationClick = output<{ item: HeaderNavigationItem; event: MouseEvent }>();\n  readonly actionClick = output<{ action: HeaderAction; event: MouseEvent }>();\n  readonly userMenuItemClick = output<{ item: HeaderUserMenu; event: MouseEvent }>();\n  readonly mobileNavigationClick = output<{ item: HeaderNavigationItem; event: MouseEvent }>();\n  readonly mobileMenuToggle = output<boolean>();\n\n  readonly headerClasses = computed(() => {\n    const classes = ['os-header'];\n    classes.push(`os-header--${this.variant()}`);\n    classes.push(`os-header--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-header--dark');\n    }\n\n    if (this.sticky()) {\n      classes.push('os-header--sticky');\n    }\n\n    if (this.navigationItems().length > 0) {\n      classes.push('os-header--with-navigation');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-header--with-actions');\n    }\n\n    if (this.showUserMenu()) {\n      classes.push('os-header--with-user-menu');\n    }\n\n    if (this.showMobileMenu()) {\n      classes.push('os-header--with-mobile-menu');\n    }\n\n    if (this.mobileMenuOpen()) {\n      classes.push('os-header--mobile-open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly userTriggerClasses = computed(() => {\n    const classes = ['os-header__user-trigger'];\n\n    if (this.userMenuOpen()) {\n      classes.push('os-header__user-trigger--open');\n    }\n\n    if (this.userMenuDisabled()) {\n      classes.push('os-header__user-trigger--disabled');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly userChevronClasses = computed(() => {\n    const classes = ['os-header__user-chevron'];\n\n    if (this.userMenuOpen()) {\n      classes.push('os-header__user-chevron--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly mobileToggleClasses = computed(() => {\n    const classes = ['os-header__mobile-toggle'];\n\n    if (this.mobileMenuOpen()) {\n      classes.push('os-header__mobile-toggle--open');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly showUserInfo = computed(() => {\n    return this.variant() === 'extended' && (this.userName() || this.userRole());\n  });\n\n  readonly getAvatarSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  readonly getNavigationVariant = computed(() => {\n    return this.theme() === 'dark' ? ('accent' as const) : ('default' as const);\n  });\n\n  readonly getNavigationSize = computed(() => {\n    const sizeMap: Record<string, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  readonly getMobileNavigationVariant = computed(() => {\n    return 'primary' as const;\n  });\n\n  readonly getMobileNavigationSize = computed(() => {\n    return 'large' as const;\n  });\n\n  getUserMenuItemClasses(menuItem: HeaderUserMenu): string {\n    const classes = ['os-header__user-menu-item'];\n\n    if (menuItem.disabled) {\n      classes.push('os-header__user-menu-item--disabled');\n    }\n\n    return classes.join(' ');\n  }\n\n  onLogoClick(event: MouseEvent): void {\n    this.logoClick.emit(event);\n  }\n\n  onNavigationClick(item: HeaderNavigationItem, event: MouseEvent): void {\n    this.navigationClick.emit({ item, event });\n  }\n\n  onActionClick(action: HeaderAction, event: MouseEvent): void {\n    this.actionClick.emit({ action, event });\n  }\n\n  onUserMenuItemClick(menuItem: HeaderUserMenu, event: MouseEvent): void {\n    if (!menuItem.disabled) {\n      this.userMenuItemClick.emit({ item: menuItem, event });\n      this.userMenuOpen.set(false);\n    }\n  }\n\n  onMobileNavigationClick(item: HeaderNavigationItem, event: MouseEvent): void {\n    this.mobileNavigationClick.emit({ item, event });\n    this.mobileMenuOpen.set(false);\n  }\n\n  toggleUserMenu(): void {\n    if (!this.userMenuDisabled()) {\n      this.userMenuOpen.update((open) => !open);\n    }\n  }\n\n  toggleMobileMenu(): void {\n    this.mobileMenuOpen.update((open) => !open);\n    this.mobileMenuToggle.emit(this.mobileMenuOpen());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/variables' as *;\n\n.os-header {\n  position: relative;\n  background: var(--os-color-surface);\n  border-bottom: 1px solid var(--os-color-border);\n  z-index: var(--os-z-index-header);\n\n  &--sticky {\n    position: sticky;\n    top: 0;\n  }\n\n  &--dark {\n    background: var(--os-color-surface-dark);\n    border-bottom-color: var(--os-color-border-dark);\n  }\n\n  &--with-navigation {\n    .os-header__container {\n      grid-template-columns: auto 1fr auto;\n    }\n  }\n\n  &--with-actions {\n    .os-header__actions {\n      gap: var(--os-spacing-sm);\n    }\n  }\n\n  &--with-user-menu {\n    .os-header__actions {\n      gap: var(--os-spacing-md);\n    }\n  }\n\n  &--with-mobile-menu {\n    .os-header__container {\n      grid-template-columns: auto 1fr auto;\n    }\n  }\n\n  &--mobile-open {\n    .os-header__mobile-navigation {\n      display: block;\n    }\n  }\n\n  // Size variants\n  &--small {\n    min-height: var(--os-header-height-small);\n    padding: var(--os-spacing-xs) var(--os-spacing-md);\n\n    .os-header__container {\n      min-height: calc(var(--os-header-height-small) - var(--os-spacing-xs) * 2);\n    }\n\n    .os-header__logo-text {\n      font-size: var(--os-font-size-lg);\n      font-weight: var(--os-font-weight-semibold);\n    }\n\n    .os-header__user-name {\n      font-size: var(--os-font-size-sm);\n    }\n\n    .os-header__user-role {\n      font-size: var(--os-font-size-xs);\n    }\n  }\n\n  &--medium {\n    min-height: var(--os-header-height-medium);\n    padding: var(--os-spacing-sm) var(--os-spacing-lg);\n\n    .os-header__container {\n      min-height: calc(var(--os-header-height-medium) - var(--os-spacing-sm) * 2);\n    }\n\n    .os-header__logo-text {\n      font-size: var(--os-font-size-xl);\n      font-weight: var(--os-font-weight-bold);\n    }\n\n    .os-header__user-name {\n      font-size: var(--os-font-size-base);\n    }\n\n    .os-header__user-role {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  &--large {\n    min-height: var(--os-header-height-large);\n    padding: var(--os-spacing-md) var(--os-spacing-xl);\n\n    .os-header__container {\n      min-height: calc(var(--os-header-height-large) - var(--os-spacing-md) * 2);\n    }\n\n    .os-header__logo-text {\n      font-size: var(--os-font-size-2xl);\n      font-weight: var(--os-font-weight-bold);\n    }\n\n    .os-header__user-name {\n      font-size: var(--os-font-size-lg);\n    }\n\n    .os-header__user-role {\n      font-size: var(--os-font-size-base);\n    }\n  }\n\n  // Variant styles\n  &--compact {\n    .os-header__navigation {\n      display: none;\n    }\n\n    .os-header__container {\n      grid-template-columns: auto auto;\n    }\n  }\n\n  &--extended {\n    .os-header__user-info {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n    }\n  }\n\n  &--minimal {\n    .os-header__navigation,\n    .os-header__action-buttons {\n      display: none;\n    }\n\n    .os-header__container {\n      grid-template-columns: auto auto;\n    }\n  }\n}\n\n.os-header__container {\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  align-items: center;\n  gap: var(--os-spacing-lg);\n  max-width: 100%;\n  width: 100%;\n}\n\n.os-header__brand {\n  display: flex;\n  align-items: center;\n  flex-shrink: 0;\n}\n\n.os-header__logo {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: var(--os-color-text-primary);\n  transition: var(--os-transition-fast);\n\n  &:hover {\n    color: var(--os-color-primary);\n    text-decoration: none;\n  }\n\n  &:focus {\n    outline: 2px solid var(--os-color-primary);\n    outline-offset: 2px;\n    border-radius: var(--os-border-radius-sm);\n  }\n}\n\n.os-header__logo-image {\n  height: var(--os-logo-height);\n  width: auto;\n  object-fit: contain;\n}\n\n.os-header__logo-text {\n  color: var(--os-color-text-primary);\n  font-family: var(--os-font-family-heading);\n  font-weight: var(--os-font-weight-bold);\n  line-height: 1.2;\n  margin: 0;\n}\n\n.os-header__logo-text-only {\n  color: var(--os-color-text-primary);\n  font-family: var(--os-font-family-heading);\n  font-weight: var(--os-font-weight-bold);\n  line-height: 1.2;\n  margin: 0;\n}\n\n.os-header__navigation {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  min-width: 0;\n}\n\n.os-header__nav-list {\n  display: flex;\n  align-items: center;\n  gap: var(--os-spacing-sm);\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.os-header__nav-item {\n  display: flex;\n  align-items: center;\n}\n\n.os-header__actions {\n  display: flex;\n  align-items: center;\n  gap: var(--os-spacing-sm);\n  flex-shrink: 0;\n}\n\n.os-header__action-buttons {\n  display: flex;\n  align-items: center;\n  gap: var(--os-spacing-sm);\n}\n\n.os-header__user-menu {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.os-header__user-trigger {\n  display: flex;\n  align-items: center;\n  gap: var(--os-spacing-sm);\n  background: none;\n  border: none;\n  padding: var(--os-spacing-xs);\n  border-radius: var(--os-border-radius-md);\n  cursor: pointer;\n  transition: var(--os-transition-fast);\n  color: var(--os-color-text-primary);\n\n  &:hover:not(&--disabled) {\n    background: var(--os-color-surface-hover);\n  }\n\n  &:focus {\n    outline: 2px solid var(--os-color-primary);\n    outline-offset: 2px;\n  }\n\n  &--disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &--open {\n    background: var(--os-color-surface-selected);\n  }\n}\n\n.os-header__user-info {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  text-align: left;\n  min-width: 0;\n}\n\n.os-header__user-name {\n  font-weight: var(--os-font-weight-medium);\n  color: var(--os-color-text-primary);\n  line-height: 1.2;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 200px;\n}\n\n.os-header__user-role {\n  color: var(--os-color-text-secondary);\n  line-height: 1.2;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 200px;\n}\n\n.os-header__user-chevron {\n  transition: var(--os-transition-fast);\n  color: var(--os-color-text-secondary);\n\n  &--open {\n    transform: rotate(180deg);\n  }\n}\n\n.os-header__user-dropdown {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background: var(--os-color-surface);\n  border: 1px solid var(--os-color-border);\n  border-radius: var(--os-border-radius-md);\n  box-shadow: var(--os-shadow-lg);\n  min-width: 200px;\n  max-width: 300px;\n  z-index: var(--os-z-index-dropdown);\n  margin-top: var(--os-spacing-xs);\n  overflow: hidden;\n\n  .os-header--dark & {\n    background: var(--os-color-surface-dark);\n    border-color: var(--os-color-border-dark);\n  }\n}\n\n.os-header__user-menu-item {\n  display: flex;\n  align-items: center;\n  gap: var(--os-spacing-sm);\n  width: 100%;\n  padding: var(--os-spacing-sm) var(--os-spacing-md);\n  background: none;\n  border: none;\n  text-align: left;\n  cursor: pointer;\n  transition: var(--os-transition-fast);\n  color: var(--os-color-text-primary);\n  font-size: var(--os-font-size-sm);\n\n  &:hover:not(&--disabled) {\n    background: var(--os-color-surface-hover);\n  }\n\n  &:focus {\n    outline: 2px solid var(--os-color-primary);\n    outline-offset: -2px;\n  }\n\n  &--disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n}\n\n.os-header__user-menu-icon {\n  flex-shrink: 0;\n  color: var(--os-color-text-secondary);\n}\n\n.os-header__user-menu-text {\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.os-header__user-divider {\n  height: 1px;\n  background: var(--os-color-border);\n  margin: var(--os-spacing-xs) 0;\n}\n\n.os-header__mobile-toggle {\n  display: none;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  border: none;\n  padding: var(--os-spacing-sm);\n  border-radius: var(--os-border-radius-md);\n  cursor: pointer;\n  transition: var(--os-transition-fast);\n  color: var(--os-color-text-primary);\n\n  &:hover {\n    background: var(--os-color-surface-hover);\n  }\n\n  &:focus {\n    outline: 2px solid var(--os-color-primary);\n    outline-offset: 2px;\n  }\n\n  &--open {\n    background: var(--os-color-surface-selected);\n  }\n}\n\n.os-header__mobile-navigation {\n  display: none;\n  background: var(--os-color-surface);\n  border-top: 1px solid var(--os-color-border);\n  padding: var(--os-spacing-md);\n\n  .os-header--dark & {\n    background: var(--os-color-surface-dark);\n    border-top-color: var(--os-color-border-dark);\n  }\n}\n\n.os-header__mobile-nav-list {\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-xs);\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.os-header__mobile-nav-item {\n  display: flex;\n  align-items: center;\n}\n\n// Responsive design\n@media (max-width: 768px) {\n  .os-header {\n    &--with-navigation {\n      .os-header__navigation {\n        display: none;\n      }\n    }\n\n    &--with-mobile-menu {\n      .os-header__mobile-toggle {\n        display: flex;\n      }\n    }\n\n    &--mobile-open {\n      .os-header__mobile-navigation {\n        display: block;\n      }\n    }\n  }\n\n  .os-header__container {\n    grid-template-columns: auto 1fr auto;\n  }\n\n  .os-header__user-info {\n    display: none;\n  }\n\n  .os-header__action-buttons {\n    display: none;\n  }\n}\n\n@media (max-width: 480px) {\n  .os-header {\n    padding: var(--os-spacing-sm) var(--os-spacing-md);\n\n    &--small {\n      padding: var(--os-spacing-xs) var(--os-spacing-sm);\n    }\n\n    &--large {\n      padding: var(--os-spacing-sm) var(--os-spacing-md);\n    }\n  }\n\n  .os-header__container {\n    gap: var(--os-spacing-sm);\n  }\n\n  .os-header__actions {\n    gap: var(--os-spacing-xs);\n  }\n}\n\n// Dark theme support\n.os-header--dark {\n  .os-header__logo {\n    color: var(--os-color-text-primary-dark);\n\n    &:hover {\n      color: var(--os-color-primary-light);\n    }\n  }\n\n  .os-header__logo-text,\n  .os-header__logo-text-only {\n    color: var(--os-color-text-primary-dark);\n  }\n\n  .os-header__user-name {\n    color: var(--os-color-text-primary-dark);\n  }\n\n  .os-header__user-role {\n    color: var(--os-color-text-secondary-dark);\n  }\n\n  .os-header__user-trigger {\n    color: var(--os-color-text-primary-dark);\n\n    &:hover:not(&--disabled) {\n      background: var(--os-color-surface-hover-dark);\n    }\n\n    &--open {\n      background: var(--os-color-surface-selected-dark);\n    }\n  }\n\n  .os-header__user-menu-item {\n    color: var(--os-color-text-primary-dark);\n\n    &:hover:not(&--disabled) {\n      background: var(--os-color-surface-hover-dark);\n    }\n  }\n\n  .os-header__mobile-toggle {\n    color: var(--os-color-text-primary-dark);\n\n    &:hover {\n      background: var(--os-color-surface-hover-dark);\n    }\n\n    &--open {\n      background: var(--os-color-surface-selected-dark);\n    }\n  }\n}\n",
                    "styleUrl": "./os-header.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsIconComponent",
            "id": "component-OsIconComponent-6d36809545007bc69b2d7d101f7866fd1dd5894120e7d4b2d12b338392bb9c3288a6911aacdfa72102449f58f629cc3dc04b594fe4b8c56cbe2db1c5e5d62178",
            "file": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-icon",
            "styleUrls": [
                "./os-icon.component.scss"
            ],
            "styles": [],
            "template": "@if (svgContent()) {\n<div\n  [class]=\"iconClass()\"\n  [attr.aria-hidden]=\"ariaHidden()\"\n  [attr.aria-label]=\"ariaLabel() || null\"\n  [attr.title]=\"title() || null\"\n  [innerHTML]=\"svgContent()\"\n  role=\"img\"\n></div>\n} @else if (svgUrl()) {\n<img\n  [class]=\"iconClass()\"\n  [attr.aria-hidden]=\"ariaHidden()\"\n  [attr.aria-label]=\"ariaLabel() || null\"\n  [attr.title]=\"title() || null\"\n  [src]=\"svgUrl()\"\n  [alt]=\"ariaLabel() || ''\"\n  role=\"img\"\n/>\n} @else {\n<mat-icon\n  [class]=\"iconClass()\"\n  [attr.aria-hidden]=\"ariaHidden()\"\n  [attr.aria-label]=\"ariaLabel() || null\"\n  [attr.title]=\"title() || null\"\n  [fontSet]=\"fontSet()\"\n  [fontIcon]=\"fontIcon()\"\n  [color]=\"matColor()\"\n  [inline]=\"inline()\"\n  [attr.role]=\"iconRole()\"\n>\n  @if (!fontIcon()) {\n  {{ iconContent() }}\n  }\n</mat-icon>\n}\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "required": false
                },
                {
                    "name": "fallbackIcon",
                    "defaultValue": "'help'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "fontIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "required": false
                },
                {
                    "name": "fontSet",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "required": false
                },
                {
                    "name": "inline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "required": false
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "required": false
                },
                {
                    "name": "pulse",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'decorative'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsIconRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsIconSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "required": false
                },
                {
                    "name": "spin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "required": false
                },
                {
                    "name": "svgContent",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                },
                {
                    "name": "svgUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsIconVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ariaHidden",
                    "defaultValue": "computed(() => {\n    return this.role() === 'decorative';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "iconClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-icon',\n      `os-icon--${this.size()}`,\n      `os-icon--${this.variant()}`,\n      `os-icon--${this.role()}`,\n      this.spin() ? 'os-icon--spin' : '',\n      this.pulse() ? 'os-icon--pulse' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "iconContent",
                    "defaultValue": "computed(() => {\n    const iconName = this.name();\n    if (!iconName) return this.fallbackIcon();\n\n    // Verificar se o ícone é suportado\n    if (!this.supportedIcons.has(iconName)) {\n      console.warn(`Ícone \"${iconName}\" não é suportado. Usando fallback \"${this.fallbackIcon()}\"`);\n      return this.getIconContent(this.fallbackIcon());\n    }\n\n    return this.getIconContent(iconName);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 189
                },
                {
                    "name": "iconRole",
                    "defaultValue": "computed(() => {\n    switch (this.role()) {\n      case 'informative':\n        return 'img';\n      case 'interactive':\n        return 'button';\n      default:\n        return null;\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "matColor",
                    "defaultValue": "computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'error':\n        return 'warn';\n      case 'info':\n        return 'accent';\n      default:\n        return undefined;\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 290,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "supportedIcons",
                    "defaultValue": "new Set([\n    'home',\n    'menu',\n    'close',\n    'back',\n    'forward',\n    'up',\n    'down',\n    'left',\n    'right',\n    'add',\n    'remove',\n    'edit',\n    'delete',\n    'save',\n    'cancel',\n    'confirm',\n    'search',\n    'filter',\n    'sort',\n    'refresh',\n    'settings',\n    'help',\n    'info',\n    'warning',\n    'error',\n    'success',\n    'user',\n    'users',\n    'profile',\n    'logout',\n    'login',\n    'money',\n    'wallet',\n    'credit-card',\n    'bank',\n    'chart',\n    'trending-up',\n    'trending-down',\n    'calculator',\n    'mail',\n    'phone',\n    'message',\n    'notification',\n    'bell',\n    'file',\n    'folder',\n    'download',\n    'upload',\n    'attachment',\n    'calendar',\n    'clock',\n    'time',\n    'date',\n    'play',\n    'pause',\n    'stop',\n    'volume',\n    'mute',\n    'like',\n    'dislike',\n    'share',\n    'star',\n    'heart',\n    'loading',\n    'spinner',\n    'check',\n    'cross',\n    'plus',\n    'minus',\n    'arrow-up',\n    'arrow-down',\n    'arrow-left',\n    'arrow-right',\n    'chevron-up',\n    'chevron-down',\n    'chevron-left',\n    'chevron-right',\n    'dots',\n    'more',\n    'menu-dots',\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getIconContent",
                    "args": [
                        {
                            "name": "iconName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "iconName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nexport type OsIconSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\nexport type OsIconVariant =\n  | 'default'\n  | 'primary'\n  | 'secondary'\n  | 'success'\n  | 'warning'\n  | 'error'\n  | 'info';\nexport type OsIconRole = 'decorative' | 'informative' | 'interactive';\n\n@Component({\n  selector: 'os-icon',\n  standalone: true,\n  imports: [CommonModule, MatIconModule],\n  template: `\n    @if (svgContent()) {\n    <div\n      [class]=\"iconClass()\"\n      [attr.aria-hidden]=\"ariaHidden()\"\n      [attr.aria-label]=\"ariaLabel() || null\"\n      [attr.title]=\"title() || null\"\n      [innerHTML]=\"svgContent()\"\n      role=\"img\"\n    ></div>\n    } @else if (svgUrl()) {\n    <img\n      [class]=\"iconClass()\"\n      [attr.aria-hidden]=\"ariaHidden()\"\n      [attr.aria-label]=\"ariaLabel() || null\"\n      [attr.title]=\"title() || null\"\n      [src]=\"svgUrl()\"\n      [alt]=\"ariaLabel() || ''\"\n      role=\"img\"\n    />\n    } @else {\n    <mat-icon\n      [class]=\"iconClass()\"\n      [attr.aria-hidden]=\"ariaHidden()\"\n      [attr.aria-label]=\"ariaLabel() || null\"\n      [attr.title]=\"title() || null\"\n      [fontSet]=\"fontSet()\"\n      [fontIcon]=\"fontIcon()\"\n      [color]=\"matColor()\"\n      [inline]=\"inline()\"\n      [attr.role]=\"iconRole()\"\n    >\n      @if (!fontIcon()) {\n      {{ iconContent() }}\n      }\n    </mat-icon>\n    }\n  `,\n  styleUrls: ['./os-icon.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsIconComponent {\n  name = input<string>('');\n  size = input<OsIconSize>('md');\n  variant = input<OsIconVariant>('default');\n  role = input<OsIconRole>('decorative');\n  ariaLabel = input<string>('');\n  title = input<string>('');\n  spin = input(false);\n  pulse = input(false);\n  fontSet = input<string>('');\n  fontIcon = input<string>('');\n  inline = input(false);\n  svgContent = input<string>('');\n  svgUrl = input<string>('');\n  fallbackIcon = input<string>('help');\n  // Computed properties para acessibilidade\n  ariaHidden = computed(() => {\n    return this.role() === 'decorative';\n  });\n\n  iconRole = computed(() => {\n    switch (this.role()) {\n      case 'informative':\n        return 'img';\n      case 'interactive':\n        return 'button';\n      default:\n        return null;\n    }\n  });\n\n  iconClass = computed(() => {\n    return [\n      'os-icon',\n      `os-icon--${this.size()}`,\n      `os-icon--${this.variant()}`,\n      `os-icon--${this.role()}`,\n      this.spin() ? 'os-icon--spin' : '',\n      this.pulse() ? 'os-icon--pulse' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  // Validação de ícones suportados\n  private readonly supportedIcons = new Set([\n    'home',\n    'menu',\n    'close',\n    'back',\n    'forward',\n    'up',\n    'down',\n    'left',\n    'right',\n    'add',\n    'remove',\n    'edit',\n    'delete',\n    'save',\n    'cancel',\n    'confirm',\n    'search',\n    'filter',\n    'sort',\n    'refresh',\n    'settings',\n    'help',\n    'info',\n    'warning',\n    'error',\n    'success',\n    'user',\n    'users',\n    'profile',\n    'logout',\n    'login',\n    'money',\n    'wallet',\n    'credit-card',\n    'bank',\n    'chart',\n    'trending-up',\n    'trending-down',\n    'calculator',\n    'mail',\n    'phone',\n    'message',\n    'notification',\n    'bell',\n    'file',\n    'folder',\n    'download',\n    'upload',\n    'attachment',\n    'calendar',\n    'clock',\n    'time',\n    'date',\n    'play',\n    'pause',\n    'stop',\n    'volume',\n    'mute',\n    'like',\n    'dislike',\n    'share',\n    'star',\n    'heart',\n    'loading',\n    'spinner',\n    'check',\n    'cross',\n    'plus',\n    'minus',\n    'arrow-up',\n    'arrow-down',\n    'arrow-left',\n    'arrow-right',\n    'chevron-up',\n    'chevron-down',\n    'chevron-left',\n    'chevron-right',\n    'dots',\n    'more',\n    'menu-dots',\n  ]);\n\n  iconContent = computed(() => {\n    const iconName = this.name();\n    if (!iconName) return this.fallbackIcon();\n\n    // Verificar se o ícone é suportado\n    if (!this.supportedIcons.has(iconName)) {\n      console.warn(`Ícone \"${iconName}\" não é suportado. Usando fallback \"${this.fallbackIcon()}\"`);\n      return this.getIconContent(this.fallbackIcon());\n    }\n\n    return this.getIconContent(iconName);\n  });\n\n  private getIconContent(iconName: string): string {\n    const iconMap: Record<string, string> = {\n      home: '🏠',\n      menu: '☰',\n      close: '✕',\n      back: '←',\n      forward: '→',\n      up: '↑',\n      down: '↓',\n      left: '←',\n      right: '→',\n      add: '+',\n      remove: '−',\n      edit: '✏',\n      delete: '🗑',\n      save: '💾',\n      cancel: '✕',\n      confirm: '✓',\n      search: '🔍',\n      filter: '🔽',\n      sort: '⇅',\n      refresh: '↻',\n      settings: '⚙',\n      help: '?',\n      info: 'ℹ',\n      warning: '⚠',\n      error: '❌',\n      success: '✅',\n      user: '👤',\n      users: '👥',\n      profile: '👤',\n      logout: '↪',\n      login: '↩',\n      money: '💰',\n      wallet: '👛',\n      'credit-card': '💳',\n      bank: '🏦',\n      chart: '📊',\n      'trending-up': '📈',\n      'trending-down': '📉',\n      calculator: '🧮',\n      mail: '✉',\n      phone: '📞',\n      message: '💬',\n      notification: '🔔',\n      bell: '🔔',\n      file: '📄',\n      folder: '📁',\n      download: '⬇',\n      upload: '⬆',\n      attachment: '📎',\n      calendar: '📅',\n      clock: '🕐',\n      time: '⏰',\n      date: '📅',\n      play: '▶',\n      pause: '⏸',\n      stop: '⏹',\n      volume: '🔊',\n      mute: '🔇',\n      like: '👍',\n      dislike: '👎',\n      share: '📤',\n      star: '⭐',\n      heart: '❤',\n      loading: '⟳',\n      spinner: '⟳',\n      check: '✓',\n      cross: '✕',\n      plus: '+',\n      minus: '−',\n      'arrow-up': '↑',\n      'arrow-down': '↓',\n      'arrow-left': '←',\n      'arrow-right': '→',\n      'chevron-up': '⌃',\n      'chevron-down': '⌄',\n      'chevron-left': '⌃',\n      'chevron-right': '⌄',\n      dots: '⋯',\n      more: '⋯',\n      'menu-dots': '⋯',\n    };\n\n    return iconMap[iconName] || this.fallbackIcon();\n  }\n\n  // Mapeamento interno para Material\n  protected matColor = computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'error':\n        return 'warn';\n      case 'info':\n        return 'accent';\n      default:\n        return undefined;\n    }\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-icon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  line-height: 1;\n  user-select: none;\n\n  // Override Material icon styles\n  ::ng-deep mat-icon {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    font-style: normal;\n    font-variant: normal;\n    text-rendering: auto;\n    line-height: 1;\n    user-select: none;\n  }\n\n  &--xs {\n    font-size: var(--os-font-size-xs);\n    width: 12px;\n    height: 12px;\n  }\n\n  &--sm {\n    font-size: var(--os-font-size-sm);\n    width: 16px;\n    height: 16px;\n  }\n\n  &--md {\n    font-size: var(--os-font-size-base);\n    width: 20px;\n    height: 20px;\n  }\n\n  &--lg {\n    font-size: var(--os-font-size-lg);\n    width: 24px;\n    height: 24px;\n  }\n\n  &--xl {\n    font-size: var(--os-font-size-xl);\n    width: 28px;\n    height: 28px;\n  }\n\n  &--2xl {\n    font-size: var(--os-font-size-2xl);\n    width: 32px;\n    height: 32px;\n  }\n\n  &--default {\n    color: var(--os-color-neutral-600);\n  }\n\n  &--primary {\n    color: var(--os-color-primary-600);\n  }\n\n  &--secondary {\n    color: var(--os-color-secondary-600);\n  }\n\n  &--success {\n    color: var(--os-color-success);\n  }\n\n  &--warning {\n    color: var(--os-color-warning);\n  }\n\n  &--error {\n    color: var(--os-color-error);\n  }\n\n  &--info {\n    color: var(--os-color-info);\n  }\n\n  // Role-based styles\n  &--decorative {\n    // Ícones decorativos não precisam de foco\n  }\n\n  &--informative {\n    // Ícones informativos podem ter foco para screen readers\n    &:focus {\n      outline: 2px solid var(--os-color-primary-500);\n      outline-offset: 2px;\n      border-radius: var(--os-border-radius-sm);\n    }\n  }\n\n  &--interactive {\n    // Ícones interativos precisam de foco e cursor\n    cursor: pointer;\n\n    &:focus {\n      outline: 2px solid var(--os-color-primary-500);\n      outline-offset: 2px;\n      border-radius: var(--os-border-radius-sm);\n    }\n\n    &:hover {\n      opacity: 0.8;\n      transform: scale(1.05);\n      transition: all var(--os-transition-fast) ease-in-out;\n    }\n\n    &:active {\n      transform: scale(0.95);\n    }\n  }\n\n  &--spin {\n    animation: spin 1s linear infinite;\n  }\n\n  &--pulse {\n    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n\n  // SVG support\n  svg {\n    width: 100%;\n    height: 100%;\n    fill: currentColor;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n\n  &:hover {\n    opacity: 0.8;\n    transition: opacity var(--os-transition-fast) ease-in-out;\n  }\n\n  &:focus {\n    outline: 2px solid var(--os-color-primary-500);\n    outline-offset: 2px;\n    border-radius: var(--os-border-radius-sm);\n  }\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes pulse {\n  0%,\n  100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n@media (max-width: 768px) {\n  .os-icon {\n    &--xs {\n      width: 14px;\n      height: 14px;\n    }\n\n    &--sm {\n      width: 18px;\n      height: 18px;\n    }\n\n    &--md {\n      width: 22px;\n      height: 22px;\n    }\n\n    &--lg {\n      width: 26px;\n      height: 26px;\n    }\n\n    &--xl {\n      width: 30px;\n      height: 30px;\n    }\n\n    &--2xl {\n      width: 34px;\n      height: 34px;\n    }\n  }\n}\n\n[data-theme='dark'] {\n  .os-icon {\n    &--default {\n      color: var(--os-color-neutral-400);\n    }\n\n    &--primary {\n      color: var(--os-color-primary-400);\n    }\n\n    &--secondary {\n      color: var(--os-color-secondary-400);\n    }\n\n    &:hover {\n      opacity: 0.9;\n    }\n  }\n}\n\n@media (prefers-contrast: high) {\n  .os-icon {\n    &--default {\n      color: var(--os-color-neutral-800);\n    }\n\n    &--primary {\n      color: var(--os-color-primary-800);\n    }\n\n    &--secondary {\n      color: var(--os-color-secondary-800);\n    }\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .os-icon {\n    &--spin,\n    &--pulse {\n      animation: none;\n    }\n  }\n}\n\n// Contraste automático para diferentes backgrounds\n.os-icon {\n  // Background claro\n  &[data-background='light'] {\n    &.os-icon--default {\n      color: var(--os-color-neutral-700);\n    }\n    &.os-icon--primary {\n      color: var(--os-color-primary-700);\n    }\n    &.os-icon--secondary {\n      color: var(--os-color-secondary-700);\n    }\n  }\n\n  // Background escuro\n  &[data-background='dark'] {\n    &.os-icon--default {\n      color: var(--os-color-neutral-300);\n    }\n    &.os-icon--primary {\n      color: var(--os-color-primary-300);\n    }\n    &.os-icon--secondary {\n      color: var(--os-color-secondary-300);\n    }\n  }\n\n  // Background colorido\n  &[data-background='colored'] {\n    &.os-icon--default {\n      color: var(--os-color-neutral-800);\n    }\n    &.os-icon--primary {\n      color: var(--os-color-primary-800);\n    }\n    &.os-icon--secondary {\n      color: var(--os-color-secondary-800);\n    }\n  }\n}\n\n// Fallback para ícones não encontrados\n.os-icon--fallback {\n  &::before {\n    content: '?';\n    font-weight: bold;\n    color: var(--os-color-warning);\n  }\n}\n",
                    "styleUrl": "./os-icon.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsInputComponent",
            "id": "component-OsInputComponent-23d2c8f75e9cdb97f2e7f5066595d8d263b3dedfa946038b032bf5d1a6eb3e3ad891395e66a121c2a74abdbc4d97b131c097c24be1976f1a3b0050565358b21b",
            "file": "src/app/shared/ui-components/atoms/os-input/os-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": ")"
                }
            ],
            "selector": "os-input",
            "styleUrls": [
                "./os-input.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"containerClass()\">\n  <mat-form-field [appearance]=\"appearance()\" [class]=\"formFieldClass()\">\n    @if (label()) {\n    <mat-label>{{ label() }}</mat-label>\n    } @if (prefixIcon()) {\n    <mat-icon matPrefix [class]=\"prefixIconClass()\">{{ prefixIcon() }}</mat-icon>\n    }\n\n    <input\n      matInput\n      [id]=\"inputId\"\n      [type]=\"type()\"\n      [placeholder]=\"placeholder()\"\n      [disabled]=\"disabled()\"\n      [readonly]=\"readonly()\"\n      [required]=\"required()\"\n      [value]=\"value()\"\n      [class]=\"inputClass()\"\n      (input)=\"handleInput($event)\"\n      (blur)=\"handleBlur($event)\"\n      (focus)=\"handleFocus($event)\"\n      [attr.aria-describedby]=\"helperText() ? inputId + '-helper' : null\"\n      [attr.aria-invalid]=\"hasError()\"\n      [attr.aria-required]=\"required()\"\n      [attr.aria-disabled]=\"disabled()\"\n    />\n\n    @if (suffixIcon()) {\n    <mat-icon matSuffix [class]=\"suffixIconClass()\">{{ suffixIcon() }}</mat-icon>\n    } @if (clearable() && value() && !disabled()) {\n    <button\n      matSuffix\n      mat-icon-button\n      type=\"button\"\n      class=\"os-input__clear\"\n      (click)=\"handleClear()\"\n      [attr.aria-label]=\"'Clear ' + (label() || 'input')\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n    } @if (helperText() || hasError()) {\n    <mat-hint [class]=\"helperClass()\" [id]=\"inputId + '-helper'\">\n      {{ errorMessage() || helperText() }}\n    </mat-hint>\n    }\n  </mat-form-field>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "clearable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "required": false
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "required": false
                },
                {
                    "name": "helperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "required": false
                },
                {
                    "name": "prefixIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "required": false
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsInputSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "required": false
                },
                {
                    "name": "suffixIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "required": false
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsInputType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 99,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "required": false
                },
                {
                    "name": "focusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 100,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "required": false
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "_onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "appearance",
                    "defaultValue": "computed((): MatFormFieldAppearance => 'outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-input-container',\n      `os-input-container--${this.size()}`,\n      this.hasError() ? 'os-input-container--error' : '',\n      this.disabled() ? 'os-input-container--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "formFieldClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-input__form-field',\n      `os-input__form-field--${this.size()}`,\n      this.hasError() ? 'os-input__form-field--error' : '',\n      this.disabled() ? 'os-input__form-field--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 142,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "hasError",
                    "defaultValue": "computed(() => {\n    return !!this.errorMessage();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136
                },
                {
                    "name": "helperClass",
                    "defaultValue": "computed(() => {\n    return ['os-input__helper', this.hasError() ? 'os-input__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130
                },
                {
                    "name": "inputClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-input',\n      `os-input--${this.size()}`,\n      this.hasError() ? 'os-input--error' : '',\n      this.disabled() ? 'os-input--disabled' : '',\n      this.readonly() ? 'os-input--readonly' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "inputId",
                    "defaultValue": "`os-input-${Math.random().toString(36).substr(2, 9)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 105
                },
                {
                    "name": "prefixIconClass",
                    "defaultValue": "computed(() => {\n    return ['os-input__prefix-icon', `os-input__prefix-icon--${this.size()}`]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 153,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "suffixIconClass",
                    "defaultValue": "computed(() => {\n    return ['os-input__suffix-icon', `os-input__suffix-icon--${this.size()}`]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 159,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleClear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 177,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 192,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 196,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  model,\n  ChangeDetectionStrategy,\n  forwardRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule, MatFormFieldAppearance } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport type OsInputType = 'text' | 'email' | 'password' | 'number' | 'tel' | 'url' | 'search';\nexport type OsInputSize = 'small' | 'medium' | 'large';\n\n@Component({\n  selector: 'os-input',\n  standalone: true,\n  imports: [CommonModule, MatInputModule, MatFormFieldModule, MatIconModule, MatButtonModule],\n  template: `\n    <div [class]=\"containerClass()\">\n      <mat-form-field [appearance]=\"appearance()\" [class]=\"formFieldClass()\">\n        @if (label()) {\n        <mat-label>{{ label() }}</mat-label>\n        } @if (prefixIcon()) {\n        <mat-icon matPrefix [class]=\"prefixIconClass()\">{{ prefixIcon() }}</mat-icon>\n        }\n\n        <input\n          matInput\n          [id]=\"inputId\"\n          [type]=\"type()\"\n          [placeholder]=\"placeholder()\"\n          [disabled]=\"disabled()\"\n          [readonly]=\"readonly()\"\n          [required]=\"required()\"\n          [value]=\"value()\"\n          [class]=\"inputClass()\"\n          (input)=\"handleInput($event)\"\n          (blur)=\"handleBlur($event)\"\n          (focus)=\"handleFocus($event)\"\n          [attr.aria-describedby]=\"helperText() ? inputId + '-helper' : null\"\n          [attr.aria-invalid]=\"hasError()\"\n          [attr.aria-required]=\"required()\"\n          [attr.aria-disabled]=\"disabled()\"\n        />\n\n        @if (suffixIcon()) {\n        <mat-icon matSuffix [class]=\"suffixIconClass()\">{{ suffixIcon() }}</mat-icon>\n        } @if (clearable() && value() && !disabled()) {\n        <button\n          matSuffix\n          mat-icon-button\n          type=\"button\"\n          class=\"os-input__clear\"\n          (click)=\"handleClear()\"\n          [attr.aria-label]=\"'Clear ' + (label() || 'input')\"\n        >\n          <mat-icon>close</mat-icon>\n        </button>\n        } @if (helperText() || hasError()) {\n        <mat-hint [class]=\"helperClass()\" [id]=\"inputId + '-helper'\">\n          {{ errorMessage() || helperText() }}\n        </mat-hint>\n        }\n      </mat-form-field>\n    </div>\n  `,\n  styleUrls: ['./os-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsInputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OsInputComponent implements ControlValueAccessor {\n  type = input<OsInputType>('text');\n  size = input<OsInputSize>('medium');\n  label = input<string>('');\n  placeholder = input<string>('');\n  helperText = input<string>('');\n  errorMessage = input<string>('');\n  disabled = model(false);\n  readonly = input(false);\n  required = input(false);\n  clearable = input(false);\n  prefixIcon = input<string>('');\n  suffixIcon = input<string>('');\n  value = model<string>('');\n\n  valueChange = output<string>();\n  blurEvent = output<FocusEvent>();\n  focusEvent = output<FocusEvent>();\n\n  private _onChange = (value: string) => {};\n  private _onTouched = () => {};\n\n  inputId = `os-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  containerClass = computed(() => {\n    return [\n      'os-input-container',\n      `os-input-container--${this.size()}`,\n      this.hasError() ? 'os-input-container--error' : '',\n      this.disabled() ? 'os-input-container--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  inputClass = computed(() => {\n    return [\n      'os-input',\n      `os-input--${this.size()}`,\n      this.hasError() ? 'os-input--error' : '',\n      this.disabled() ? 'os-input--disabled' : '',\n      this.readonly() ? 'os-input--readonly' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  helperClass = computed(() => {\n    return ['os-input__helper', this.hasError() ? 'os-input__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  hasError = computed(() => {\n    return !!this.errorMessage();\n  });\n\n  protected appearance = computed((): MatFormFieldAppearance => 'outline');\n\n  protected formFieldClass = computed(() => {\n    return [\n      'os-input__form-field',\n      `os-input__form-field--${this.size()}`,\n      this.hasError() ? 'os-input__form-field--error' : '',\n      this.disabled() ? 'os-input__form-field--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected prefixIconClass = computed(() => {\n    return ['os-input__prefix-icon', `os-input__prefix-icon--${this.size()}`]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected suffixIconClass = computed(() => {\n    return ['os-input__suffix-icon', `os-input__suffix-icon--${this.size()}`]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  handleInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const newValue = target.value;\n    this._onChange(newValue);\n    this.valueChange.emit(newValue);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this._onTouched();\n    this.blurEvent.emit(event);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.focusEvent.emit(event);\n  }\n\n  handleClear(): void {\n    this._onChange('');\n    this.valueChange.emit('');\n  }\n\n  writeValue(value: string): void {\n    if (value !== this.value()) {\n      this.value.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// OS-INPUT - Layout Specification Implementation\n// Seguindo especificação detalhada para alinhamento com visão de produto\n\n.os-input-container {\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-xs);\n  width: 100%;\n\n  &--small {\n    gap: calc(var(--os-spacing-xs) * 0.5);\n  }\n\n  &--large {\n    gap: var(--os-spacing-sm);\n  }\n\n  &--error {\n    .os-input {\n      border-color: var(--os-color-error-500);\n      box-shadow: 0 0 0 1px var(--os-color-error-500);\n    }\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n}\n\n.os-input__form-field {\n  width: 100%;\n\n  &--small {\n    .mat-mdc-form-field {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  &--medium {\n    .mat-mdc-form-field {\n      font-size: var(--os-font-size-base);\n    }\n  }\n\n  &--large {\n    .mat-mdc-form-field {\n      font-size: var(--os-font-size-lg);\n    }\n  }\n\n  &--error {\n    .mat-mdc-form-field {\n      .mat-mdc-form-field-focus-overlay {\n        background-color: var(--os-color-error-50);\n      }\n    }\n  }\n\n  &--disabled {\n    .mat-mdc-form-field {\n      opacity: 0.6;\n    }\n  }\n}\n\n.os-input {\n  width: 100%;\n  border: 1px solid var(--os-color-neutral-300);\n  border-radius: 6px;\n  background-color: var(--os-color-background-primary);\n  color: var(--os-color-text-primary);\n  font-family: var(--os-font-family-primary);\n  font-size: var(--os-font-size-sm);\n  font-weight: var(--os-font-weight-regular);\n  transition: all 200ms ease-in-out;\n  outline: none;\n\n  &--small {\n    padding: 8px 12px;\n    font-size: var(--os-font-size-sm);\n    min-height: 32px;\n  }\n\n  &--medium {\n    padding: 12px 16px;\n    font-size: var(--os-font-size-base);\n    min-height: 40px;\n  }\n\n  &--large {\n    padding: 16px 20px;\n    font-size: var(--os-font-size-lg);\n    min-height: 48px;\n  }\n\n  &--error {\n    border-color: var(--os-color-error-500);\n    background-color: var(--os-color-error-50);\n    box-shadow: 0 0 0 1px var(--os-color-error-500);\n  }\n\n  &--disabled {\n    background-color: var(--os-color-neutral-100);\n    color: var(--os-color-neutral-500);\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  &--readonly {\n    background-color: var(--os-color-neutral-50);\n    cursor: default;\n  }\n\n  &:hover:not(:disabled):not(:readonly) {\n    border-color: var(--os-color-primary-400);\n    cursor: pointer;\n  }\n\n  &:focus {\n    border-color: var(--os-color-primary-500);\n    box-shadow: 0 0 0 2px var(--os-color-primary-100);\n    transform: scale(1.02);\n  }\n\n  &:active:not(:disabled):not(:readonly) {\n    transform: scale(0.98);\n  }\n\n  &::placeholder {\n    color: var(--os-color-neutral-500);\n    opacity: 1;\n  }\n\n  &:disabled::placeholder {\n    color: var(--os-color-neutral-400);\n  }\n}\n\n.os-input__prefix-icon,\n.os-input__suffix-icon {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  color: var(--os-color-neutral-500);\n  font-size: var(--os-font-size-lg);\n  pointer-events: none;\n  z-index: 1;\n  transition: color 200ms ease-in-out;\n\n  &--small {\n    font-size: var(--os-font-size-base);\n  }\n\n  &--medium {\n    font-size: var(--os-font-size-lg);\n  }\n\n  &--large {\n    font-size: var(--os-font-size-xl);\n  }\n}\n\n.os-input__prefix-icon {\n  left: var(--os-spacing-sm);\n}\n\n.os-input__suffix-icon {\n  right: var(--os-spacing-sm);\n}\n\n.os-input__clear {\n  position: absolute;\n  right: var(--os-spacing-sm);\n  top: 50%;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  color: var(--os-color-neutral-500);\n  cursor: pointer;\n  font-size: var(--os-font-size-lg);\n  line-height: 1;\n  padding: var(--os-spacing-xs);\n  border-radius: var(--os-border-radius-sm);\n  transition: all 200ms ease-in-out;\n  z-index: 2;\n  min-width: 44px;\n  min-height: 44px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: var(--os-color-neutral-100);\n    color: var(--os-color-neutral-700);\n  }\n\n  &:focus {\n    outline: 2px solid var(--os-color-primary-500);\n    outline-offset: 2px;\n  }\n\n  &:active {\n    transform: translateY(-50%) scale(0.95);\n  }\n}\n\n.os-input__helper {\n  font-size: var(--os-font-size-sm);\n  color: var(--os-color-neutral-600);\n  margin-top: var(--os-spacing-xs);\n  line-height: 1.5;\n\n  &--error {\n    color: var(--os-color-error-500);\n    font-weight: var(--os-font-weight-medium);\n  }\n}\n\n// Responsividade Mobile-First\n@media (max-width: 575px) {\n  .os-input {\n    &--small {\n      min-height: 44px;\n      padding: 12px 16px;\n    }\n\n    &--medium {\n      min-height: 44px;\n      padding: 12px 16px;\n    }\n\n    &--large {\n      min-height: 48px;\n      padding: 14px 18px;\n    }\n  }\n\n  .os-input__clear {\n    min-width: 44px;\n    min-height: 44px;\n  }\n}\n\n@media (min-width: 576px) and (max-width: 991px) {\n  .os-input {\n    &:hover:not(:disabled):not(:readonly) {\n      border-color: var(--os-color-primary-400);\n    }\n  }\n}\n\n@media (min-width: 992px) {\n  .os-input {\n    &:hover:not(:disabled):not(:readonly) {\n      border-color: var(--os-color-primary-400);\n    }\n  }\n}\n\n// Dark Mode Support\n[data-theme='dark'] {\n  .os-input {\n    background-color: var(--os-color-surface);\n    border-color: var(--os-color-neutral-600);\n    color: var(--os-color-on-surface);\n\n    &::placeholder {\n      color: var(--os-color-neutral-400);\n    }\n\n    &:focus {\n      border-color: var(--os-color-primary-400);\n      box-shadow: 0 0 0 2px var(--os-color-primary-900);\n    }\n\n    &--disabled {\n      background-color: var(--os-color-neutral-800);\n      color: var(--os-color-neutral-500);\n    }\n\n    &--readonly {\n      background-color: var(--os-color-neutral-800);\n    }\n\n    &--error {\n      border-color: var(--os-color-error-500);\n      background-color: var(--os-color-error-900);\n    }\n  }\n\n  .os-input__helper {\n    color: var(--os-color-neutral-400);\n\n    &--error {\n      color: var(--os-color-error-400);\n    }\n  }\n\n  .os-input__prefix-icon,\n  .os-input__suffix-icon {\n    color: var(--os-color-neutral-400);\n  }\n\n  .os-input__clear {\n    color: var(--os-color-neutral-400);\n\n    &:hover {\n      background-color: var(--os-color-neutral-700);\n      color: var(--os-color-neutral-200);\n    }\n  }\n}\n\n// High Contrast Mode Support\n@media (prefers-contrast: high) {\n  .os-input {\n    border-width: 2px;\n\n    &:focus {\n      border-width: 3px;\n    }\n  }\n\n  .os-input__clear {\n    border: 1px solid currentColor;\n  }\n}\n\n// Reduced Motion Support\n@media (prefers-reduced-motion: reduce) {\n  .os-input,\n  .os-input__clear,\n  .os-input__prefix-icon,\n  .os-input__suffix-icon {\n    transition: none;\n  }\n\n  .os-input:focus {\n    transform: none;\n  }\n\n  .os-input:active {\n    transform: none;\n  }\n\n  .os-input__clear:active {\n    transform: translateY(-50%);\n  }\n}\n",
                    "styleUrl": "./os-input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "OsLabelComponent",
            "id": "component-OsLabelComponent-16241bdff83ce6b4b8d4f59e4961a1b24c5d5912efd199863caad64723c0b6f3bec0378b9e42f246028c5538ece8270bbaebadf72dea0e789e93dfa61b6e0e15",
            "file": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-label",
            "styleUrls": [
                "./os-label.component.scss"
            ],
            "styles": [],
            "template": "<label\n  [id]=\"labelId\"\n  [class]=\"labelClass()\"\n  [for]=\"for()\"\n  [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n  [attr.aria-label]=\"ariaLabel() || null\"\n  [attr.aria-required]=\"required() ? 'true' : 'false'\"\n  [attr.aria-disabled]=\"disabled() ? 'true' : 'false'\"\n  [attr.tabindex]=\"disabled() ? -1 : 0\"\n  (mouseenter)=\"onMouseEnter()\"\n  (mouseleave)=\"onMouseLeave()\"\n  (focus)=\"onFocus($event)\"\n  (blur)=\"onBlur($event)\"\n  (click)=\"onClick()\"\n>\n  <ng-content />\n</label>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "required": false
                },
                {
                    "name": "for",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "required": false
                },
                {
                    "name": "hapticFeedback",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsLabelSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsLabelVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "required": false
                },
                {
                    "name": "weight",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsLabelWeight",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isFocused",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "isHovered",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "labelClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-label',\n      `os-label--${this.variant()}`,\n      `os-label--${this.size()}`,\n      `os-label--${this.weight()}`,\n      this.required() ? 'os-label--required' : '',\n      this.disabled() ? 'os-label--disabled' : '',\n      this.isFocused() ? 'os-label--focused' : '',\n      this.isHovered() ? 'os-label--hovered' : '',\n      this.animated() ? 'os-label--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "labelId",
                    "defaultValue": "`os-label-${Math.random().toString(36).substr(2, 9)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                }
            ],
            "methodsClass": [
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "triggerHapticFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed, signal, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport type OsLabelVariant =\n  | 'default'\n  | 'primary'\n  | 'secondary'\n  | 'success'\n  | 'warning'\n  | 'error'\n  | 'info';\nexport type OsLabelSize = 'small' | 'medium' | 'large';\nexport type OsLabelWeight = 'light' | 'regular' | 'medium' | 'semibold' | 'bold';\n\n@Component({\n  selector: 'os-label',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <label\n      [id]=\"labelId\"\n      [class]=\"labelClass()\"\n      [for]=\"for()\"\n      [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n      [attr.aria-label]=\"ariaLabel() || null\"\n      [attr.aria-required]=\"required() ? 'true' : 'false'\"\n      [attr.aria-disabled]=\"disabled() ? 'true' : 'false'\"\n      [attr.tabindex]=\"disabled() ? -1 : 0\"\n      (mouseenter)=\"onMouseEnter()\"\n      (mouseleave)=\"onMouseLeave()\"\n      (focus)=\"onFocus($event)\"\n      (blur)=\"onBlur($event)\"\n      (click)=\"onClick()\"\n    >\n      <ng-content />\n    </label>\n  `,\n  styleUrls: ['./os-label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsLabelComponent {\n  variant = input<OsLabelVariant>('default');\n  size = input<OsLabelSize>('medium');\n  weight = input<OsLabelWeight>('regular');\n  for = input<string>('');\n  required = input(false);\n  disabled = input(false);\n  ariaDescribedBy = input<string>('');\n  ariaLabel = input<string>('');\n  animated = input(true);\n  hapticFeedback = input(true);\n\n  labelId = `os-label-${Math.random().toString(36).substr(2, 9)}`;\n  isFocused = signal(false);\n  isHovered = signal(false);\n\n  labelClass = computed(() => {\n    return [\n      'os-label',\n      `os-label--${this.variant()}`,\n      `os-label--${this.size()}`,\n      `os-label--${this.weight()}`,\n      this.required() ? 'os-label--required' : '',\n      this.disabled() ? 'os-label--disabled' : '',\n      this.isFocused() ? 'os-label--focused' : '',\n      this.isHovered() ? 'os-label--hovered' : '',\n      this.animated() ? 'os-label--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  onMouseEnter(): void {\n    this.isHovered.set(true);\n  }\n\n  onMouseLeave(): void {\n    this.isHovered.set(false);\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.isFocused.set(true);\n  }\n\n  onBlur(event: FocusEvent): void {\n    this.isFocused.set(false);\n  }\n\n  onClick(): void {\n    if (!this.disabled()) {\n      this.triggerHapticFeedback();\n    }\n  }\n\n  triggerHapticFeedback(): void {\n    if (this.hapticFeedback() && 'vibrate' in navigator) {\n      navigator.vibrate(50); // 50ms vibration\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens';\n\n.os-label {\n  display: inline-block;\n  font-family: var(--os-font-family-base);\n  line-height: var(--os-line-height-normal);\n  cursor: pointer;\n  transition: var(--os-transition-fast);\n  user-select: none;\n  position: relative;\n  min-height: 44px; // Touch target minimum\n  display: flex;\n  align-items: center;\n\n  &--small {\n    font-size: var(--os-font-size-sm);\n    padding: var(--os-spacing-xs) var(--os-spacing-sm);\n    min-height: 44px; // Touch target minimum\n  }\n\n  &--medium {\n    font-size: var(--os-font-size-base);\n    padding: var(--os-spacing-sm) var(--os-spacing-md);\n    min-height: 44px; // Touch target minimum\n  }\n\n  &--large {\n    font-size: var(--os-font-size-lg);\n    padding: var(--os-spacing-md) var(--os-spacing-lg);\n    min-height: 48px; // Larger touch target\n  }\n\n  &--light {\n    font-weight: var(--os-font-weight-light);\n  }\n\n  &--regular {\n    font-weight: var(--os-font-weight-regular);\n  }\n\n  &--medium {\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  &--semibold {\n    font-weight: var(--os-font-weight-semibold);\n  }\n\n  &--bold {\n    font-weight: var(--os-font-weight-bold);\n  }\n\n  &--default {\n    color: var(--os-color-text-primary);\n  }\n\n  &--primary {\n    color: var(--os-color-primary-600);\n  }\n\n  &--secondary {\n    color: var(--os-color-secondary-600);\n  }\n\n  &--success {\n    color: var(--os-color-success-600);\n  }\n\n  &--warning {\n    color: var(--os-color-warning-600);\n  }\n\n  &--error {\n    color: var(--os-color-error-600);\n  }\n\n  &--info {\n    color: var(--os-color-info-600);\n  }\n\n  &--required::after {\n    content: ' *';\n    color: var(--os-color-error-500);\n    font-weight: var(--os-font-weight-bold);\n  }\n\n  &--disabled {\n    color: var(--os-color-text-disabled);\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  &--focused {\n    outline: 2px solid var(--os-color-primary-500);\n    outline-offset: 2px;\n    border-radius: var(--os-border-radius-sm);\n  }\n\n  &--hovered:not(&--disabled) {\n    opacity: 0.8;\n    transform: translateY(-1px);\n  }\n\n  &--animated {\n    transition: all var(--os-transition-duration-standard) var(--os-transition-easing-standard);\n  }\n\n  &:hover:not(&--disabled) {\n    opacity: 0.8;\n  }\n\n  &:focus-visible {\n    outline: 2px solid var(--os-color-primary-500);\n    outline-offset: 2px;\n    border-radius: var(--os-border-radius-sm);\n  }\n}\n\n// Responsive design\n@media (max-width: 575px) {\n  .os-label {\n    min-height: 48px; // Larger touch target on mobile\n\n    &--small {\n      min-height: 48px;\n      padding: var(--os-spacing-sm) var(--os-spacing-md);\n    }\n\n    &--medium {\n      min-height: 48px;\n      padding: var(--os-spacing-md) var(--os-spacing-lg);\n    }\n\n    &--large {\n      min-height: 52px;\n      padding: var(--os-spacing-lg) var(--os-spacing-xl);\n    }\n  }\n}\n\n// Dark mode support\n@media (prefers-color-scheme: dark) {\n  .os-label {\n    &--default {\n      color: var(--os-color-text-primary-dark);\n    }\n\n    &--primary {\n      color: var(--os-color-primary-400);\n    }\n\n    &--secondary {\n      color: var(--os-color-secondary-400);\n    }\n\n    &--success {\n      color: var(--os-color-success-400);\n    }\n\n    &--warning {\n      color: var(--os-color-warning-400);\n    }\n\n    &--error {\n      color: var(--os-color-error-400);\n    }\n\n    &--info {\n      color: var(--os-color-info-400);\n    }\n\n    &--disabled {\n      color: var(--os-color-text-disabled-dark);\n    }\n\n    &--required::after {\n      color: var(--os-color-error-400);\n    }\n  }\n}\n\n// High contrast mode support\n@media (prefers-contrast: high) {\n  .os-label {\n    &--focused {\n      outline-width: 3px;\n    }\n\n    &:focus-visible {\n      outline-width: 3px;\n    }\n  }\n}\n\n// Reduced motion support\n@media (prefers-reduced-motion: reduce) {\n  .os-label {\n    &--animated {\n      transition: none;\n    }\n\n    &:hover:not(&--disabled) {\n      transform: none;\n    }\n\n    &--hovered:not(&--disabled) {\n      transform: none;\n    }\n  }\n}\n",
                    "styleUrl": "./os-label.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsListTemplateComponent",
            "id": "component-OsListTemplateComponent-7bf8166141936f292e1c93671ddce1e1dc224819835fb9c3de5e9f3f191e60223a337d844e8ab6652495887a7f2846ebe91caba2013c3e5476325611ed236ace",
            "file": "src/app/shared/ui-components/templates/os-list-template/os-list-template.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-list-template",
            "styleUrls": [
                "./os-list-template.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"templateClass()\">\n  <!-- Header Section -->\n  <os-page-header\n    [variant]=\"headerVariant()\"\n    [size]=\"headerSize()\"\n    [title]=\"title()\"\n    [subtitle]=\"subtitle()\"\n    [breadcrumbs]=\"breadcrumbs()\"\n    [actions]=\"headerActions()\"\n    (actionClick)=\"onHeaderActionClick($event)\"\n  />\n\n  <!-- Filters Section -->\n  @if (showFilters()) {\n  <div class=\"os-list-template__filters\">\n    <os-filter-bar\n      [variant]=\"filterVariant()\"\n      [size]=\"filterSize()\"\n      (clear)=\"onClearFilters()\"\n      (apply)=\"onApplyFilters()\"\n    />\n  </div>\n  }\n\n  <!-- Content Section -->\n  <div class=\"os-list-template__content\">\n    @if (loading()) {\n    <div class=\"os-list-template__loading\">\n      <os-spinner [variant]=\"spinnerVariant()\" [size]=\"spinnerSize()\" />\n      <span class=\"os-list-template__loading-text\">{{ loadingText() }}</span>\n    </div>\n    } @else if (isEmpty()) {\n    <div class=\"os-list-template__empty\">\n      <os-icon [name]=\"emptyIcon()\" [variant]=\"emptyIconVariant()\" [size]=\"emptyIconSize()\" />\n      <h3 class=\"os-list-template__empty-title\">{{ emptyTitle() }}</h3>\n      <p class=\"os-list-template__empty-description\">{{ emptyDescription() }}</p>\n      @if (emptyAction()) {\n      <os-button\n        [variant]=\"emptyActionVariant()\"\n        [size]=\"emptyActionSize()\"\n        [icon]=\"emptyActionIcon()\"\n        (click)=\"onEmptyActionClick($event)\"\n      >\n        {{ emptyAction()!.label }}\n      </os-button>\n      }\n    </div>\n    } @else {\n    <os-data-grid\n      [variant]=\"gridVariant()\"\n      [size]=\"gridSize()\"\n      [data]=\"data()\"\n      [columns]=\"columns()\"\n      [filterOptions]=\"filterOptions()\"\n      [tableActions]=\"gridActions()\"\n      [title]=\"title()\"\n      [subtitle]=\"subtitle()\"\n      [showHeaderActions]=\"showGridHeader()\"\n      [showFooter]=\"showGridFooter()\"\n      [isLoading]=\"loading()\"\n      (rowClick)=\"onRowClick($event)\"\n      (tableActionClick)=\"onGridActionClick($event)\"\n      (filterChange)=\"onFilterChange($event)\"\n      (sortChange)=\"onSortChange($event)\"\n      (pageChange)=\"onPageChange($event)\"\n      (refresh)=\"onRefresh()\"\n      (export)=\"onExport()\"\n      (add)=\"onAdd()\"\n    />\n    }\n  </div>\n\n  <!-- Footer Section -->\n  @if (showFooter()) {\n  <div class=\"os-list-template__footer\">\n    <div class=\"os-list-template__footer-info\">\n      <span class=\"os-list-template__footer-text\">{{ footerText() }}</span>\n      @if (showLastUpdate()) {\n      <span class=\"os-list-template__footer-update\">\n        Última atualização: {{ lastUpdate() | date : 'dd/MM/yyyy HH:mm' }}\n      </span>\n      }\n    </div>\n    <div class=\"os-list-template__footer-actions\">\n      @for (action of footerActions(); track action.id) {\n      <os-button\n        [variant]=\"action.variant || 'tertiary'\"\n        [size]=\"footerActionSize()\"\n        [icon]=\"action.icon || ''\"\n        [disabled]=\"action.disabled || disabled()\"\n        (click)=\"onFooterActionClick(action, $event)\"\n      >\n        {{ action.label }}\n      </os-button>\n      }\n    </div>\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 172,
                    "required": false
                },
                {
                    "name": "breadcrumbs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ label: string; url?: string }[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 170,
                    "required": false
                },
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ key: string; label: string; sortable?: boolean }[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 176,
                    "required": false
                },
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListTemplateData[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 175,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 185,
                    "required": false
                },
                {
                    "name": "emptyAction",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{    id: string;    label: string;    icon?: string;    variant?: string;    size?: string;  } | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 192,
                    "required": false
                },
                {
                    "name": "emptyDescription",
                    "defaultValue": "'Não há dados para exibir no momento.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 190,
                    "required": false
                },
                {
                    "name": "emptyIcon",
                    "defaultValue": "'list'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 191,
                    "required": false
                },
                {
                    "name": "emptyTitle",
                    "defaultValue": "'Nenhum item encontrado'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 189,
                    "required": false
                },
                {
                    "name": "filters",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListTemplateFilter[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 177,
                    "required": false
                },
                {
                    "name": "footerActions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListTemplateAction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 221,
                    "required": false
                },
                {
                    "name": "footerText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 224,
                    "required": false
                },
                {
                    "name": "gridActions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "    { key: string; label: string; icon?: string; color?: 'primary' | 'secondary' | 'warn' }[]  ",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 218,
                    "required": false
                },
                {
                    "name": "headerActions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "    {      label: string;      icon?: string;      variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';      size?: 'small' | 'medium' | 'large';      disabled?: boolean;      loading?: boolean;    }[]  ",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 208,
                    "required": false
                },
                {
                    "name": "lastUpdate",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 225,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 184,
                    "required": false
                },
                {
                    "name": "loadingText",
                    "defaultValue": "'Carregando...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 186,
                    "required": false
                },
                {
                    "name": "page",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 179,
                    "required": false
                },
                {
                    "name": "pageSize",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 180,
                    "required": false
                },
                {
                    "name": "showBackButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 171,
                    "required": false
                },
                {
                    "name": "showFilters",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 201,
                    "required": false
                },
                {
                    "name": "showFooter",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 202,
                    "required": false
                },
                {
                    "name": "showGridFooter",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 204,
                    "required": false
                },
                {
                    "name": "showGridHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 203,
                    "required": false
                },
                {
                    "name": "showLastUpdate",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 205,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 164,
                    "required": false
                },
                {
                    "name": "sort",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ field: string; direction: 'asc' | 'desc' } | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 178,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 169,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 165,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 168,
                    "required": false
                },
                {
                    "name": "totalItems",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 181,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 163,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "add",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 249,
                    "required": false
                },
                {
                    "name": "backClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MouseEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 250,
                    "required": false
                },
                {
                    "name": "emptyActionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MouseEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 251,
                    "required": false
                },
                {
                    "name": "export",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 248,
                    "required": false
                },
                {
                    "name": "filterChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListTemplateFilter[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 244,
                    "required": false
                },
                {
                    "name": "footerActionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ action: ListTemplateAction; event: MouseEvent }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 243,
                    "required": false
                },
                {
                    "name": "gridActionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{    key: string;    label: string;    icon?: string;    color?: 'primary' | 'secondary' | 'warn';  }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 237,
                    "required": false
                },
                {
                    "name": "headerActionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{    label: string;    icon?: string;    variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';    size?: 'small' | 'medium' | 'large';    disabled?: boolean;    loading?: boolean;  }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 229,
                    "required": false
                },
                {
                    "name": "pageChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ page: number; pageSize: number }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 246,
                    "required": false
                },
                {
                    "name": "refresh",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 247,
                    "required": false
                },
                {
                    "name": "rowClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ item: ListTemplateData; index: number; event: MouseEvent }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 228,
                    "required": false
                },
                {
                    "name": "sortChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ field: string; direction: 'asc' | 'desc' }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 245,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "emptyActionIcon",
                    "defaultValue": "computed(() => {\n    const action = this.emptyAction();\n    return action?.icon || '';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 336
                },
                {
                    "name": "emptyActionSize",
                    "defaultValue": "computed(() => {\n    const action = this.emptyAction();\n    if (!action) return 'medium';\n    return (action.size as 'small' | 'medium' | 'large') || 'medium';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 330
                },
                {
                    "name": "emptyActionVariant",
                    "defaultValue": "computed(() => {\n    const action = this.emptyAction();\n    if (!action) return 'primary';\n    return (action.variant as 'primary' | 'secondary' | 'tertiary' | 'danger') || 'primary';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 324
                },
                {
                    "name": "emptyIconSize",
                    "defaultValue": "computed(() => {\n    const sizeMap = { small: 'md', medium: 'lg', large: 'xl' };\n    return sizeMap[this.size()] as 'md' | 'lg' | 'xl';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 310
                },
                {
                    "name": "emptyIconVariant",
                    "defaultValue": "computed(() => {\n    return this.theme() === 'dark' ? 'secondary' : 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 306
                },
                {
                    "name": "filterOptions",
                    "defaultValue": "computed(() => {\n    return this.filters().map((filter) => ({\n      key: filter.field,\n      label: filter.field,\n      value:\n        typeof filter.value === 'object' && 'from' in filter.value\n          ? filter.value.from\n          : filter.value,\n      type: this.getFilterType(filter.value),\n    }));\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 342
                },
                {
                    "name": "filterSize",
                    "defaultValue": "computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 282
                },
                {
                    "name": "filterVariant",
                    "defaultValue": "computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'expanded' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'expanded';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 277
                },
                {
                    "name": "footerActionSize",
                    "defaultValue": "computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 315
                },
                {
                    "name": "gridSize",
                    "defaultValue": "computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 292
                },
                {
                    "name": "gridVariant",
                    "defaultValue": "computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'detailed' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'detailed';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 287
                },
                {
                    "name": "headerSize",
                    "defaultValue": "computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 272
                },
                {
                    "name": "headerVariant",
                    "defaultValue": "computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'extended' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'extended';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 267
                },
                {
                    "name": "isEmpty",
                    "defaultValue": "computed(() => {\n    return !this.loading() && this.data().length === 0;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 320
                },
                {
                    "name": "spinnerSize",
                    "defaultValue": "computed(() => {\n    const sizeMap = { small: 'sm', medium: 'md', large: 'lg' };\n    return sizeMap[this.size()] as 'sm' | 'md' | 'lg';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 301
                },
                {
                    "name": "spinnerVariant",
                    "defaultValue": "computed(() => {\n    return this.theme() === 'dark' ? 'secondary' : 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 297
                },
                {
                    "name": "templateClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-list-template',\n      `os-list-template--${this.variant()}`,\n      `os-list-template--${this.size()}`,\n      `os-list-template--${this.theme()}`,\n      this.loading() ? 'os-list-template--loading' : '',\n      this.disabled() ? 'os-list-template--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 254
                }
            ],
            "methodsClass": [
                {
                    "name": "getFilterType",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number | Date | literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"text\" | \"select\" | \"date\" | \"number\"",
                    "typeParameters": [],
                    "line": 354,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number | Date | literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 434,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onApplyFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 450,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBackClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 438,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onClearFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 446,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEmptyActionClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 442,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onExport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 430,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFilterChange",
                    "args": [
                        {
                            "name": "filters",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 403,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "filters",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFooterActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "ListTemplateAction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 399,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "ListTemplateAction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onGridActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 390,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onHeaderActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 379,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "page",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 422,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRefresh",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 426,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRowClick",
                    "args": [
                        {
                            "name": "item",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 371,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "Record<string | >",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSortChange",
                    "args": [
                        {
                            "name": "sort",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 413,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "OsPageHeaderComponent",
                    "type": "component"
                },
                {
                    "name": "OsDataGridComponent",
                    "type": "component"
                },
                {
                    "name": "OsFilterBarComponent",
                    "type": "component"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                },
                {
                    "name": "OsSpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport { OsFilterBarComponent } from '../../molecules/os-filter-bar/os-filter-bar.component';\nimport { OsDataGridComponent } from '../../organisms/os-data-grid/os-data-grid.component';\nimport { OsPageHeaderComponent } from '../../organisms/os-page-header/os-page-header.component';\n\nexport interface ListTemplateData {\n  id: string;\n  title: string;\n  subtitle?: string;\n  status?: string;\n  date?: Date;\n  amount?: number;\n  category?: string;\n  tags?: string[];\n  [key: string]: unknown;\n}\n\nexport interface ListTemplateFilter {\n  field: string;\n  operator:\n    | 'equals'\n    | 'contains'\n    | 'startsWith'\n    | 'endsWith'\n    | 'greaterThan'\n    | 'lessThan'\n    | 'between';\n  value: string | number | Date | { from: Date; to: Date };\n}\n\nexport interface ListTemplateAction {\n  id: string;\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'os-list-template',\n  template: `\n    <div [class]=\"templateClass()\">\n      <!-- Header Section -->\n      <os-page-header\n        [variant]=\"headerVariant()\"\n        [size]=\"headerSize()\"\n        [title]=\"title()\"\n        [subtitle]=\"subtitle()\"\n        [breadcrumbs]=\"breadcrumbs()\"\n        [actions]=\"headerActions()\"\n        (actionClick)=\"onHeaderActionClick($event)\"\n      />\n\n      <!-- Filters Section -->\n      @if (showFilters()) {\n      <div class=\"os-list-template__filters\">\n        <os-filter-bar\n          [variant]=\"filterVariant()\"\n          [size]=\"filterSize()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        />\n      </div>\n      }\n\n      <!-- Content Section -->\n      <div class=\"os-list-template__content\">\n        @if (loading()) {\n        <div class=\"os-list-template__loading\">\n          <os-spinner [variant]=\"spinnerVariant()\" [size]=\"spinnerSize()\" />\n          <span class=\"os-list-template__loading-text\">{{ loadingText() }}</span>\n        </div>\n        } @else if (isEmpty()) {\n        <div class=\"os-list-template__empty\">\n          <os-icon [name]=\"emptyIcon()\" [variant]=\"emptyIconVariant()\" [size]=\"emptyIconSize()\" />\n          <h3 class=\"os-list-template__empty-title\">{{ emptyTitle() }}</h3>\n          <p class=\"os-list-template__empty-description\">{{ emptyDescription() }}</p>\n          @if (emptyAction()) {\n          <os-button\n            [variant]=\"emptyActionVariant()\"\n            [size]=\"emptyActionSize()\"\n            [icon]=\"emptyActionIcon()\"\n            (click)=\"onEmptyActionClick($event)\"\n          >\n            {{ emptyAction()!.label }}\n          </os-button>\n          }\n        </div>\n        } @else {\n        <os-data-grid\n          [variant]=\"gridVariant()\"\n          [size]=\"gridSize()\"\n          [data]=\"data()\"\n          [columns]=\"columns()\"\n          [filterOptions]=\"filterOptions()\"\n          [tableActions]=\"gridActions()\"\n          [title]=\"title()\"\n          [subtitle]=\"subtitle()\"\n          [showHeaderActions]=\"showGridHeader()\"\n          [showFooter]=\"showGridFooter()\"\n          [isLoading]=\"loading()\"\n          (rowClick)=\"onRowClick($event)\"\n          (tableActionClick)=\"onGridActionClick($event)\"\n          (filterChange)=\"onFilterChange($event)\"\n          (sortChange)=\"onSortChange($event)\"\n          (pageChange)=\"onPageChange($event)\"\n          (refresh)=\"onRefresh()\"\n          (export)=\"onExport()\"\n          (add)=\"onAdd()\"\n        />\n        }\n      </div>\n\n      <!-- Footer Section -->\n      @if (showFooter()) {\n      <div class=\"os-list-template__footer\">\n        <div class=\"os-list-template__footer-info\">\n          <span class=\"os-list-template__footer-text\">{{ footerText() }}</span>\n          @if (showLastUpdate()) {\n          <span class=\"os-list-template__footer-update\">\n            Última atualização: {{ lastUpdate() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n        <div class=\"os-list-template__footer-actions\">\n          @for (action of footerActions(); track action.id) {\n          <os-button\n            [variant]=\"action.variant || 'tertiary'\"\n            [size]=\"footerActionSize()\"\n            [icon]=\"action.icon || ''\"\n            [disabled]=\"action.disabled || disabled()\"\n            (click)=\"onFooterActionClick(action, $event)\"\n          >\n            {{ action.label }}\n          </os-button>\n          }\n        </div>\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-list-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsPageHeaderComponent,\n    OsDataGridComponent,\n    OsFilterBarComponent,\n    OsButtonComponent,\n    OsIconComponent,\n    OsSpinnerComponent,\n  ],\n})\nexport class OsListTemplateComponent {\n  // Inputs\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  size = input<'small' | 'medium' | 'large'>('medium');\n  theme = input<'light' | 'dark'>('light');\n\n  // Header\n  title = input<string>('');\n  subtitle = input<string>('');\n  breadcrumbs = input<{ label: string; url?: string }[]>([]);\n  showBackButton = input<boolean>(false);\n  backUrl = input<string>('');\n\n  // Data\n  data = input<ListTemplateData[]>([]);\n  columns = input<{ key: string; label: string; sortable?: boolean }[]>([]);\n  filters = input<ListTemplateFilter[]>([]);\n  sort = input<{ field: string; direction: 'asc' | 'desc' } | null>(null);\n  page = input<number>(1);\n  pageSize = input<number>(10);\n  totalItems = input<number>(0);\n\n  // States\n  loading = input<boolean>(false);\n  disabled = input<boolean>(false);\n  loadingText = input<string>('Carregando...');\n\n  // Empty State\n  emptyTitle = input<string>('Nenhum item encontrado');\n  emptyDescription = input<string>('Não há dados para exibir no momento.');\n  emptyIcon = input<string>('list');\n  emptyAction = input<{\n    id: string;\n    label: string;\n    icon?: string;\n    variant?: string;\n    size?: string;\n  } | null>(null);\n\n  // Visibility\n  showFilters = input<boolean>(true);\n  showFooter = input<boolean>(true);\n  showGridHeader = input<boolean>(true);\n  showGridFooter = input<boolean>(true);\n  showLastUpdate = input<boolean>(true);\n\n  // Actions\n  headerActions = input<\n    {\n      label: string;\n      icon?: string;\n      variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n      size?: 'small' | 'medium' | 'large';\n      disabled?: boolean;\n      loading?: boolean;\n    }[]\n  >([]);\n  gridActions = input<\n    { key: string; label: string; icon?: string; color?: 'primary' | 'secondary' | 'warn' }[]\n  >([]);\n  footerActions = input<ListTemplateAction[]>([]);\n\n  // Footer\n  footerText = input<string>('');\n  lastUpdate = input<Date>(new Date());\n\n  // Outputs\n  rowClick = output<{ item: ListTemplateData; index: number; event: MouseEvent }>();\n  headerActionClick = output<{\n    label: string;\n    icon?: string;\n    variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size?: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n  }>();\n  gridActionClick = output<{\n    key: string;\n    label: string;\n    icon?: string;\n    color?: 'primary' | 'secondary' | 'warn';\n  }>();\n  footerActionClick = output<{ action: ListTemplateAction; event: MouseEvent }>();\n  filterChange = output<ListTemplateFilter[]>();\n  sortChange = output<{ field: string; direction: 'asc' | 'desc' }>();\n  pageChange = output<{ page: number; pageSize: number }>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  backClick = output<MouseEvent>();\n  emptyActionClick = output<MouseEvent>();\n\n  // Computed Properties\n  templateClass = computed(() => {\n    return [\n      'os-list-template',\n      `os-list-template--${this.variant()}`,\n      `os-list-template--${this.size()}`,\n      `os-list-template--${this.theme()}`,\n      this.loading() ? 'os-list-template--loading' : '',\n      this.disabled() ? 'os-list-template--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  headerVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'extended' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'extended';\n  });\n\n  headerSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  filterVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'expanded' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'expanded';\n  });\n\n  filterSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  gridVariant = computed(() => {\n    const sizeMap = { small: 'compact', medium: 'default', large: 'detailed' };\n    return sizeMap[this.size()] as 'compact' | 'default' | 'detailed';\n  });\n\n  gridSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  spinnerVariant = computed(() => {\n    return this.theme() === 'dark' ? 'secondary' : 'default';\n  });\n\n  spinnerSize = computed(() => {\n    const sizeMap = { small: 'sm', medium: 'md', large: 'lg' };\n    return sizeMap[this.size()] as 'sm' | 'md' | 'lg';\n  });\n\n  emptyIconVariant = computed(() => {\n    return this.theme() === 'dark' ? 'secondary' : 'default';\n  });\n\n  emptyIconSize = computed(() => {\n    const sizeMap = { small: 'md', medium: 'lg', large: 'xl' };\n    return sizeMap[this.size()] as 'md' | 'lg' | 'xl';\n  });\n\n  footerActionSize = computed(() => {\n    const sizeMap = { small: 'small', medium: 'medium', large: 'large' };\n    return sizeMap[this.size()] as 'small' | 'medium' | 'large';\n  });\n\n  isEmpty = computed(() => {\n    return !this.loading() && this.data().length === 0;\n  });\n\n  emptyActionVariant = computed(() => {\n    const action = this.emptyAction();\n    if (!action) return 'primary';\n    return (action.variant as 'primary' | 'secondary' | 'tertiary' | 'danger') || 'primary';\n  });\n\n  emptyActionSize = computed(() => {\n    const action = this.emptyAction();\n    if (!action) return 'medium';\n    return (action.size as 'small' | 'medium' | 'large') || 'medium';\n  });\n\n  emptyActionIcon = computed(() => {\n    const action = this.emptyAction();\n    return action?.icon || '';\n  });\n\n  // Convert ListTemplateFilter[] to OsFilterOption[]\n  filterOptions = computed(() => {\n    return this.filters().map((filter) => ({\n      key: filter.field,\n      label: filter.field,\n      value:\n        typeof filter.value === 'object' && 'from' in filter.value\n          ? filter.value.from\n          : filter.value,\n      type: this.getFilterType(filter.value),\n    }));\n  });\n\n  private getFilterType(\n    value:\n      | string\n      | number\n      | Date\n      | {\n          from: Date;\n          to: Date;\n        }\n  ): 'text' | 'select' | 'date' | 'number' {\n    if (typeof value === 'number') return 'number';\n    if (value instanceof Date) return 'date';\n    if (typeof value === 'object' && value.from && value.to) return 'date';\n    return 'text';\n  }\n\n  // Event Handlers\n  onRowClick(item: Record<string, unknown>) {\n    this.rowClick.emit({\n      item: item as ListTemplateData,\n      index: 0,\n      event: new MouseEvent('click'),\n    });\n  }\n\n  onHeaderActionClick(action: {\n    label: string;\n    icon?: string;\n    variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size?: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n  }) {\n    this.headerActionClick.emit(action);\n  }\n\n  onGridActionClick(action: {\n    key: string;\n    label: string;\n    icon?: string;\n    color?: 'primary' | 'secondary' | 'warn';\n  }) {\n    this.gridActionClick.emit(action);\n  }\n\n  onFooterActionClick(action: ListTemplateAction, event: MouseEvent) {\n    this.footerActionClick.emit({ action, event });\n  }\n\n  onFilterChange(filters: { field?: string; operator?: string; value?: unknown }[]) {\n    // Convert OsDataGridFilter[] to ListTemplateFilter[]\n    const convertedFilters: ListTemplateFilter[] = filters.map((filter) => ({\n      field: filter.field || '',\n      operator: (filter.operator as ListTemplateFilter['operator']) || 'equals',\n      value: (filter.value as ListTemplateFilter['value']) || '',\n    }));\n    this.filterChange.emit(convertedFilters);\n  }\n\n  onSortChange(sort: { field?: string; direction?: 'asc' | 'desc' }) {\n    // Convert OsDataGridSort to our format\n    const convertedSort = {\n      field: sort.field || '',\n      direction: sort.direction || 'asc',\n    } as { field: string; direction: 'asc' | 'desc' };\n    this.sortChange.emit(convertedSort);\n  }\n\n  onPageChange(page: { page: number; pageSize: number }) {\n    this.pageChange.emit(page);\n  }\n\n  onRefresh() {\n    this.refresh.emit();\n  }\n\n  onExport() {\n    this.export.emit();\n  }\n\n  onAdd() {\n    this.add.emit();\n  }\n\n  onBackClick(event: MouseEvent) {\n    this.backClick.emit(event);\n  }\n\n  onEmptyActionClick(event: MouseEvent) {\n    this.emptyActionClick.emit(event);\n  }\n\n  onClearFilters() {\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters() {\n    // Filter application logic can be implemented here\n    // For now, just emit the current filters\n    this.filterChange.emit(this.filters());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-list-template {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: var(--os-color-background);\n  color: var(--os-color-text);\n  border-radius: var(--os-border-radius);\n  overflow: hidden;\n\n  &--loading {\n    pointer-events: none;\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--small {\n    .os-list-template__filters {\n      padding: var(--os-spacing-sm);\n    }\n\n    .os-list-template__content {\n      padding: var(--os-spacing-sm);\n    }\n\n    .os-list-template__footer {\n      padding: var(--os-spacing-sm);\n    }\n  }\n\n  &--medium {\n    .os-list-template__filters {\n      padding: var(--os-spacing-md);\n    }\n\n    .os-list-template__content {\n      padding: var(--os-spacing-md);\n    }\n\n    .os-list-template__footer {\n      padding: var(--os-spacing-md);\n    }\n  }\n\n  &--large {\n    .os-list-template__filters {\n      padding: var(--os-spacing-lg);\n    }\n\n    .os-list-template__content {\n      padding: var(--os-spacing-lg);\n    }\n\n    .os-list-template__footer {\n      padding: var(--os-spacing-lg);\n    }\n  }\n\n  &--compact {\n    .os-list-template__filters {\n      display: none;\n    }\n\n    .os-list-template__footer {\n      display: none;\n    }\n  }\n\n  &--detailed {\n    .os-list-template__filters {\n      border-bottom: 1px solid var(--os-color-border);\n    }\n\n    .os-list-template__footer {\n      border-top: 1px solid var(--os-color-border);\n      background: var(--os-color-background-secondary);\n    }\n  }\n\n  &--dark {\n    background: var(--os-color-background-dark);\n    color: var(--os-color-text-dark);\n\n    .os-list-template__filters {\n      background: var(--os-color-background-dark);\n      border-bottom-color: var(--os-color-border-dark);\n    }\n\n    .os-list-template__footer {\n      background: var(--os-color-background-secondary-dark);\n      border-top-color: var(--os-color-border-dark);\n    }\n  }\n}\n\n.os-list-template__filters {\n  background: var(--os-color-background-secondary);\n  border-bottom: 1px solid var(--os-color-border);\n  transition: all var(--os-transition-duration) var(--os-transition-timing);\n\n  @media (max-width: 768px) {\n    padding: var(--os-spacing-sm);\n  }\n}\n\n.os-list-template__content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  position: relative;\n\n  @media (max-width: 768px) {\n    padding: var(--os-spacing-sm);\n  }\n}\n\n.os-list-template__loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: var(--os-spacing-md);\n  padding: var(--os-spacing-xl);\n  text-align: center;\n\n  &-text {\n    font-size: var(--os-font-size-md);\n    color: var(--os-color-text-secondary);\n    font-weight: var(--os-font-weight-medium);\n  }\n}\n\n.os-list-template__empty {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: var(--os-spacing-md);\n  padding: var(--os-spacing-xl);\n  text-align: center;\n  min-height: 300px;\n\n  &-title {\n    font-size: var(--os-font-size-lg);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text);\n    margin: 0;\n  }\n\n  &-description {\n    font-size: var(--os-font-size-md);\n    color: var(--os-color-text-secondary);\n    margin: 0;\n    max-width: 400px;\n  }\n}\n\n.os-list-template__footer {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: var(--os-spacing-md);\n  background: var(--os-color-background-secondary);\n  border-top: 1px solid var(--os-color-border);\n  transition: all var(--os-transition-duration) var(--os-transition-timing);\n\n  &-info {\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-xs);\n  }\n\n  &-text {\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n    font-weight: var(--os-font-weight-medium);\n  }\n\n  &-update {\n    font-size: var(--os-font-size-xs);\n    color: var(--os-color-text-tertiary);\n  }\n\n  &-actions {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: stretch;\n    gap: var(--os-spacing-sm);\n\n    &-info {\n      text-align: center;\n    }\n\n    &-actions {\n      justify-content: center;\n    }\n  }\n}\n\n// Responsive Design\n@media (max-width: 1024px) {\n  .os-list-template {\n    &--large {\n      .os-list-template__filters {\n        padding: var(--os-spacing-md);\n      }\n\n      .os-list-template__content {\n        padding: var(--os-spacing-md);\n      }\n\n      .os-list-template__footer {\n        padding: var(--os-spacing-md);\n      }\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .os-list-template {\n    &--medium,\n    &--large {\n      .os-list-template__filters {\n        padding: var(--os-spacing-sm);\n      }\n\n      .os-list-template__content {\n        padding: var(--os-spacing-sm);\n      }\n\n      .os-list-template__footer {\n        padding: var(--os-spacing-sm);\n      }\n    }\n  }\n\n  .os-list-template__footer {\n    &-actions {\n      flex-wrap: wrap;\n      justify-content: center;\n    }\n  }\n}\n\n@media (max-width: 480px) {\n  .os-list-template__empty {\n    padding: var(--os-spacing-lg);\n    min-height: 250px;\n\n    &-title {\n      font-size: var(--os-font-size-md);\n    }\n\n    &-description {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  .os-list-template__loading {\n    padding: var(--os-spacing-lg);\n\n    &-text {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n}\n\n// Dark Theme\n.os-list-template--dark {\n  .os-list-template__loading {\n    &-text {\n      color: var(--os-color-text-secondary-dark);\n    }\n  }\n\n  .os-list-template__empty {\n    &-title {\n      color: var(--os-color-text-dark);\n    }\n\n    &-description {\n      color: var(--os-color-text-secondary-dark);\n    }\n  }\n\n  .os-list-template__footer {\n    &-text {\n      color: var(--os-color-text-secondary-dark);\n    }\n\n    &-update {\n      color: var(--os-color-text-tertiary-dark);\n    }\n  }\n}\n\n// Animation\n.os-list-template__content {\n  animation: fadeIn var(--os-transition-duration) var(--os-transition-timing);\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n// Focus Management\n.os-list-template:focus-within {\n  outline: 2px solid var(--os-color-primary);\n  outline-offset: 2px;\n}\n\n// Print Styles\n@media print {\n  .os-list-template {\n    &__filters,\n    &__footer {\n      display: none;\n    }\n\n    &__content {\n      padding: 0;\n    }\n  }\n}\n",
                    "styleUrl": "./os-list-template.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsModalComponent",
            "id": "component-OsModalComponent-432f9c4c7cfff9ae2913d7c90dc4e9bbfba1af54fd1eb80d8bac1e5ba4ef6f0c9bc0b763cc96c8adcb1ee8f450f370432eacc2c5518ec3699a44c15555d83d77",
            "file": "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-modal",
            "styleUrls": [
                "./os-modal.component.scss"
            ],
            "styles": [],
            "template": "<div\n  class=\"os-modal\"\n  [class]=\"modalClasses()\"\n  [attr.role]=\"'dialog'\"\n  [attr.aria-modal]=\"true\"\n  [attr.aria-labelledby]=\"titleId()\"\n  [attr.aria-describedby]=\"descriptionId()\"\n>\n  <div\n    class=\"os-modal__backdrop\"\n    (click)=\"onBackdropClick()\"\n    (keydown.enter)=\"onBackdropClick()\"\n    tabindex=\"0\"\n    role=\"button\"\n    [attr.aria-label]=\"'Fechar modal clicando no fundo'\"\n  ></div>\n\n  <div class=\"os-modal__container\" [class]=\"containerClasses()\">\n    <os-card\n      [variant]=\"cardVariant()\"\n      [size]=\"cardSize()\"\n      [header]=\"showHeader()\"\n      [actions]=\"showActions()\"\n    >\n      @if (showHeader()) {\n      <div slot=\"header\" class=\"os-modal__header\">\n        @if (title()) {\n        <h2 [id]=\"titleId()\" class=\"os-modal__title\">{{ title() }}</h2>\n        } @if (subtitle()) {\n        <p [id]=\"descriptionId()\" class=\"os-modal__subtitle\">{{ subtitle() }}</p>\n        } @if (closable()) {\n        <button\n          class=\"os-modal__close\"\n          (click)=\"onClose()\"\n          [attr.aria-label]=\"'Fechar modal'\"\n          type=\"button\"\n        >\n          <span class=\"os-modal__close-icon\" aria-hidden=\"true\">×</span>\n        </button>\n        }\n      </div>\n      }\n\n      <div class=\"os-modal__content\" [class]=\"contentClasses()\">\n        <ng-content></ng-content>\n      </div>\n\n      @if (showActions()) {\n      <div slot=\"actions\" class=\"os-modal__actions\" [class]=\"actionsClasses()\">\n        @if (actions().length > 0) { @for (action of actions(); track action.label) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"buttonSize()\"\n          [disabled]=\"action.disabled || false\"\n          [loading]=\"action.loading || false\"\n          (clicked)=\"action.action()\"\n        >\n          {{ action.label }}\n        </os-button>\n        } } @else { @if (showDefaultActions()) {\n        <os-button variant=\"secondary\" [size]=\"buttonSize()\" (clicked)=\"onClose()\">\n          {{ cancelText() }}\n        </os-button>\n        <os-button\n          variant=\"primary\"\n          [size]=\"buttonSize()\"\n          [disabled]=\"confirmDisabled()\"\n          [loading]=\"confirmLoading()\"\n          (clicked)=\"onConfirm()\"\n        >\n          {{ confirmText() }}\n        </os-button>\n        } }\n      </div>\n      }\n    </os-card>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsModalAction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "cancelText",
                    "defaultValue": "'Cancelar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "centered",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "closable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "closeOnBackdrop",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "closeOnEscape",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "confirmDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "confirmLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 131,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "confirmText",
                    "defaultValue": "'Confirmar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "fullHeight",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showDefaultActions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsModalSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "subtitle",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 120,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 119,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsModalVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "backdropClicked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "closed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "confirmed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 137,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "actionsClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-modal__actions'];\n    const actionCount = this.actions().length || (this.showDefaultActions() ? 2 : 0);\n\n    if (actionCount > 2) {\n      classes.push('os-modal__actions--multiple');\n    } else {\n      classes.push('os-modal__actions--dual');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 235,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "buttonSize",
                    "defaultValue": "computed(() => {\n    const size = this.size();\n    switch (size) {\n      case 'small':\n        return 'small';\n      case 'large':\n      case 'fullscreen':\n        return 'large';\n      default:\n        return 'medium';\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 185,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "cardSize",
                    "defaultValue": "computed(() => {\n    const size = this.size();\n    switch (size) {\n      case 'small':\n        return 'small';\n      case 'large':\n      case 'fullscreen':\n        return 'large';\n      default:\n        return 'medium';\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 172,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "cardVariant",
                    "defaultValue": "computed(() => {\n    const variant = this.variant();\n    switch (variant) {\n      case 'confirmation':\n        return 'outlined';\n      case 'form':\n        return 'elevated';\n      case 'info':\n        return 'flat';\n      default:\n        return 'default';\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 158,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "containerClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-modal__container'];\n    classes.push(`os-modal__container--${this.size()}`);\n\n    if (this.centered()) {\n      classes.push('os-modal__container--centered');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 214,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "contentClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-modal__content'];\n\n    if (this.fullHeight()) {\n      classes.push('os-modal__content--full-height');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 225,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "descriptionId",
                    "defaultValue": "computed(\n    () => `modal-description-${Math.random().toString(36).substr(2, 9)}`\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "dialogRef",
                    "defaultValue": "inject(MatDialogRef<OsModalComponent>, { optional: true })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 142,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "elementRef",
                    "defaultValue": "inject(ElementRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "modalClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-modal'];\n    classes.push(`os-modal--${this.variant()}`);\n    classes.push(`os-modal--${this.size()}`);\n\n    if (this.fullHeight()) {\n      classes.push('os-modal--full-height');\n    }\n\n    if (this.centered()) {\n      classes.push('os-modal--centered');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 198,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "showActions",
                    "defaultValue": "computed(() => {\n    return this.actions().length > 0 || this.showDefaultActions();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 154,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "showHeader",
                    "defaultValue": "computed(() => {\n    return this.title() !== null || this.subtitle() !== null || this.closable();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 150,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "titleId",
                    "defaultValue": "computed(() => `modal-title-${Math.random().toString(36).substr(2, 9)}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 145,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onBackdropClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 260,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 249,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onConfirm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 256,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEnterKey",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 277,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:keydown.enter', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        171
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onEscapeKey",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 268,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:keydown.escape', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        171
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:keydown.enter",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 277
                },
                {
                    "name": "document:keydown.escape",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 268
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatDialogModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                },
                {
                    "name": "OsCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  ChangeDetectionStrategy,\n  inject,\n  ElementRef,\n  HostListener,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\n\nexport type OsModalVariant = 'default' | 'confirmation' | 'form' | 'info';\nexport type OsModalSize = 'small' | 'medium' | 'large' | 'fullscreen';\n\nexport interface OsModalAction {\n  label: string;\n  variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  action: () => void;\n  disabled?: boolean;\n  loading?: boolean;\n}\n\n@Component({\n  selector: 'os-modal',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, OsButtonComponent, OsCardComponent],\n  template: `\n    <div\n      class=\"os-modal\"\n      [class]=\"modalClasses()\"\n      [attr.role]=\"'dialog'\"\n      [attr.aria-modal]=\"true\"\n      [attr.aria-labelledby]=\"titleId()\"\n      [attr.aria-describedby]=\"descriptionId()\"\n    >\n      <div\n        class=\"os-modal__backdrop\"\n        (click)=\"onBackdropClick()\"\n        (keydown.enter)=\"onBackdropClick()\"\n        tabindex=\"0\"\n        role=\"button\"\n        [attr.aria-label]=\"'Fechar modal clicando no fundo'\"\n      ></div>\n\n      <div class=\"os-modal__container\" [class]=\"containerClasses()\">\n        <os-card\n          [variant]=\"cardVariant()\"\n          [size]=\"cardSize()\"\n          [header]=\"showHeader()\"\n          [actions]=\"showActions()\"\n        >\n          @if (showHeader()) {\n          <div slot=\"header\" class=\"os-modal__header\">\n            @if (title()) {\n            <h2 [id]=\"titleId()\" class=\"os-modal__title\">{{ title() }}</h2>\n            } @if (subtitle()) {\n            <p [id]=\"descriptionId()\" class=\"os-modal__subtitle\">{{ subtitle() }}</p>\n            } @if (closable()) {\n            <button\n              class=\"os-modal__close\"\n              (click)=\"onClose()\"\n              [attr.aria-label]=\"'Fechar modal'\"\n              type=\"button\"\n            >\n              <span class=\"os-modal__close-icon\" aria-hidden=\"true\">×</span>\n            </button>\n            }\n          </div>\n          }\n\n          <div class=\"os-modal__content\" [class]=\"contentClasses()\">\n            <ng-content></ng-content>\n          </div>\n\n          @if (showActions()) {\n          <div slot=\"actions\" class=\"os-modal__actions\" [class]=\"actionsClasses()\">\n            @if (actions().length > 0) { @for (action of actions(); track action.label) {\n            <os-button\n              [variant]=\"action.variant\"\n              [size]=\"buttonSize()\"\n              [disabled]=\"action.disabled || false\"\n              [loading]=\"action.loading || false\"\n              (clicked)=\"action.action()\"\n            >\n              {{ action.label }}\n            </os-button>\n            } } @else { @if (showDefaultActions()) {\n            <os-button variant=\"secondary\" [size]=\"buttonSize()\" (clicked)=\"onClose()\">\n              {{ cancelText() }}\n            </os-button>\n            <os-button\n              variant=\"primary\"\n              [size]=\"buttonSize()\"\n              [disabled]=\"confirmDisabled()\"\n              [loading]=\"confirmLoading()\"\n              (clicked)=\"onConfirm()\"\n            >\n              {{ confirmText() }}\n            </os-button>\n            } }\n          </div>\n          }\n        </os-card>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./os-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-modal-host',\n  },\n})\nexport class OsModalComponent {\n  // Input signals\n  readonly title = input<string | null>(null);\n  readonly subtitle = input<string | null>(null);\n  readonly variant = input<OsModalVariant>('default');\n  readonly size = input<OsModalSize>('medium');\n  readonly closable = input<boolean>(true);\n  readonly closeOnBackdrop = input<boolean>(true);\n  readonly closeOnEscape = input<boolean>(true);\n  readonly actions = input<OsModalAction[]>([]);\n  readonly showDefaultActions = input<boolean>(false);\n  readonly confirmText = input<string>('Confirmar');\n  readonly cancelText = input<string>('Cancelar');\n  readonly confirmDisabled = input<boolean>(false);\n  readonly confirmLoading = input<boolean>(false);\n  readonly fullHeight = input<boolean>(false);\n  readonly centered = input<boolean>(true);\n\n  // Output signals\n  readonly closed = output<void>();\n  readonly confirmed = output<void>();\n  readonly backdropClicked = output<void>();\n\n  // Private properties\n  private readonly elementRef = inject(ElementRef);\n  private readonly dialogRef = inject(MatDialogRef<OsModalComponent>, { optional: true });\n\n  // Computed values\n  readonly titleId = computed(() => `modal-title-${Math.random().toString(36).substr(2, 9)}`);\n  readonly descriptionId = computed(\n    () => `modal-description-${Math.random().toString(36).substr(2, 9)}`\n  );\n\n  readonly showHeader = computed(() => {\n    return this.title() !== null || this.subtitle() !== null || this.closable();\n  });\n\n  readonly showActions = computed(() => {\n    return this.actions().length > 0 || this.showDefaultActions();\n  });\n\n  readonly cardVariant = computed(() => {\n    const variant = this.variant();\n    switch (variant) {\n      case 'confirmation':\n        return 'outlined';\n      case 'form':\n        return 'elevated';\n      case 'info':\n        return 'flat';\n      default:\n        return 'default';\n    }\n  });\n\n  readonly cardSize = computed(() => {\n    const size = this.size();\n    switch (size) {\n      case 'small':\n        return 'small';\n      case 'large':\n      case 'fullscreen':\n        return 'large';\n      default:\n        return 'medium';\n    }\n  });\n\n  readonly buttonSize = computed(() => {\n    const size = this.size();\n    switch (size) {\n      case 'small':\n        return 'small';\n      case 'large':\n      case 'fullscreen':\n        return 'large';\n      default:\n        return 'medium';\n    }\n  });\n\n  readonly modalClasses = computed(() => {\n    const classes = ['os-modal'];\n    classes.push(`os-modal--${this.variant()}`);\n    classes.push(`os-modal--${this.size()}`);\n\n    if (this.fullHeight()) {\n      classes.push('os-modal--full-height');\n    }\n\n    if (this.centered()) {\n      classes.push('os-modal--centered');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly containerClasses = computed(() => {\n    const classes = ['os-modal__container'];\n    classes.push(`os-modal__container--${this.size()}`);\n\n    if (this.centered()) {\n      classes.push('os-modal__container--centered');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly contentClasses = computed(() => {\n    const classes = ['os-modal__content'];\n\n    if (this.fullHeight()) {\n      classes.push('os-modal__content--full-height');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly actionsClasses = computed(() => {\n    const classes = ['os-modal__actions'];\n    const actionCount = this.actions().length || (this.showDefaultActions() ? 2 : 0);\n\n    if (actionCount > 2) {\n      classes.push('os-modal__actions--multiple');\n    } else {\n      classes.push('os-modal__actions--dual');\n    }\n\n    return classes.join(' ');\n  });\n\n  // Event handlers\n  onClose(): void {\n    this.closed.emit();\n    if (this.dialogRef) {\n      this.dialogRef.close();\n    }\n  }\n\n  onConfirm(): void {\n    this.confirmed.emit();\n  }\n\n  onBackdropClick(): void {\n    if (this.closeOnBackdrop()) {\n      this.backdropClicked.emit();\n      this.onClose();\n    }\n  }\n\n  @HostListener('document:keydown.escape', ['$event'])\n  onEscapeKey(event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    if (this.closeOnEscape()) {\n      keyboardEvent.preventDefault();\n      this.onClose();\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnterKey(event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    if (keyboardEvent.ctrlKey || keyboardEvent.metaKey) {\n      keyboardEvent.preventDefault();\n      this.onConfirm();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/variables' as *;\n\n.os-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--os-spacing-md);\n\n  &--centered {\n    align-items: center;\n    justify-content: center;\n  }\n\n  &--full-height {\n    align-items: stretch;\n  }\n\n  &__backdrop {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    backdrop-filter: blur(2px);\n    cursor: pointer;\n  }\n\n  &__container {\n    position: relative;\n    z-index: 1001;\n    width: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    display: flex;\n    flex-direction: column;\n\n    &--small {\n      max-width: 400px;\n    }\n\n    &--medium {\n      max-width: 600px;\n    }\n\n    &--large {\n      max-width: 800px;\n    }\n\n    &--fullscreen {\n      max-width: 100vw;\n      max-height: 100vh;\n      width: 100vw;\n      height: 100vh;\n    }\n\n    &--centered {\n      margin: auto;\n    }\n  }\n\n  &__header {\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    gap: var(--os-spacing-md);\n    padding: var(--os-spacing-lg) var(--os-spacing-lg) 0;\n    border-bottom: 1px solid var(--os-color-gray-200);\n    margin-bottom: var(--os-spacing-md);\n\n    .os-modal--confirmation & {\n      border-bottom-color: var(--os-color-warning);\n    }\n\n    .os-modal--form & {\n      border-bottom-color: var(--os-color-primary-500);\n    }\n\n    .os-modal--info & {\n      border-bottom-color: var(--os-color-info);\n    }\n  }\n\n  &__title {\n    margin: 0;\n    font-size: var(--os-font-size-xl);\n    font-weight: var(--os-font-weight-bold);\n    color: var(--os-color-gray-900);\n    line-height: 1.2;\n    flex: 1;\n\n    .os-modal--small & {\n      font-size: var(--os-font-size-lg);\n    }\n\n    .os-modal--large &,\n    .os-modal--fullscreen & {\n      font-size: var(--os-font-size-2xl);\n    }\n  }\n\n  &__subtitle {\n    margin: var(--os-spacing-xs) 0 0;\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-gray-600);\n    line-height: 1.4;\n  }\n\n  &__close {\n    background: none;\n    border: none;\n    padding: var(--os-spacing-xs);\n    cursor: pointer;\n    border-radius: var(--os-radius-sm);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: background-color 0.2s ease;\n    color: var(--os-color-gray-500);\n\n    &:hover {\n      background-color: var(--os-color-gray-100);\n      color: var(--os-color-gray-700);\n    }\n\n    &:focus {\n      outline: 2px solid var(--os-color-primary-500);\n      outline-offset: 2px;\n    }\n  }\n\n  &__close-icon {\n    font-size: 24px;\n    line-height: 1;\n    font-weight: bold;\n  }\n\n  &__content {\n    padding: 0 var(--os-spacing-lg);\n    flex: 1;\n    overflow-y: auto;\n\n    &--full-height {\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .os-modal--small & {\n      padding: 0 var(--os-spacing-md);\n    }\n\n    .os-modal--large &,\n    .os-modal--fullscreen & {\n      padding: 0 var(--os-spacing-xl);\n    }\n  }\n\n  &__actions {\n    display: flex;\n    gap: var(--os-spacing-sm);\n    padding: var(--os-spacing-lg);\n    border-top: 1px solid var(--os-color-gray-200);\n    margin-top: var(--os-spacing-md);\n\n    &--dual {\n      justify-content: flex-end;\n    }\n\n    &--multiple {\n      justify-content: space-between;\n      flex-wrap: wrap;\n    }\n\n    .os-modal--small & {\n      padding: var(--os-spacing-md);\n      gap: var(--os-spacing-xs);\n    }\n\n    .os-modal--large &,\n    .os-modal--fullscreen & {\n      padding: var(--os-spacing-xl);\n      gap: var(--os-spacing-md);\n    }\n  }\n\n  // Variants\n  &--confirmation {\n    .os-modal__title {\n      color: var(--os-color-warning);\n    }\n\n    .os-modal__actions {\n      border-top-color: var(--os-color-warning);\n    }\n  }\n\n  &--form {\n    .os-modal__title {\n      color: var(--os-color-primary-500);\n    }\n\n    .os-modal__actions {\n      border-top-color: var(--os-color-primary-500);\n    }\n  }\n\n  &--info {\n    .os-modal__title {\n      color: var(--os-color-info);\n    }\n\n    .os-modal__actions {\n      border-top-color: var(--os-color-info);\n    }\n  }\n\n  // Responsive design\n  @media (max-width: 768px) {\n    padding: var(--os-spacing-sm);\n\n    &__container {\n      &--small,\n      &--medium,\n      &--large {\n        max-width: 100%;\n      }\n    }\n\n    &__header {\n      padding: var(--os-spacing-md) var(--os-spacing-md) 0;\n      margin-bottom: var(--os-spacing-sm);\n    }\n\n    &__title {\n      font-size: var(--os-font-size-lg);\n    }\n\n    &__content {\n      padding: 0 var(--os-spacing-md);\n    }\n\n    &__actions {\n      padding: var(--os-spacing-md);\n      flex-direction: column;\n\n      &--dual,\n      &--multiple {\n        justify-content: stretch;\n      }\n\n      os-button {\n        width: 100%;\n      }\n    }\n  }\n\n  @media (max-width: 480px) {\n    padding: var(--os-spacing-xs);\n\n    &__header {\n      padding: var(--os-spacing-sm) var(--os-spacing-sm) 0;\n    }\n\n    &__content {\n      padding: 0 var(--os-spacing-sm);\n    }\n\n    &__actions {\n      padding: var(--os-spacing-sm);\n    }\n  }\n}\n\n// Animation classes for dialog integration\n.os-modal-host {\n  &.cdk-dialog-container {\n    padding: 0;\n  }\n}\n\n// Focus management\n.os-modal:focus-within {\n  .os-modal__container {\n    outline: none;\n  }\n}\n\n// Accessibility improvements\n@media (prefers-reduced-motion: reduce) {\n  .os-modal__backdrop {\n    backdrop-filter: none;\n  }\n}\n\n// High contrast mode\n@media (prefers-contrast: high) {\n  .os-modal__backdrop {\n    background-color: rgba(0, 0, 0, 0.8);\n  }\n\n  .os-modal__header {\n    border-bottom-width: 2px;\n  }\n\n  .os-modal__actions {\n    border-top-width: 2px;\n  }\n}\n",
                    "styleUrl": "./os-modal.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsModalTemplateComponent",
            "id": "component-OsModalTemplateComponent-918131dbce807a41680baaa6316843e6d6e2ffeca23af6c61c965c845aab98ff9b6015fb0b0d1d16475b085600b0203d9f355498a863c4cd33aabdfebcb3644c",
            "file": "src/app/shared/ui-components/templates/os-modal-template/os-modal-template.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-modal-template",
            "styleUrls": [
                "./os-modal-template.component.scss"
            ],
            "styles": [],
            "template": "<os-modal\n  [variant]=\"modalVariant()\"\n  [size]=\"size()\"\n  [title]=\"config().title\"\n  [subtitle]=\"config().subtitle || null\"\n  (close)=\"onClose()\"\n  (backdropClick)=\"onBackdropClick()\"\n  (escapeKey)=\"onEscapeKey()\"\n>\n  <div class=\"os-modal-template__content\" [class]=\"contentClass()\">\n    <ng-content />\n  </div>\n\n  @if (config().showActions ?? true) {\n  <div class=\"os-modal-template__actions\" [class]=\"actionsClass()\">\n    @if (config().showCancelButton ?? true) {\n    <os-button\n      [variant]=\"'secondary'\"\n      [size]=\"size()\"\n      [disabled]=\"disabled()\"\n      (click)=\"onCancel()\"\n    >\n      {{ config().cancelButtonText || 'Cancelar' }}\n    </os-button>\n    } @if (config().showConfirmButton ?? true) {\n    <os-button\n      [variant]=\"'primary'\"\n      [size]=\"size()\"\n      [disabled]=\"disabled() || !isValid()\"\n      [loading]=\"loading()\"\n      (click)=\"onConfirm()\"\n    >\n      {{ config().confirmButtonText || 'Confirmar' }}\n    </os-button>\n    } @for (action of config().actions || []; track action.label) {\n    <os-button\n      [variant]=\"action.variant\"\n      [size]=\"action.size\"\n      [disabled]=\"action.disabled || disabled()\"\n      [loading]=\"action.loading || false\"\n      [icon]=\"action.icon || ''\"\n      (click)=\"onActionClick(action)\"\n    >\n      {{ action.label }}\n    </os-button>\n    }\n  </div>\n  }\n</os-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalTemplateConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "required": true
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "required": false
                },
                {
                    "name": "valid",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 92,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{    label: string;    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';    size: 'small' | 'medium' | 'large';    disabled?: boolean;    loading?: boolean;    icon?: string;  }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 97,
                    "required": false
                },
                {
                    "name": "backdropClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "required": false
                },
                {
                    "name": "cancelled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "required": false
                },
                {
                    "name": "closed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "required": false
                },
                {
                    "name": "confirmed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "required": false
                },
                {
                    "name": "escapeKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "actionsClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-modal-template__actions',\n      `os-modal-template__actions--${this.variant()}`,\n      `os-modal-template__actions--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "contentClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-modal-template__content',\n      `os-modal-template__content--${this.variant()}`,\n      `os-modal-template__content--${this.size()}`,\n      this.disabled() ? 'os-modal-template__content--disabled' : '',\n      this.loading() ? 'os-modal-template__content--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 113
                },
                {
                    "name": "isValid",
                    "defaultValue": "computed(() => {\n    return this.valid();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 135
                },
                {
                    "name": "modalVariant",
                    "defaultValue": "computed(() => {\n    const variant = this.variant();\n    return variant === 'compact' ? 'confirmation' : 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 108
                }
            ],
            "methodsClass": [
                {
                    "name": "onActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onBackdropClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onConfirm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEscapeKey",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsModalComponent",
                    "type": "component"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, input, output, ChangeDetectionStrategy } from '@angular/core';\nimport { OsModalComponent } from '../../organisms/os-modal/os-modal.component';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport interface ModalTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showCloseButton?: boolean;\n  showHeader?: boolean;\n  showFooter?: boolean;\n  showActions?: boolean;\n  closeButtonText?: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  showConfirmButton?: boolean;\n  showCancelButton?: boolean;\n  actions?: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }[];\n}\n\n@Component({\n  selector: 'os-modal-template',\n  template: `\n    <os-modal\n      [variant]=\"modalVariant()\"\n      [size]=\"size()\"\n      [title]=\"config().title\"\n      [subtitle]=\"config().subtitle || null\"\n      (close)=\"onClose()\"\n      (backdropClick)=\"onBackdropClick()\"\n      (escapeKey)=\"onEscapeKey()\"\n    >\n      <div class=\"os-modal-template__content\" [class]=\"contentClass()\">\n        <ng-content />\n      </div>\n\n      @if (config().showActions ?? true) {\n      <div class=\"os-modal-template__actions\" [class]=\"actionsClass()\">\n        @if (config().showCancelButton ?? true) {\n        <os-button\n          [variant]=\"'secondary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled()\"\n          (click)=\"onCancel()\"\n        >\n          {{ config().cancelButtonText || 'Cancelar' }}\n        </os-button>\n        } @if (config().showConfirmButton ?? true) {\n        <os-button\n          [variant]=\"'primary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled() || !isValid()\"\n          [loading]=\"loading()\"\n          (click)=\"onConfirm()\"\n        >\n          {{ config().confirmButtonText || 'Confirmar' }}\n        </os-button>\n        } @for (action of config().actions || []; track action.label) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"action.size\"\n          [disabled]=\"action.disabled || disabled()\"\n          [loading]=\"action.loading || false\"\n          [icon]=\"action.icon || ''\"\n          (click)=\"onActionClick(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </os-modal>\n  `,\n  styleUrls: ['./os-modal-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, OsModalComponent, OsButtonComponent],\n})\nexport class OsModalTemplateComponent {\n  config = input.required<ModalTemplateConfig>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n  valid = input(true);\n\n  closed = output<void>();\n  confirmed = output<void>();\n  cancelled = output<void>();\n  actionClick = output<{\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }>();\n  backdropClick = output<void>();\n  escapeKey = output<void>();\n\n  modalVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'compact' ? 'confirmation' : 'default';\n  });\n\n  contentClass = computed(() => {\n    return [\n      'os-modal-template__content',\n      `os-modal-template__content--${this.variant()}`,\n      `os-modal-template__content--${this.size()}`,\n      this.disabled() ? 'os-modal-template__content--disabled' : '',\n      this.loading() ? 'os-modal-template__content--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  actionsClass = computed(() => {\n    return [\n      'os-modal-template__actions',\n      `os-modal-template__actions--${this.variant()}`,\n      `os-modal-template__actions--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  isValid = computed(() => {\n    return this.valid();\n  });\n\n  onClose(): void {\n    this.closed.emit();\n  }\n\n  onConfirm(): void {\n    this.confirmed.emit();\n  }\n\n  onCancel(): void {\n    this.cancelled.emit();\n  }\n\n  onActionClick(action: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }): void {\n    this.actionClick.emit(action);\n  }\n\n  onBackdropClick(): void {\n    this.backdropClick.emit();\n  }\n\n  onEscapeKey(): void {\n    this.escapeKey.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-modal-template__content {\n  padding: var(--os-spacing-md);\n  background: var(--os-color-background);\n  color: var(--os-color-text);\n  border-radius: var(--os-border-radius);\n  overflow: hidden;\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--loading {\n    pointer-events: none;\n  }\n\n  &--small {\n    padding: var(--os-spacing-sm);\n  }\n\n  &--medium {\n    padding: var(--os-spacing-md);\n  }\n\n  &--large {\n    padding: var(--os-spacing-lg);\n  }\n\n  &--compact {\n    padding: var(--os-spacing-sm);\n  }\n\n  &--detailed {\n    padding: var(--os-spacing-lg);\n  }\n}\n\n.os-modal-template__actions {\n  display: flex;\n  gap: var(--os-spacing-sm);\n  justify-content: flex-end;\n  align-items: center;\n  padding: var(--os-spacing-md);\n  background: var(--os-color-background-secondary);\n  border-top: 1px solid var(--os-color-border);\n\n  &--small {\n    padding: var(--os-spacing-sm);\n    gap: var(--os-spacing-xs);\n  }\n\n  &--medium {\n    padding: var(--os-spacing-md);\n    gap: var(--os-spacing-sm);\n  }\n\n  &--large {\n    padding: var(--os-spacing-lg);\n    gap: var(--os-spacing-md);\n  }\n\n  &--compact {\n    padding: var(--os-spacing-sm);\n    gap: var(--os-spacing-xs);\n  }\n\n  &--detailed {\n    padding: var(--os-spacing-lg);\n    gap: var(--os-spacing-md);\n  }\n}\n\n@media (max-width: 768px) {\n  .os-modal-template__actions {\n    flex-direction: column;\n    gap: var(--os-spacing-sm);\n\n    &--small {\n      gap: var(--os-spacing-xs);\n    }\n\n    &--medium {\n      gap: var(--os-spacing-sm);\n    }\n\n    &--large {\n      gap: var(--os-spacing-md);\n    }\n  }\n}\n",
                    "styleUrl": "./os-modal-template.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsMoneyDisplayComponent",
            "id": "component-OsMoneyDisplayComponent-c7b06f6ed35407d39d546e9d37ea096e06d1460b7482c0cc2d3bcf7807895104340b112350a9e600e376a2040d2f47a9db8ced9266ccc5c3880da19189f745e7",
            "file": "src/app/shared/ui-components/molecules/os-money-display/os-money-display.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-money-display",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  class=\"os-money-display\"\n  [class]=\"displayClasses()\"\n  [attr.data-variant]=\"effectiveVariant()\"\n  [attr.data-size]=\"effectiveSize()\"\n  [attr.role]=\"role()\"\n  [attr.aria-label]=\"ariaLabel()\"\n  [attr.aria-describedby]=\"ariaDescribedBy()\"\n>\n  <span class=\"os-money-display__currency\" [attr.aria-hidden]=\"!showCurrency()\">{{\n    currencySymbol()\n  }}</span>\n  <span class=\"os-money-display__value\">{{ formattedValue() }}</span>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "required": false
                },
                {
                    "name": "autoVariant",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "required": false
                },
                {
                    "name": "currency",
                    "defaultValue": "'BRL'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "required": false
                },
                {
                    "name": "highlightLarge",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "required": false
                },
                {
                    "name": "largeThreshold",
                    "defaultValue": "10000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "required": false
                },
                {
                    "name": "locale",
                    "defaultValue": "'pt-BR'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "required": false
                },
                {
                    "name": "precision",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "required": false
                },
                {
                    "name": "showCurrency",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsMoneyDisplaySize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsMoneyDisplayVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currencySymbol",
                    "defaultValue": "computed(() => {\n    if (!this.showCurrency()) return '';\n\n    const currencyMap: Record<string, string> = {\n      BRL: 'R$',\n      USD: '$',\n      EUR: '€',\n      GBP: '£',\n    };\n\n    return currencyMap[this.currency()] || this.currency();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "displayClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-money-display'];\n    const effectiveVariant = this.effectiveVariant();\n    const effectiveSize = this.effectiveSize();\n\n    if (effectiveVariant !== 'default') {\n      classes.push(`os-money-display--${effectiveVariant}`);\n    }\n\n    if (effectiveSize !== 'md') {\n      classes.push(`os-money-display--${effectiveSize}`);\n    }\n\n    if (this.isLargeValue()) {\n      classes.push('os-money-display--large-value');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "effectiveSize",
                    "defaultValue": "computed(() => {\n    if (this.isLargeValue()) return 'xl';\n\n    // Map legacy sizes to new sizes for backward compatibility\n    const sizeMapping: Record<string, string> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n\n    const currentSize = this.size();\n    return sizeMapping[currentSize] || currentSize;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "effectiveVariant",
                    "defaultValue": "computed(() => {\n    if (!this.autoVariant()) return this.variant();\n\n    const value = this.value();\n    if (value > 0) return 'positive';\n    if (value < 0) return 'negative';\n    return 'neutral';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "formattedValue",
                    "defaultValue": "computed(() => {\n    const value = this.value();\n    const locale = this.locale();\n    const precision = this.precision();\n\n    try {\n      return new Intl.NumberFormat(locale, {\n        minimumFractionDigits: precision,\n        maximumFractionDigits: precision,\n      }).format(value);\n    } catch {\n      return value.toFixed(precision);\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "isLargeValue",
                    "defaultValue": "computed(() => {\n    return this.highlightLarge() && Math.abs(this.value()) >= this.largeThreshold();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport type OsMoneyDisplayVariant =\n  | 'default'\n  | 'positive'\n  | 'negative'\n  | 'neutral'\n  | 'success'\n  | 'warning'\n  | 'error'\n  | 'info';\nexport type OsMoneyDisplaySize = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'small' | 'medium' | 'large';\n\n@Component({\n  selector: 'os-money-display',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div\n      class=\"os-money-display\"\n      [class]=\"displayClasses()\"\n      [attr.data-variant]=\"effectiveVariant()\"\n      [attr.data-size]=\"effectiveSize()\"\n      [attr.role]=\"role()\"\n      [attr.aria-label]=\"ariaLabel()\"\n      [attr.aria-describedby]=\"ariaDescribedBy()\"\n    >\n      <span class=\"os-money-display__currency\" [attr.aria-hidden]=\"!showCurrency()\">{{\n        currencySymbol()\n      }}</span>\n      <span class=\"os-money-display__value\">{{ formattedValue() }}</span>\n    </div>\n  `,\n  styleUrl: './os-money-display.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-money-display-host',\n  },\n})\nexport class OsMoneyDisplayComponent {\n  value = input<number>(0);\n  currency = input<string>('BRL');\n  locale = input<string>('pt-BR');\n  variant = input<OsMoneyDisplayVariant>('default');\n  size = input<OsMoneyDisplaySize>('md');\n  showCurrency = input<boolean>(true);\n  precision = input<number>(2);\n  autoVariant = input<boolean>(true);\n  highlightLarge = input<boolean>(true);\n  largeThreshold = input<number>(10000);\n  role = input<string>('text');\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n\n  currencySymbol = computed(() => {\n    if (!this.showCurrency()) return '';\n\n    const currencyMap: Record<string, string> = {\n      BRL: 'R$',\n      USD: '$',\n      EUR: '€',\n      GBP: '£',\n    };\n\n    return currencyMap[this.currency()] || this.currency();\n  });\n\n  formattedValue = computed(() => {\n    const value = this.value();\n    const locale = this.locale();\n    const precision = this.precision();\n\n    try {\n      return new Intl.NumberFormat(locale, {\n        minimumFractionDigits: precision,\n        maximumFractionDigits: precision,\n      }).format(value);\n    } catch {\n      return value.toFixed(precision);\n    }\n  });\n\n  isLargeValue = computed(() => {\n    return this.highlightLarge() && Math.abs(this.value()) >= this.largeThreshold();\n  });\n\n  effectiveVariant = computed(() => {\n    if (!this.autoVariant()) return this.variant();\n\n    const value = this.value();\n    if (value > 0) return 'positive';\n    if (value < 0) return 'negative';\n    return 'neutral';\n  });\n\n  effectiveSize = computed(() => {\n    if (this.isLargeValue()) return 'xl';\n\n    // Map legacy sizes to new sizes for backward compatibility\n    const sizeMapping: Record<string, string> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n\n    const currentSize = this.size();\n    return sizeMapping[currentSize] || currentSize;\n  });\n\n  displayClasses = computed(() => {\n    const classes = ['os-money-display'];\n    const effectiveVariant = this.effectiveVariant();\n    const effectiveSize = this.effectiveSize();\n\n    if (effectiveVariant !== 'default') {\n      classes.push(`os-money-display--${effectiveVariant}`);\n    }\n\n    if (effectiveSize !== 'md') {\n      classes.push(`os-money-display--${effectiveSize}`);\n    }\n\n    if (this.isLargeValue()) {\n      classes.push('os-money-display--large-value');\n    }\n\n    return classes.join(' ');\n  });\n}\n",
            "styleUrl": "./os-money-display.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsMoneyInputComponent",
            "id": "component-OsMoneyInputComponent-34c15a1c0e1c6e3b40d2383467b996fd9599f196c92b45bf2b84615159d935ae3e1c33a223093e647ea07a4df9f037f9de21526c3a8fb8baf6380014c0c4e605",
            "file": "src/app/shared/ui-components/atoms/os-money-input/os-money-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": ")"
                }
            ],
            "selector": "os-money-input",
            "styleUrls": [
                "./os-money-input.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"containerClass()\">\n  <mat-form-field [appearance]=\"appearance()\" [class]=\"formFieldClass()\">\n    @if (label()) {\n    <mat-label>{{ label() }}</mat-label>\n    }\n\n    <mat-icon matPrefix class=\"os-money-input__currency-icon\">attach_money</mat-icon>\n\n    <input\n      matInput\n      [id]=\"inputId\"\n      type=\"text\"\n      [placeholder]=\"placeholder()\"\n      [disabled]=\"disabled()\"\n      [readonly]=\"readonly()\"\n      [required]=\"required()\"\n      [value]=\"displayValue()\"\n      [class]=\"inputClass()\"\n      (input)=\"handleInput($event)\"\n      (blur)=\"handleBlur($event)\"\n      (focus)=\"handleFocus($event)\"\n      [attr.aria-describedby]=\"helperText() ? inputId + '-helper' : null\"\n      [attr.aria-invalid]=\"hasError()\"\n      [attr.aria-label]=\"ariaLabel()\"\n      [attr.aria-valuenow]=\"value()\"\n      [attr.aria-valuemin]=\"0\"\n      [attr.aria-valuemax]=\"999999999.99\"\n    />\n\n    @if (helperText() || hasError()) {\n    <mat-hint [class]=\"helperClass()\">\n      {{ errorMessage() || helperText() }}\n    </mat-hint>\n    }\n  </mat-form-field>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "allowNegative",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "required": false
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "helperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "required": false
                },
                {
                    "name": "isFormatting",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'0,00'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsMoneyInputSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "required": false
                },
                {
                    "name": "focusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "required": false
                },
                {
                    "name": "isFormatting",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "required": false
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "_onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "appearance",
                    "defaultValue": "computed((): MatFormFieldAppearance => 'outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 147,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "computed(() => {\n    const label = this.label();\n    const value = this.value();\n    if (label && value !== 0) {\n      return `${label}: ${this.formatCurrency(value)}`;\n    }\n    return label || 'Valor monetário';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 174
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-money-input-container',\n      `os-money-input-container--${this.size()}`,\n      this.hasError() ? 'os-money-input-container--error' : '',\n      this.disabled() ? 'os-money-input-container--disabled' : '',\n      this.isFormatting() ? 'os-money-input-container--formatting' : '',\n      this.isLargeValue() ? 'os-money-input-container--success' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "displayValue",
                    "defaultValue": "computed(() => {\n    const value = this.value();\n    if (value === 0 && !this.placeholder()) return '';\n    return this.formatCurrency(value);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 160
                },
                {
                    "name": "formFieldClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-money-input__form-field',\n      `os-money-input__form-field--${this.size()}`,\n      this.hasError() ? 'os-money-input__form-field--error' : '',\n      this.disabled() ? 'os-money-input__form-field--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 149,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "hasError",
                    "defaultValue": "computed(() => {\n    return !!this.errorMessage();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 142
                },
                {
                    "name": "helperClass",
                    "defaultValue": "computed(() => {\n    return ['os-money-input__helper', this.hasError() ? 'os-money-input__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136
                },
                {
                    "name": "inputClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-money-input',\n      `os-money-input--${this.size()}`,\n      this.hasError() ? 'os-money-input--error' : '',\n      this.disabled() ? 'os-money-input--disabled' : '',\n      this.readonly() ? 'os-money-input--readonly' : '',\n      this.isLargeValue() ? 'os-money-input--large-value' : '',\n      this.isAnimating() ? 'os-money-input--animating' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122
                },
                {
                    "name": "inputId",
                    "defaultValue": "`os-money-input-${Math.random().toString(36).substr(2, 9)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "inputWrapperClass",
                    "defaultValue": "computed(() => {\n    return ['os-money-input__wrapper', this.disabled() ? 'os-money-input__wrapper--disabled' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "isAnimating",
                    "defaultValue": "computed(() => {\n    return this.isFormatting();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 170
                },
                {
                    "name": "isLargeValue",
                    "defaultValue": "computed(() => {\n    return Math.abs(this.value()) >= 10000;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 166
                },
                {
                    "name": "labelClass",
                    "defaultValue": "computed(() => {\n    return ['os-money-input__label', this.required() ? 'os-money-input__label--required' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 110
                }
            ],
            "methodsClass": [
                {
                    "name": "applyInputMask",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 234,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatCurrency",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 270,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 275,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 245,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "parseCurrency",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "number",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 286,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "number",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 290,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 294,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 279,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  model,\n  ChangeDetectionStrategy,\n  forwardRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule, MatFormFieldAppearance } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\n\nexport type OsMoneyInputSize = 'small' | 'medium' | 'large';\n\n@Component({\n  selector: 'os-money-input',\n  standalone: true,\n  imports: [CommonModule, MatInputModule, MatFormFieldModule, MatIconModule],\n  template: `\n    <div [class]=\"containerClass()\">\n      <mat-form-field [appearance]=\"appearance()\" [class]=\"formFieldClass()\">\n        @if (label()) {\n        <mat-label>{{ label() }}</mat-label>\n        }\n\n        <mat-icon matPrefix class=\"os-money-input__currency-icon\">attach_money</mat-icon>\n\n        <input\n          matInput\n          [id]=\"inputId\"\n          type=\"text\"\n          [placeholder]=\"placeholder()\"\n          [disabled]=\"disabled()\"\n          [readonly]=\"readonly()\"\n          [required]=\"required()\"\n          [value]=\"displayValue()\"\n          [class]=\"inputClass()\"\n          (input)=\"handleInput($event)\"\n          (blur)=\"handleBlur($event)\"\n          (focus)=\"handleFocus($event)\"\n          [attr.aria-describedby]=\"helperText() ? inputId + '-helper' : null\"\n          [attr.aria-invalid]=\"hasError()\"\n          [attr.aria-label]=\"ariaLabel()\"\n          [attr.aria-valuenow]=\"value()\"\n          [attr.aria-valuemin]=\"0\"\n          [attr.aria-valuemax]=\"999999999.99\"\n        />\n\n        @if (helperText() || hasError()) {\n        <mat-hint [class]=\"helperClass()\">\n          {{ errorMessage() || helperText() }}\n        </mat-hint>\n        }\n      </mat-form-field>\n    </div>\n  `,\n  styleUrls: ['./os-money-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsMoneyInputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OsMoneyInputComponent implements ControlValueAccessor {\n  size = input<OsMoneyInputSize>('medium');\n  label = input<string>('');\n  placeholder = input<string>('0,00');\n  helperText = input<string>('');\n  errorMessage = input<string>('');\n  disabled = model(false);\n  readonly = input(false);\n  required = input(false);\n  value = model<number>(0);\n  allowNegative = input<boolean>(false);\n  isFormatting = model<boolean>(false);\n\n  valueChange = output<number>();\n  blurEvent = output<FocusEvent>();\n  focusEvent = output<FocusEvent>();\n\n  private _onChange = (value: number) => {\n    // This will be set by registerOnChange\n    console.debug('onChange called with:', value);\n  };\n  private _onTouched = () => {\n    // This will be set by registerOnTouched\n  };\n\n  inputId = `os-money-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  containerClass = computed(() => {\n    return [\n      'os-money-input-container',\n      `os-money-input-container--${this.size()}`,\n      this.hasError() ? 'os-money-input-container--error' : '',\n      this.disabled() ? 'os-money-input-container--disabled' : '',\n      this.isFormatting() ? 'os-money-input-container--formatting' : '',\n      this.isLargeValue() ? 'os-money-input-container--success' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  labelClass = computed(() => {\n    return ['os-money-input__label', this.required() ? 'os-money-input__label--required' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  inputWrapperClass = computed(() => {\n    return ['os-money-input__wrapper', this.disabled() ? 'os-money-input__wrapper--disabled' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  inputClass = computed(() => {\n    return [\n      'os-money-input',\n      `os-money-input--${this.size()}`,\n      this.hasError() ? 'os-money-input--error' : '',\n      this.disabled() ? 'os-money-input--disabled' : '',\n      this.readonly() ? 'os-money-input--readonly' : '',\n      this.isLargeValue() ? 'os-money-input--large-value' : '',\n      this.isAnimating() ? 'os-money-input--animating' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  helperClass = computed(() => {\n    return ['os-money-input__helper', this.hasError() ? 'os-money-input__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  hasError = computed(() => {\n    return !!this.errorMessage();\n  });\n\n  // Mapeamento interno para Material\n  protected appearance = computed((): MatFormFieldAppearance => 'outline');\n\n  protected formFieldClass = computed(() => {\n    return [\n      'os-money-input__form-field',\n      `os-money-input__form-field--${this.size()}`,\n      this.hasError() ? 'os-money-input__form-field--error' : '',\n      this.disabled() ? 'os-money-input__form-field--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  displayValue = computed(() => {\n    const value = this.value();\n    if (value === 0 && !this.placeholder()) return '';\n    return this.formatCurrency(value);\n  });\n\n  isLargeValue = computed(() => {\n    return Math.abs(this.value()) >= 10000;\n  });\n\n  isAnimating = computed(() => {\n    return this.isFormatting();\n  });\n\n  ariaLabel = computed(() => {\n    const label = this.label();\n    const value = this.value();\n    if (label && value !== 0) {\n      return `${label}: ${this.formatCurrency(value)}`;\n    }\n    return label || 'Valor monetário';\n  });\n\n  private formatCurrency(value: number): string {\n    return new Intl.NumberFormat('pt-BR', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(value);\n  }\n\n  private parseCurrency(value: string): number {\n    // Handle negative values first\n    const isNegative = value.includes('-');\n\n    // Remove all non-digit characters except decimal separators\n    const cleanValue = value.replace(/[^\\d,.-]/g, '');\n    if (!cleanValue) return 0;\n\n    // Simple approach: if comma exists, treat it as decimal separator\n    if (cleanValue.includes(',')) {\n      const normalizedValue = cleanValue.replace(',', '.');\n      const numericValue = parseFloat(normalizedValue);\n\n      if (isNaN(numericValue)) return 0;\n\n      // Apply negative sign if needed\n      const finalValue = isNegative ? -Math.abs(numericValue) : Math.abs(numericValue);\n\n      // Validate negative values\n      if (finalValue < 0 && !this.allowNegative()) {\n        return 0;\n      }\n\n      return finalValue;\n    }\n\n    // For values without comma, treat as cents (quick entry)\n    const numericValue = parseFloat(cleanValue);\n    if (isNaN(numericValue)) return 0;\n\n    // Convert cents to currency (divide by 100)\n    const currencyValue = numericValue / 100;\n\n    // Apply negative sign if needed\n    const finalValue = isNegative ? -Math.abs(currencyValue) : Math.abs(currencyValue);\n\n    // Validate negative values\n    if (finalValue < 0 && !this.allowNegative()) {\n      return 0;\n    }\n\n    return finalValue;\n  }\n\n  private applyInputMask(value: string): string {\n    // Remove all non-digit characters\n    const digits = value.replace(/\\D/g, '');\n\n    if (!digits) return '';\n\n    // Convert to number and format\n    const numericValue = parseFloat(digits) / 100;\n    return this.formatCurrency(numericValue);\n  }\n\n  handleInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const rawValue = target.value;\n\n    // Set formatting state\n    this.isFormatting.set(true);\n\n    // Parse the numeric value first\n    const numericValue = this.parseCurrency(rawValue);\n\n    // Apply input mask for real-time formatting only if needed\n    const maskedValue = this.applyInputMask(rawValue);\n    target.value = maskedValue;\n\n    // Update value\n    this.value.set(numericValue);\n    this._onChange(numericValue);\n    this.valueChange.emit(numericValue);\n\n    // Clear formatting state after a short delay\n    setTimeout(() => {\n      this.isFormatting.set(false);\n    }, 100);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this._onTouched();\n    this.blurEvent.emit(event);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.focusEvent.emit(event);\n  }\n\n  writeValue(value: number): void {\n    // Update the model signal when FormControl value changes programmatically\n    if (value !== this.value()) {\n      this.value.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: number) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    // Update the disabled state when called by Angular Forms\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens' as tokens;\n\n.os-money-input-container {\n  width: 100%;\n\n  &--formatting {\n    .os-money-input {\n      opacity: 0.8;\n      transition: opacity 0.2s ease;\n    }\n  }\n\n  &--success {\n    .os-money-input {\n      color: var(--os-color-success-600);\n      font-weight: var(--os-font-weight-semibold);\n    }\n  }\n}\n\n.os-money-input__form-field {\n  width: 100%;\n\n  &--small {\n    .mat-mdc-form-field {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  &--large {\n    .mat-mdc-form-field {\n      font-size: var(--os-font-size-lg);\n    }\n  }\n\n  &--error {\n    .mat-mdc-form-field {\n      .mat-mdc-form-field-focus-overlay {\n        background-color: var(--os-color-error-100);\n      }\n    }\n  }\n\n  &--disabled {\n    .mat-mdc-form-field {\n      opacity: 0.6;\n    }\n  }\n}\n\n.os-money-input__currency-icon {\n  color: var(--os-color-text-secondary);\n  font-size: 18px;\n}\n\n.os-money-input {\n  font-family: var(--os-font-family-primary);\n  color: var(--os-color-text-primary);\n  min-height: 44px; // Touch target requirement\n  transition: all 0.2s ease;\n\n  &--small {\n    font-size: var(--os-font-size-sm);\n    min-height: 40px;\n  }\n\n  &--medium {\n    font-size: var(--os-font-size-base);\n    min-height: 44px;\n  }\n\n  &--large {\n    font-size: var(--os-font-size-lg);\n    min-height: 48px;\n  }\n\n  &--large-value {\n    font-size: var(--os-font-size-lg);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-primary-600);\n  }\n\n  &--animating {\n    transform: scale(1.02);\n    transition: transform 0.1s ease;\n  }\n\n  &:focus {\n    outline: 2px solid var(--os-color-primary-500);\n    outline-offset: 2px;\n  }\n}\n\n.os-money-input__helper {\n  font-size: var(--os-font-size-xs);\n  color: var(--os-color-text-secondary);\n\n  &--error {\n    color: var(--os-color-error-600);\n  }\n}\n\n// Mobile-first responsive design\n@media (max-width: 576px) {\n  .os-money-input {\n    min-height: 44px;\n    font-size: 16px; // Prevent zoom on iOS\n  }\n}\n",
                    "styleUrl": "./os-money-input.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "OsNavigationComponent",
            "id": "component-OsNavigationComponent-c786b2d6eb8b986227047b79a096604d38c7e44dce14e9f37ada93c50830fbed85b10af8c5de32fc65044199f46373ac5eafab4f300ca2cf3d6d38bfbbcad873",
            "file": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-navigation",
            "styleUrls": [
                "./os-navigation.component.scss"
            ],
            "styles": [],
            "template": "<nav [class]=\"navigationClasses()\" [attr.aria-label]=\"ariaLabel\" role=\"navigation\">\n  <!-- Navigation Items -->\n  <ul [class]=\"listClasses()\" role=\"list\">\n    @for (item of items(); track item.id) {\n    <li role=\"none\">\n      <os-navigation-item\n        [label]=\"item.label\"\n        [icon]=\"item.icon || ''\"\n        [routerLink]=\"item.route\"\n        [variant]=\"itemVariant()\"\n        [size]=\"itemSize()\"\n        [active]=\"isActiveItem(item)\"\n        [disabled]=\"item.disabled || false\"\n        [badge]=\"item.badge ? +item.badge : null\"\n        [ariaLabel]=\"item.label\"\n        (itemClick)=\"onItemClick(item)\"\n      >\n        {{ item.label }}\n      </os-navigation-item>\n    </li>\n    }\n  </ul>\n\n  <!-- Custom Content -->\n  @if (showCustomContent()) {\n  <div class=\"os-navigation__custom\">\n    <ng-content select=\"[slot=custom]\"></ng-content>\n  </div>\n  }\n</nav>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeItemId",
                    "defaultValue": "signal<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "'Navegação principal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "items",
                    "defaultValue": "signal<NavigationItem[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 74,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "orientation",
                    "defaultValue": "signal<NavigationOrientation>('horizontal')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "showCustomContent",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "signal<NavigationSize>('medium')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "signal<NavigationVariant>('default')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "itemClick",
                    "defaultValue": "new EventEmitter<NavigationItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "EventEmitter"
                },
                {
                    "name": "navigate",
                    "defaultValue": "new EventEmitter<{ item: NavigationItem; route?: string; href?: string }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "itemSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<NavigationSize, OsNavigationItemSize> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "itemVariant",
                    "defaultValue": "computed(() => {\n    const variantMap: Record<NavigationVariant, OsNavigationItemVariant> = {\n      default: 'default',\n      minimal: 'secondary',\n      sidebar: 'primary',\n      tabs: 'accent',\n    };\n    return variantMap[this.variant()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "listClasses",
                    "defaultValue": "computed(() => {\n    const base = 'os-navigation__list';\n    const orientation = `os-navigation__list--${this.orientation()}`;\n    const variant = `os-navigation__list--${this.variant()}`;\n\n    return `${base} ${orientation} ${variant}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "navigationClasses",
                    "defaultValue": "computed(() => {\n    const base = 'os-navigation';\n    const variant = `os-navigation--${this.variant()}`;\n    const size = `os-navigation--${this.size()}`;\n    const orientation = `os-navigation--${this.orientation()}`;\n\n    return `${base} ${variant} ${size} ${orientation}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87
                }
            ],
            "methodsClass": [
                {
                    "name": "isActiveItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "NavigationItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "NavigationItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onItemClick",
                    "args": [
                        {
                            "name": "item",
                            "type": "NavigationItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "NavigationItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNavigate",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "OsNavigationItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  signal,\n  computed,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  OsNavigationItemComponent,\n  OsNavigationItemVariant,\n  OsNavigationItemSize,\n} from '../../molecules/os-navigation-item/os-navigation-item.component';\n\nexport interface NavigationItem {\n  id: string;\n  label: string;\n  icon?: string;\n  route?: string;\n  href?: string;\n  badge?: string | number;\n  disabled?: boolean;\n  children?: NavigationItem[];\n}\n\nexport type NavigationVariant = 'default' | 'minimal' | 'sidebar' | 'tabs';\nexport type NavigationSize = 'small' | 'medium' | 'large';\nexport type NavigationOrientation = 'horizontal' | 'vertical';\n\n@Component({\n  selector: 'os-navigation',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsNavigationItemComponent],\n  template: `\n    <nav [class]=\"navigationClasses()\" [attr.aria-label]=\"ariaLabel\" role=\"navigation\">\n      <!-- Navigation Items -->\n      <ul [class]=\"listClasses()\" role=\"list\">\n        @for (item of items(); track item.id) {\n        <li role=\"none\">\n          <os-navigation-item\n            [label]=\"item.label\"\n            [icon]=\"item.icon || ''\"\n            [routerLink]=\"item.route\"\n            [variant]=\"itemVariant()\"\n            [size]=\"itemSize()\"\n            [active]=\"isActiveItem(item)\"\n            [disabled]=\"item.disabled || false\"\n            [badge]=\"item.badge ? +item.badge : null\"\n            [ariaLabel]=\"item.label\"\n            (itemClick)=\"onItemClick(item)\"\n          >\n            {{ item.label }}\n          </os-navigation-item>\n        </li>\n        }\n      </ul>\n\n      <!-- Custom Content -->\n      @if (showCustomContent()) {\n      <div class=\"os-navigation__custom\">\n        <ng-content select=\"[slot=custom]\"></ng-content>\n      </div>\n      }\n    </nav>\n  `,\n  styleUrls: ['./os-navigation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsNavigationComponent {\n  // Inputs\n  @Input({ required: true }) items = signal<NavigationItem[]>([]);\n  @Input() variant = signal<NavigationVariant>('default');\n  @Input() size = signal<NavigationSize>('medium');\n  @Input() orientation = signal<NavigationOrientation>('horizontal');\n  @Input() activeItemId = signal<string | null>(null);\n  @Input() ariaLabel = 'Navegação principal';\n  @Input() showCustomContent = signal(false);\n\n  // Outputs\n  @Output() itemClick = new EventEmitter<NavigationItem>();\n  @Output() navigate = new EventEmitter<{ item: NavigationItem; route?: string; href?: string }>();\n\n  // Computed properties\n  navigationClasses = computed(() => {\n    const base = 'os-navigation';\n    const variant = `os-navigation--${this.variant()}`;\n    const size = `os-navigation--${this.size()}`;\n    const orientation = `os-navigation--${this.orientation()}`;\n\n    return `${base} ${variant} ${size} ${orientation}`;\n  });\n\n  listClasses = computed(() => {\n    const base = 'os-navigation__list';\n    const orientation = `os-navigation__list--${this.orientation()}`;\n    const variant = `os-navigation__list--${this.variant()}`;\n\n    return `${base} ${orientation} ${variant}`;\n  });\n\n  itemVariant = computed(() => {\n    const variantMap: Record<NavigationVariant, OsNavigationItemVariant> = {\n      default: 'default',\n      minimal: 'secondary',\n      sidebar: 'primary',\n      tabs: 'accent',\n    };\n    return variantMap[this.variant()];\n  });\n\n  itemSize = computed(() => {\n    const sizeMap: Record<NavigationSize, OsNavigationItemSize> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  // Methods\n  isActiveItem(item: NavigationItem): boolean {\n    const activeId = this.activeItemId();\n    return activeId === item.id;\n  }\n\n  onItemClick(item: NavigationItem): void {\n    if (item.disabled) return;\n\n    this.itemClick.emit(item);\n\n    // Auto-navigate if route or href is provided\n    if (item.route || item.href) {\n      this.navigate.emit({ item, route: item.route, href: item.href });\n    }\n  }\n\n  onNavigate(event: { item: NavigationItem; route?: string; href?: string }): void {\n    this.navigate.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/variables' as *;\n\n.os-navigation {\n  display: flex;\n  width: 100%;\n\n  // Base styles\n  &__list {\n    display: flex;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n\n    // Horizontal orientation\n    &--horizontal {\n      flex-direction: row;\n      align-items: center;\n      gap: $spacing-xs;\n    }\n\n    // Vertical orientation\n    &--vertical {\n      flex-direction: column;\n      align-items: stretch;\n      gap: $spacing-xs;\n    }\n  }\n\n  // Custom content\n  &__custom {\n    display: flex;\n    align-items: center;\n    margin-left: auto;\n  }\n}\n\n// Variants\n.os-navigation {\n  // Default variant\n  &--default {\n    .os-navigation__list {\n      &--horizontal {\n        gap: $spacing-sm;\n      }\n\n      &--vertical {\n        gap: $spacing-sm;\n      }\n    }\n  }\n\n  // Minimal variant\n  &--minimal {\n    .os-navigation__list {\n      &--horizontal {\n        gap: $spacing-xs;\n      }\n\n      &--vertical {\n        gap: $spacing-xs;\n      }\n    }\n  }\n\n  // Sidebar variant\n  &--sidebar {\n    flex-direction: column;\n\n    .os-navigation__list {\n      &--vertical {\n        gap: $spacing-xs;\n      }\n    }\n  }\n\n  // Tabs variant\n  &--tabs {\n    border-bottom: 1px solid $color-border;\n\n    .os-navigation__list {\n      &--horizontal {\n        gap: 0;\n      }\n    }\n  }\n}\n\n// Sizes\n.os-navigation {\n  // Small size\n  &--small {\n    .os-navigation__list {\n      &--horizontal {\n        gap: $spacing-xs;\n      }\n\n      &--vertical {\n        gap: $spacing-xs;\n      }\n    }\n  }\n\n  // Medium size (default)\n  &--medium {\n    .os-navigation__list {\n      &--horizontal {\n        gap: $spacing-sm;\n      }\n\n      &--vertical {\n        gap: $spacing-sm;\n      }\n    }\n  }\n\n  // Large size\n  &--large {\n    .os-navigation__list {\n      &--horizontal {\n        gap: $spacing-md;\n      }\n\n      &--vertical {\n        gap: $spacing-md;\n      }\n    }\n  }\n}\n\n// Responsive design\n@media (max-width: $breakpoint-tablet) {\n  .os-navigation {\n    &--horizontal {\n      .os-navigation__list {\n        flex-wrap: wrap;\n        gap: $spacing-xs;\n      }\n    }\n  }\n}\n\n@media (max-width: $breakpoint-mobile) {\n  .os-navigation {\n    &--horizontal {\n      .os-navigation__list {\n        flex-direction: column;\n        align-items: stretch;\n        gap: $spacing-xs;\n      }\n    }\n\n    &--tabs {\n      .os-navigation__list {\n        overflow-x: auto;\n        flex-wrap: nowrap;\n        gap: 0;\n      }\n    }\n  }\n}\n\n// Accessibility\n.os-navigation {\n  // Focus management\n  &:focus-within {\n    outline: 2px solid $color-primary;\n    outline-offset: 2px;\n  }\n\n  // High contrast mode\n  @media (prefers-contrast: high) {\n    &--tabs {\n      border-bottom-color: $color-text-primary;\n    }\n  }\n\n  // Reduced motion\n  @media (prefers-reduced-motion: reduce) {\n    * {\n      transition: none !important;\n      animation: none !important;\n    }\n  }\n}\n\n// Dark theme support\n@media (prefers-color-scheme: dark) {\n  .os-navigation {\n    &--tabs {\n      border-bottom-color: $color-border;\n    }\n  }\n}\n",
                    "styleUrl": "./os-navigation.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsNavigationItemComponent",
            "id": "component-OsNavigationItemComponent-93463d531d3bb473d779b75063e2ae65aecdc960c8382e3b536af2b2fb6a772547f9882d1a812d379e275dd6b46f83ad8273bbe5140e9f34a1dacab49d4972fb",
            "file": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-navigation-item",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  [class]=\"containerClass()\"\n  [attr.data-variant]=\"variant()\"\n  [attr.data-size]=\"size()\"\n  [attr.role]=\"role()\"\n  [attr.aria-describedby]=\"ariaDescribedBy()\"\n>\n  @if (routerLink()) {\n  <a\n    [routerLink]=\"routerLink()!\"\n    [queryParams]=\"queryParams()\"\n    [fragment]=\"fragment()\"\n    [class]=\"linkClass()\"\n    [attr.aria-current]=\"isActive() ? 'page' : null\"\n    [attr.aria-label]=\"effectiveAriaLabel()\"\n    [attr.aria-expanded]=\"hasSubNav() ? isExpanded() : null\"\n    [attr.tabindex]=\"disabled() ? -1 : 0\"\n    (click)=\"handleClick($event)\"\n    (keydown.enter)=\"handleKeyDown($any($event))\"\n    (keydown.space)=\"handleKeyDown($any($event))\"\n  >\n    @if (icon()) {\n    <os-icon\n      [name]=\"icon()\"\n      [size]=\"getIconSize()\"\n      [variant]=\"getIconVariant()\"\n      [attr.aria-hidden]=\"true\"\n    />\n    }\n    <span [class]=\"textClass()\">\n      <ng-content />\n    </span>\n    @if (hasSubNav()) {\n    <os-icon\n      [name]=\"isExpanded() ? 'expand_less' : 'expand_more'\"\n      [size]=\"'sm'\"\n      [attr.aria-hidden]=\"true\"\n      class=\"os-navigation-item__expand-icon\"\n    />\n    } @if (badge() && badge()! > 0) {\n    <span [class]=\"badgeClass()\" [attr.aria-label]=\"getBadgeAriaLabel()\" role=\"status\">\n      {{ badge()! > 99 ? '99+' : badge()! }}\n    </span>\n    }\n  </a>\n  } @else {\n  <button\n    [class]=\"buttonClass()\"\n    [disabled]=\"disabled()\"\n    [attr.aria-label]=\"effectiveAriaLabel()\"\n    [attr.aria-current]=\"isActive() ? 'page' : null\"\n    [attr.aria-expanded]=\"hasSubNav() ? isExpanded() : null\"\n    [attr.type]=\"'button'\"\n    (click)=\"handleClick($event)\"\n    (keydown.enter)=\"handleKeyDown($any($event))\"\n    (keydown.space)=\"handleKeyDown($any($event))\"\n  >\n    @if (icon()) {\n    <os-icon\n      [name]=\"icon()\"\n      [size]=\"getIconSize()\"\n      [variant]=\"getIconVariant()\"\n      [attr.aria-hidden]=\"true\"\n    />\n    }\n    <span [class]=\"textClass()\">\n      <ng-content />\n    </span>\n    @if (hasSubNav()) {\n    <os-icon\n      [name]=\"isExpanded() ? 'expand_less' : 'expand_more'\"\n      [size]=\"'sm'\"\n      [attr.aria-hidden]=\"true\"\n      class=\"os-navigation-item__expand-icon\"\n    />\n    } @if (badge() && badge()! > 0) {\n    <span [class]=\"badgeClass()\" [attr.aria-label]=\"getBadgeAriaLabel()\" role=\"status\">\n      {{ badge()! > 99 ? '99+' : badge()! }}\n    </span>\n    }\n  </button>\n  } @if (hasSubNav() && isExpanded()) {\n  <div class=\"os-navigation-item__subnav\" role=\"group\">\n    <ng-content select=\"[osSubNav]\" />\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 120,
                    "required": false
                },
                {
                    "name": "badge",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 119,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "required": false
                },
                {
                    "name": "fragment",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "required": false
                },
                {
                    "name": "hasSubNav",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "required": false
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "required": false
                },
                {
                    "name": "queryParams",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, string | number | boolean> | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'navigation'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsNavigationItemRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "required": false
                },
                {
                    "name": "routerLink",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | string[] | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsNavigationItemSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsNavigationItemVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "itemClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MouseEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "required": false
                },
                {
                    "name": "toggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "badgeClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-navigation-item__badge'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-navigation-item__badge--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 214
                },
                {
                    "name": "buttonClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-navigation-item__button'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-navigation-item__button--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-navigation-item__button--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 190
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-navigation-item'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-navigation-item--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-navigation-item--${this.size()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-navigation-item--disabled');\n    }\n\n    if (this.isActive()) {\n      classes.push('os-navigation-item--active');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 154
                },
                {
                    "name": "effectiveAriaLabel",
                    "defaultValue": "computed(() => {\n    if (this.ariaLabel()) {\n      return this.ariaLabel();\n    }\n    const badgeText =\n      this.badge() && this.badge()! > 0\n        ? ` (${this.badge()! > 99 ? '99+' : this.badge()!} notifications)`\n        : '';\n    return `${this.label()}${badgeText}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 224
                },
                {
                    "name": "getIconSize",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "getIconVariant",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isActive",
                    "defaultValue": "computed(() => this.active())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129
                },
                {
                    "name": "linkClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-navigation-item__link'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-navigation-item__link--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-navigation-item__link--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 176
                },
                {
                    "name": "textClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-navigation-item__text'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-navigation-item__text--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 204
                }
            ],
            "methodsClass": [
                {
                    "name": "getBadgeAriaLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 235,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 252,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport type OsNavigationItemSize = 'small' | 'medium' | 'large';\nexport type OsNavigationItemVariant = 'default' | 'primary' | 'secondary' | 'accent';\nexport type OsNavigationItemRole = 'navigation' | 'menuitem' | 'tab' | 'button';\n\n@Component({\n  selector: 'os-navigation-item',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsIconComponent],\n  template: `\n    <div\n      [class]=\"containerClass()\"\n      [attr.data-variant]=\"variant()\"\n      [attr.data-size]=\"size()\"\n      [attr.role]=\"role()\"\n      [attr.aria-describedby]=\"ariaDescribedBy()\"\n    >\n      @if (routerLink()) {\n      <a\n        [routerLink]=\"routerLink()!\"\n        [queryParams]=\"queryParams()\"\n        [fragment]=\"fragment()\"\n        [class]=\"linkClass()\"\n        [attr.aria-current]=\"isActive() ? 'page' : null\"\n        [attr.aria-label]=\"effectiveAriaLabel()\"\n        [attr.aria-expanded]=\"hasSubNav() ? isExpanded() : null\"\n        [attr.tabindex]=\"disabled() ? -1 : 0\"\n        (click)=\"handleClick($event)\"\n        (keydown.enter)=\"handleKeyDown($any($event))\"\n        (keydown.space)=\"handleKeyDown($any($event))\"\n      >\n        @if (icon()) {\n        <os-icon\n          [name]=\"icon()\"\n          [size]=\"getIconSize()\"\n          [variant]=\"getIconVariant()\"\n          [attr.aria-hidden]=\"true\"\n        />\n        }\n        <span [class]=\"textClass()\">\n          <ng-content />\n        </span>\n        @if (hasSubNav()) {\n        <os-icon\n          [name]=\"isExpanded() ? 'expand_less' : 'expand_more'\"\n          [size]=\"'sm'\"\n          [attr.aria-hidden]=\"true\"\n          class=\"os-navigation-item__expand-icon\"\n        />\n        } @if (badge() && badge()! > 0) {\n        <span [class]=\"badgeClass()\" [attr.aria-label]=\"getBadgeAriaLabel()\" role=\"status\">\n          {{ badge()! > 99 ? '99+' : badge()! }}\n        </span>\n        }\n      </a>\n      } @else {\n      <button\n        [class]=\"buttonClass()\"\n        [disabled]=\"disabled()\"\n        [attr.aria-label]=\"effectiveAriaLabel()\"\n        [attr.aria-current]=\"isActive() ? 'page' : null\"\n        [attr.aria-expanded]=\"hasSubNav() ? isExpanded() : null\"\n        [attr.type]=\"'button'\"\n        (click)=\"handleClick($event)\"\n        (keydown.enter)=\"handleKeyDown($any($event))\"\n        (keydown.space)=\"handleKeyDown($any($event))\"\n      >\n        @if (icon()) {\n        <os-icon\n          [name]=\"icon()\"\n          [size]=\"getIconSize()\"\n          [variant]=\"getIconVariant()\"\n          [attr.aria-hidden]=\"true\"\n        />\n        }\n        <span [class]=\"textClass()\">\n          <ng-content />\n        </span>\n        @if (hasSubNav()) {\n        <os-icon\n          [name]=\"isExpanded() ? 'expand_less' : 'expand_more'\"\n          [size]=\"'sm'\"\n          [attr.aria-hidden]=\"true\"\n          class=\"os-navigation-item__expand-icon\"\n        />\n        } @if (badge() && badge()! > 0) {\n        <span [class]=\"badgeClass()\" [attr.aria-label]=\"getBadgeAriaLabel()\" role=\"status\">\n          {{ badge()! > 99 ? '99+' : badge()! }}\n        </span>\n        }\n      </button>\n      } @if (hasSubNav() && isExpanded()) {\n      <div class=\"os-navigation-item__subnav\" role=\"group\">\n        <ng-content select=\"[osSubNav]\" />\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-navigation-item.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-navigation-item-host',\n  },\n})\nexport class OsNavigationItemComponent {\n  label = input<string>('');\n  icon = input<string>('');\n  routerLink = input<string | string[] | undefined>(undefined);\n  queryParams = input<Record<string, string | number | boolean> | undefined>(undefined);\n  fragment = input<string | undefined>(undefined);\n  variant = input<OsNavigationItemVariant>('default');\n  size = input<OsNavigationItemSize>('medium');\n  disabled = input(false);\n  active = input(false);\n  badge = input<number | null>(null);\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n  role = input<OsNavigationItemRole>('navigation');\n  hasSubNav = input(false);\n  isExpanded = input(false);\n\n  itemClick = output<MouseEvent>();\n  toggle = output<void>();\n\n  isActive = computed(() => this.active());\n\n  // Mapeamento interno para Atoms\n  protected getIconSize = () => {\n    const sizeMap: Record<OsNavigationItemSize, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  };\n\n  protected getIconVariant = () => {\n    const variantMap: Record<\n      OsNavigationItemVariant,\n      'default' | 'primary' | 'secondary' | 'info'\n    > = {\n      default: 'default',\n      primary: 'primary',\n      secondary: 'secondary',\n      accent: 'info',\n    };\n    return variantMap[this.variant()];\n  };\n\n  containerClass = computed(() => {\n    const classes = ['os-navigation-item'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-navigation-item--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-navigation-item--${this.size()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-navigation-item--disabled');\n    }\n\n    if (this.isActive()) {\n      classes.push('os-navigation-item--active');\n    }\n\n    return classes.join(' ');\n  });\n\n  linkClass = computed(() => {\n    const classes = ['os-navigation-item__link'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-navigation-item__link--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-navigation-item__link--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  buttonClass = computed(() => {\n    const classes = ['os-navigation-item__button'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-navigation-item__button--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-navigation-item__button--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  textClass = computed(() => {\n    const classes = ['os-navigation-item__text'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-navigation-item__text--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  badgeClass = computed(() => {\n    const classes = ['os-navigation-item__badge'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-navigation-item__badge--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  effectiveAriaLabel = computed(() => {\n    if (this.ariaLabel()) {\n      return this.ariaLabel();\n    }\n    const badgeText =\n      this.badge() && this.badge()! > 0\n        ? ` (${this.badge()! > 99 ? '99+' : this.badge()!} notifications)`\n        : '';\n    return `${this.label()}${badgeText}`;\n  });\n\n  getBadgeAriaLabel(): string {\n    const count = this.badge()!;\n    return count > 99\n      ? 'More than 99 notifications'\n      : `${count} notification${count > 1 ? 's' : ''}`;\n  }\n\n  handleClick(event: MouseEvent): void {\n    if (!this.disabled()) {\n      if (this.hasSubNav()) {\n        event.preventDefault();\n        this.toggle.emit();\n      }\n      this.itemClick.emit(event);\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      if (!this.disabled()) {\n        if (this.hasSubNav()) {\n          this.toggle.emit();\n        }\n        const mouseEvent = new MouseEvent('click', {\n          bubbles: true,\n          cancelable: true,\n          view: window,\n        });\n        this.itemClick.emit(mouseEvent);\n      }\n    }\n  }\n}\n",
            "styleUrl": "./os-navigation-item.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsPageHeaderComponent",
            "id": "component-OsPageHeaderComponent-38ae10cab1312380b07aed5fc590dd34310eeaff52020b95f088e712388da6d70cc9a301f57e5b03fd181b806e6296bead7692fa4b88c7d178d4dd567a91ee1b",
            "file": "src/app/shared/ui-components/organisms/os-page-header/os-page-header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-page-header",
            "styleUrls": [
                "./os-page-header.component.scss"
            ],
            "styles": [],
            "template": "<header class=\"os-page-header\" [class]=\"headerClasses()\" [attr.aria-label]=\"ariaLabel()\">\n  <div class=\"os-page-header__content\">\n    @if (breadcrumbs().length > 0) {\n    <nav class=\"os-page-header__breadcrumbs\" aria-label=\"Breadcrumb\">\n      <ol class=\"os-page-header__breadcrumb-list\">\n        @for (item of breadcrumbs(); track $index; let isLast = $last) {\n        <li class=\"os-page-header__breadcrumb-item\">\n          @if (item.route && !item.disabled && !isLast) {\n          <a\n            class=\"os-page-header__breadcrumb-link\"\n            [routerLink]=\"item.route\"\n            [attr.aria-current]=\"isLast ? 'page' : null\"\n          >\n            {{ item.label }}\n          </a>\n          } @else {\n          <span\n            class=\"os-page-header__breadcrumb-text\"\n            [class]=\"getBreadcrumbClasses(item, isLast)\"\n            [attr.aria-current]=\"isLast ? 'page' : null\"\n          >\n            {{ item.label }}\n          </span>\n          } @if (!isLast) {\n          <os-icon\n            name=\"chevron-right\"\n            size=\"sm\"\n            class=\"os-page-header__breadcrumb-separator\"\n            aria-hidden=\"true\"\n          />\n          }\n        </li>\n        }\n      </ol>\n    </nav>\n    }\n\n    <div class=\"os-page-header__main\">\n      <div class=\"os-page-header__title-section\">\n        @if (icon()) {\n        <os-icon\n          [name]=\"icon()!\"\n          [size]=\"iconSize()\"\n          class=\"os-page-header__icon\"\n          [attr.aria-hidden]=\"true\"\n        />\n        }\n        <div class=\"os-page-header__title-content\">\n          <h1 class=\"os-page-header__title\" [id]=\"titleId()\">\n            {{ title() }}\n          </h1>\n          @if (subtitle()) {\n          <p class=\"os-page-header__subtitle\" [id]=\"subtitleId()\">\n            {{ subtitle() }}\n          </p>\n          }\n        </div>\n      </div>\n\n      @if (actions().length > 0) {\n      <div class=\"os-page-header__actions\">\n        @for (action of actions(); track action.label) {\n        <os-button\n          [variant]=\"action.variant || 'secondary'\"\n          [size]=\"action.size || 'medium'\"\n          [disabled]=\"action.disabled || false\"\n          [loading]=\"action.loading || false\"\n          [icon]=\"action.icon || ''\"\n          (clicked)=\"onActionClick(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n\n    @if (description()) {\n    <div class=\"os-page-header__description\" [id]=\"descriptionId()\">\n      {{ description() }}\n    </div>\n    }\n  </div>\n</header>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PageHeaderAction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "breadcrumbs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BreadcrumbItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "description",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 119,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 120,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "subtitle",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 118,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"extended\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PageHeaderAction",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "descriptionId",
                    "defaultValue": "signal(`page-description-${Math.random().toString(36).substr(2, 9)}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "headerClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-page-header'];\n    classes.push(`os-page-header--${this.variant()}`);\n    classes.push(`os-page-header--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-page-header--dark');\n    }\n\n    if (this.breadcrumbs().length > 0) {\n      classes.push('os-page-header--with-breadcrumbs');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-page-header--with-actions');\n    }\n\n    if (this.description()) {\n      classes.push('os-page-header--with-description');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "iconSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 158,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "subtitleId",
                    "defaultValue": "signal(`page-subtitle-${Math.random().toString(36).substr(2, 9)}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 131,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "titleId",
                    "defaultValue": "signal(`page-title-${Math.random().toString(36).substr(2, 9)}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getBreadcrumbClasses",
                    "args": [
                        {
                            "name": "item",
                            "type": "BreadcrumbItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isLast",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "BreadcrumbItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isLast",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "PageHeaderAction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "PageHeaderAction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input, output, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\n\nexport interface BreadcrumbItem {\n  label: string;\n  route?: string;\n  disabled?: boolean;\n}\n\nexport interface PageHeaderAction {\n  label: string;\n  icon?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger';\n  size?: 'small' | 'medium' | 'large';\n  disabled?: boolean;\n  loading?: boolean;\n}\n\n@Component({\n  selector: 'os-page-header',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsButtonComponent, OsIconComponent],\n  template: `\n    <header class=\"os-page-header\" [class]=\"headerClasses()\" [attr.aria-label]=\"ariaLabel()\">\n      <div class=\"os-page-header__content\">\n        @if (breadcrumbs().length > 0) {\n        <nav class=\"os-page-header__breadcrumbs\" aria-label=\"Breadcrumb\">\n          <ol class=\"os-page-header__breadcrumb-list\">\n            @for (item of breadcrumbs(); track $index; let isLast = $last) {\n            <li class=\"os-page-header__breadcrumb-item\">\n              @if (item.route && !item.disabled && !isLast) {\n              <a\n                class=\"os-page-header__breadcrumb-link\"\n                [routerLink]=\"item.route\"\n                [attr.aria-current]=\"isLast ? 'page' : null\"\n              >\n                {{ item.label }}\n              </a>\n              } @else {\n              <span\n                class=\"os-page-header__breadcrumb-text\"\n                [class]=\"getBreadcrumbClasses(item, isLast)\"\n                [attr.aria-current]=\"isLast ? 'page' : null\"\n              >\n                {{ item.label }}\n              </span>\n              } @if (!isLast) {\n              <os-icon\n                name=\"chevron-right\"\n                size=\"sm\"\n                class=\"os-page-header__breadcrumb-separator\"\n                aria-hidden=\"true\"\n              />\n              }\n            </li>\n            }\n          </ol>\n        </nav>\n        }\n\n        <div class=\"os-page-header__main\">\n          <div class=\"os-page-header__title-section\">\n            @if (icon()) {\n            <os-icon\n              [name]=\"icon()!\"\n              [size]=\"iconSize()\"\n              class=\"os-page-header__icon\"\n              [attr.aria-hidden]=\"true\"\n            />\n            }\n            <div class=\"os-page-header__title-content\">\n              <h1 class=\"os-page-header__title\" [id]=\"titleId()\">\n                {{ title() }}\n              </h1>\n              @if (subtitle()) {\n              <p class=\"os-page-header__subtitle\" [id]=\"subtitleId()\">\n                {{ subtitle() }}\n              </p>\n              }\n            </div>\n          </div>\n\n          @if (actions().length > 0) {\n          <div class=\"os-page-header__actions\">\n            @for (action of actions(); track action.label) {\n            <os-button\n              [variant]=\"action.variant || 'secondary'\"\n              [size]=\"action.size || 'medium'\"\n              [disabled]=\"action.disabled || false\"\n              [loading]=\"action.loading || false\"\n              [icon]=\"action.icon || ''\"\n              (clicked)=\"onActionClick(action)\"\n            >\n              {{ action.label }}\n            </os-button>\n            }\n          </div>\n          }\n        </div>\n\n        @if (description()) {\n        <div class=\"os-page-header__description\" [id]=\"descriptionId()\">\n          {{ description() }}\n        </div>\n        }\n      </div>\n    </header>\n  `,\n  styleUrls: ['./os-page-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsPageHeaderComponent {\n  readonly title = input.required<string>();\n  readonly subtitle = input<string | null>(null);\n  readonly description = input<string | null>(null);\n  readonly icon = input<string | null>(null);\n  readonly breadcrumbs = input<BreadcrumbItem[]>([]);\n  readonly actions = input<PageHeaderAction[]>([]);\n  readonly variant = input<'default' | 'compact' | 'extended'>('default');\n  readonly size = input<'small' | 'medium' | 'large'>('medium');\n  readonly theme = input<'light' | 'dark'>('light');\n  readonly ariaLabel = input<string | null>(null);\n\n  readonly actionClick = output<PageHeaderAction>();\n\n  readonly titleId = signal(`page-title-${Math.random().toString(36).substr(2, 9)}`);\n  readonly subtitleId = signal(`page-subtitle-${Math.random().toString(36).substr(2, 9)}`);\n  readonly descriptionId = signal(`page-description-${Math.random().toString(36).substr(2, 9)}`);\n\n  readonly headerClasses = computed(() => {\n    const classes = ['os-page-header'];\n    classes.push(`os-page-header--${this.variant()}`);\n    classes.push(`os-page-header--${this.size()}`);\n\n    if (this.theme() === 'dark') {\n      classes.push('os-page-header--dark');\n    }\n\n    if (this.breadcrumbs().length > 0) {\n      classes.push('os-page-header--with-breadcrumbs');\n    }\n\n    if (this.actions().length > 0) {\n      classes.push('os-page-header--with-actions');\n    }\n\n    if (this.description()) {\n      classes.push('os-page-header--with-description');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly iconSize = computed(() => {\n    const sizeMap: Record<string, 'sm' | 'md' | 'lg'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  });\n\n  getBreadcrumbClasses(item: BreadcrumbItem, isLast: boolean): string {\n    const classes = ['os-page-header__breadcrumb-text'];\n\n    if (item.disabled) {\n      classes.push('os-page-header__breadcrumb-text--disabled');\n    }\n\n    if (isLast) {\n      classes.push('os-page-header__breadcrumb-text--current');\n    }\n\n    return classes.join(' ');\n  }\n\n  onActionClick(action: PageHeaderAction): void {\n    if (!action.disabled && !action.loading) {\n      this.actionClick.emit(action);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/variables' as *;\n\n.os-page-header {\n  --os-page-header-bg: var(--os-surface-color);\n  --os-page-header-border: var(--os-border-color);\n  --os-page-header-text: var(--os-text-color);\n  --os-page-header-text-secondary: var(--os-text-secondary);\n  --os-page-header-link: var(--os-primary-color);\n  --os-page-header-link-hover: var(--os-primary-color-dark);\n  --os-page-header-separator: var(--os-text-secondary);\n\n  background-color: var(--os-page-header-bg);\n  border-bottom: 1px solid var(--os-page-header-border);\n  color: var(--os-page-header-text);\n  padding: var(--os-spacing-md) var(--os-spacing-lg);\n  position: relative;\n  width: 100%;\n\n  &__content {\n    max-width: 100%;\n    margin: 0 auto;\n  }\n\n  &__breadcrumbs {\n    margin-bottom: var(--os-spacing-sm);\n  }\n\n  &__breadcrumb-list {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: var(--os-spacing-xs);\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  &__breadcrumb-item {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-xs);\n  }\n\n  &__breadcrumb-link {\n    color: var(--os-page-header-link);\n    text-decoration: none;\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n    transition: color 0.2s ease;\n\n    &:hover {\n      color: var(--os-page-header-link-hover);\n      text-decoration: underline;\n    }\n\n    &:focus {\n      outline: 2px solid var(--os-primary-color);\n      outline-offset: 2px;\n      border-radius: var(--os-border-radius-sm);\n    }\n  }\n\n  &__breadcrumb-text {\n    color: var(--os-page-header-text-secondary);\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-medium);\n\n    &--disabled {\n      color: var(--os-text-disabled);\n      cursor: not-allowed;\n    }\n\n    &--current {\n      color: var(--os-page-header-text);\n      font-weight: var(--os-font-weight-semibold);\n    }\n  }\n\n  &__breadcrumb-separator {\n    color: var(--os-page-header-separator);\n    flex-shrink: 0;\n  }\n\n  &__main {\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    gap: var(--os-spacing-lg);\n    flex-wrap: wrap;\n  }\n\n  &__title-section {\n    display: flex;\n    align-items: flex-start;\n    gap: var(--os-spacing-md);\n    flex: 1;\n    min-width: 0;\n  }\n\n  &__icon {\n    flex-shrink: 0;\n    margin-top: var(--os-spacing-xs);\n  }\n\n  &__title-content {\n    flex: 1;\n    min-width: 0;\n  }\n\n  &__title {\n    font-size: var(--os-font-size-2xl);\n    font-weight: var(--os-font-weight-bold);\n    line-height: var(--os-line-height-tight);\n    margin: 0 0 var(--os-spacing-xs) 0;\n    color: var(--os-page-header-text);\n    word-wrap: break-word;\n  }\n\n  &__subtitle {\n    font-size: var(--os-font-size-lg);\n    font-weight: var(--os-font-weight-medium);\n    line-height: var(--os-line-height-normal);\n    margin: 0;\n    color: var(--os-page-header-text-secondary);\n    word-wrap: break-word;\n  }\n\n  &__actions {\n    display: flex;\n    align-items: flex-start;\n    gap: var(--os-spacing-sm);\n    flex-shrink: 0;\n  }\n\n  &__description {\n    font-size: var(--os-font-size-base);\n    line-height: var(--os-line-height-relaxed);\n    color: var(--os-page-header-text-secondary);\n    margin-top: var(--os-spacing-md);\n    max-width: 60ch;\n    word-wrap: break-word;\n  }\n\n  // Variants\n  &--compact {\n    padding: var(--os-spacing-sm) var(--os-spacing-md);\n\n    .os-page-header__title {\n      font-size: var(--os-font-size-xl);\n    }\n\n    .os-page-header__subtitle {\n      font-size: var(--os-font-size-base);\n    }\n  }\n\n  &--extended {\n    padding: var(--os-spacing-xl) var(--os-spacing-2xl);\n\n    .os-page-header__title {\n      font-size: var(--os-font-size-3xl);\n    }\n\n    .os-page-header__subtitle {\n      font-size: var(--os-font-size-xl);\n    }\n  }\n\n  // Sizes\n  &--small {\n    .os-page-header__title {\n      font-size: var(--os-font-size-lg);\n    }\n\n    .os-page-header__subtitle {\n      font-size: var(--os-font-size-sm);\n    }\n\n    .os-page-header__icon {\n      --os-icon-size: var(--os-icon-size-sm);\n    }\n  }\n\n  &--large {\n    .os-page-header__title {\n      font-size: var(--os-font-size-4xl);\n    }\n\n    .os-page-header__subtitle {\n      font-size: var(--os-font-size-2xl);\n    }\n\n    .os-page-header__icon {\n      --os-icon-size: var(--os-icon-size-lg);\n    }\n  }\n\n  // Dark theme\n  &--dark {\n    --os-page-header-bg: var(--os-surface-dark);\n    --os-page-header-border: var(--os-border-dark);\n    --os-page-header-text: var(--os-text-light);\n    --os-page-header-text-secondary: var(--os-text-light-secondary);\n  }\n\n  // Responsive design\n  @media (max-width: 768px) {\n    padding: var(--os-spacing-md);\n\n    &__main {\n      flex-direction: column;\n      align-items: stretch;\n      gap: var(--os-spacing-md);\n    }\n\n    &__actions {\n      justify-content: flex-start;\n      flex-wrap: wrap;\n    }\n\n    &__title {\n      font-size: var(--os-font-size-xl);\n    }\n\n    &__subtitle {\n      font-size: var(--os-font-size-base);\n    }\n\n    &__description {\n      max-width: 100%;\n    }\n  }\n\n  @media (max-width: 480px) {\n    padding: var(--os-spacing-sm);\n\n    &__title-section {\n      flex-direction: column;\n      align-items: flex-start;\n      gap: var(--os-spacing-sm);\n    }\n\n    &__icon {\n      margin-top: 0;\n    }\n\n    &__actions {\n      flex-direction: column;\n      align-items: stretch;\n    }\n  }\n}\n",
                    "styleUrl": "./os-page-header.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsPanelTemplateComponent",
            "id": "component-OsPanelTemplateComponent-03aca1c1fa63ef1d00354d3935d833108c08ad140fc337d4f35d4928430f800a7613fa96912f06c674ca25b0b86cf61066bf98b0ff35a351d3c6ac13d9d983df",
            "file": "src/app/shared/ui-components/templates/os-panel-template/os-panel-template.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-panel-template",
            "styleUrls": [
                "./os-panel-template.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"panelClass()\" [attr.aria-label]=\"ariaLabel()\">\n  @if (config().showHeader ?? true) {\n  <div class=\"os-panel-template__header\" [class]=\"headerClass()\">\n    <div class=\"os-panel-template__header-content\">\n      <h3 class=\"os-panel-template__title\">{{ config().title }}</h3>\n      @if (config().subtitle) {\n      <p class=\"os-panel-template__subtitle\">{{ config().subtitle }}</p>\n      }\n    </div>\n    @if (config().collapsible) {\n    <os-button\n      [variant]=\"'tertiary'\"\n      [size]=\"size()\"\n      [icon]=\"isExpanded() ? 'expand_less' : 'expand_more'\"\n      (click)=\"toggleExpanded()\"\n      [attr.aria-label]=\"isExpanded() ? 'Recolher painel' : 'Expandir painel'\"\n    />\n    }\n  </div>\n  } @if (!config().collapsible || isExpanded()) {\n  <div class=\"os-panel-template__content\" [class]=\"contentClass()\">\n    <ng-content />\n  </div>\n  } @if (config().showActions ?? true) {\n  <div class=\"os-panel-template__actions\" [class]=\"actionsClass()\">\n    @for (action of config().actions || []; track action.label) {\n    <os-button\n      [variant]=\"action.variant\"\n      [size]=\"action.size\"\n      [disabled]=\"action.disabled || disabled()\"\n      [loading]=\"action.loading || false\"\n      [icon]=\"action.icon || ''\"\n      (click)=\"onActionClick(action)\"\n    >\n      {{ action.label }}\n    </os-button>\n    }\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PanelTemplateConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "required": true
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "required": false
                },
                {
                    "name": "expanded",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{    label: string;    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';    size: 'small' | 'medium' | 'large';    disabled?: boolean;    loading?: boolean;    icon?: string;  }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "required": false
                },
                {
                    "name": "toggled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "actionsClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-panel-template__actions',\n      `os-panel-template__actions--${this.variant()}`,\n      `os-panel-template__actions--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "computed(() => {\n    return `Painel: ${this.config().title}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140
                },
                {
                    "name": "contentClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-panel-template__content',\n      `os-panel-template__content--${this.variant()}`,\n      `os-panel-template__content--${this.size()}`,\n      this.disabled() ? 'os-panel-template__content--disabled' : '',\n      this.loading() ? 'os-panel-template__content--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "headerClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-panel-template__header',\n      `os-panel-template__header--${this.variant()}`,\n      `os-panel-template__header--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "computed(() => {\n    return this.expanded();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "panelClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-panel-template',\n      `os-panel-template--${this.variant()}`,\n      `os-panel-template--${this.size()}`,\n      `os-panel-template--${this.theme()}`,\n      this.disabled() ? 'os-panel-template--disabled' : '',\n      this.loading() ? 'os-panel-template--loading' : '',\n      this.isExpanded() ? 'os-panel-template--expanded' : 'os-panel-template--collapsed',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 94
                }
            ],
            "methodsClass": [
                {
                    "name": "onActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleExpanded",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, input, output, ChangeDetectionStrategy } from '@angular/core';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\n\nexport interface PanelTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showHeader?: boolean;\n  showFooter?: boolean;\n  showActions?: boolean;\n  collapsible?: boolean;\n  expanded?: boolean;\n  actions?: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }[];\n}\n\n@Component({\n  selector: 'os-panel-template',\n  template: `\n    <div [class]=\"panelClass()\" [attr.aria-label]=\"ariaLabel()\">\n      @if (config().showHeader ?? true) {\n      <div class=\"os-panel-template__header\" [class]=\"headerClass()\">\n        <div class=\"os-panel-template__header-content\">\n          <h3 class=\"os-panel-template__title\">{{ config().title }}</h3>\n          @if (config().subtitle) {\n          <p class=\"os-panel-template__subtitle\">{{ config().subtitle }}</p>\n          }\n        </div>\n        @if (config().collapsible) {\n        <os-button\n          [variant]=\"'tertiary'\"\n          [size]=\"size()\"\n          [icon]=\"isExpanded() ? 'expand_less' : 'expand_more'\"\n          (click)=\"toggleExpanded()\"\n          [attr.aria-label]=\"isExpanded() ? 'Recolher painel' : 'Expandir painel'\"\n        />\n        }\n      </div>\n      } @if (!config().collapsible || isExpanded()) {\n      <div class=\"os-panel-template__content\" [class]=\"contentClass()\">\n        <ng-content />\n      </div>\n      } @if (config().showActions ?? true) {\n      <div class=\"os-panel-template__actions\" [class]=\"actionsClass()\">\n        @for (action of config().actions || []; track action.label) {\n        <os-button\n          [variant]=\"action.variant\"\n          [size]=\"action.size\"\n          [disabled]=\"action.disabled || disabled()\"\n          [loading]=\"action.loading || false\"\n          [icon]=\"action.icon || ''\"\n          (click)=\"onActionClick(action)\"\n        >\n          {{ action.label }}\n        </os-button>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-panel-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, OsButtonComponent],\n})\nexport class OsPanelTemplateComponent {\n  config = input.required<PanelTemplateConfig>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n  expanded = input(true);\n\n  actionClick = output<{\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }>();\n  toggled = output<boolean>();\n\n  isExpanded = computed(() => {\n    return this.expanded();\n  });\n\n  panelClass = computed(() => {\n    return [\n      'os-panel-template',\n      `os-panel-template--${this.variant()}`,\n      `os-panel-template--${this.size()}`,\n      `os-panel-template--${this.theme()}`,\n      this.disabled() ? 'os-panel-template--disabled' : '',\n      this.loading() ? 'os-panel-template--loading' : '',\n      this.isExpanded() ? 'os-panel-template--expanded' : 'os-panel-template--collapsed',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  headerClass = computed(() => {\n    return [\n      'os-panel-template__header',\n      `os-panel-template__header--${this.variant()}`,\n      `os-panel-template__header--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  contentClass = computed(() => {\n    return [\n      'os-panel-template__content',\n      `os-panel-template__content--${this.variant()}`,\n      `os-panel-template__content--${this.size()}`,\n      this.disabled() ? 'os-panel-template__content--disabled' : '',\n      this.loading() ? 'os-panel-template__content--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  actionsClass = computed(() => {\n    return [\n      'os-panel-template__actions',\n      `os-panel-template__actions--${this.variant()}`,\n      `os-panel-template__actions--${this.size()}`,\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  ariaLabel = computed(() => {\n    return `Painel: ${this.config().title}`;\n  });\n\n  toggleExpanded(): void {\n    const newExpanded = !this.isExpanded();\n    this.toggled.emit(newExpanded);\n  }\n\n  onActionClick(action: {\n    label: string;\n    variant: 'primary' | 'secondary' | 'tertiary' | 'danger';\n    size: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    loading?: boolean;\n    icon?: string;\n  }): void {\n    this.actionClick.emit(action);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/variables' as *;\n\n.os-panel-template {\n  display: flex;\n  flex-direction: column;\n  background: var(--os-color-surface);\n  border: 1px solid var(--os-color-border);\n  border-radius: var(--os-border-radius-md);\n  box-shadow: var(--os-shadow-sm);\n  overflow: hidden;\n  transition: all 0.2s ease-in-out;\n\n  &--small {\n    .os-panel-template__header {\n      padding: var(--os-spacing-sm) var(--os-spacing-md);\n    }\n\n    .os-panel-template__content {\n      padding: var(--os-spacing-md);\n    }\n\n    .os-panel-template__actions {\n      padding: var(--os-spacing-sm) var(--os-spacing-md);\n    }\n\n    .os-panel-template__title {\n      font-size: var(--os-font-size-md);\n      font-weight: 600;\n    }\n\n    .os-panel-template__subtitle {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  &--medium {\n    .os-panel-template__header {\n      padding: var(--os-spacing-md) var(--os-spacing-lg);\n    }\n\n    .os-panel-template__content {\n      padding: var(--os-spacing-lg);\n    }\n\n    .os-panel-template__actions {\n      padding: var(--os-spacing-md) var(--os-spacing-lg);\n    }\n\n    .os-panel-template__title {\n      font-size: var(--os-font-size-lg);\n      font-weight: 600;\n    }\n\n    .os-panel-template__subtitle {\n      font-size: var(--os-font-size-md);\n    }\n  }\n\n  &--large {\n    .os-panel-template__header {\n      padding: var(--os-spacing-lg) var(--os-spacing-xl);\n    }\n\n    .os-panel-template__content {\n      padding: var(--os-spacing-xl);\n    }\n\n    .os-panel-template__actions {\n      padding: var(--os-spacing-lg) var(--os-spacing-xl);\n    }\n\n    .os-panel-template__title {\n      font-size: var(--os-font-size-xl);\n      font-weight: 600;\n    }\n\n    .os-panel-template__subtitle {\n      font-size: var(--os-font-size-lg);\n    }\n  }\n\n  &--compact {\n    .os-panel-template__header {\n      padding: var(--os-spacing-xs) var(--os-spacing-sm);\n    }\n\n    .os-panel-template__content {\n      padding: var(--os-spacing-sm);\n    }\n\n    .os-panel-template__actions {\n      padding: var(--os-spacing-xs) var(--os-spacing-sm);\n    }\n\n    .os-panel-template__title {\n      font-size: var(--os-font-size-sm);\n      font-weight: 500;\n    }\n\n    .os-panel-template__subtitle {\n      font-size: var(--os-font-size-xs);\n    }\n  }\n\n  &--detailed {\n    .os-panel-template__header {\n      padding: var(--os-spacing-lg) var(--os-spacing-xl);\n    }\n\n    .os-panel-template__content {\n      padding: var(--os-spacing-xl);\n    }\n\n    .os-panel-template__actions {\n      padding: var(--os-spacing-lg) var(--os-spacing-xl);\n    }\n\n    .os-panel-template__title {\n      font-size: var(--os-font-size-xl);\n      font-weight: 700;\n    }\n\n    .os-panel-template__subtitle {\n      font-size: var(--os-font-size-lg);\n    }\n  }\n\n  &--light {\n    background: var(--os-color-surface);\n    border-color: var(--os-color-border);\n    color: var(--os-color-text);\n\n    .os-panel-template__title {\n      color: var(--os-color-text);\n    }\n\n    .os-panel-template__subtitle {\n      color: var(--os-color-text-secondary);\n    }\n  }\n\n  &--dark {\n    background: var(--os-color-surface-dark);\n    border-color: var(--os-color-border-dark);\n    color: var(--os-color-text-dark);\n\n    .os-panel-template__title {\n      color: var(--os-color-text-dark);\n    }\n\n    .os-panel-template__subtitle {\n      color: var(--os-color-text-secondary-dark);\n    }\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--loading {\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(255, 255, 255, 0.8);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 10;\n    }\n  }\n\n  &--expanded {\n    .os-panel-template__content {\n      display: block;\n    }\n  }\n\n  &--collapsed {\n    .os-panel-template__content {\n      display: none;\n    }\n  }\n}\n\n.os-panel-template__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: var(--os-color-surface-secondary);\n  border-bottom: 1px solid var(--os-color-border);\n  transition: all 0.2s ease-in-out;\n\n  &--compact {\n    background: transparent;\n    border-bottom: none;\n  }\n\n  &--detailed {\n    background: var(--os-color-primary);\n    color: white;\n    border-bottom: none;\n\n    .os-panel-template__title {\n      color: white;\n    }\n\n    .os-panel-template__subtitle {\n      color: rgba(255, 255, 255, 0.8);\n    }\n  }\n}\n\n.os-panel-template__header-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.os-panel-template__title {\n  margin: 0;\n  line-height: 1.2;\n  color: var(--os-color-text);\n  transition: color 0.2s ease-in-out;\n}\n\n.os-panel-template__subtitle {\n  margin: var(--os-spacing-xs) 0 0 0;\n  line-height: 1.4;\n  color: var(--os-color-text-secondary);\n  transition: color 0.2s ease-in-out;\n}\n\n.os-panel-template__content {\n  flex: 1;\n  transition: all 0.2s ease-in-out;\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--loading {\n    position: relative;\n    overflow: hidden;\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(255, 255, 255, 0.8);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 10;\n    }\n  }\n}\n\n.os-panel-template__actions {\n  display: flex;\n  align-items: center;\n  gap: var(--os-spacing-sm);\n  background: var(--os-color-surface-secondary);\n  border-top: 1px solid var(--os-color-border);\n  transition: all 0.2s ease-in-out;\n\n  &--compact {\n    background: transparent;\n    border-top: none;\n    padding: var(--os-spacing-xs) 0;\n  }\n\n  &--detailed {\n    background: var(--os-color-surface);\n    border-top: 2px solid var(--os-color-primary);\n  }\n}\n\n// Responsive design\n@media (max-width: 768px) {\n  .os-panel-template {\n    &--small,\n    &--medium,\n    &--large {\n      .os-panel-template__header {\n        padding: var(--os-spacing-sm) var(--os-spacing-md);\n      }\n\n      .os-panel-template__content {\n        padding: var(--os-spacing-md);\n      }\n\n      .os-panel-template__actions {\n        padding: var(--os-spacing-sm) var(--os-spacing-md);\n        flex-wrap: wrap;\n      }\n    }\n  }\n}\n\n@media (max-width: 480px) {\n  .os-panel-template {\n    &--small,\n    &--medium,\n    &--large {\n      .os-panel-template__header {\n        padding: var(--os-spacing-xs) var(--os-spacing-sm);\n      }\n\n      .os-panel-template__content {\n        padding: var(--os-spacing-sm);\n      }\n\n      .os-panel-template__actions {\n        padding: var(--os-spacing-xs) var(--os-spacing-sm);\n        flex-direction: column;\n        align-items: stretch;\n\n        os-button {\n          width: 100%;\n        }\n      }\n    }\n  }\n}\n\n// Accessibility\n.os-panel-template {\n  &:focus-within {\n    outline: 2px solid var(--os-color-primary);\n    outline-offset: 2px;\n  }\n}\n\n.os-panel-template__header {\n  &:focus-within {\n    outline: 2px solid var(--os-color-primary);\n    outline-offset: -2px;\n  }\n}\n\n// Animation for collapsible panels\n.os-panel-template--collapsible {\n  .os-panel-template__content {\n    transition: all 0.3s ease-in-out;\n    overflow: hidden;\n  }\n}\n\n// Print styles\n@media print {\n  .os-panel-template {\n    box-shadow: none;\n    border: 1px solid #000;\n\n    &__actions {\n      display: none;\n    }\n  }\n}\n",
                    "styleUrl": "./os-panel-template.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsProgressBarComponent",
            "id": "component-OsProgressBarComponent-6ceedfcf9eec1db4f3d86977ac8f02e9947b69c3abe7fff2d0efcae64add889e489da30097bd8464bf8a9f206e809724fabc23e20b97fd9ca9ae3a86fe85e3f7",
            "file": "src/app/shared/ui-components/atoms/os-progress-bar/os-progress-bar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-progress-bar",
            "styleUrls": [
                "./os-progress-bar.component.scss"
            ],
            "styles": [],
            "template": "<div\n  class=\"os-progress-bar\"\n  [class]=\"progressBarClasses()\"\n  role=\"progressbar\"\n  [attr.aria-valuenow]=\"value()\"\n  [attr.aria-valuemin]=\"0\"\n  [attr.aria-valuemax]=\"max()\"\n  [attr.aria-label]=\"computedAriaLabel()\"\n>\n  @if (label()) {\n  <div class=\"os-progress-bar__label\">\n    <span class=\"os-progress-bar__text\">{{ label() }}</span>\n    @if (showPercentage()) {\n    <span class=\"os-progress-bar__percentage\">{{ percentage() }}%</span>\n    }\n  </div>\n  }\n\n  <div class=\"os-progress-bar__container\">\n    <mat-progress-bar\n      [mode]=\"mode()\"\n      [value]=\"percentage()\"\n      [bufferValue]=\"bufferValue()\"\n      [color]=\"matColor()\"\n      [class]=\"progressBarClass()\"\n    ></mat-progress-bar>\n  </div>\n\n  @if (hint()) {\n  <div class=\"os-progress-bar__hint\">{{ hint() }}</div>\n  } @if (showCelebration() && isCompleted()) {\n  <div class=\"os-progress-bar__celebration\">{{ celebrationText() }}</div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "bufferValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "celebrationText",
                    "defaultValue": "'🎉 Concluído!'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "hint",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showCelebration",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showPercentage",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "striped",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"secondary\" | \"success\" | \"warning\" | \"danger\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "computedAriaLabel",
                    "defaultValue": "computed(() => {\n    if (this.ariaLabel()) {\n      return this.ariaLabel();\n    }\n\n    const label = this.label() || 'Progresso';\n    const percentage = this.percentage();\n    return `${label}: ${percentage}% completo`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isCompleted",
                    "defaultValue": "computed(() => {\n    return this.percentage() >= 100;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "matColor",
                    "defaultValue": "computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'danger':\n        return 'warn';\n      default:\n        return undefined;\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "mode",
                    "defaultValue": "computed(() => {\n    return this.bufferValue() !== null ? 'buffer' : 'determinate';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "percentage",
                    "defaultValue": "computed(() => {\n    const value = this.value();\n    const max = this.max();\n    return Math.min(Math.max((value / max) * 100, 0), 100);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "progressBarClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-progress-bar__material'];\n    classes.push(`os-progress-bar__material--${this.size()}`);\n\n    if (this.animated()) {\n      classes.push('os-progress-bar__material--animated');\n    }\n\n    if (this.striped()) {\n      classes.push('os-progress-bar__material--striped');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "progressBarClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-progress-bar'];\n    classes.push(`os-progress-bar--${this.size()}`);\n    classes.push(`os-progress-bar--${this.variant()}`);\n\n    if (this.animated()) {\n      classes.push('os-progress-bar--animated');\n    }\n\n    if (this.striped()) {\n      classes.push('os-progress-bar--striped');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@Component({\n  selector: 'os-progress-bar',\n  standalone: true,\n  imports: [CommonModule, MatProgressBarModule],\n  template: `\n    <div\n      class=\"os-progress-bar\"\n      [class]=\"progressBarClasses()\"\n      role=\"progressbar\"\n      [attr.aria-valuenow]=\"value()\"\n      [attr.aria-valuemin]=\"0\"\n      [attr.aria-valuemax]=\"max()\"\n      [attr.aria-label]=\"computedAriaLabel()\"\n    >\n      @if (label()) {\n      <div class=\"os-progress-bar__label\">\n        <span class=\"os-progress-bar__text\">{{ label() }}</span>\n        @if (showPercentage()) {\n        <span class=\"os-progress-bar__percentage\">{{ percentage() }}%</span>\n        }\n      </div>\n      }\n\n      <div class=\"os-progress-bar__container\">\n        <mat-progress-bar\n          [mode]=\"mode()\"\n          [value]=\"percentage()\"\n          [bufferValue]=\"bufferValue()\"\n          [color]=\"matColor()\"\n          [class]=\"progressBarClass()\"\n        ></mat-progress-bar>\n      </div>\n\n      @if (hint()) {\n      <div class=\"os-progress-bar__hint\">{{ hint() }}</div>\n      } @if (showCelebration() && isCompleted()) {\n      <div class=\"os-progress-bar__celebration\">{{ celebrationText() }}</div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsProgressBarComponent {\n  readonly value = input(0);\n  readonly max = input(100);\n  readonly label = input<string | null>(null);\n  readonly hint = input<string | null>(null);\n  readonly showPercentage = input(true);\n  readonly size = input<'small' | 'medium' | 'large'>('medium');\n  readonly variant = input<'primary' | 'secondary' | 'success' | 'warning' | 'danger'>('primary');\n  readonly animated = input(false);\n  readonly striped = input(false);\n  readonly bufferValue = input<number | null>(null);\n  readonly ariaLabel = input<string | null>(null);\n  readonly showCelebration = input(false);\n  readonly celebrationText = input('🎉 Concluído!');\n\n  readonly percentage = computed(() => {\n    const value = this.value();\n    const max = this.max();\n    return Math.min(Math.max((value / max) * 100, 0), 100);\n  });\n\n  readonly mode = computed(() => {\n    return this.bufferValue() !== null ? 'buffer' : 'determinate';\n  });\n\n  protected matColor = computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'danger':\n        return 'warn';\n      default:\n        return undefined;\n    }\n  });\n\n  readonly progressBarClasses = computed(() => {\n    const classes = ['os-progress-bar'];\n    classes.push(`os-progress-bar--${this.size()}`);\n    classes.push(`os-progress-bar--${this.variant()}`);\n\n    if (this.animated()) {\n      classes.push('os-progress-bar--animated');\n    }\n\n    if (this.striped()) {\n      classes.push('os-progress-bar--striped');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly progressBarClass = computed(() => {\n    const classes = ['os-progress-bar__material'];\n    classes.push(`os-progress-bar__material--${this.size()}`);\n\n    if (this.animated()) {\n      classes.push('os-progress-bar__material--animated');\n    }\n\n    if (this.striped()) {\n      classes.push('os-progress-bar__material--striped');\n    }\n\n    return classes.join(' ');\n  });\n\n  readonly isCompleted = computed(() => {\n    return this.percentage() >= 100;\n  });\n\n  readonly computedAriaLabel = computed(() => {\n    if (this.ariaLabel()) {\n      return this.ariaLabel();\n    }\n\n    const label = this.label() || 'Progresso';\n    const percentage = this.percentage();\n    return `${label}: ${percentage}% completo`;\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens';\n\n.os-progress-bar {\n  width: 100%;\n  position: relative;\n\n  &__label {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: var(--os-spacing-xs);\n  }\n\n  &__text {\n    font-family: var(--os-font-family-base);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-text-primary);\n  }\n\n  &__percentage {\n    font-family: var(--os-font-family-mono);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__container {\n    position: relative;\n    width: 100%;\n  }\n\n  &__material {\n    width: 100%;\n    border-radius: var(--os-border-radius-full);\n\n    &--small {\n      height: 4px;\n    }\n    &--medium {\n      height: 6px;\n    }\n    &--large {\n      height: 8px;\n    }\n\n    &--striped ::ng-deep .mat-progress-bar-fill::after {\n      background-image: linear-gradient(\n        45deg,\n        rgba(255, 255, 255, 0.15) 25%,\n        transparent 25%,\n        transparent 50%,\n        rgba(255, 255, 255, 0.15) 50%,\n        rgba(255, 255, 255, 0.15) 75%,\n        transparent 75%,\n        transparent\n      );\n      background-size: 1rem 1rem;\n      animation: progress-bar-stripes 1s linear infinite;\n    }\n\n    &--animated ::ng-deep .mat-progress-bar-fill::after {\n      animation: progress-bar-pulse 2s ease-in-out infinite;\n    }\n  }\n\n  &__hint {\n    margin-top: var(--os-spacing-xs);\n    font-family: var(--os-font-family-base);\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n  }\n\n  &__celebration {\n    margin-top: var(--os-spacing-xs);\n    font-size: var(--os-font-size-sm);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-success);\n    text-align: center;\n  }\n\n  &--small {\n    .os-progress-bar__text,\n    .os-progress-bar__percentage {\n      font-size: var(--os-font-size-xs);\n    }\n    .os-progress-bar__hint {\n      font-size: var(--os-font-size-xs);\n    }\n  }\n\n  &--medium {\n    .os-progress-bar__text,\n    .os-progress-bar__percentage {\n      font-size: var(--os-font-size-sm);\n    }\n    .os-progress-bar__hint {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  &--large {\n    .os-progress-bar__text,\n    .os-progress-bar__percentage {\n      font-size: var(--os-font-size-base);\n    }\n    .os-progress-bar__hint {\n      font-size: var(--os-font-size-base);\n    }\n  }\n}\n\n@keyframes progress-bar-stripes {\n  0% {\n    background-position: 0 0;\n  }\n  100% {\n    background-position: 1rem 0;\n  }\n}\n\n@keyframes progress-bar-pulse {\n  0%,\n  100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.7;\n  }\n}\n",
                    "styleUrl": "./os-progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsRadioComponent",
            "id": "component-OsRadioComponent-74a71fa04fbfb69918f5976d232b63689b89dd20a356331997509034199444022ab771da27bbe05e3e8817dce7d915e16a34868c1a01a121313d3ef2e5dfea15",
            "file": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": ")"
                }
            ],
            "selector": "os-radio",
            "styleUrls": [
                "./os-radio.component.scss"
            ],
            "styles": [],
            "template": "<mat-radio-button\n  [id]=\"inputId\"\n  [name]=\"name()\"\n  [value]=\"value()\"\n  [checked]=\"checked()\"\n  [disabled]=\"disabled()\"\n  [color]=\"matColor()\"\n  [class]=\"radioClass()\"\n  (change)=\"handleChange($event)\"\n  (blur)=\"handleBlur($event)\"\n  (focus)=\"handleFocus($event)\"\n  [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n  [attr.aria-label]=\"ariaLabel() || null\"\n  [attr.aria-labelledby]=\"ariaLabelledBy() || null\"\n  [attr.aria-required]=\"required()\"\n  [attr.role]=\"radioRole()\"\n  [attr.data-animated]=\"animated()\"\n  [attr.data-size]=\"size()\"\n  [attr.data-variant]=\"variant()\"\n>\n  @if (label()) {\n  {{ label() }}\n  }\n</mat-radio-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "required": false
                },
                {
                    "name": "ariaLabelledBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "required": false
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "required": false
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'radio'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsRadioRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsRadioSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsRadioVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "required": false
                },
                {
                    "name": "radioBlurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "required": false
                },
                {
                    "name": "radioChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                },
                {
                    "name": "radioFocusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "inputId",
                    "defaultValue": "`os-radio-${Math.random().toString(36).substr(2, 9)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "matColor",
                    "defaultValue": "computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'error':\n        return 'warn';\n      default:\n        return undefined;\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "radioClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-radio',\n      `os-radio--${this.size()}`,\n      `os-radio--${this.variant()}`,\n      this.disabled() ? 'os-radio--disabled' : '',\n      this.checked() ? 'os-radio--checked' : '',\n      this.animated() ? 'os-radio--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "radioRole",
                    "defaultValue": "computed(() => {\n    return this.role();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 117
                }
            ],
            "methodsClass": [
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatRadioModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  model,\n  ChangeDetectionStrategy,\n  forwardRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\n\nexport type OsRadioSize = 'small' | 'medium' | 'large';\nexport type OsRadioVariant = 'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'error';\nexport type OsRadioRole = 'radio' | 'switch';\n\n@Component({\n  selector: 'os-radio',\n  standalone: true,\n  imports: [CommonModule, MatRadioModule],\n  template: `\n    <mat-radio-button\n      [id]=\"inputId\"\n      [name]=\"name()\"\n      [value]=\"value()\"\n      [checked]=\"checked()\"\n      [disabled]=\"disabled()\"\n      [color]=\"matColor()\"\n      [class]=\"radioClass()\"\n      (change)=\"handleChange($event)\"\n      (blur)=\"handleBlur($event)\"\n      (focus)=\"handleFocus($event)\"\n      [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n      [attr.aria-label]=\"ariaLabel() || null\"\n      [attr.aria-labelledby]=\"ariaLabelledBy() || null\"\n      [attr.aria-required]=\"required()\"\n      [attr.role]=\"radioRole()\"\n      [attr.data-animated]=\"animated()\"\n      [attr.data-size]=\"size()\"\n      [attr.data-variant]=\"variant()\"\n    >\n      @if (label()) {\n      {{ label() }}\n      }\n    </mat-radio-button>\n  `,\n  styleUrls: ['./os-radio.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsRadioComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OsRadioComponent implements ControlValueAccessor {\n  size = input<OsRadioSize>('medium');\n  variant = input<OsRadioVariant>('default');\n  name = input<string>('');\n  value = model<string>('');\n  label = input<string>('');\n  checked = input(false);\n  disabled = model(false);\n  required = input(false);\n  animated = input(true);\n  role = input<OsRadioRole>('radio');\n  ariaDescribedBy = input<string>('');\n  ariaLabel = input<string>('');\n  ariaLabelledBy = input<string>('');\n\n  radioChange = output<string>();\n  radioBlurEvent = output<FocusEvent>();\n  radioFocusEvent = output<FocusEvent>();\n\n  protected inputId = `os-radio-${Math.random().toString(36).substr(2, 9)}`;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private onChange = (value: string) => {\n    // This will be set by registerOnChange\n  };\n  private onTouched = () => {\n    // This will be set by registerOnTouched\n  };\n\n  // Mapeamento interno para Material\n  protected matColor = computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'error':\n        return 'warn';\n      default:\n        return undefined;\n    }\n  });\n\n  radioClass = computed(() => {\n    return [\n      'os-radio',\n      `os-radio--${this.size()}`,\n      `os-radio--${this.variant()}`,\n      this.disabled() ? 'os-radio--disabled' : '',\n      this.checked() ? 'os-radio--checked' : '',\n      this.animated() ? 'os-radio--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  radioRole = computed(() => {\n    return this.role();\n  });\n\n  handleChange(event: { value: string }): void {\n    const value = event.value;\n\n    this.onChange(value);\n    this.radioChange.emit(value);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this.onTouched();\n    this.radioBlurEvent.emit(event);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.radioFocusEvent.emit(event);\n  }\n\n  writeValue(value: string): void {\n    // Update the model signal when FormControl value changes programmatically\n    if (value !== this.value()) {\n      this.value.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    // Update the disabled state when called by Angular Forms\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens';\n\n.os-radio {\n  display: inline-flex;\n  align-items: flex-start;\n  gap: var(--os-spacing-sm);\n  cursor: pointer;\n  user-select: none;\n  min-height: 44px; // Touch target mínimo\n  padding: var(--os-spacing-xs);\n\n  &--small {\n    gap: var(--os-spacing-xs);\n    min-height: 44px; // Touch target mínimo\n    padding: var(--os-spacing-xs);\n  }\n\n  &--large {\n    gap: var(--os-spacing-md);\n    min-height: 48px;\n    padding: var(--os-spacing-sm);\n  }\n\n  &--disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  &--animated {\n    transition: all var(--os-transition-fast) ease;\n  }\n\n  &__input {\n    position: absolute;\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  &__label {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n    cursor: pointer;\n    transition: var(--os-transition-fast);\n\n    &--disabled {\n      cursor: not-allowed;\n    }\n  }\n\n  &__circle {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 2px solid var(--os-color-outline);\n    border-radius: 50%;\n    background-color: var(--os-color-surface);\n    transition: all var(--os-transition-fast) ease;\n    flex-shrink: 0;\n    min-width: 44px; // Touch target mínimo\n    min-height: 44px; // Touch target mínimo\n\n    &--small {\n      width: 44px; // Touch target mínimo\n      height: 44px; // Touch target mínimo\n    }\n\n    &--medium {\n      width: 44px; // Touch target mínimo\n      height: 44px; // Touch target mínimo\n    }\n\n    &--large {\n      width: 48px;\n      height: 48px;\n    }\n\n    &--default {\n      border-color: var(--os-color-outline);\n    }\n\n    &--primary {\n      border-color: var(--os-color-primary);\n    }\n\n    &--secondary {\n      border-color: var(--os-color-secondary);\n    }\n\n    &--success {\n      border-color: var(--os-color-success);\n    }\n\n    &--warning {\n      border-color: var(--os-color-warning);\n    }\n\n    &--error {\n      border-color: var(--os-color-error);\n    }\n\n    &--checked {\n      border-color: var(--os-color-primary);\n\n      &.os-radio__circle--primary {\n        border-color: var(--os-color-primary);\n      }\n\n      &.os-radio__circle--secondary {\n        border-color: var(--os-color-secondary);\n      }\n\n      &.os-radio__circle--success {\n        border-color: var(--os-color-success);\n      }\n\n      &.os-radio__circle--warning {\n        border-color: var(--os-color-warning);\n      }\n\n      &.os-radio__circle--error {\n        border-color: var(--os-color-error);\n      }\n    }\n\n    &--disabled {\n      background-color: var(--os-color-surface-disabled);\n      border-color: var(--os-color-outline-disabled);\n      cursor: not-allowed;\n    }\n  }\n\n  &__dot {\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: var(--os-color-primary);\n    transition: all var(--os-transition-fast) ease;\n    transform: scale(0);\n    opacity: 0;\n\n    .os-radio__circle--primary & {\n      background-color: var(--os-color-primary);\n    }\n\n    .os-radio__circle--secondary & {\n      background-color: var(--os-color-secondary);\n    }\n\n    .os-radio__circle--success & {\n      background-color: var(--os-color-success);\n    }\n\n    .os-radio__circle--warning & {\n      background-color: var(--os-color-warning);\n    }\n\n    .os-radio__circle--error & {\n      background-color: var(--os-color-error);\n    }\n\n    .os-radio--small & {\n      width: 10px;\n      height: 10px;\n    }\n\n    .os-radio--large & {\n      width: 16px;\n      height: 16px;\n    }\n\n    .os-radio--checked & {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n\n  &__label-text {\n    font-size: var(--os-font-size-base);\n    font-weight: var(--os-font-weight-regular);\n    color: var(--os-color-on-surface);\n    line-height: var(--os-line-height-normal);\n\n    .os-radio--small & {\n      font-size: var(--os-font-size-sm);\n    }\n\n    .os-radio--large & {\n      font-size: var(--os-font-size-lg);\n    }\n\n    .os-radio--disabled & {\n      color: var(--os-color-on-surface-disabled);\n    }\n  }\n\n  &:hover:not(&--disabled) {\n    .os-radio__circle:not(.os-radio__circle--checked) {\n      border-color: var(--os-color-primary);\n      background-color: var(--os-color-primary-container);\n      transform: scale(1.02);\n    }\n  }\n\n  &:focus-within {\n    .os-radio__circle {\n      outline: var(--os-focus-ring-width) solid var(--os-focus-ring-color);\n      outline-offset: 2px;\n    }\n  }\n\n  // Active effects\n  &:active:not(&--disabled) {\n    .os-radio__circle {\n      transform: scale(0.98);\n    }\n  }\n\n  // Animações de seleção\n  &--animated {\n    .os-radio__dot {\n      animation: os-radio-select var(--os-transition-fast) ease-out;\n    }\n  }\n}\n\n// Keyframes para animações\n@keyframes os-radio-select {\n  0% {\n    transform: scale(0);\n    opacity: 0;\n  }\n  50% {\n    transform: scale(1.2);\n    opacity: 0.8;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n// Suporte para prefers-reduced-motion\n@media (prefers-reduced-motion: reduce) {\n  .os-radio {\n    &--animated {\n      transition: none;\n    }\n\n    .os-radio__circle {\n      transition: none;\n    }\n\n    .os-radio__dot {\n      transition: none;\n    }\n  }\n\n  @keyframes os-radio-select {\n    0%,\n    100% {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n}\n",
                    "styleUrl": "./os-radio.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "OsSearchBoxComponent",
            "id": "component-OsSearchBoxComponent-75a4361ccabec4ef5e8b7f3afa1e3b2af73f3c8193061ef0eabb4e0de63c1336229565105b0f85d86399510487e9e90b898bf438447c52eabfc01b0d86f7a32e",
            "file": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-search-box",
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  class=\"os-search-box\"\n  [class]=\"searchBoxClasses()\"\n  [attr.role]=\"role()\"\n  [attr.aria-controls]=\"showSuggestions() ? suggestionsListboxId() : null\"\n  [attr.aria-expanded]=\"showSuggestions() && suggestions().length > 0\"\n  [attr.aria-haspopup]=\"showSuggestions() ? 'listbox' : null\"\n  [attr.aria-activedescendant]=\"activeSuggestionId()\"\n  [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n>\n  <os-input\n    [value]=\"value()\"\n    [placeholder]=\"placeholder()\"\n    [disabled]=\"disabled()\"\n    [size]=\"inputSize()\"\n    [prefixIcon]=\"'search'\"\n    [clearable]=\"true\"\n    [ariaLabel]=\"ariaLabel()\"\n    (valueChange)=\"onValueChange($event)\"\n    (focusEvent)=\"onFocus($event)\"\n    (blurEvent)=\"onBlur($event)\"\n    (keydown)=\"onKeydown($event)\"\n  />\n\n  @if (showSuggestions() && filteredSuggestions().length > 0) {\n  <div\n    class=\"os-search-box__suggestions\"\n    [class]=\"suggestionsClass()\"\n    role=\"listbox\"\n    [attr.id]=\"suggestionsListboxId()\"\n    [attr.aria-label]=\"'Sugestões de busca'\"\n  >\n    @for (suggestion of filteredSuggestions(); track suggestion.id; let i = $index) {\n    <os-button\n      variant=\"tertiary\"\n      size=\"small\"\n      [class]=\"suggestionClass()\"\n      [class.os-search-box__suggestion--active]=\"i === activeSuggestionIndex()\"\n      (buttonClick)=\"onSuggestionClick(suggestion)\"\n      (mouseenter)=\"onSuggestionHover(suggestion, i)\"\n      [attr.aria-label]=\"'Selecionar: ' + suggestion.text\"\n      [attr.aria-posinset]=\"i + 1\"\n      [attr.aria-setsize]=\"filteredSuggestions().length\"\n      [attr.id]=\"'suggestion-' + suggestion.id\"\n    >\n      @if (suggestion.category) {\n      <span class=\"os-search-box__suggestion-category\">{{ suggestion.category }}</span>\n      }\n      <span\n        class=\"os-search-box__suggestion-text\"\n        [innerHTML]=\"suggestion.highlightedText || suggestion.text\"\n      ></span>\n    </os-button>\n    }\n  </div>\n  } @if (showSuggestions() && suggestions().length > 0 && filteredSuggestions().length === 0) {\n  <div class=\"os-search-box__no-results\" role=\"status\" [attr.aria-live]=\"'polite'\">\n    <span class=\"os-search-box__no-results-text\">Nenhuma sugestão encontrada</span>\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "required": false
                },
                {
                    "name": "debounceTime",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "required": false
                },
                {
                    "name": "enableAdvancedFilters",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 117,
                    "required": false
                },
                {
                    "name": "enableHighlight",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "required": false
                },
                {
                    "name": "enableKeyboardNavigation",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 116,
                    "required": false
                },
                {
                    "name": "maxSuggestions",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Buscar...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 104,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'searchbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSearchBoxRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 112,
                    "required": false
                },
                {
                    "name": "showSuggestions",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSearchBoxSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "required": false
                },
                {
                    "name": "suggestions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSearchSuggestion[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 103,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSearchBoxVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "required": false
                },
                {
                    "name": "debouncedSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "required": false
                },
                {
                    "name": "focusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "required": false
                },
                {
                    "name": "searchEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "required": false
                },
                {
                    "name": "suggestionHover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSearchSuggestion",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "required": false
                },
                {
                    "name": "suggestionSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSearchSuggestion",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "required": false
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 120,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeSuggestionId",
                    "defaultValue": "computed(() => {\n    const index = this.activeSuggestionIndex();\n    const suggestions = this.filteredSuggestions();\n\n    if (index >= 0 && index < suggestions.length) {\n      return `suggestion-${suggestions[index].id}`;\n    }\n\n    return null;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 183
                },
                {
                    "name": "activeSuggestionIndex",
                    "defaultValue": "signal<number>(-1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "filteredSuggestions",
                    "defaultValue": "computed(() => {\n    const suggestions = this.suggestions();\n    const value = this.value().toLowerCase();\n    const maxSuggestions = this.maxSuggestions();\n\n    if (!value || !this.enableHighlight()) {\n      return suggestions.slice(0, maxSuggestions);\n    }\n\n    const filtered = suggestions\n      .filter(\n        (suggestion) =>\n          suggestion.text.toLowerCase().includes(value) ||\n          (suggestion.category && suggestion.category.toLowerCase().includes(value))\n      )\n      .map((suggestion) => ({\n        ...suggestion,\n        highlightedText: this.enableHighlight()\n          ? this.highlightText(suggestion.text, value)\n          : suggestion.text,\n      }))\n      .slice(0, maxSuggestions);\n\n    return filtered;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 155
                },
                {
                    "name": "inputSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<OsSearchBoxSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "instanceId",
                    "defaultValue": "OsSearchBoxComponent.nextId++",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "isFocused",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 131,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "nextId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "modifierKind": [
                        123,
                        126
                    ]
                },
                {
                    "name": "searchBoxClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-search-box'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-search-box--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-search-box--${this.variant()}`);\n    }\n\n    if (this.isFocused()) {\n      classes.push('os-search-box--focused');\n    }\n\n    if (this.disabled()) {\n      classes.push('os-search-box--disabled');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 194
                },
                {
                    "name": "searchHistory",
                    "defaultValue": "signal<string[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "searchSubject",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "suggestionClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-search-box__suggestion'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-search-box__suggestion--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 230
                },
                {
                    "name": "suggestionsClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-search-box__suggestions'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-search-box__suggestions--${this.size()}`);\n    }\n\n    if (this.filteredSuggestions().length === 0) {\n      classes.push('os-search-box__suggestions--empty');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 216
                },
                {
                    "name": "suggestionsListboxId",
                    "defaultValue": "computed(() => `os-search-box-suggestions-${this.instanceId}`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 181
                }
            ],
            "methodsClass": [
                {
                    "name": "addToSearchHistory",
                    "args": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 331,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "blur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 355,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clearSearchHistory",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 345,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "focus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 349,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSearchHistory",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 341,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "highlightText",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 324,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 252,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 258,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSuggestionClick",
                    "args": [
                        {
                            "name": "suggestion",
                            "type": "OsSearchSuggestion",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 303,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "suggestion",
                            "type": "OsSearchSuggestion",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSuggestionHover",
                    "args": [
                        {
                            "name": "suggestion",
                            "type": "OsSearchSuggestion",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 307,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "suggestion",
                            "type": "OsSearchSuggestion",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onValueChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetActiveSuggestion",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 320,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectSuggestion",
                    "args": [
                        {
                            "name": "suggestion",
                            "type": "OsSearchSuggestion",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 313,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "suggestion",
                            "type": "OsSearchSuggestion",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsInputComponent",
                    "type": "component"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  input,\n  output,\n  signal,\n  effect,\n  inject,\n} from '@angular/core';\nimport { debounceTime, distinctUntilChanged, Subject } from 'rxjs';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsInputComponent } from '../../atoms/os-input/os-input.component';\n\nexport type OsSearchBoxSize = 'small' | 'medium' | 'large';\nexport type OsSearchBoxVariant = 'default' | 'outlined' | 'filled';\nexport type OsSearchBoxRole = 'searchbox' | 'combobox' | 'textbox';\n\nexport interface OsSearchSuggestion {\n  id: string;\n  text: string;\n  category?: string;\n  highlightedText?: string;\n}\n\n@Component({\n  selector: 'os-search-box',\n  standalone: true,\n  imports: [CommonModule, OsInputComponent, OsButtonComponent],\n  template: `\n    <div\n      class=\"os-search-box\"\n      [class]=\"searchBoxClasses()\"\n      [attr.role]=\"role()\"\n      [attr.aria-controls]=\"showSuggestions() ? suggestionsListboxId() : null\"\n      [attr.aria-expanded]=\"showSuggestions() && suggestions().length > 0\"\n      [attr.aria-haspopup]=\"showSuggestions() ? 'listbox' : null\"\n      [attr.aria-activedescendant]=\"activeSuggestionId()\"\n      [attr.aria-describedby]=\"ariaDescribedBy() || null\"\n    >\n      <os-input\n        [value]=\"value()\"\n        [placeholder]=\"placeholder()\"\n        [disabled]=\"disabled()\"\n        [size]=\"inputSize()\"\n        [prefixIcon]=\"'search'\"\n        [clearable]=\"true\"\n        [ariaLabel]=\"ariaLabel()\"\n        (valueChange)=\"onValueChange($event)\"\n        (focusEvent)=\"onFocus($event)\"\n        (blurEvent)=\"onBlur($event)\"\n        (keydown)=\"onKeydown($event)\"\n      />\n\n      @if (showSuggestions() && filteredSuggestions().length > 0) {\n      <div\n        class=\"os-search-box__suggestions\"\n        [class]=\"suggestionsClass()\"\n        role=\"listbox\"\n        [attr.id]=\"suggestionsListboxId()\"\n        [attr.aria-label]=\"'Sugestões de busca'\"\n      >\n        @for (suggestion of filteredSuggestions(); track suggestion.id; let i = $index) {\n        <os-button\n          variant=\"tertiary\"\n          size=\"small\"\n          [class]=\"suggestionClass()\"\n          [class.os-search-box__suggestion--active]=\"i === activeSuggestionIndex()\"\n          (buttonClick)=\"onSuggestionClick(suggestion)\"\n          (mouseenter)=\"onSuggestionHover(suggestion, i)\"\n          [attr.aria-label]=\"'Selecionar: ' + suggestion.text\"\n          [attr.aria-posinset]=\"i + 1\"\n          [attr.aria-setsize]=\"filteredSuggestions().length\"\n          [attr.id]=\"'suggestion-' + suggestion.id\"\n        >\n          @if (suggestion.category) {\n          <span class=\"os-search-box__suggestion-category\">{{ suggestion.category }}</span>\n          }\n          <span\n            class=\"os-search-box__suggestion-text\"\n            [innerHTML]=\"suggestion.highlightedText || suggestion.text\"\n          ></span>\n        </os-button>\n        }\n      </div>\n      } @if (showSuggestions() && suggestions().length > 0 && filteredSuggestions().length === 0) {\n      <div class=\"os-search-box__no-results\" role=\"status\" [attr.aria-live]=\"'polite'\">\n        <span class=\"os-search-box__no-results-text\">Nenhuma sugestão encontrada</span>\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-search-box.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-search-box-host',\n  },\n})\nexport class OsSearchBoxComponent {\n  // Inputs\n  value = input<string>('');\n  placeholder = input<string>('Buscar...');\n  disabled = input<boolean>(false);\n  size = input<OsSearchBoxSize>('medium');\n  variant = input<OsSearchBoxVariant>('default');\n  showSuggestions = input<boolean>(true);\n  suggestions = input<OsSearchSuggestion[]>([]);\n  maxSuggestions = input<number>(5);\n  debounceTime = input<number>(300);\n  role = input<OsSearchBoxRole>('searchbox');\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n  enableHighlight = input<boolean>(true);\n  enableKeyboardNavigation = input<boolean>(true);\n  enableAdvancedFilters = input<boolean>(false);\n\n  // Outputs\n  valueChange = output<string>();\n  suggestionSelect = output<OsSearchSuggestion>();\n  searchEvent = output<string>();\n  focusEvent = output<FocusEvent>();\n  blurEvent = output<FocusEvent>();\n  debouncedSearch = output<string>();\n  suggestionHover = output<OsSearchSuggestion>();\n\n  // Internal signals\n  private searchSubject = new Subject<string>();\n  protected activeSuggestionIndex = signal<number>(-1);\n  private isFocused = signal<boolean>(false);\n  private searchHistory = signal<string[]>([]);\n  private static nextId = 0;\n  private readonly instanceId = OsSearchBoxComponent.nextId++;\n\n  constructor() {\n    // Setup debounced search\n    this.searchSubject\n      .pipe(debounceTime(this.debounceTime()), distinctUntilChanged())\n      .subscribe((value) => {\n        this.debouncedSearch.emit(value);\n      });\n  }\n\n  // Computed properties\n  protected inputSize = computed(() => {\n    const sizeMap: Record<OsSearchBoxSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  filteredSuggestions = computed(() => {\n    const suggestions = this.suggestions();\n    const value = this.value().toLowerCase();\n    const maxSuggestions = this.maxSuggestions();\n\n    if (!value || !this.enableHighlight()) {\n      return suggestions.slice(0, maxSuggestions);\n    }\n\n    const filtered = suggestions\n      .filter(\n        (suggestion) =>\n          suggestion.text.toLowerCase().includes(value) ||\n          (suggestion.category && suggestion.category.toLowerCase().includes(value))\n      )\n      .map((suggestion) => ({\n        ...suggestion,\n        highlightedText: this.enableHighlight()\n          ? this.highlightText(suggestion.text, value)\n          : suggestion.text,\n      }))\n      .slice(0, maxSuggestions);\n\n    return filtered;\n  });\n\n  suggestionsListboxId = computed(() => `os-search-box-suggestions-${this.instanceId}`);\n\n  activeSuggestionId = computed(() => {\n    const index = this.activeSuggestionIndex();\n    const suggestions = this.filteredSuggestions();\n\n    if (index >= 0 && index < suggestions.length) {\n      return `suggestion-${suggestions[index].id}`;\n    }\n\n    return null;\n  });\n\n  searchBoxClasses = computed(() => {\n    const classes = ['os-search-box'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-search-box--${this.size()}`);\n    }\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-search-box--${this.variant()}`);\n    }\n\n    if (this.isFocused()) {\n      classes.push('os-search-box--focused');\n    }\n\n    if (this.disabled()) {\n      classes.push('os-search-box--disabled');\n    }\n\n    return classes.join(' ');\n  });\n\n  suggestionsClass = computed(() => {\n    const classes = ['os-search-box__suggestions'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-search-box__suggestions--${this.size()}`);\n    }\n\n    if (this.filteredSuggestions().length === 0) {\n      classes.push('os-search-box__suggestions--empty');\n    }\n\n    return classes.join(' ');\n  });\n\n  suggestionClass = computed(() => {\n    const classes = ['os-search-box__suggestion'];\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-search-box__suggestion--${this.size()}`);\n    }\n\n    return classes.join(' ');\n  });\n\n  // Event handlers\n  onValueChange(value: string): void {\n    this.valueChange.emit(value);\n    this.searchSubject.next(value);\n    this.resetActiveSuggestion();\n  }\n\n  onFocus(event: FocusEvent): void {\n    this.isFocused.set(true);\n    this.focusEvent.emit(event);\n  }\n\n  onBlur(event: FocusEvent): void {\n    this.isFocused.set(false);\n    this.blurEvent.emit(event);\n    this.resetActiveSuggestion();\n  }\n\n  onKeydown(event: KeyboardEvent): void {\n    if (!this.enableKeyboardNavigation()) return;\n\n    const suggestions = this.filteredSuggestions();\n    const currentIndex = this.activeSuggestionIndex();\n\n    switch (event.key) {\n      case 'Enter':\n        event.preventDefault();\n        if (currentIndex >= 0 && currentIndex < suggestions.length) {\n          this.selectSuggestion(suggestions[currentIndex]);\n        } else {\n          this.searchEvent.emit(this.value());\n        }\n        break;\n\n      case 'ArrowDown':\n        event.preventDefault();\n        if (suggestions.length > 0) {\n          const nextIndex = currentIndex < suggestions.length - 1 ? currentIndex + 1 : 0;\n          this.activeSuggestionIndex.set(nextIndex);\n        }\n        break;\n\n      case 'ArrowUp':\n        event.preventDefault();\n        if (suggestions.length > 0) {\n          const prevIndex = currentIndex > 0 ? currentIndex - 1 : suggestions.length - 1;\n          this.activeSuggestionIndex.set(prevIndex);\n        }\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        this.resetActiveSuggestion();\n        break;\n\n      case 'Tab':\n        if (currentIndex >= 0 && currentIndex < suggestions.length) {\n          this.selectSuggestion(suggestions[currentIndex]);\n        }\n        break;\n    }\n  }\n\n  onSuggestionClick(suggestion: OsSearchSuggestion): void {\n    this.selectSuggestion(suggestion);\n  }\n\n  onSuggestionHover(suggestion: OsSearchSuggestion, index: number): void {\n    this.activeSuggestionIndex.set(index);\n    this.suggestionHover.emit(suggestion);\n  }\n\n  // Helper methods\n  private selectSuggestion(suggestion: OsSearchSuggestion): void {\n    this.suggestionSelect.emit(suggestion);\n    this.valueChange.emit(suggestion.text);\n    this.resetActiveSuggestion();\n    this.addToSearchHistory(suggestion.text);\n  }\n\n  private resetActiveSuggestion(): void {\n    this.activeSuggestionIndex.set(-1);\n  }\n\n  private highlightText(text: string, searchTerm: string): string {\n    if (!searchTerm) return text;\n\n    const regex = new RegExp(`(${searchTerm})`, 'gi');\n    return text.replace(regex, '<mark class=\"os-search-box__highlight\">$1</mark>');\n  }\n\n  private addToSearchHistory(searchTerm: string): void {\n    if (!searchTerm.trim()) return;\n\n    const history = this.searchHistory();\n    const filtered = history.filter((term) => term !== searchTerm);\n    const newHistory = [searchTerm, ...filtered].slice(0, 10); // Keep last 10 searches\n    this.searchHistory.set(newHistory);\n  }\n\n  // Public methods for external access\n  getSearchHistory(): string[] {\n    return this.searchHistory();\n  }\n\n  clearSearchHistory(): void {\n    this.searchHistory.set([]);\n  }\n\n  focus(): void {\n    // This would need to be implemented with ViewChild to access the input element\n    // For now, we'll emit a focus event\n    this.isFocused.set(true);\n  }\n\n  blur(): void {\n    this.isFocused.set(false);\n  }\n}\n",
            "styleUrl": "./os-search-box.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 134
            },
            "extends": []
        },
        {
            "name": "OsSelectComponent",
            "id": "component-OsSelectComponent-165c361ba77bd8a2590caf24283db1db2088b2b32ad728ae413f344414fd0338fb1acf91d82abfc85f77372f9e0a0e1fc950175e8b4c761e50ebfdc72c3fbe51",
            "file": "src/app/shared/ui-components/atoms/os-select/os-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": ")"
                }
            ],
            "selector": "os-select",
            "styleUrls": [
                "./os-select.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"containerClass()\">\n  <mat-form-field [appearance]=\"appearance()\" [class]=\"formFieldClass()\">\n    @if (label()) {\n    <mat-label>{{ label() }}</mat-label>\n    }\n\n    <mat-select\n      [id]=\"selectId\"\n      [disabled]=\"disabled()\"\n      [required]=\"required()\"\n      [value]=\"value()\"\n      [placeholder]=\"placeholder()\"\n      [class]=\"selectClass()\"\n      [attr.aria-label]=\"ariaLabel() || label()\"\n      [attr.aria-describedby]=\"computedAriaDescribedBy()\"\n      [attr.aria-invalid]=\"hasError()\"\n      [attr.aria-required]=\"required() ? 'true' : 'false'\"\n      [attr.aria-disabled]=\"disabled() ? 'true' : 'false'\"\n      [attr.tabindex]=\"disabled() ? -1 : 0\"\n      (selectionChange)=\"handleChange($event)\"\n      (blur)=\"handleBlur($event)\"\n      (focus)=\"handleFocus($event)\"\n      (openedChange)=\"onOpenedChange($event)\"\n    >\n      @for (option of options(); track option.value) {\n      <mat-option [value]=\"option.value\" [disabled]=\"option.disabled\">\n        {{ option.label }}\n      </mat-option>\n      }\n    </mat-select>\n\n    @if (helperText() || hasError()) {\n    <mat-hint [id]=\"selectId + '-helper'\" [class]=\"helperClass()\">\n      {{ errorMessage() || helperText() }}\n    </mat-hint>\n    }\n  </mat-form-field>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "required": false
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "required": false
                },
                {
                    "name": "hapticFeedback",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 91,
                    "required": false
                },
                {
                    "name": "helperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "required": false
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSelectOption[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 87,
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSelectSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 94,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 84,
                    "required": false
                },
                {
                    "name": "focusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "required": false
                },
                {
                    "name": "openedChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "required": false
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 93,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "_onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 98,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 102,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "appearance",
                    "defaultValue": "computed((): MatFormFieldAppearance => 'outline')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 166,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "computedAriaDescribedBy",
                    "defaultValue": "computed(() => {\n    const helperId = this.helperText() ? this.selectId + '-helper' : null;\n    const describedBy = this.ariaDescribedBy();\n    return describedBy || helperId;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 159
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-select-container',\n      `os-select-container--${this.size()}`,\n      this.hasError() ? 'os-select-container--error' : '',\n      this.disabled() ? 'os-select-container--disabled' : '',\n      this.isFocused() ? 'os-select-container--focused' : '',\n      this.isHovered() ? 'os-select-container--hovered' : '',\n      this.isOpened() ? 'os-select-container--opened' : '',\n      this.animated() ? 'os-select-container--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "formFieldClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-select__form-field',\n      `os-select__form-field--${this.size()}`,\n      this.hasError() ? 'os-select__form-field--error' : '',\n      this.disabled() ? 'os-select__form-field--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 168,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "hasError",
                    "defaultValue": "computed(() => {\n    return !!this.errorMessage();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 155
                },
                {
                    "name": "helperClass",
                    "defaultValue": "computed(() => {\n    return ['os-select__helper', this.hasError() ? 'os-select__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 149
                },
                {
                    "name": "isFocused",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "isHovered",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "isOpened",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "labelClass",
                    "defaultValue": "computed(() => {\n    return ['os-select__label', this.required() ? 'os-select__label--required' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "selectClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-select',\n      `os-select--${this.size()}`,\n      this.hasError() ? 'os-select--error' : '',\n      this.disabled() ? 'os-select--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138
                },
                {
                    "name": "selectId",
                    "defaultValue": "`os-select-${Math.random().toString(36).substr(2, 9)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "selectWrapperClass",
                    "defaultValue": "computed(() => {\n    return ['os-select__wrapper', this.disabled() ? 'os-select__wrapper--disabled' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132
                }
            ],
            "methodsClass": [
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 179,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 192,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onOpenedChange",
                    "args": [
                        {
                            "name": "isOpened",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 197,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isOpened",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string | number",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string | number",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "triggerHapticFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatSelectModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  model,\n  signal,\n  ChangeDetectionStrategy,\n  forwardRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule, MatFormFieldAppearance } from '@angular/material/form-field';\n\nexport type OsSelectSize = 'small' | 'medium' | 'large';\n\nexport interface OsSelectOption {\n  value: string | number;\n  label: string;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'os-select',\n  standalone: true,\n  imports: [CommonModule, MatSelectModule, MatFormFieldModule],\n  template: `\n    <div [class]=\"containerClass()\">\n      <mat-form-field [appearance]=\"appearance()\" [class]=\"formFieldClass()\">\n        @if (label()) {\n        <mat-label>{{ label() }}</mat-label>\n        }\n\n        <mat-select\n          [id]=\"selectId\"\n          [disabled]=\"disabled()\"\n          [required]=\"required()\"\n          [value]=\"value()\"\n          [placeholder]=\"placeholder()\"\n          [class]=\"selectClass()\"\n          [attr.aria-label]=\"ariaLabel() || label()\"\n          [attr.aria-describedby]=\"computedAriaDescribedBy()\"\n          [attr.aria-invalid]=\"hasError()\"\n          [attr.aria-required]=\"required() ? 'true' : 'false'\"\n          [attr.aria-disabled]=\"disabled() ? 'true' : 'false'\"\n          [attr.tabindex]=\"disabled() ? -1 : 0\"\n          (selectionChange)=\"handleChange($event)\"\n          (blur)=\"handleBlur($event)\"\n          (focus)=\"handleFocus($event)\"\n          (openedChange)=\"onOpenedChange($event)\"\n        >\n          @for (option of options(); track option.value) {\n          <mat-option [value]=\"option.value\" [disabled]=\"option.disabled\">\n            {{ option.label }}\n          </mat-option>\n          }\n        </mat-select>\n\n        @if (helperText() || hasError()) {\n        <mat-hint [id]=\"selectId + '-helper'\" [class]=\"helperClass()\">\n          {{ errorMessage() || helperText() }}\n        </mat-hint>\n        }\n      </mat-form-field>\n    </div>\n  `,\n  styleUrls: ['./os-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsSelectComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OsSelectComponent implements ControlValueAccessor {\n  size = input<OsSelectSize>('medium');\n  label = input<string>('');\n  placeholder = input<string>('');\n  helperText = input<string>('');\n  errorMessage = input<string>('');\n  disabled = model(false);\n  required = input(false);\n  value = model<string | number>('');\n  options = input<OsSelectOption[]>([]);\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n  animated = input(true);\n  hapticFeedback = input(true);\n\n  valueChange = output<string | number>();\n  blurEvent = output<FocusEvent>();\n  focusEvent = output<FocusEvent>();\n  openedChange = output<boolean>();\n\n  private _onChange = (value: string | number) => {\n    // This will be set by registerOnChange\n    console.debug('onChange called with:', value);\n  };\n  private _onTouched = () => {\n    // This will be set by registerOnTouched\n  };\n\n  selectId = `os-select-${Math.random().toString(36).substr(2, 9)}`;\n  isFocused = signal(false);\n  isHovered = signal(false);\n  isOpened = signal(false);\n\n  containerClass = computed(() => {\n    return [\n      'os-select-container',\n      `os-select-container--${this.size()}`,\n      this.hasError() ? 'os-select-container--error' : '',\n      this.disabled() ? 'os-select-container--disabled' : '',\n      this.isFocused() ? 'os-select-container--focused' : '',\n      this.isHovered() ? 'os-select-container--hovered' : '',\n      this.isOpened() ? 'os-select-container--opened' : '',\n      this.animated() ? 'os-select-container--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  labelClass = computed(() => {\n    return ['os-select__label', this.required() ? 'os-select__label--required' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  selectWrapperClass = computed(() => {\n    return ['os-select__wrapper', this.disabled() ? 'os-select__wrapper--disabled' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  selectClass = computed(() => {\n    return [\n      'os-select',\n      `os-select--${this.size()}`,\n      this.hasError() ? 'os-select--error' : '',\n      this.disabled() ? 'os-select--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  helperClass = computed(() => {\n    return ['os-select__helper', this.hasError() ? 'os-select__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  hasError = computed(() => {\n    return !!this.errorMessage();\n  });\n\n  computedAriaDescribedBy = computed(() => {\n    const helperId = this.helperText() ? this.selectId + '-helper' : null;\n    const describedBy = this.ariaDescribedBy();\n    return describedBy || helperId;\n  });\n\n  // Mapeamento interno para Material\n  protected appearance = computed((): MatFormFieldAppearance => 'outline');\n\n  protected formFieldClass = computed(() => {\n    return [\n      'os-select__form-field',\n      `os-select__form-field--${this.size()}`,\n      this.hasError() ? 'os-select__form-field--error' : '',\n      this.disabled() ? 'os-select__form-field--disabled' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  handleChange(event: { value: string | number }): void {\n    const newValue = event.value;\n    this.triggerHapticFeedback();\n    this._onChange(newValue);\n    this.valueChange.emit(newValue);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this.isFocused.set(false);\n    this._onTouched();\n    this.blurEvent.emit(event);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.isFocused.set(true);\n    this.focusEvent.emit(event);\n  }\n\n  onOpenedChange(isOpened: boolean): void {\n    this.isOpened.set(isOpened);\n    this.openedChange.emit(isOpened);\n  }\n\n  triggerHapticFeedback(): void {\n    if (this.hapticFeedback() && 'vibrate' in navigator) {\n      navigator.vibrate(50); // 50ms vibration\n    }\n  }\n\n  writeValue(value: string | number): void {\n    // Update the model signal when FormControl value changes programmatically\n    if (value !== this.value()) {\n      this.value.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: string | number) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    // Update the disabled state when called by Angular Forms\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens' as tokens;\n\n.os-select-container {\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-xs);\n  width: 100%;\n  position: relative;\n\n  &--small {\n    gap: var(--os-spacing-xxs);\n  }\n\n  &--large {\n    gap: var(--os-spacing-sm);\n  }\n\n  &--error {\n    .os-select__form-field {\n      --mdc-outlined-text-field-error-outline-color: var(--os-color-error-500);\n      --mdc-outlined-text-field-error-label-color: var(--os-color-error-500);\n    }\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--focused {\n    .os-select__form-field {\n      --mdc-outlined-text-field-focus-outline-color: var(--os-color-primary-500);\n    }\n  }\n\n  &--hovered:not(&--disabled) {\n    .os-select__form-field {\n      --mdc-outlined-text-field-hover-outline-color: var(--os-color-primary-400);\n    }\n  }\n\n  &--opened {\n    .os-select__form-field {\n      --mdc-outlined-text-field-focus-outline-color: var(--os-color-primary-500);\n    }\n  }\n\n  &--animated {\n    .os-select__form-field {\n      transition: all var(--os-transition-duration-standard) var(--os-transition-easing-standard);\n    }\n  }\n}\n\n// Material form field customization\n.os-select__form-field {\n  width: 100%;\n\n  &--small {\n    .mat-mdc-form-field {\n      font-size: var(--os-font-size-sm);\n      min-height: 44px; // Touch target minimum\n    }\n  }\n\n  &--medium {\n    .mat-mdc-form-field {\n      min-height: 44px; // Touch target minimum\n    }\n  }\n\n  &--large {\n    .mat-mdc-form-field {\n      font-size: var(--os-font-size-lg);\n      min-height: 48px; // Larger touch target\n    }\n  }\n\n  &--error {\n    .mat-mdc-form-field {\n      --mdc-outlined-text-field-error-outline-color: var(--os-color-error-500);\n      --mdc-outlined-text-field-error-label-color: var(--os-color-error-500);\n    }\n  }\n\n  &--disabled {\n    .mat-mdc-form-field {\n      opacity: 0.6;\n    }\n  }\n}\n\n.os-select__label {\n  font-size: var(--os-font-size-sm);\n  font-weight: var(--os-font-weight-medium);\n  color: var(--os-color-text-primary);\n  margin-bottom: var(--os-spacing-xs);\n\n  &--required {\n    &::after {\n      content: ' *';\n      color: var(--os-color-error-500);\n    }\n  }\n}\n\n.os-select__wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n  border: 1px solid var(--os-color-border-default);\n  border-radius: var(--os-border-radius-md);\n  background-color: var(--os-color-background-primary);\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: var(--os-color-primary-400);\n  }\n\n  &:focus-within {\n    border-color: var(--os-color-primary-500);\n    box-shadow: 0 0 0 2px var(--os-color-primary-100);\n  }\n\n  &--disabled {\n    background-color: var(--os-color-background-disabled);\n    border-color: var(--os-color-border-disabled);\n    cursor: not-allowed;\n  }\n}\n\n.os-select {\n  flex: 1;\n  border: none;\n  outline: none;\n  background: transparent;\n  font-family: var(--os-font-family-primary);\n  color: var(--os-color-text-primary);\n  cursor: pointer;\n  appearance: none;\n  transition: all 0.2s ease;\n\n  &--small {\n    padding: var(--os-spacing-sm) var(--os-spacing-md);\n    padding-right: var(--os-spacing-xl);\n    font-size: var(--os-font-size-sm);\n    min-height: 44px; // Touch target minimum\n  }\n\n  &--medium {\n    padding: var(--os-spacing-md) var(--os-spacing-lg);\n    padding-right: var(--os-spacing-xl);\n    font-size: var(--os-font-size-base);\n    min-height: 44px; // Touch target minimum\n  }\n\n  &--large {\n    padding: var(--os-spacing-lg) var(--os-spacing-xl);\n    padding-right: var(--os-spacing-xl);\n    font-size: var(--os-font-size-lg);\n    min-height: 48px; // Larger touch target\n  }\n\n  &--error {\n    color: var(--os-color-error-700);\n  }\n\n  &--disabled {\n    color: var(--os-color-text-disabled);\n    cursor: not-allowed;\n  }\n\n  option {\n    padding: var(--os-spacing-sm);\n    background-color: var(--os-color-background-primary);\n    color: var(--os-color-text-primary);\n\n    &:disabled {\n      color: var(--os-color-text-disabled);\n      background-color: var(--os-color-background-disabled);\n    }\n  }\n}\n\n.os-select__arrow {\n  position: absolute;\n  right: var(--os-spacing-sm);\n  top: 50%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  color: var(--os-color-text-secondary);\n  font-size: var(--os-font-size-xs);\n  transition: transform 0.2s ease;\n\n  .os-select:focus + & {\n    transform: translateY(-50%) rotate(180deg);\n  }\n}\n\n.os-select__helper {\n  font-size: var(--os-font-size-xs);\n  color: var(--os-color-text-secondary);\n  margin-top: var(--os-spacing-xs);\n\n  &--error {\n    color: var(--os-color-error-600);\n  }\n}\n\n.os-select__required {\n  color: var(--os-color-error-500);\n  font-weight: var(--os-font-weight-bold);\n}\n\n// Responsive design\n@media (max-width: 575px) {\n  .os-select-container {\n    gap: var(--os-spacing-sm);\n  }\n\n  .os-select__form-field {\n    &--small,\n    &--medium,\n    &--large {\n      .mat-mdc-form-field {\n        min-height: 48px; // Larger touch target on mobile\n      }\n    }\n  }\n\n  .os-select {\n    &--small {\n      min-height: 48px;\n      padding: var(--os-spacing-md) var(--os-spacing-lg);\n    }\n\n    &--medium {\n      min-height: 48px;\n      padding: var(--os-spacing-lg) var(--os-spacing-xl);\n    }\n\n    &--large {\n      min-height: 52px;\n      padding: var(--os-spacing-xl) var(--os-spacing-xxl);\n    }\n  }\n}\n\n// Dark mode support\n@media (prefers-color-scheme: dark) {\n  .os-select__wrapper {\n    background-color: var(--os-color-background-primary-dark);\n    border-color: var(--os-color-border-dark);\n\n    &:hover {\n      border-color: var(--os-color-primary-400);\n    }\n\n    &:focus-within {\n      border-color: var(--os-color-primary-500);\n      box-shadow: 0 0 0 2px var(--os-color-primary-100-dark);\n    }\n\n    &--disabled {\n      background-color: var(--os-color-background-disabled-dark);\n      border-color: var(--os-color-border-disabled-dark);\n    }\n  }\n\n  .os-select {\n    color: var(--os-color-text-primary-dark);\n\n    &--error {\n      color: var(--os-color-error-400);\n    }\n\n    &--disabled {\n      color: var(--os-color-text-disabled-dark);\n    }\n\n    option {\n      background-color: var(--os-color-background-primary-dark);\n      color: var(--os-color-text-primary-dark);\n\n      &:disabled {\n        color: var(--os-color-text-disabled-dark);\n        background-color: var(--os-color-background-disabled-dark);\n      }\n    }\n  }\n\n  .os-select__label {\n    color: var(--os-color-text-primary-dark);\n  }\n\n  .os-select__helper {\n    color: var(--os-color-text-secondary-dark);\n\n    &--error {\n      color: var(--os-color-error-400);\n    }\n  }\n}\n\n// High contrast mode support\n@media (prefers-contrast: high) {\n  .os-select__wrapper {\n    border-width: 2px;\n\n    &:focus-within {\n      outline: 3px solid var(--os-color-primary-500);\n      outline-offset: 2px;\n    }\n  }\n}\n\n// Reduced motion support\n@media (prefers-reduced-motion: reduce) {\n  .os-select-container--animated {\n    .os-select__form-field {\n      transition: none;\n    }\n  }\n\n  .os-select {\n    transition: none;\n  }\n\n  .os-select__arrow {\n    transition: none;\n  }\n}\n",
                    "styleUrl": "./os-select.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "OsSidebarComponent",
            "id": "component-OsSidebarComponent-b5d9d47c975832020ded7d9838f60338f2534c3a7b36301f83e5e42cec766cb80481b0c1159557310efccfc1b11745c6194d7d4407baef0cfed17b7aea8cd9ec",
            "file": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-sidebar",
            "styleUrls": [
                "./os-sidebar.component.scss"
            ],
            "styles": [],
            "template": "<aside [class]=\"sidebarClasses()\" [attr.aria-label]=\"ariaLabel()\" role=\"complementary\">\n  <!-- Header -->\n  @if (showHeader()) {\n  <div class=\"os-sidebar__header\">\n    @if (logo()) {\n    <div class=\"os-sidebar__logo\">\n      <img [src]=\"logo()\" [alt]=\"logoAlt()\" class=\"os-sidebar__logo-image\" />\n    </div>\n    } @if (title()) {\n    <h2 class=\"os-sidebar__title\">{{ title() }}</h2>\n    } @if (showToggleButton()) {\n    <button\n      class=\"os-sidebar__toggle\"\n      [attr.aria-label]=\"isCollapsed() ? 'Expandir sidebar' : 'Colapsar sidebar'\"\n      [attr.aria-expanded]=\"!isCollapsed()\"\n      (click)=\"toggleCollapse()\"\n    >\n      <os-icon [name]=\"isCollapsed() ? 'chevron-right' : 'chevron-left'\" size=\"sm\" />\n    </button>\n    }\n  </div>\n  }\n\n  <!-- Navigation -->\n  <nav class=\"os-sidebar__nav\" role=\"navigation\">\n    <ul class=\"os-sidebar__list\" role=\"list\">\n      @for (item of items(); track item.id) {\n      <li class=\"os-sidebar__item\" role=\"none\">\n        <os-navigation-item\n          [label]=\"item.label\"\n          [icon]=\"item.icon || ''\"\n          [routerLink]=\"item.route\"\n          [variant]=\"itemVariant()\"\n          [size]=\"itemSize()\"\n          [active]=\"isActiveItem(item)\"\n          [disabled]=\"item.disabled || false\"\n          [badge]=\"item.badge ? +item.badge : null\"\n          [ariaLabel]=\"item.label\"\n          (itemClick)=\"onItemClick(item)\"\n        >\n          {{ item.label }}\n        </os-navigation-item>\n\n        <!-- Sub-items -->\n        @if (item.children && item.children.length > 0 && !isCollapsed()) {\n        <ul class=\"os-sidebar__sub-list\" role=\"list\">\n          @for (subItem of item.children; track subItem.id) {\n          <li class=\"os-sidebar__sub-item\" role=\"none\">\n            <os-navigation-item\n              [label]=\"subItem.label\"\n              [icon]=\"subItem.icon || ''\"\n              [routerLink]=\"subItem.route\"\n              [variant]=\"subItemVariant()\"\n              [size]=\"subItemSize()\"\n              [active]=\"isActiveItem(subItem)\"\n              [disabled]=\"subItem.disabled || false\"\n              [badge]=\"subItem.badge ? +subItem.badge : null\"\n              [ariaLabel]=\"subItem.label\"\n              (itemClick)=\"onItemClick(subItem)\"\n            >\n              {{ subItem.label }}\n            </os-navigation-item>\n          </li>\n          }\n        </ul>\n        }\n      </li>\n      }\n    </ul>\n  </nav>\n\n  <!-- Footer -->\n  @if (showFooter()) {\n  <div class=\"os-sidebar__footer\">\n    <ng-content select=\"[slot=footer]\"></ng-content>\n  </div>\n  }\n\n  <!-- Custom Content -->\n  @if (showCustomContent()) {\n  <div class=\"os-sidebar__custom\">\n    <ng-content select=\"[slot=custom]\"></ng-content>\n  </div>\n  }\n</aside>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeItemId",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "'Navegação lateral'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "collapsed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "logo",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 131,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "logoAlt",
                    "defaultValue": "'Logo'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showCustomContent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showFooter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showToggleButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 135,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarTheme",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "collapseChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "itemClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarItem",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 139,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "navigate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ item: SidebarItem; route?: string; href?: string }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "isCollapsed",
                    "defaultValue": "computed(() => this.collapsed())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 154
                },
                {
                    "name": "itemSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<SidebarSize, OsNavigationItemSize> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 166
                },
                {
                    "name": "itemVariant",
                    "defaultValue": "computed(() => {\n    const variantMap: Record<SidebarVariant, OsNavigationItemVariant> = {\n      default: 'primary',\n      minimal: 'secondary',\n      compact: 'default',\n      expanded: 'primary',\n    };\n    return variantMap[this.variant()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 156
                },
                {
                    "name": "sidebarClasses",
                    "defaultValue": "computed(() => {\n    const base = 'os-sidebar';\n    const variant = `os-sidebar--${this.variant()}`;\n    const size = `os-sidebar--${this.size()}`;\n    const theme = `os-sidebar--${this.theme()}`;\n    const collapsed = this.isCollapsed() ? 'os-sidebar--collapsed' : '';\n\n    return `${base} ${variant} ${size} ${theme} ${collapsed}`.trim();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "subItemSize",
                    "defaultValue": "computed(() => {\n    const sizeMap: Record<SidebarSize, OsNavigationItemSize> = {\n      small: 'small',\n      medium: 'small',\n      large: 'medium',\n    };\n    return sizeMap[this.size()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 185
                },
                {
                    "name": "subItemVariant",
                    "defaultValue": "computed(() => {\n    const variantMap: Record<SidebarVariant, OsNavigationItemVariant> = {\n      default: 'secondary',\n      minimal: 'secondary',\n      compact: 'secondary',\n      expanded: 'secondary',\n    };\n    return variantMap[this.variant()];\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 175
                }
            ],
            "methodsClass": [
                {
                    "name": "isActiveItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "SidebarItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "SidebarItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onItemClick",
                    "args": [
                        {
                            "name": "item",
                            "type": "SidebarItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "SidebarItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNavigate",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleCollapse",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "OsNavigationItemComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, output } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport {\n  OsNavigationItemComponent,\n  OsNavigationItemSize,\n  OsNavigationItemVariant,\n} from '../../molecules/os-navigation-item/os-navigation-item.component';\n\nexport interface SidebarItem {\n  id: string;\n  label: string;\n  icon?: string;\n  route?: string;\n  href?: string;\n  badge?: string | number;\n  disabled?: boolean;\n  children?: SidebarItem[];\n}\n\nexport type SidebarVariant = 'default' | 'minimal' | 'compact' | 'expanded';\nexport type SidebarSize = 'small' | 'medium' | 'large';\nexport type SidebarTheme = 'light' | 'dark';\n\n@Component({\n  selector: 'os-sidebar',\n  standalone: true,\n  imports: [CommonModule, RouterModule, OsNavigationItemComponent, OsIconComponent],\n  template: `\n    <aside [class]=\"sidebarClasses()\" [attr.aria-label]=\"ariaLabel()\" role=\"complementary\">\n      <!-- Header -->\n      @if (showHeader()) {\n      <div class=\"os-sidebar__header\">\n        @if (logo()) {\n        <div class=\"os-sidebar__logo\">\n          <img [src]=\"logo()\" [alt]=\"logoAlt()\" class=\"os-sidebar__logo-image\" />\n        </div>\n        } @if (title()) {\n        <h2 class=\"os-sidebar__title\">{{ title() }}</h2>\n        } @if (showToggleButton()) {\n        <button\n          class=\"os-sidebar__toggle\"\n          [attr.aria-label]=\"isCollapsed() ? 'Expandir sidebar' : 'Colapsar sidebar'\"\n          [attr.aria-expanded]=\"!isCollapsed()\"\n          (click)=\"toggleCollapse()\"\n        >\n          <os-icon [name]=\"isCollapsed() ? 'chevron-right' : 'chevron-left'\" size=\"sm\" />\n        </button>\n        }\n      </div>\n      }\n\n      <!-- Navigation -->\n      <nav class=\"os-sidebar__nav\" role=\"navigation\">\n        <ul class=\"os-sidebar__list\" role=\"list\">\n          @for (item of items(); track item.id) {\n          <li class=\"os-sidebar__item\" role=\"none\">\n            <os-navigation-item\n              [label]=\"item.label\"\n              [icon]=\"item.icon || ''\"\n              [routerLink]=\"item.route\"\n              [variant]=\"itemVariant()\"\n              [size]=\"itemSize()\"\n              [active]=\"isActiveItem(item)\"\n              [disabled]=\"item.disabled || false\"\n              [badge]=\"item.badge ? +item.badge : null\"\n              [ariaLabel]=\"item.label\"\n              (itemClick)=\"onItemClick(item)\"\n            >\n              {{ item.label }}\n            </os-navigation-item>\n\n            <!-- Sub-items -->\n            @if (item.children && item.children.length > 0 && !isCollapsed()) {\n            <ul class=\"os-sidebar__sub-list\" role=\"list\">\n              @for (subItem of item.children; track subItem.id) {\n              <li class=\"os-sidebar__sub-item\" role=\"none\">\n                <os-navigation-item\n                  [label]=\"subItem.label\"\n                  [icon]=\"subItem.icon || ''\"\n                  [routerLink]=\"subItem.route\"\n                  [variant]=\"subItemVariant()\"\n                  [size]=\"subItemSize()\"\n                  [active]=\"isActiveItem(subItem)\"\n                  [disabled]=\"subItem.disabled || false\"\n                  [badge]=\"subItem.badge ? +subItem.badge : null\"\n                  [ariaLabel]=\"subItem.label\"\n                  (itemClick)=\"onItemClick(subItem)\"\n                >\n                  {{ subItem.label }}\n                </os-navigation-item>\n              </li>\n              }\n            </ul>\n            }\n          </li>\n          }\n        </ul>\n      </nav>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-sidebar__footer\">\n        <ng-content select=\"[slot=footer]\"></ng-content>\n      </div>\n      }\n\n      <!-- Custom Content -->\n      @if (showCustomContent()) {\n      <div class=\"os-sidebar__custom\">\n        <ng-content select=\"[slot=custom]\"></ng-content>\n      </div>\n      }\n    </aside>\n  `,\n  styleUrls: ['./os-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsSidebarComponent {\n  // Inputs\n  readonly items = input.required<SidebarItem[]>();\n  readonly variant = input<SidebarVariant>('default');\n  readonly size = input<SidebarSize>('medium');\n  readonly theme = input<SidebarTheme>('light');\n  readonly collapsed = input<boolean>(false);\n  readonly activeItemId = input<string | null>(null);\n  readonly ariaLabel = input<string>('Navegação lateral');\n  readonly title = input<string | null>(null);\n  readonly logo = input<string | null>(null);\n  readonly logoAlt = input<string>('Logo');\n  readonly showHeader = input<boolean>(true);\n  readonly showFooter = input<boolean>(false);\n  readonly showToggleButton = input<boolean>(true);\n  readonly showCustomContent = input<boolean>(false);\n\n  // Outputs\n  readonly itemClick = output<SidebarItem>();\n  readonly navigate = output<{ item: SidebarItem; route?: string; href?: string }>();\n  readonly collapseChange = output<boolean>();\n\n  // Computed properties\n  sidebarClasses = computed(() => {\n    const base = 'os-sidebar';\n    const variant = `os-sidebar--${this.variant()}`;\n    const size = `os-sidebar--${this.size()}`;\n    const theme = `os-sidebar--${this.theme()}`;\n    const collapsed = this.isCollapsed() ? 'os-sidebar--collapsed' : '';\n\n    return `${base} ${variant} ${size} ${theme} ${collapsed}`.trim();\n  });\n\n  isCollapsed = computed(() => this.collapsed());\n\n  itemVariant = computed(() => {\n    const variantMap: Record<SidebarVariant, OsNavigationItemVariant> = {\n      default: 'primary',\n      minimal: 'secondary',\n      compact: 'default',\n      expanded: 'primary',\n    };\n    return variantMap[this.variant()];\n  });\n\n  itemSize = computed(() => {\n    const sizeMap: Record<SidebarSize, OsNavigationItemSize> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  });\n\n  subItemVariant = computed(() => {\n    const variantMap: Record<SidebarVariant, OsNavigationItemVariant> = {\n      default: 'secondary',\n      minimal: 'secondary',\n      compact: 'secondary',\n      expanded: 'secondary',\n    };\n    return variantMap[this.variant()];\n  });\n\n  subItemSize = computed(() => {\n    const sizeMap: Record<SidebarSize, OsNavigationItemSize> = {\n      small: 'small',\n      medium: 'small',\n      large: 'medium',\n    };\n    return sizeMap[this.size()];\n  });\n\n  // Methods\n  isActiveItem(item: SidebarItem): boolean {\n    const activeId = this.activeItemId();\n    return activeId === item.id;\n  }\n\n  onItemClick(item: SidebarItem): void {\n    if (item.disabled) return;\n\n    this.itemClick.emit(item);\n\n    // Auto-navigate if route or href is provided\n    if (item.route || item.href) {\n      this.navigate.emit({ item, route: item.route, href: item.href });\n    }\n  }\n\n  toggleCollapse(): void {\n    const newCollapsed = !this.isCollapsed();\n    this.collapseChange.emit(newCollapsed);\n  }\n\n  onNavigate(event: { item: SidebarItem; route?: string; href?: string }): void {\n    this.navigate.emit(event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/variables' as *;\n\n.os-sidebar {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: var(--os-color-surface);\n  border-right: 1px solid var(--os-color-border);\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n\n  // Variants\n  &--default {\n    width: 280px;\n    min-width: 280px;\n  }\n\n  &--minimal {\n    width: 240px;\n    min-width: 240px;\n  }\n\n  &--compact {\n    width: 200px;\n    min-width: 200px;\n  }\n\n  &--expanded {\n    width: 320px;\n    min-width: 320px;\n  }\n\n  // Sizes\n  &--small {\n    .os-sidebar__header {\n      padding: var(--os-spacing-sm);\n    }\n\n    .os-sidebar__nav {\n      padding: var(--os-spacing-sm);\n    }\n\n    .os-sidebar__footer {\n      padding: var(--os-spacing-sm);\n    }\n  }\n\n  &--medium {\n    .os-sidebar__header {\n      padding: var(--os-spacing-md);\n    }\n\n    .os-sidebar__nav {\n      padding: var(--os-spacing-md);\n    }\n\n    .os-sidebar__footer {\n      padding: var(--os-spacing-md);\n    }\n  }\n\n  &--large {\n    .os-sidebar__header {\n      padding: var(--os-spacing-lg);\n    }\n\n    .os-sidebar__nav {\n      padding: var(--os-spacing-lg);\n    }\n\n    .os-sidebar__footer {\n      padding: var(--os-spacing-lg);\n    }\n  }\n\n  // Themes\n  &--light {\n    background-color: var(--os-color-surface);\n    color: var(--os-color-text-primary);\n    border-right-color: var(--os-color-border);\n  }\n\n  &--dark {\n    background-color: var(--os-color-surface-dark);\n    color: var(--os-color-text-primary-light);\n    border-right-color: var(--os-color-border-dark);\n  }\n\n  // Collapsed state\n  &--collapsed {\n    width: 60px;\n    min-width: 60px;\n\n    .os-sidebar__title {\n      display: none;\n    }\n\n    .os-sidebar__logo {\n      .os-sidebar__logo-image {\n        width: 24px;\n        height: 24px;\n      }\n    }\n\n    .os-sidebar__list {\n      .os-navigation-item {\n        justify-content: center;\n        padding: var(--os-spacing-sm);\n\n        .os-navigation-item__text {\n          display: none;\n        }\n\n        .os-navigation-item__badge {\n          position: absolute;\n          top: 4px;\n          right: 4px;\n          transform: scale(0.8);\n        }\n      }\n    }\n\n    .os-sidebar__sub-list {\n      display: none;\n    }\n  }\n\n  // Header\n  &__header {\n    display: flex;\n    align-items: center;\n    gap: var(--os-spacing-sm);\n    border-bottom: 1px solid var(--os-color-border);\n    background-color: var(--os-color-surface-elevated);\n    flex-shrink: 0;\n  }\n\n  &__logo {\n    display: flex;\n    align-items: center;\n    flex-shrink: 0;\n\n    &-image {\n      width: 32px;\n      height: 32px;\n      object-fit: contain;\n      transition: all 0.3s ease;\n    }\n  }\n\n  &__title {\n    font-size: var(--os-font-size-lg);\n    font-weight: var(--os-font-weight-semibold);\n    color: var(--os-color-text-primary);\n    margin: 0;\n    flex: 1;\n    transition: all 0.3s ease;\n  }\n\n  &__toggle {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 32px;\n    height: 32px;\n    border: none;\n    background: transparent;\n    color: var(--os-color-text-secondary);\n    border-radius: var(--os-border-radius-sm);\n    cursor: pointer;\n    transition: all 0.2s ease;\n    flex-shrink: 0;\n\n    &:hover {\n      background-color: var(--os-color-surface-hover);\n      color: var(--os-color-text-primary);\n    }\n\n    &:focus {\n      outline: 2px solid var(--os-color-primary);\n      outline-offset: 2px;\n    }\n  }\n\n  // Navigation\n  &__nav {\n    flex: 1;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  &__list {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-xs);\n  }\n\n  &__item {\n    position: relative;\n  }\n\n  &__sub-list {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    margin-left: var(--os-spacing-lg);\n    margin-top: var(--os-spacing-xs);\n    display: flex;\n    flex-direction: column;\n    gap: var(--os-spacing-xs);\n    border-left: 2px solid var(--os-color-border-light);\n    padding-left: var(--os-spacing-sm);\n  }\n\n  &__sub-item {\n    position: relative;\n  }\n\n  // Footer\n  &__footer {\n    border-top: 1px solid var(--os-color-border);\n    background-color: var(--os-color-surface-elevated);\n    flex-shrink: 0;\n  }\n\n  // Custom content\n  &__custom {\n    padding: var(--os-spacing-md);\n    border-top: 1px solid var(--os-color-border);\n    background-color: var(--os-color-surface-elevated);\n    flex-shrink: 0;\n  }\n}\n\n// Responsive design\n@media (max-width: 768px) {\n  .os-sidebar {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 1000;\n    transform: translateX(-100%);\n    transition: transform 0.3s ease;\n\n    &--open {\n      transform: translateX(0);\n    }\n\n    &--collapsed {\n      transform: translateX(-100%);\n    }\n  }\n}\n\n@media (max-width: 480px) {\n  .os-sidebar {\n    width: 100vw;\n    min-width: 100vw;\n\n    &--collapsed {\n      width: 100vw;\n      min-width: 100vw;\n    }\n  }\n}\n\n// Dark theme adjustments\n.os-sidebar--dark {\n  .os-sidebar__header {\n    background-color: var(--os-color-surface-dark-elevated);\n    border-bottom-color: var(--os-color-border-dark);\n  }\n\n  .os-sidebar__footer {\n    background-color: var(--os-color-surface-dark-elevated);\n    border-top-color: var(--os-color-border-dark);\n  }\n\n  .os-sidebar__custom {\n    background-color: var(--os-color-surface-dark-elevated);\n    border-top-color: var(--os-color-border-dark);\n  }\n\n  .os-sidebar__sub-list {\n    border-left-color: var(--os-color-border-dark);\n  }\n}\n\n// Accessibility\n.os-sidebar {\n  &:focus-within {\n    outline: 2px solid var(--os-color-primary);\n    outline-offset: -2px;\n  }\n}\n\n// Animation for smooth transitions\n.os-sidebar__list {\n  .os-navigation-item {\n    transition: all 0.2s ease;\n  }\n}\n\n// Hover effects\n.os-sidebar:not(.os-sidebar--collapsed) {\n  .os-sidebar__list {\n    .os-navigation-item:hover {\n      background-color: var(--os-color-surface-hover);\n    }\n  }\n}\n",
                    "styleUrl": "./os-sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsSliderComponent",
            "id": "component-OsSliderComponent-8c0df0cff2ae457aabf3ca41e2e4e9b9ec834f565011d10b38993270a906705f43d58e2476fb7bf65eddec03a5a010fd5a0ad6d92ba5044554b0ad9ff7fc293d",
            "file": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": ")"
                }
            ],
            "selector": "os-slider",
            "styleUrls": [
                "./os-slider.component.scss"
            ],
            "styles": [],
            "template": "<div\n  [class]=\"containerClass()\"\n  [attr.data-animated]=\"animated()\"\n  [attr.data-size]=\"size()\"\n  [attr.data-format]=\"format()\"\n>\n  @if (label()) {\n  <label [for]=\"sliderId\" [class]=\"labelClass()\">\n    {{ label() }}\n    @if (required()) {\n    <span class=\"os-slider__required\" aria-label=\"required\">*</span>\n    }\n  </label>\n  }\n\n  <div [class]=\"sliderWrapperClass()\">\n    @if (showMinMax()) {\n    <span class=\"os-slider__min-value\">{{ formatValue(min()) }}</span>\n    }\n\n    <div [class]=\"sliderTrackClass()\">\n      <mat-slider\n        [id]=\"sliderId\"\n        [min]=\"min()\"\n        [max]=\"max()\"\n        [step]=\"step()\"\n        [disabled]=\"disabled()\"\n        [class]=\"sliderClass()\"\n        [color]=\"matColor()\"\n        [discrete]=\"showValue()\"\n        [showTickMarks]=\"showMinMax()\"\n        (change)=\"handleInput($event)\"\n        (blur)=\"handleBlur($event)\"\n        (focus)=\"handleFocus($event)\"\n        (input)=\"handleInput($event)\"\n        [attr.aria-describedby]=\"computedAriaDescribedBy()\"\n        [attr.aria-invalid]=\"hasError()\"\n        [attr.aria-label]=\"ariaLabel() || label()\"\n        [attr.aria-valuenow]=\"value()\"\n        [attr.aria-valuemin]=\"min()\"\n        [attr.aria-valuemax]=\"max()\"\n        [attr.aria-valuetext]=\"ariaValueText()\"\n        [attr.role]=\"sliderRole()\"\n        [attr.tabindex]=\"disabled() ? -1 : 0\"\n      >\n        <input\n          matSliderThumb\n          [value]=\"value()\"\n          [min]=\"min()\"\n          [max]=\"max()\"\n          [step]=\"step()\"\n          [disabled]=\"disabled()\"\n          [attr.aria-label]=\"ariaLabel() || label()\"\n          [attr.aria-valuenow]=\"value()\"\n          [attr.aria-valuemin]=\"min()\"\n          [attr.aria-valuemax]=\"max()\"\n        />\n      </mat-slider>\n\n      @if (showValue()) {\n      <div [class]=\"valueDisplayClass()\" [attr.aria-live]=\"ariaLive()\">\n        {{ displayValue() }}\n      </div>\n      } @if (showTooltip()) {\n      <div [class]=\"tooltipClass()\" [attr.aria-hidden]=\"true\">\n        {{ formatValue(value()) }}\n      </div>\n      }\n    </div>\n\n    @if (showMinMax()) {\n    <span class=\"os-slider__max-value\">{{ formatValue(max()) }}</span>\n    }\n  </div>\n\n  @if (helperText() || hasError()) {\n  <div\n    [id]=\"sliderId + '-helper'\"\n    [class]=\"helperClass()\"\n    [attr.aria-live]=\"hasError() ? 'assertive' : 'polite'\"\n  >\n    {{ errorMessage() || helperText() }}\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 135,
                    "required": false
                },
                {
                    "name": "currency",
                    "defaultValue": "'BRL'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "required": false
                },
                {
                    "name": "decimals",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 139,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "required": false
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "required": false
                },
                {
                    "name": "format",
                    "defaultValue": "'number'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSliderFormat",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 137,
                    "required": false
                },
                {
                    "name": "hapticFeedback",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 142,
                    "required": false
                },
                {
                    "name": "helperText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 123,
                    "required": false
                },
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 130,
                    "required": false
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 129,
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 127,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'slider'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSliderRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "required": false
                },
                {
                    "name": "showMinMax",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 133,
                    "required": false
                },
                {
                    "name": "showTooltip",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 134,
                    "required": false
                },
                {
                    "name": "showValue",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 132,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSliderSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "required": false
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 131,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blurEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 145,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "required": false
                },
                {
                    "name": "focusEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "required": false
                },
                {
                    "name": "rangeChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ min: number; max: number }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 147,
                    "required": false
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "required": false
                },
                {
                    "name": "valueChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "_onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 149,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 152,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ariaLive",
                    "defaultValue": "computed(() => {\n    return this.showValue() ? 'polite' : 'off';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 260
                },
                {
                    "name": "ariaValueText",
                    "defaultValue": "computed(() => {\n    const formattedValue = this.formatValue(this.value());\n    const minFormatted = this.formatValue(this.min());\n    const maxFormatted = this.formatValue(this.max());\n    return `${formattedValue} de ${minFormatted} a ${maxFormatted}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 253
                },
                {
                    "name": "computedAriaDescribedBy",
                    "defaultValue": "computed(() => {\n    const helperId = this.helperText() ? this.sliderId + '-helper' : null;\n    const describedBy = this.ariaDescribedBy();\n    return describedBy || helperId;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 264
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-slider-container',\n      `os-slider-container--${this.size()}`,\n      this.hasError() ? 'os-slider-container--error' : '',\n      this.disabled() ? 'os-slider-container--disabled' : '',\n      this.isFocused() ? 'os-slider-container--focused' : '',\n      this.isHovered() ? 'os-slider-container--hovered' : '',\n      this.animated() ? 'os-slider-container--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 169
                },
                {
                    "name": "displayValue",
                    "defaultValue": "computed(() => {\n    return this.formatValue(this.value());\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 245
                },
                {
                    "name": "hasError",
                    "defaultValue": "computed(() => {\n    return !!this.errorMessage();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 241
                },
                {
                    "name": "helperClass",
                    "defaultValue": "computed(() => {\n    return ['os-slider__helper', this.hasError() ? 'os-slider__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 235
                },
                {
                    "name": "isFocused",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 157
                },
                {
                    "name": "isHovered",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 158
                },
                {
                    "name": "labelClass",
                    "defaultValue": "computed(() => {\n    return ['os-slider__label', this.required() ? 'os-slider__label--required' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 183
                },
                {
                    "name": "matColor",
                    "defaultValue": "computed(() => {\n    if (this.hasError()) {\n      return 'warn';\n    }\n    return 'primary';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 271,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "sliderClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-slider',\n      `os-slider--${this.size()}`,\n      this.hasError() ? 'os-slider--error' : '',\n      this.disabled() ? 'os-slider--disabled' : '',\n      this.isFocused() ? 'os-slider--focused' : '',\n      this.isHovered() ? 'os-slider--hovered' : '',\n      this.animated() ? 'os-slider--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 201
                },
                {
                    "name": "sliderId",
                    "defaultValue": "`os-slider-${Math.random().toString(36).substr(2, 9)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 156
                },
                {
                    "name": "sliderRole",
                    "defaultValue": "computed(() => {\n    return this.role();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 249
                },
                {
                    "name": "sliderTrackClass",
                    "defaultValue": "computed(() => {\n    return ['os-slider__track', this.showValue() ? 'os-slider__track--with-value' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "sliderWrapperClass",
                    "defaultValue": "computed(() => {\n    return ['os-slider__wrapper', this.showMinMax() ? 'os-slider__wrapper--with-labels' : '']\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 189
                },
                {
                    "name": "tooltipClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-slider__tooltip',\n      `os-slider__tooltip--${this.size()}`,\n      this.animated() ? 'os-slider__tooltip--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 225
                },
                {
                    "name": "valueDisplayClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-slider__value-display',\n      `os-slider__value-display--${this.size()}`,\n      this.animated() ? 'os-slider__value-display--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 215
                }
            ],
            "methodsClass": [
                {
                    "name": "formatValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 278,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 320,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 326,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 311,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "number",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 338,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "number",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 342,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 346,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "triggerHapticFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 305,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 331,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatSliderModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  input,\n  output,\n  computed,\n  model,\n  ChangeDetectionStrategy,\n  forwardRef,\n  signal,\n  effect,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\n\nexport type OsSliderSize = 'small' | 'medium' | 'large';\nexport type OsSliderFormat = 'number' | 'currency' | 'percentage';\nexport type OsSliderRole = 'slider' | 'progressbar';\n\n@Component({\n  selector: 'os-slider',\n  standalone: true,\n  imports: [CommonModule, MatSliderModule],\n  template: `\n    <div\n      [class]=\"containerClass()\"\n      [attr.data-animated]=\"animated()\"\n      [attr.data-size]=\"size()\"\n      [attr.data-format]=\"format()\"\n    >\n      @if (label()) {\n      <label [for]=\"sliderId\" [class]=\"labelClass()\">\n        {{ label() }}\n        @if (required()) {\n        <span class=\"os-slider__required\" aria-label=\"required\">*</span>\n        }\n      </label>\n      }\n\n      <div [class]=\"sliderWrapperClass()\">\n        @if (showMinMax()) {\n        <span class=\"os-slider__min-value\">{{ formatValue(min()) }}</span>\n        }\n\n        <div [class]=\"sliderTrackClass()\">\n          <mat-slider\n            [id]=\"sliderId\"\n            [min]=\"min()\"\n            [max]=\"max()\"\n            [step]=\"step()\"\n            [disabled]=\"disabled()\"\n            [class]=\"sliderClass()\"\n            [color]=\"matColor()\"\n            [discrete]=\"showValue()\"\n            [showTickMarks]=\"showMinMax()\"\n            (change)=\"handleInput($event)\"\n            (blur)=\"handleBlur($event)\"\n            (focus)=\"handleFocus($event)\"\n            (input)=\"handleInput($event)\"\n            [attr.aria-describedby]=\"computedAriaDescribedBy()\"\n            [attr.aria-invalid]=\"hasError()\"\n            [attr.aria-label]=\"ariaLabel() || label()\"\n            [attr.aria-valuenow]=\"value()\"\n            [attr.aria-valuemin]=\"min()\"\n            [attr.aria-valuemax]=\"max()\"\n            [attr.aria-valuetext]=\"ariaValueText()\"\n            [attr.role]=\"sliderRole()\"\n            [attr.tabindex]=\"disabled() ? -1 : 0\"\n          >\n            <input\n              matSliderThumb\n              [value]=\"value()\"\n              [min]=\"min()\"\n              [max]=\"max()\"\n              [step]=\"step()\"\n              [disabled]=\"disabled()\"\n              [attr.aria-label]=\"ariaLabel() || label()\"\n              [attr.aria-valuenow]=\"value()\"\n              [attr.aria-valuemin]=\"min()\"\n              [attr.aria-valuemax]=\"max()\"\n            />\n          </mat-slider>\n\n          @if (showValue()) {\n          <div [class]=\"valueDisplayClass()\" [attr.aria-live]=\"ariaLive()\">\n            {{ displayValue() }}\n          </div>\n          } @if (showTooltip()) {\n          <div [class]=\"tooltipClass()\" [attr.aria-hidden]=\"true\">\n            {{ formatValue(value()) }}\n          </div>\n          }\n        </div>\n\n        @if (showMinMax()) {\n        <span class=\"os-slider__max-value\">{{ formatValue(max()) }}</span>\n        }\n      </div>\n\n      @if (helperText() || hasError()) {\n      <div\n        [id]=\"sliderId + '-helper'\"\n        [class]=\"helperClass()\"\n        [attr.aria-live]=\"hasError() ? 'assertive' : 'polite'\"\n      >\n        {{ errorMessage() || helperText() }}\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OsSliderComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OsSliderComponent implements ControlValueAccessor {\n  size = input<OsSliderSize>('medium');\n  label = input<string>('');\n  helperText = input<string>('');\n  errorMessage = input<string>('');\n  disabled = model(false);\n  required = input(false);\n  value = model<number>(0);\n  min = input<number>(0);\n  max = input<number>(100);\n  step = input<number>(1);\n  showValue = input(true);\n  showMinMax = input(false);\n  showTooltip = input(false);\n  ariaLabel = input<string>('');\n  ariaDescribedBy = input<string>('');\n  format = input<OsSliderFormat>('number');\n  currency = input<string>('BRL');\n  decimals = input<number>(2);\n  animated = input(true);\n  role = input<OsSliderRole>('slider');\n  hapticFeedback = input(true);\n\n  valueChange = output<number>();\n  blurEvent = output<FocusEvent>();\n  focusEvent = output<FocusEvent>();\n  rangeChange = output<{ min: number; max: number }>();\n\n  private _onChange = (value: number) => {\n    // This will be set by registerOnChange\n  };\n  private _onTouched = () => {\n    // This will be set by registerOnTouched\n  };\n\n  sliderId = `os-slider-${Math.random().toString(36).substr(2, 9)}`;\n  isFocused = signal(false);\n  isHovered = signal(false);\n\n  constructor() {\n    // Watch for min/max changes and emit range change\n    effect(() => {\n      const minValue = this.min();\n      const maxValue = this.max();\n      this.rangeChange.emit({ min: minValue, max: maxValue });\n    });\n  }\n\n  containerClass = computed(() => {\n    return [\n      'os-slider-container',\n      `os-slider-container--${this.size()}`,\n      this.hasError() ? 'os-slider-container--error' : '',\n      this.disabled() ? 'os-slider-container--disabled' : '',\n      this.isFocused() ? 'os-slider-container--focused' : '',\n      this.isHovered() ? 'os-slider-container--hovered' : '',\n      this.animated() ? 'os-slider-container--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  labelClass = computed(() => {\n    return ['os-slider__label', this.required() ? 'os-slider__label--required' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  sliderWrapperClass = computed(() => {\n    return ['os-slider__wrapper', this.showMinMax() ? 'os-slider__wrapper--with-labels' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  sliderTrackClass = computed(() => {\n    return ['os-slider__track', this.showValue() ? 'os-slider__track--with-value' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  sliderClass = computed(() => {\n    return [\n      'os-slider',\n      `os-slider--${this.size()}`,\n      this.hasError() ? 'os-slider--error' : '',\n      this.disabled() ? 'os-slider--disabled' : '',\n      this.isFocused() ? 'os-slider--focused' : '',\n      this.isHovered() ? 'os-slider--hovered' : '',\n      this.animated() ? 'os-slider--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  valueDisplayClass = computed(() => {\n    return [\n      'os-slider__value-display',\n      `os-slider__value-display--${this.size()}`,\n      this.animated() ? 'os-slider__value-display--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  tooltipClass = computed(() => {\n    return [\n      'os-slider__tooltip',\n      `os-slider__tooltip--${this.size()}`,\n      this.animated() ? 'os-slider__tooltip--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  helperClass = computed(() => {\n    return ['os-slider__helper', this.hasError() ? 'os-slider__helper--error' : '']\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  hasError = computed(() => {\n    return !!this.errorMessage();\n  });\n\n  displayValue = computed(() => {\n    return this.formatValue(this.value());\n  });\n\n  sliderRole = computed(() => {\n    return this.role();\n  });\n\n  ariaValueText = computed(() => {\n    const formattedValue = this.formatValue(this.value());\n    const minFormatted = this.formatValue(this.min());\n    const maxFormatted = this.formatValue(this.max());\n    return `${formattedValue} de ${minFormatted} a ${maxFormatted}`;\n  });\n\n  ariaLive = computed(() => {\n    return this.showValue() ? 'polite' : 'off';\n  });\n\n  computedAriaDescribedBy = computed(() => {\n    const helperId = this.helperText() ? this.sliderId + '-helper' : null;\n    const describedBy = this.ariaDescribedBy();\n    return describedBy || helperId;\n  });\n\n  // Mapeamento interno para Material\n  protected matColor = computed(() => {\n    if (this.hasError()) {\n      return 'warn';\n    }\n    return 'primary';\n  });\n\n  formatValue(value: number): string {\n    const format = this.format();\n    const decimals = this.decimals();\n    const currency = this.currency();\n\n    switch (format) {\n      case 'currency':\n        return new Intl.NumberFormat('pt-BR', {\n          style: 'currency',\n          currency: currency,\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(value);\n      case 'percentage':\n        return new Intl.NumberFormat('pt-BR', {\n          style: 'percent',\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(value / 100);\n      default:\n        return new Intl.NumberFormat('pt-BR', {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(value);\n    }\n  }\n\n  triggerHapticFeedback(): void {\n    if (this.hapticFeedback() && 'vibrate' in navigator) {\n      navigator.vibrate(50); // 50ms vibration\n    }\n  }\n\n  handleInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const newValue = target?.value ? Number(target.value) : this.value();\n\n    this.triggerHapticFeedback();\n    this._onChange(newValue);\n    this.valueChange.emit(newValue);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this.isFocused.set(false);\n    this._onTouched();\n    this.blurEvent.emit(event);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.isFocused.set(true);\n    this.focusEvent.emit(event);\n  }\n\n  writeValue(value: number): void {\n    // Update the model signal when FormControl value changes programmatically\n    if (value !== this.value()) {\n      this.value.set(value);\n    }\n  }\n\n  registerOnChange(fn: (value: number) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    // Update the disabled state when called by Angular Forms\n    this.disabled.set(isDisabled);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens' as tokens;\n\n.os-slider-container {\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-xs);\n  width: 100%;\n  position: relative;\n\n  &--small {\n    gap: var(--os-spacing-xxs);\n  }\n\n  &--large {\n    gap: var(--os-spacing-sm);\n  }\n\n  &--error {\n    .mat-mdc-slider {\n      --mdc-slider-track-color: var(--os-color-error-100);\n      --mdc-slider-handle-color: var(--os-color-error-500);\n      --mdc-slider-focus-handle-color: var(--os-color-error-600);\n      --mdc-slider-hover-handle-color: var(--os-color-error-600);\n      --mdc-slider-active-track-color: var(--os-color-error-500);\n    }\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--focused {\n    .mat-mdc-slider {\n      --mdc-slider-focus-handle-color: var(--os-color-primary-600);\n    }\n  }\n\n  &--hovered {\n    .mat-mdc-slider {\n      --mdc-slider-hover-handle-color: var(--os-color-primary-600);\n    }\n  }\n\n  &--animated {\n    .os-slider__value-display,\n    .os-slider__tooltip {\n      transition: all 0.2s ease-in-out;\n    }\n  }\n}\n\n.os-slider__label {\n  font-size: var(--os-font-size-sm);\n  font-weight: var(--os-font-weight-medium);\n  color: var(--os-color-text-primary);\n  margin-bottom: var(--os-spacing-xs);\n\n  &--required {\n    &::after {\n      content: ' *';\n      color: var(--os-color-error-500);\n    }\n  }\n}\n\n.os-slider__wrapper {\n  display: flex;\n  align-items: center;\n  gap: var(--os-spacing-sm);\n  min-height: 44px; // Touch target minimum\n\n  &--with-labels {\n    gap: var(--os-spacing-md);\n  }\n}\n\n.os-slider__track {\n  position: relative;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  height: 20px;\n  min-height: 44px; // Touch target minimum\n  padding: 12px 0; // Extra touch area\n\n  &--with-value {\n    margin-bottom: var(--os-spacing-sm);\n  }\n}\n\n// Material Slider customizations\n.mat-mdc-slider {\n  width: 100%;\n  min-height: 44px; // Touch target minimum\n\n  // Customize Material colors to match OrçaSonhos theme\n  --mdc-slider-track-color: var(--os-color-background-secondary);\n  --mdc-slider-handle-color: var(--os-color-primary-500);\n  --mdc-slider-focus-handle-color: var(--os-color-primary-600);\n  --mdc-slider-hover-handle-color: var(--os-color-primary-600);\n  --mdc-slider-active-track-color: var(--os-color-primary-500);\n  --mdc-slider-inactive-track-color: var(--os-color-background-secondary);\n  --mdc-slider-disabled-track-color: var(--os-color-background-disabled);\n  --mdc-slider-disabled-handle-color: var(--os-color-text-disabled);\n  --mdc-slider-disabled-active-track-color: var(--os-color-background-disabled);\n  --mdc-slider-disabled-inactive-track-color: var(--os-color-background-disabled);\n\n  // Focus ring using design tokens\n  --mdc-slider-focus-ring-width: var(--os-focus-ring-width);\n  --mdc-slider-focus-ring-color: var(--os-focus-ring-color);\n\n  // Hover and focus states\n  &:hover {\n    --mdc-slider-hover-handle-color: var(--os-color-primary-600);\n  }\n\n  &:focus-within {\n    --mdc-slider-focus-handle-color: var(--os-color-primary-600);\n  }\n}\n\n.os-slider {\n  // Size variants for Material slider\n  &--small {\n    .mat-mdc-slider {\n      --mdc-slider-handle-size: 20px;\n      --mdc-slider-track-height: 4px;\n      min-height: 44px; // Touch target minimum\n    }\n  }\n\n  &--medium {\n    .mat-mdc-slider {\n      --mdc-slider-handle-size: 24px;\n      --mdc-slider-track-height: 6px;\n      min-height: 44px; // Touch target minimum\n    }\n  }\n\n  &--large {\n    .mat-mdc-slider {\n      --mdc-slider-handle-size: 28px;\n      --mdc-slider-track-height: 8px;\n      min-height: 48px; // Larger touch target\n    }\n  }\n\n  &--error {\n    .mat-mdc-slider {\n      --mdc-slider-track-color: var(--os-color-error-100);\n      --mdc-slider-handle-color: var(--os-color-error-500);\n      --mdc-slider-focus-handle-color: var(--os-color-error-600);\n      --mdc-slider-hover-handle-color: var(--os-color-error-600);\n      --mdc-slider-active-track-color: var(--os-color-error-500);\n    }\n  }\n\n  &--disabled {\n    .mat-mdc-slider {\n      --mdc-slider-disabled-track-color: var(--os-color-background-disabled);\n      --mdc-slider-disabled-handle-color: var(--os-color-text-disabled);\n    }\n  }\n\n  &--focused {\n    .mat-mdc-slider {\n      --mdc-slider-focus-handle-color: var(--os-color-primary-600);\n    }\n  }\n\n  &--hovered {\n    .mat-mdc-slider {\n      --mdc-slider-hover-handle-color: var(--os-color-primary-600);\n    }\n  }\n\n  &--animated {\n    .mat-mdc-slider {\n      transition: all 0.2s ease-in-out;\n    }\n  }\n}\n\n.os-slider__value-display {\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: var(--os-color-primary-500);\n  color: var(--os-color-background-primary);\n  padding: var(--os-spacing-xs) var(--os-spacing-sm);\n  border-radius: var(--os-border-radius-sm);\n  font-size: var(--os-font-size-xs);\n  font-weight: var(--os-font-weight-medium);\n  white-space: nowrap;\n  pointer-events: none;\n  z-index: 1;\n  box-shadow: var(--os-shadow-sm);\n\n  &--small {\n    font-size: var(--os-font-size-xxs);\n    padding: var(--os-spacing-xxs) var(--os-spacing-xs);\n  }\n\n  &--large {\n    font-size: var(--os-font-size-sm);\n    padding: var(--os-spacing-sm) var(--os-spacing-md);\n  }\n\n  &--animated {\n    transition: all 0.2s ease-in-out;\n  }\n}\n\n.os-slider__tooltip {\n  position: absolute;\n  top: -40px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: var(--os-color-background-elevated);\n  color: var(--os-color-text-primary);\n  padding: var(--os-spacing-xs) var(--os-spacing-sm);\n  border-radius: var(--os-border-radius-sm);\n  font-size: var(--os-font-size-xs);\n  font-weight: var(--os-font-weight-medium);\n  white-space: nowrap;\n  pointer-events: none;\n  z-index: 2;\n  box-shadow: var(--os-shadow-md);\n  border: 1px solid var(--os-color-border);\n\n  &--small {\n    font-size: var(--os-font-size-xxs);\n    padding: var(--os-spacing-xxs) var(--os-spacing-xs);\n  }\n\n  &--large {\n    font-size: var(--os-font-size-sm);\n    padding: var(--os-spacing-sm) var(--os-spacing-md);\n  }\n\n  &--animated {\n    transition: all 0.2s ease-in-out;\n  }\n}\n\n.os-slider__min-value,\n.os-slider__max-value {\n  font-size: var(--os-font-size-xs);\n  color: var(--os-color-text-secondary);\n  font-weight: var(--os-font-weight-medium);\n  min-width: 20px;\n  text-align: center;\n  user-select: none;\n}\n\n.os-slider__helper {\n  font-size: var(--os-font-size-xs);\n  color: var(--os-color-text-secondary);\n  margin-top: var(--os-spacing-xs);\n\n  &--error {\n    color: var(--os-color-error-600);\n  }\n}\n\n.os-slider__required {\n  color: var(--os-color-error-500);\n  font-weight: var(--os-font-weight-bold);\n}\n\n// Responsive design\n@media (max-width: 575px) {\n  .os-slider-container {\n    gap: var(--os-spacing-xxs);\n  }\n\n  .os-slider__wrapper {\n    min-height: 48px; // Larger touch target on mobile\n  }\n\n  .os-slider__track {\n    min-height: 48px;\n    padding: 14px 0; // Extra touch area on mobile\n  }\n\n  .os-slider {\n    &--small,\n    &--medium,\n    &--large {\n      .mat-mdc-slider {\n        min-height: 48px; // Larger touch target on mobile\n      }\n    }\n  }\n}\n\n// Dark mode support\n@media (prefers-color-scheme: dark) {\n  .os-slider__tooltip {\n    background: var(--os-color-background-elevated-dark);\n    color: var(--os-color-text-primary-dark);\n    border-color: var(--os-color-border-dark);\n  }\n}\n\n// High contrast mode support\n@media (prefers-contrast: high) {\n  .os-slider__value-display {\n    border: 2px solid var(--os-color-text-primary);\n  }\n\n  .os-slider__tooltip {\n    border: 2px solid var(--os-color-text-primary);\n  }\n}\n\n// Reduced motion support\n@media (prefers-reduced-motion: reduce) {\n  .os-slider-container--animated {\n    .os-slider__value-display,\n    .os-slider__tooltip,\n    .mat-mdc-slider {\n      transition: none;\n    }\n  }\n}\n",
                    "styleUrl": "./os-slider.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 158
            },
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "OsSpinnerComponent",
            "id": "component-OsSpinnerComponent-4ce5bb80760acf9874249dd4389fee63adebb329ad773b309215bf59ef78e5ffb4679203b745dfeec2e49345fead6e7bcbbe18f8f0986b3d24a49cb52c7d0d2b",
            "file": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-spinner",
            "styleUrls": [
                "./os-spinner.component.scss"
            ],
            "styles": [],
            "template": "<div\n  [class]=\"spinnerWrapperClass()\"\n  [attr.aria-live]=\"ariaLive()\"\n  [attr.aria-label]=\"ariaLabel()\"\n  [attr.role]=\"spinnerRole()\"\n>\n  <mat-spinner\n    [class]=\"spinnerClass()\"\n    [attr.aria-label]=\"ariaLabel() || 'Loading'\"\n    [attr.aria-hidden]=\"ariaHidden()\"\n    [diameter]=\"matDiameter()\"\n    [color]=\"matColor()\"\n  ></mat-spinner>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "required": false
                },
                {
                    "name": "ariaHidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "'Loading'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "required": false
                },
                {
                    "name": "fadeIn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "required": false
                },
                {
                    "name": "fadeOut",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'status'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSpinnerRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSpinnerSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "required": false
                },
                {
                    "name": "type",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSpinnerType",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsSpinnerVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ariaLive",
                    "defaultValue": "computed(() => {\n    return this.role() === 'status' ? 'polite' : null;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "matColor",
                    "defaultValue": "computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary'; // Material não tem success, usar primary\n      case 'warning':\n        return 'accent'; // Material não tem warning, usar accent\n      case 'error':\n        return 'warn';\n      case 'info':\n        return 'primary'; // Material não tem info, usar primary\n      default:\n        return undefined; // Usar cor padrão do Material\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "matDiameter",
                    "defaultValue": "computed(() => {\n    switch (this.size()) {\n      case 'xs':\n        return 16;\n      case 'sm':\n        return 20;\n      case 'md':\n        return 24;\n      case 'lg':\n        return 32;\n      case 'xl':\n        return 40;\n      default:\n        return 24;\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "spinnerClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-spinner',\n      `os-spinner--${this.size()}`,\n      `os-spinner--${this.variant()}`,\n      this.animated() ? 'os-spinner--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "spinnerInnerClass",
                    "defaultValue": "computed(() => {\n    return ['os-spinner__inner', `os-spinner__inner--${this.size()}`].filter(Boolean).join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "spinnerRole",
                    "defaultValue": "computed(() => {\n    return this.role();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "spinnerWrapperClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-spinner-wrapper',\n      `os-spinner-wrapper--${this.type()}`,\n      `os-spinner-wrapper--${this.size()}`,\n      this.animated() ? 'os-spinner-wrapper--animated' : '',\n      this.fadeIn() ? 'os-spinner-wrapper--fade-in' : '',\n      this.fadeOut() ? 'os-spinner-wrapper--fade-out' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressSpinnerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nexport type OsSpinnerSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\nexport type OsSpinnerVariant =\n  | 'default'\n  | 'primary'\n  | 'secondary'\n  | 'success'\n  | 'warning'\n  | 'error'\n  | 'info';\nexport type OsSpinnerRole = 'status' | 'progressbar' | 'presentation';\nexport type OsSpinnerType = 'default' | 'overlay';\n\n@Component({\n  selector: 'os-spinner',\n  standalone: true,\n  imports: [CommonModule, MatProgressSpinnerModule],\n  template: `\n    <div\n      [class]=\"spinnerWrapperClass()\"\n      [attr.aria-live]=\"ariaLive()\"\n      [attr.aria-label]=\"ariaLabel()\"\n      [attr.role]=\"spinnerRole()\"\n    >\n      <mat-spinner\n        [class]=\"spinnerClass()\"\n        [attr.aria-label]=\"ariaLabel() || 'Loading'\"\n        [attr.aria-hidden]=\"ariaHidden()\"\n        [diameter]=\"matDiameter()\"\n        [color]=\"matColor()\"\n      ></mat-spinner>\n    </div>\n  `,\n  styleUrls: ['./os-spinner.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsSpinnerComponent {\n  size = input<OsSpinnerSize>('md');\n  variant = input<OsSpinnerVariant>('default');\n  type = input<OsSpinnerType>('default');\n  role = input<OsSpinnerRole>('status');\n  ariaLabel = input<string>('Loading');\n  ariaHidden = input(false);\n  animated = input(true);\n  fadeIn = input(true);\n  fadeOut = input(true);\n\n  spinnerWrapperClass = computed(() => {\n    return [\n      'os-spinner-wrapper',\n      `os-spinner-wrapper--${this.type()}`,\n      `os-spinner-wrapper--${this.size()}`,\n      this.animated() ? 'os-spinner-wrapper--animated' : '',\n      this.fadeIn() ? 'os-spinner-wrapper--fade-in' : '',\n      this.fadeOut() ? 'os-spinner-wrapper--fade-out' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  spinnerClass = computed(() => {\n    return [\n      'os-spinner',\n      `os-spinner--${this.size()}`,\n      `os-spinner--${this.variant()}`,\n      this.animated() ? 'os-spinner--animated' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  spinnerInnerClass = computed(() => {\n    return ['os-spinner__inner', `os-spinner__inner--${this.size()}`].filter(Boolean).join(' ');\n  });\n\n  spinnerRole = computed(() => {\n    return this.role();\n  });\n\n  ariaLive = computed(() => {\n    return this.role() === 'status' ? 'polite' : null;\n  });\n\n  // Mapeamento interno para Angular Material\n  protected matDiameter = computed(() => {\n    switch (this.size()) {\n      case 'xs':\n        return 16;\n      case 'sm':\n        return 20;\n      case 'md':\n        return 24;\n      case 'lg':\n        return 32;\n      case 'xl':\n        return 40;\n      default:\n        return 24;\n    }\n  });\n\n  protected matColor = computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary'; // Material não tem success, usar primary\n      case 'warning':\n        return 'accent'; // Material não tem warning, usar accent\n      case 'error':\n        return 'warn';\n      case 'info':\n        return 'primary'; // Material não tem info, usar primary\n      default:\n        return undefined; // Usar cor padrão do Material\n    }\n  });\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// Spinner wrapper with overlay support\n.os-spinner-wrapper {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n\n  // Overlay type for full page loading\n  &--overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--os-color-background-overlay, rgba(0, 0, 0, 0.5));\n    z-index: var(--os-z-index-overlay, 1000);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  // Responsive sizes\n  &--xs {\n    min-height: var(--os-touch-target-min, 44px);\n    min-width: var(--os-touch-target-min, 44px);\n  }\n\n  &--sm {\n    min-height: var(--os-touch-target-min, 44px);\n    min-width: var(--os-touch-target-min, 44px);\n  }\n\n  &--md {\n    min-height: var(--os-touch-target-min, 44px);\n    min-width: var(--os-touch-target-min, 44px);\n  }\n\n  &--lg {\n    min-height: 48px;\n    min-width: 48px;\n  }\n\n  &--xl {\n    min-height: 56px;\n    min-width: 56px;\n  }\n\n  // Animations\n  &--animated {\n    animation: os-spinner-fade-in 0.3s ease-in-out;\n  }\n\n  &--fade-in {\n    animation: os-spinner-fade-in 0.3s ease-in-out;\n  }\n\n  &--fade-out {\n    animation: os-spinner-fade-out 0.3s ease-in-out;\n  }\n}\n\n// Spinner base styles\n.os-spinner {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n\n  // GPU acceleration for performance\n  transform: translateZ(0);\n  will-change: transform;\n\n  // Responsive sizing\n  &--xs {\n    width: 16px;\n    height: 16px;\n  }\n\n  &--sm {\n    width: 20px;\n    height: 20px;\n  }\n\n  &--md {\n    width: 24px;\n    height: 24px;\n  }\n\n  &--lg {\n    width: 32px;\n    height: 32px;\n  }\n\n  &--xl {\n    width: 40px;\n    height: 40px;\n  }\n\n  // Variants with design tokens\n  &--default {\n    color: var(--os-color-primary-500, #1976d2);\n  }\n\n  &--primary {\n    color: var(--os-color-primary-500, #1976d2);\n  }\n\n  &--secondary {\n    color: var(--os-color-secondary-500, #9c27b0);\n  }\n\n  &--success {\n    color: var(--os-color-success-500, #4caf50);\n  }\n\n  &--warning {\n    color: var(--os-color-warning-500, #ff9800);\n  }\n\n  &--error {\n    color: var(--os-color-error-500, #f44336);\n  }\n\n  &--info {\n    color: var(--os-color-info-500, #2196f3);\n  }\n\n  // Animation support\n  &--animated {\n    animation: os-spinner-rotate 1s linear infinite;\n  }\n\n  // Mobile optimizations\n  @media (max-width: 575px) {\n    &--xs,\n    &--sm,\n    &--md {\n      min-width: var(--os-touch-target-min, 44px);\n      min-height: var(--os-touch-target-min, 44px);\n    }\n  }\n\n  // Reduced motion support\n  @media (prefers-reduced-motion: reduce) {\n    &--animated {\n      animation: none;\n    }\n  }\n}\n\n// Keyframe animations\n@keyframes os-spinner-rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes os-spinner-fade-in {\n  from {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes os-spinner-fade-out {\n  from {\n    opacity: 1;\n    transform: scale(1);\n  }\n  to {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n}\n\n// Dark mode support\n@media (prefers-color-scheme: dark) {\n  .os-spinner {\n    &--default {\n      color: var(--os-color-primary-300, #64b5f6);\n    }\n\n    &--primary {\n      color: var(--os-color-primary-300, #64b5f6);\n    }\n\n    &--secondary {\n      color: var(--os-color-secondary-300, #ce93d8);\n    }\n\n    &--success {\n      color: var(--os-color-success-300, #81c784);\n    }\n\n    &--warning {\n      color: var(--os-color-warning-300, #ffb74d);\n    }\n\n    &--error {\n      color: var(--os-color-error-300, #e57373);\n    }\n\n    &--info {\n      color: var(--os-color-info-300, #64b5f6);\n    }\n  }\n}\n\n// High contrast mode support\n@media (prefers-contrast: high) {\n  .os-spinner {\n    &--default,\n    &--primary,\n    &--secondary,\n    &--success,\n    &--warning,\n    &--error,\n    &--info {\n      color: var(--os-color-text-primary, #000000);\n      filter: contrast(2);\n    }\n  }\n}\n",
                    "styleUrl": "./os-spinner.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsToggleComponent",
            "id": "component-OsToggleComponent-81d801f72c0a3ff1831bf5358b7c648de89f42b69c3253446945022461373dcddb5496103a943ebc86a3003c9b1a7a1dda2e312840f7e390781c19ba03039d94",
            "file": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-toggle",
            "styleUrls": [
                "./os-toggle.component.scss"
            ],
            "styles": [],
            "template": "<div\n  [class]=\"toggleClasses()\"\n  [attr.data-size]=\"size()\"\n  [attr.data-variant]=\"variant()\"\n  [attr.data-animated]=\"animated()\"\n  [attr.data-checked]=\"checked()\"\n  [attr.data-disabled]=\"disabled()\"\n>\n  <mat-slide-toggle\n    [id]=\"id()\"\n    [name]=\"name()\"\n    [disabled]=\"disabled()\"\n    [checked]=\"checked()\"\n    [color]=\"matColor()\"\n    [class]=\"'os-toggle__input'\"\n    [attr.aria-label]=\"ariaLabel()\"\n    [attr.aria-describedby]=\"ariaDescribedBy()\"\n    [attr.aria-required]=\"required()\"\n    [attr.role]=\"toggleRole()\"\n    [attr.tabindex]=\"disabled() ? -1 : 0\"\n    (change)=\"onToggle($event)\"\n    (focus)=\"onFocus()\"\n    (blur)=\"onBlur()\"\n  >\n    @if (label()) {\n    <span class=\"os-toggle__label-text\">{{ label() }}</span>\n    }\n  </mat-slide-toggle>\n\n  @if (description()) {\n  <div class=\"os-toggle__description\" [id]=\"descriptionId()\">\n    {{ description() }}\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "ariaDescribedBy",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "description",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "id",
                    "defaultValue": "`toggle-${Math.random().toString(36).substr(2, 9)}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'switch'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsToggleRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsToggleSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsToggleVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blurred",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "focused",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "toggled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "descriptionId",
                    "defaultValue": "computed(() => (this.description() ? `${this.id()}-description` : null))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "matColor",
                    "defaultValue": "computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'danger':\n        return 'warn';\n      default:\n        return undefined;\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "toggleClasses",
                    "defaultValue": "computed(() => {\n    const classes = ['os-toggle'];\n    classes.push(`os-toggle--${this.size()}`);\n    classes.push(`os-toggle--${this.variant()}`);\n\n    if (this.disabled()) {\n      classes.push('os-toggle--disabled');\n    }\n\n    if (this.checked()) {\n      classes.push('os-toggle--checked');\n    }\n\n    if (this.animated()) {\n      classes.push('os-toggle--animated');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 95,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "toggleRole",
                    "defaultValue": "computed(() => this.role())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onToggle",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatSlideToggleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nexport type OsToggleSize = 'small' | 'medium' | 'large';\nexport type OsToggleVariant = 'primary' | 'secondary' | 'success' | 'warning' | 'danger';\nexport type OsToggleRole = 'switch' | 'checkbox';\n\n@Component({\n  selector: 'os-toggle',\n  standalone: true,\n  imports: [CommonModule, FormsModule, MatSlideToggleModule],\n  template: `\n    <div\n      [class]=\"toggleClasses()\"\n      [attr.data-size]=\"size()\"\n      [attr.data-variant]=\"variant()\"\n      [attr.data-animated]=\"animated()\"\n      [attr.data-checked]=\"checked()\"\n      [attr.data-disabled]=\"disabled()\"\n    >\n      <mat-slide-toggle\n        [id]=\"id()\"\n        [name]=\"name()\"\n        [disabled]=\"disabled()\"\n        [checked]=\"checked()\"\n        [color]=\"matColor()\"\n        [class]=\"'os-toggle__input'\"\n        [attr.aria-label]=\"ariaLabel()\"\n        [attr.aria-describedby]=\"ariaDescribedBy()\"\n        [attr.aria-required]=\"required()\"\n        [attr.role]=\"toggleRole()\"\n        [attr.tabindex]=\"disabled() ? -1 : 0\"\n        (change)=\"onToggle($event)\"\n        (focus)=\"onFocus()\"\n        (blur)=\"onBlur()\"\n      >\n        @if (label()) {\n        <span class=\"os-toggle__label-text\">{{ label() }}</span>\n        }\n      </mat-slide-toggle>\n\n      @if (description()) {\n      <div class=\"os-toggle__description\" [id]=\"descriptionId()\">\n        {{ description() }}\n      </div>\n      }\n    </div>\n  `,\n  styleUrls: ['./os-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OsToggleComponent {\n  readonly id = input<string>(`toggle-${Math.random().toString(36).substr(2, 9)}`);\n  readonly name = input<string>('');\n  readonly label = input<string | null>(null);\n  readonly description = input<string | null>(null);\n  readonly checked = input(false);\n  readonly disabled = input(false);\n  readonly required = input(false);\n  readonly size = input<OsToggleSize>('medium');\n  readonly variant = input<OsToggleVariant>('primary');\n  readonly role = input<OsToggleRole>('switch');\n  readonly animated = input(true);\n  readonly ariaLabel = input<string | null>(null);\n  readonly ariaDescribedBy = input<string | null>(null);\n\n  readonly toggled = output<boolean>();\n  readonly focused = output<boolean>();\n  readonly blurred = output<boolean>();\n\n  // Computed properties para acessibilidade\n  readonly toggleRole = computed(() => this.role());\n  readonly descriptionId = computed(() => (this.description() ? `${this.id()}-description` : null));\n\n  // Mapeamento interno para Material\n  protected matColor = computed(() => {\n    switch (this.variant()) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'accent';\n      case 'success':\n        return 'primary';\n      case 'warning':\n        return 'warn';\n      case 'danger':\n        return 'warn';\n      default:\n        return undefined;\n    }\n  });\n\n  readonly toggleClasses = computed(() => {\n    const classes = ['os-toggle'];\n    classes.push(`os-toggle--${this.size()}`);\n    classes.push(`os-toggle--${this.variant()}`);\n\n    if (this.disabled()) {\n      classes.push('os-toggle--disabled');\n    }\n\n    if (this.checked()) {\n      classes.push('os-toggle--checked');\n    }\n\n    if (this.animated()) {\n      classes.push('os-toggle--animated');\n    }\n\n    return classes.join(' ');\n  });\n\n  onToggle(event: { checked: boolean }): void {\n    if (!this.disabled()) {\n      this.toggled.emit(event.checked);\n    }\n  }\n\n  onFocus(): void {\n    if (!this.disabled()) {\n      this.focused.emit(true);\n    }\n  }\n\n  onBlur(): void {\n    this.blurred.emit(true);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/tokens';\n\n.os-toggle {\n  display: inline-flex;\n  align-items: flex-start;\n  gap: var(--os-spacing-sm);\n  cursor: pointer;\n  min-height: var(--os-touch-target-min);\n  padding: var(--os-spacing-xs);\n  margin: calc(-1 * var(--os-spacing-xs));\n  border-radius: var(--os-border-radius-md);\n  transition: all var(--os-transition-duration-fast) var(--os-transition-easing-standard);\n\n  &__input {\n    flex-shrink: 0;\n    min-height: var(--os-touch-target-min);\n    min-width: var(--os-touch-target-min);\n  }\n\n  &__label-text {\n    font-family: var(--os-font-family-base);\n    font-weight: var(--os-font-weight-medium);\n    color: var(--os-color-text-primary);\n    line-height: var(--os-line-height-base);\n    user-select: none;\n    cursor: pointer;\n  }\n\n  &__description {\n    font-family: var(--os-font-family-base);\n    font-size: var(--os-font-size-sm);\n    color: var(--os-color-text-secondary);\n    line-height: var(--os-line-height-sm);\n    margin-top: var(--os-spacing-xs);\n    grid-column: 1 / -1;\n  }\n\n  // Touch targets adequados para mobile\n  &--small {\n    min-height: var(--os-touch-target-min);\n\n    .os-toggle__input {\n      min-height: var(--os-touch-target-min);\n      min-width: var(--os-touch-target-min);\n    }\n\n    .os-toggle__label-text {\n      font-size: var(--os-font-size-sm);\n    }\n  }\n\n  &--medium {\n    min-height: var(--os-touch-target-min);\n\n    .os-toggle__input {\n      min-height: var(--os-touch-target-min);\n      min-width: var(--os-touch-target-min);\n    }\n\n    .os-toggle__label-text {\n      font-size: var(--os-font-size-base);\n    }\n  }\n\n  &--large {\n    min-height: 48px;\n\n    .os-toggle__input {\n      min-height: 48px;\n      min-width: 48px;\n    }\n\n    .os-toggle__label-text {\n      font-size: var(--os-font-size-lg);\n    }\n  }\n\n  // Variants com cores semânticas\n  &--primary {\n    &.os-toggle--checked {\n      .os-toggle__input {\n        --mdc-switch-selected-track-color: var(--os-color-primary-500);\n        --mdc-switch-selected-handle-color: var(--os-color-white);\n      }\n    }\n  }\n\n  &--secondary {\n    &.os-toggle--checked {\n      .os-toggle__input {\n        --mdc-switch-selected-track-color: var(--os-color-secondary-500);\n        --mdc-switch-selected-handle-color: var(--os-color-white);\n      }\n    }\n  }\n\n  &--success {\n    &.os-toggle--checked {\n      .os-toggle__input {\n        --mdc-switch-selected-track-color: var(--os-color-success-500);\n        --mdc-switch-selected-handle-color: var(--os-color-white);\n      }\n    }\n  }\n\n  &--warning {\n    &.os-toggle--checked {\n      .os-toggle__input {\n        --mdc-switch-selected-track-color: var(--os-color-warning-500);\n        --mdc-switch-selected-handle-color: var(--os-color-white);\n      }\n    }\n  }\n\n  &--danger {\n    &.os-toggle--checked {\n      .os-toggle__input {\n        --mdc-switch-selected-track-color: var(--os-color-danger-500);\n        --mdc-switch-selected-handle-color: var(--os-color-white);\n      }\n    }\n  }\n\n  // Estados visuais\n  &--checked {\n    .os-toggle__label-text {\n      color: var(--os-color-text-primary);\n      font-weight: var(--os-font-weight-semibold);\n    }\n  }\n\n  &--disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n\n    .os-toggle__label-text {\n      cursor: not-allowed;\n      color: var(--os-color-text-disabled);\n    }\n\n    .os-toggle__description {\n      color: var(--os-color-text-disabled);\n    }\n\n    .os-toggle__input {\n      cursor: not-allowed;\n    }\n  }\n\n  // Micro-interactions\n  &:hover:not(.os-toggle--disabled) {\n    background-color: var(--os-color-background-hover);\n    transform: translateY(-1px);\n    box-shadow: var(--os-shadow-sm);\n  }\n\n  &:active:not(.os-toggle--disabled) {\n    transform: translateY(0);\n    box-shadow: var(--os-shadow-xs);\n  }\n\n  // Focus ring com tokens\n  &:focus-within {\n    outline: var(--os-focus-ring-width) solid var(--os-focus-ring-color);\n    outline-offset: var(--os-focus-ring-offset);\n  }\n\n  // Animações\n  &--animated {\n    .os-toggle__input {\n      transition: all var(--os-transition-duration-fast) var(--os-transition-easing-standard);\n    }\n\n    .os-toggle__label-text {\n      transition: all var(--os-transition-duration-fast) var(--os-transition-easing-standard);\n    }\n\n    &:hover:not(.os-toggle--disabled) {\n      transition: all var(--os-transition-duration-fast) var(--os-transition-easing-standard);\n    }\n  }\n\n  // Suporte a reduced motion\n  @media (prefers-reduced-motion: reduce) {\n    &--animated {\n      .os-toggle__input,\n      .os-toggle__label-text {\n        transition: none;\n      }\n\n      &:hover:not(.os-toggle--disabled) {\n        transition: none;\n        transform: none;\n      }\n    }\n  }\n\n  // Dark mode support\n  @media (prefers-color-scheme: dark) {\n    .os-toggle__label-text {\n      color: var(--os-color-text-primary-dark, var(--os-color-text-primary));\n    }\n\n    .os-toggle__description {\n      color: var(--os-color-text-secondary-dark, var(--os-color-text-secondary));\n    }\n\n    &--disabled {\n      .os-toggle__label-text,\n      .os-toggle__description {\n        color: var(--os-color-text-disabled-dark, var(--os-color-text-disabled));\n      }\n    }\n  }\n\n  // High contrast mode\n  @media (prefers-contrast: high) {\n    .os-toggle__label-text {\n      font-weight: var(--os-font-weight-bold);\n    }\n\n    &:focus-within {\n      outline-width: 3px;\n    }\n  }\n}\n",
                    "styleUrl": "./os-toggle.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "OsTooltipComponent",
            "id": "component-OsTooltipComponent-6849a220a552d2dab99c794059501fe0819760096fd9488843d52bbde1e7f5b5e2815ca893fc51b0337a0d27028883db0c78b81baf97887a479dd6bb59eed0eb",
            "file": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-tooltip",
            "styleUrls": [
                "./os-tooltip.component.scss"
            ],
            "styles": [],
            "template": "<div\n  [class]=\"containerClass()\"\n  [attr.data-variant]=\"variant()\"\n  [attr.data-size]=\"size()\"\n  [attr.data-position]=\"effectivePosition()\"\n  [attr.data-mobile]=\"isMobile()\"\n  [attr.data-interactive]=\"interactive()\"\n  [attr.role]=\"role()\"\n  [attr.aria-describedby]=\"ariaDescribedby()\"\n  [attr.aria-label]=\"ariaLabel()\"\n  [matTooltip]=\"tooltipText()\"\n  [matTooltipPosition]=\"matPosition()\"\n  [matTooltipDisabled]=\"disabled()\"\n  [matTooltipHideDelay]=\"effectiveHideDelay()\"\n  [matTooltipShowDelay]=\"effectiveShowDelay()\"\n  [matTooltipTouchGestures]=\"effectiveTouchGestures()\"\n  [matTooltipClass]=\"tooltipClass()\"\n  (mouseenter)=\"onMouseEnter()\"\n  (mouseleave)=\"onMouseLeave()\"\n  (click)=\"onMobileClick()\"\n>\n  <ng-content />\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 83,
                    "required": false
                },
                {
                    "name": "ariaDescribedby",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "required": false
                },
                {
                    "name": "ariaLabel",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "required": false
                },
                {
                    "name": "hideDelay",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "required": false
                },
                {
                    "name": "interactive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "required": false
                },
                {
                    "name": "maxWidth",
                    "defaultValue": "200",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "required": false
                },
                {
                    "name": "position",
                    "defaultValue": "'above'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsTooltipPosition",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "required": false
                },
                {
                    "name": "role",
                    "defaultValue": "'tooltip'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsTooltipRole",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "required": false
                },
                {
                    "name": "showDelay",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsTooltipSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "required": false
                },
                {
                    "name": "smartPositioning",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "required": false
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "required": false
                },
                {
                    "name": "touchGestures",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"auto\" | \"on\" | \"off\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 77,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsTooltipVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "tooltipHide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86,
                    "required": false
                },
                {
                    "name": "tooltipShow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 85,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "_effectivePosition",
                    "defaultValue": "signal<OsTooltipPosition>('above')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 90,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_isMobile",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 89,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_isVisible",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 88,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "breakpointObserver",
                    "defaultValue": "inject(BreakpointObserver)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "containerClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-tooltip'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-tooltip--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-tooltip--${this.size()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-tooltip--disabled');\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-tooltip--mobile');\n    }\n\n    if (this.interactive()) {\n      classes.push('os-tooltip--interactive');\n    }\n\n    if (this.animated()) {\n      classes.push('os-tooltip--animated');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "effectiveHideDelay",
                    "defaultValue": "computed(() => {\n    return this.isMobile() ? 1500 : this.hideDelay();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "effectivePosition",
                    "defaultValue": "computed(() => this._effectivePosition())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "effectiveShowDelay",
                    "defaultValue": "computed(() => {\n    return this.isMobile() ? 0 : this.showDelay();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "effectiveTouchGestures",
                    "defaultValue": "computed(() => {\n    if (this.touchGestures() !== 'auto') {\n      return this.touchGestures();\n    }\n    return this.isMobile() ? 'on' : 'off';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "isMobile",
                    "defaultValue": "computed(() => this._isMobile())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "isVisible",
                    "defaultValue": "computed(() => this._isVisible())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "matPosition",
                    "defaultValue": "computed(() => {\n    const position = this.effectivePosition();\n    switch (position) {\n      case 'above':\n        return 'above';\n      case 'below':\n        return 'below';\n      case 'left':\n        return 'left';\n      case 'right':\n        return 'right';\n      case 'before':\n        return 'before';\n      case 'after':\n        return 'after';\n      default:\n        return 'above';\n    }\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 163
                },
                {
                    "name": "tooltipClass",
                    "defaultValue": "computed(() => {\n    const classes = ['os-tooltip__content'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-tooltip__content--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-tooltip__content--${this.size()}`);\n    }\n\n    if (this.interactive()) {\n      classes.push('os-tooltip__content--interactive');\n    }\n\n    if (this.animated()) {\n      classes.push('os-tooltip__content--animated');\n    }\n\n    return classes.join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141
                }
            ],
            "methodsClass": [
                {
                    "name": "calculateSmartPosition",
                    "args": [],
                    "optional": false,
                    "returnType": "OsTooltipPosition",
                    "typeParameters": [],
                    "line": 226,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onMobileClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  DestroyRef,\n  computed,\n  effect,\n  inject,\n  input,\n  signal,\n  output,\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nexport type OsTooltipPosition = 'above' | 'below' | 'left' | 'right' | 'before' | 'after';\nexport type OsTooltipSize = 'small' | 'medium' | 'large';\nexport type OsTooltipVariant =\n  | 'default'\n  | 'primary'\n  | 'secondary'\n  | 'accent'\n  | 'error'\n  | 'warning'\n  | 'info'\n  | 'success';\nexport type OsTooltipRole = 'tooltip' | 'status' | 'alert';\n\n@Component({\n  selector: 'os-tooltip',\n  standalone: true,\n  imports: [CommonModule, MatTooltipModule],\n  template: `\n    <div\n      [class]=\"containerClass()\"\n      [attr.data-variant]=\"variant()\"\n      [attr.data-size]=\"size()\"\n      [attr.data-position]=\"effectivePosition()\"\n      [attr.data-mobile]=\"isMobile()\"\n      [attr.data-interactive]=\"interactive()\"\n      [attr.role]=\"role()\"\n      [attr.aria-describedby]=\"ariaDescribedby()\"\n      [attr.aria-label]=\"ariaLabel()\"\n      [matTooltip]=\"tooltipText()\"\n      [matTooltipPosition]=\"matPosition()\"\n      [matTooltipDisabled]=\"disabled()\"\n      [matTooltipHideDelay]=\"effectiveHideDelay()\"\n      [matTooltipShowDelay]=\"effectiveShowDelay()\"\n      [matTooltipTouchGestures]=\"effectiveTouchGestures()\"\n      [matTooltipClass]=\"tooltipClass()\"\n      (mouseenter)=\"onMouseEnter()\"\n      (mouseleave)=\"onMouseLeave()\"\n      (click)=\"onMobileClick()\"\n    >\n      <ng-content />\n    </div>\n  `,\n  styleUrls: ['./os-tooltip.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-tooltip-host',\n  },\n})\nexport class OsTooltipComponent {\n  private readonly breakpointObserver = inject(BreakpointObserver);\n  private readonly destroyRef = inject(DestroyRef);\n\n  tooltipText = input<string>('');\n  position = input<OsTooltipPosition>('above');\n  size = input<OsTooltipSize>('medium');\n  variant = input<OsTooltipVariant>('default');\n  role = input<OsTooltipRole>('tooltip');\n  disabled = input(false);\n  hideDelay = input<number>(0);\n  showDelay = input<number>(0);\n  touchGestures = input<'auto' | 'on' | 'off'>('auto');\n  maxWidth = input<number>(200);\n  smartPositioning = input(true);\n  interactive = input(false);\n  ariaLabel = input<string | null>(null);\n  ariaDescribedby = input<string | null>(null);\n  animated = input(true);\n\n  tooltipShow = output<void>();\n  tooltipHide = output<void>();\n\n  private _isVisible = signal(false);\n  private _isMobile = signal(false);\n  private _effectivePosition = signal<OsTooltipPosition>('above');\n\n  isVisible = computed(() => this._isVisible());\n  isMobile = computed(() => this._isMobile());\n  effectivePosition = computed(() => this._effectivePosition());\n\n  effectiveHideDelay = computed(() => {\n    return this.isMobile() ? 1500 : this.hideDelay();\n  });\n\n  effectiveShowDelay = computed(() => {\n    return this.isMobile() ? 0 : this.showDelay();\n  });\n\n  effectiveTouchGestures = computed(() => {\n    if (this.touchGestures() !== 'auto') {\n      return this.touchGestures();\n    }\n    return this.isMobile() ? 'on' : 'off';\n  });\n\n  containerClass = computed(() => {\n    const classes = ['os-tooltip'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-tooltip--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-tooltip--${this.size()}`);\n    }\n\n    if (this.disabled()) {\n      classes.push('os-tooltip--disabled');\n    }\n\n    if (this.isMobile()) {\n      classes.push('os-tooltip--mobile');\n    }\n\n    if (this.interactive()) {\n      classes.push('os-tooltip--interactive');\n    }\n\n    if (this.animated()) {\n      classes.push('os-tooltip--animated');\n    }\n\n    return classes.join(' ');\n  });\n\n  tooltipClass = computed(() => {\n    const classes = ['os-tooltip__content'];\n\n    if (this.variant() !== 'default') {\n      classes.push(`os-tooltip__content--${this.variant()}`);\n    }\n\n    if (this.size() !== 'medium') {\n      classes.push(`os-tooltip__content--${this.size()}`);\n    }\n\n    if (this.interactive()) {\n      classes.push('os-tooltip__content--interactive');\n    }\n\n    if (this.animated()) {\n      classes.push('os-tooltip__content--animated');\n    }\n\n    return classes.join(' ');\n  });\n\n  matPosition = computed(() => {\n    const position = this.effectivePosition();\n    switch (position) {\n      case 'above':\n        return 'above';\n      case 'below':\n        return 'below';\n      case 'left':\n        return 'left';\n      case 'right':\n        return 'right';\n      case 'before':\n        return 'before';\n      case 'after':\n        return 'after';\n      default:\n        return 'above';\n    }\n  });\n\n  constructor() {\n    this.breakpointObserver\n      .observe([Breakpoints.Handset, Breakpoints.Tablet])\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe((result) => {\n        this._isMobile.set(result.matches);\n      });\n\n    effect(() => {\n      if (this.tooltipText()) {\n        this._isVisible.set(true);\n      } else {\n        this._isVisible.set(false);\n      }\n    });\n\n    effect(() => {\n      if (this.smartPositioning()) {\n        this._effectivePosition.set(this.calculateSmartPosition());\n      } else {\n        this._effectivePosition.set(this.position());\n      }\n    });\n  }\n\n  onMouseEnter(): void {\n    if (!this.disabled() && !this.isMobile()) {\n      this.tooltipShow.emit();\n    }\n  }\n\n  onMouseLeave(): void {\n    if (!this.disabled() && !this.isMobile()) {\n      this.tooltipHide.emit();\n    }\n  }\n\n  onMobileClick(): void {\n    if (this.isMobile() && !this.disabled()) {\n      this.tooltipShow.emit();\n    }\n  }\n\n  private calculateSmartPosition(): OsTooltipPosition {\n    const requestedPosition = this.position();\n    return requestedPosition;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '../../theme/_variables.scss' as *;\n\n.os-tooltip {\n  display: inline-block;\n  position: relative;\n\n  &--small {\n    font-size: var(--os-font-size-sm);\n  }\n\n  &--medium {\n    font-size: var(--os-font-size-base);\n  }\n\n  &--large {\n    font-size: var(--os-font-size-lg);\n  }\n\n  &--default {\n    color: var(--os-color-on-surface);\n  }\n\n  &--primary {\n    color: var(--os-color-primary-600);\n  }\n\n  &--secondary {\n    color: var(--os-color-secondary-600);\n  }\n\n  &--accent {\n    color: var(--os-color-accent-600);\n  }\n\n  &--error {\n    color: var(--os-color-error);\n  }\n\n  &--warning {\n    color: var(--os-color-warning);\n  }\n\n  &--info {\n    color: var(--os-color-info);\n  }\n\n  &--success {\n    color: var(--os-color-success);\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n    cursor: not-allowed;\n  }\n\n  &--mobile {\n    cursor: pointer;\n  }\n\n  &--interactive {\n    cursor: pointer;\n\n    &:hover {\n      opacity: 0.9;\n    }\n\n    &:active {\n      opacity: 0.8;\n    }\n  }\n\n  &__content {\n    max-width: 200px;\n    padding: var(--os-spacing-sm) var(--os-spacing-md);\n    border-radius: var(--os-border-radius-sm);\n    font-weight: var(--os-font-weight-normal);\n    line-height: var(--os-line-height-base);\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    box-shadow: var(--os-shadow-md);\n    z-index: 1000;\n    pointer-events: auto;\n\n    &--animated {\n      animation: tooltip-fade-in 200ms ease-out forwards;\n\n      @media (prefers-reduced-motion: reduce) {\n        animation: none;\n      }\n    }\n\n    &--interactive {\n      pointer-events: auto;\n      cursor: auto;\n\n      &:hover {\n        box-shadow: var(--os-shadow-lg);\n      }\n    }\n\n    &--small {\n      font-size: var(--os-font-size-xs);\n      padding: var(--os-spacing-xs) var(--os-spacing-sm);\n      max-width: 150px;\n    }\n\n    &--medium {\n      font-size: var(--os-font-size-sm);\n      padding: var(--os-spacing-sm) var(--os-spacing-md);\n      max-width: 200px;\n    }\n\n    &--large {\n      font-size: var(--os-font-size-base);\n      padding: var(--os-spacing-md) var(--os-spacing-lg);\n      max-width: 250px;\n    }\n\n    &--default {\n      background-color: var(--os-color-surface-container-highest);\n      color: var(--os-color-on-surface-container-highest);\n    }\n\n    &--primary {\n      background-color: var(--os-color-primary-600);\n      color: var(--os-color-on-primary);\n    }\n\n    &--secondary {\n      background-color: var(--os-color-secondary-600);\n      color: var(--os-color-on-secondary);\n    }\n\n    &--accent {\n      background-color: var(--os-color-accent-600);\n      color: var(--os-color-on-accent);\n    }\n\n    &--error {\n      background-color: var(--os-color-error);\n      color: var(--os-color-on-error);\n    }\n\n    &--warning {\n      background-color: var(--os-color-warning);\n      color: var(--os-color-on-warning);\n    }\n\n    &--info {\n      background-color: var(--os-color-info);\n      color: var(--os-color-on-info);\n    }\n\n    &--success {\n      background-color: var(--os-color-success);\n      color: var(--os-color-on-success);\n    }\n  }\n}\n\n.os-tooltip--primary {\n  .os-tooltip__content {\n    background-color: var(--os-color-primary-600);\n    color: var(--os-color-on-primary);\n  }\n}\n\n.os-tooltip--secondary {\n  .os-tooltip__content {\n    background-color: var(--os-color-secondary-600);\n    color: var(--os-color-on-secondary);\n  }\n}\n\n.os-tooltip--accent {\n  .os-tooltip__content {\n    background-color: var(--os-color-accent-600);\n    color: var(--os-color-on-accent);\n  }\n}\n\n.os-tooltip--error {\n  .os-tooltip__content {\n    background-color: var(--os-color-error);\n    color: var(--os-color-on-error);\n  }\n}\n\n.os-tooltip--warning {\n  .os-tooltip__content {\n    background-color: var(--os-color-warning);\n    color: var(--os-color-on-warning);\n  }\n}\n\n.os-tooltip--info {\n  .os-tooltip__content {\n    background-color: var(--os-color-info);\n    color: var(--os-color-on-info);\n  }\n}\n\n.os-tooltip--success {\n  .os-tooltip__content {\n    background-color: var(--os-color-success);\n    color: var(--os-color-on-success);\n  }\n}\n\n@media (max-width: 768px) {\n  .os-tooltip {\n    &--large {\n      font-size: var(--os-font-size-base);\n    }\n\n    &__content {\n      &--large {\n        font-size: var(--os-font-size-sm);\n        padding: var(--os-spacing-sm) var(--os-spacing-md);\n        max-width: 200px;\n      }\n    }\n  }\n}\n\n@media (max-width: 480px) {\n  .os-tooltip {\n    &--large {\n      font-size: var(--os-font-size-sm);\n    }\n\n    &__content {\n      &--large {\n        font-size: var(--os-font-size-xs);\n        padding: var(--os-spacing-xs) var(--os-spacing-sm);\n        max-width: 150px;\n      }\n    }\n  }\n}\n\n@keyframes tooltip-fade-in {\n  0% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes tooltip-fade-out {\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n}\n\n@supports (prefers-reduced-motion: reduce) {\n  .os-tooltip__content--animated {\n    animation: none !important;\n    transition: none !important;\n  }\n}\n",
                    "styleUrl": "./os-tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 181
            },
            "extends": []
        },
        {
            "name": "OsTransactionListComponent",
            "id": "component-OsTransactionListComponent-759bea4a76d0a8287041f9aa4b6407aa5799ec1d07bad4f83ba8889e07b08001914dfbe89c17c4baa087f29f3bf1951716aac4c78eb9c79030cd2f03baa403ba",
            "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-transaction-list",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"os-transaction-list\" [class]=\"transactionListClasses()\">\n  <!-- Header -->\n  @if (title() || showHeaderActions()) {\n  <div class=\"os-transaction-list__header\">\n    @if (title()) {\n    <div class=\"os-transaction-list__title-section\">\n      <h2 class=\"os-transaction-list__title\">{{ title() }}</h2>\n      @if (subtitle()) {\n      <p class=\"os-transaction-list__subtitle\">{{ subtitle() }}</p>\n      }\n    </div>\n    } @if (showHeaderActions()) {\n    <div class=\"os-transaction-list__header-actions\">\n      @if (showRefreshButton()) {\n      <os-button\n        variant=\"tertiary\"\n        [size]=\"getButtonSize()\"\n        icon=\"refresh\"\n        [loading]=\"isLoading()\"\n        (buttonClick)=\"onRefresh()\"\n        [attr.aria-label]=\"'Atualizar transações'\"\n      >\n        Atualizar\n      </os-button>\n      } @if (showExportButton()) {\n      <os-button\n        variant=\"secondary\"\n        [size]=\"getButtonSize()\"\n        icon=\"download\"\n        (buttonClick)=\"onExport()\"\n        [attr.aria-label]=\"'Exportar transações'\"\n      >\n        Exportar\n      </os-button>\n      } @if (showAddButton()) {\n      <os-button\n        variant=\"primary\"\n        [size]=\"getButtonSize()\"\n        icon=\"add\"\n        (buttonClick)=\"onAdd()\"\n        [attr.aria-label]=\"'Adicionar nova transação'\"\n      >\n        {{ addButtonText() }}\n      </os-button>\n      }\n    </div>\n    }\n  </div>\n  }\n\n  <!-- Filters -->\n  @if (showFilters() && filterOptions().length > 0) {\n  <div class=\"os-transaction-list__filters\">\n    <os-filter-bar\n      [variant]=\"getFilterBarVariant()\"\n      [size]=\"getFilterBarSize()\"\n      [hasActiveFilters]=\"hasActiveFilters()\"\n      (clear)=\"onClearFilters()\"\n      (apply)=\"onApplyFilters()\"\n    >\n      <div class=\"os-transaction-list__filter-content\">\n        @for (option of filterOptions(); track option.key) {\n        <div class=\"os-transaction-list__filter-item\">\n          <label class=\"os-transaction-list__filter-label\" [for]=\"'filter-' + option.key\">{{\n            option.label\n          }}</label>\n          @switch (option.type) { @case ('text') {\n          <input\n            type=\"text\"\n            class=\"os-transaction-list__filter-input\"\n            [id]=\"'filter-' + option.key\"\n            [placeholder]=\"'Filtrar por ' + option.label\"\n            [value]=\"getFilterValue(option.key)\"\n            (input)=\"onFilterChange(option.key, $event)\"\n          />\n          } @case ('select') {\n          <select\n            class=\"os-transaction-list__filter-select\"\n            [id]=\"'filter-' + option.key\"\n            [value]=\"getFilterValue(option.key)\"\n            (change)=\"onFilterChange(option.key, $event)\"\n          >\n            <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n            @for (opt of option.options; track opt.value) {\n            <option [value]=\"opt.value\">{{ opt.label }}</option>\n            }\n          </select>\n          } @case ('date') {\n          <input\n            type=\"date\"\n            class=\"os-transaction-list__filter-input\"\n            [id]=\"'filter-' + option.key\"\n            [value]=\"getFilterValue(option.key)\"\n            (change)=\"onFilterChange(option.key, $event)\"\n          />\n          } @case ('number') {\n          <input\n            type=\"number\"\n            class=\"os-transaction-list__filter-input\"\n            [id]=\"'filter-' + option.key\"\n            [placeholder]=\"'Filtrar por ' + option.label\"\n            [value]=\"getFilterValue(option.key)\"\n            (input)=\"onFilterChange(option.key, $event)\"\n          />\n          } }\n        </div>\n        }\n      </div>\n    </os-filter-bar>\n  </div>\n  }\n\n  <!-- Transaction List -->\n  <div class=\"os-transaction-list__content\">\n    @if (isLoading()) {\n    <div class=\"os-transaction-list__loading\">\n      <os-spinner [variant]=\"'default'\" [size]=\"getSpinnerSize()\" />\n      <p class=\"os-transaction-list__loading-text\">Carregando transações...</p>\n    </div>\n    } @else if (paginatedTransactions().length === 0) {\n    <div class=\"os-transaction-list__empty\">\n      <os-icon name=\"receipt\" [size]=\"'lg'\" />\n      <h3 class=\"os-transaction-list__empty-title\">{{ noDataTitle() }}</h3>\n      <p class=\"os-transaction-list__empty-text\">{{ noDataText() }}</p>\n      @if (showAddButton()) {\n      <os-button variant=\"primary\" [size]=\"getButtonSize()\" icon=\"add\" (buttonClick)=\"onAdd()\">\n        {{ addButtonText() }}\n      </os-button>\n      }\n    </div>\n    } @else {\n    <div class=\"os-transaction-list__table\">\n      <os-data-table\n        [data]=\"paginatedTransactions()\"\n        [columns]=\"tableColumns()\"\n        [actions]=\"tableActions()\"\n        [size]=\"getTableSize()\"\n        [variant]=\"getTableVariant()\"\n        [showPagination]=\"showPagination()\"\n        [showNoData]=\"false\"\n        [pageSize]=\"pagination().pageSize\"\n        [pageIndex]=\"pagination().page\"\n        [totalItems]=\"totalItems()\"\n        [pageSizeOptions]=\"pageSizeOptions()\"\n        [showFirstLastButtons]=\"showFirstLastButtons()\"\n        (rowClick)=\"onRowClick($event)\"\n        (actionClick)=\"onTableActionClick($event)\"\n        (sortChange)=\"onSortChange($event)\"\n        (pageChange)=\"onPageChange($event)\"\n      />\n    </div>\n    }\n  </div>\n\n  <!-- Footer -->\n  @if (showFooter()) {\n  <div class=\"os-transaction-list__footer\">\n    <div class=\"os-transaction-list__footer-info\">\n      @if (showItemCount()) {\n      <span class=\"os-transaction-list__item-count\">\n        {{ getItemCountText() }}\n      </span>\n      } @if (showLastUpdated()) {\n      <span class=\"os-transaction-list__last-updated\">\n        Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n      </span>\n      }\n    </div>\n\n    @if (showFooterActions()) {\n    <div class=\"os-transaction-list__footer-actions\">\n      <ng-content select=\"[slot=footer-actions]\"></ng-content>\n    </div>\n    }\n  </div>\n  }\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "addButtonText",
                    "defaultValue": "'Nova Transação'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 280,
                    "required": false
                },
                {
                    "name": "filterOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsFilterOption[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 289,
                    "required": false
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 296,
                    "required": false
                },
                {
                    "name": "lastUpdated",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 297,
                    "required": false
                },
                {
                    "name": "noDataText",
                    "defaultValue": "'Não há transações para exibir no momento.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 301,
                    "required": false
                },
                {
                    "name": "noDataTitle",
                    "defaultValue": "'Nenhuma transação encontrada'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 300,
                    "required": false
                },
                {
                    "name": "pageSizeOptions",
                    "defaultValue": "[5, 10, 25, 50]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 292,
                    "required": false
                },
                {
                    "name": "showAddButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 279,
                    "required": false
                },
                {
                    "name": "showExportButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 278,
                    "required": false
                },
                {
                    "name": "showFilters",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 281,
                    "required": false
                },
                {
                    "name": "showFirstLastButtons",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 293,
                    "required": false
                },
                {
                    "name": "showFooter",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 283,
                    "required": false
                },
                {
                    "name": "showFooterActions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 286,
                    "required": false
                },
                {
                    "name": "showHeaderActions",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 276,
                    "required": false
                },
                {
                    "name": "showItemCount",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 284,
                    "required": false
                },
                {
                    "name": "showLastUpdated",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 285,
                    "required": false
                },
                {
                    "name": "showPagination",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 282,
                    "required": false
                },
                {
                    "name": "showRefreshButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 277,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionListSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 271,
                    "required": false
                },
                {
                    "name": "subtitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 270,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionListTheme",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 273,
                    "required": false
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 269,
                    "required": false
                },
                {
                    "name": "transactions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 268,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionListVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 272,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "add",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 308,
                    "required": false
                },
                {
                    "name": "export",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 307,
                    "required": false
                },
                {
                    "name": "filterChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionListFilter[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 309,
                    "required": false
                },
                {
                    "name": "pageChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionListPagination",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 311,
                    "required": false
                },
                {
                    "name": "refresh",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 306,
                    "required": false
                },
                {
                    "name": "rowClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 304,
                    "required": false
                },
                {
                    "name": "sortChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TransactionListSort",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 310,
                    "required": false
                },
                {
                    "name": "tableActionClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OsDataTableAction",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 305,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "filteredTransactions",
                    "defaultValue": "computed(() => {\n    let filtered = [...this.transactions()];\n\n    // Apply filters\n    const activeFilters = this.filters();\n    if (activeFilters.length > 0) {\n      filtered = filtered.filter((transaction) => {\n        return activeFilters.every((filter) => {\n          const value = this.getTransactionValue(transaction, filter.key);\n          return this.matchesFilter(value, filter.value, filter.operator);\n        });\n      });\n    }\n\n    // Apply sorting\n    const sortConfig = this.sort();\n    if (sortConfig) {\n      filtered.sort((a, b) => {\n        const aValue = this.getTransactionValue(a, sortConfig.column);\n        const bValue = this.getTransactionValue(b, sortConfig.column);\n\n        if (sortConfig.direction === 'asc') {\n          return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;\n        } else {\n          return aValue < bValue ? 1 : aValue > bValue ? -1 : 0;\n        }\n      });\n    }\n\n    return filtered;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 332
                },
                {
                    "name": "filters",
                    "defaultValue": "signal<TransactionListFilter[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 314,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hasActiveFilters",
                    "defaultValue": "computed(() => this.filters().length > 0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 375
                },
                {
                    "name": "paginatedTransactions",
                    "defaultValue": "computed(() => {\n    const filtered = this.filteredTransactions();\n    const pagination = this.pagination();\n    const start = pagination.page * pagination.pageSize;\n    const end = start + pagination.pageSize;\n\n    return filtered.slice(start, end);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 364
                },
                {
                    "name": "pagination",
                    "defaultValue": "signal<TransactionListPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 316,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "sort",
                    "defaultValue": "signal<TransactionListSort | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 315,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "tableActions",
                    "defaultValue": "computed(() => {\n    const actions: OsDataTableAction[] = [\n      {\n        key: 'edit',\n        label: 'Editar',\n        icon: 'edit',\n        color: 'secondary',\n      },\n      {\n        key: 'delete',\n        label: 'Excluir',\n        icon: 'trash',\n        color: 'warn',\n      },\n    ];\n\n    return actions;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 432
                },
                {
                    "name": "tableColumns",
                    "defaultValue": "computed(() => {\n    const baseColumns: OsDataTableColumn[] = [\n      {\n        key: 'description',\n        label: 'Descrição',\n        sortable: true,\n        width: '30%',\n      },\n      {\n        key: 'amount',\n        label: 'Valor',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'date',\n        label: 'Data',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'category',\n        label: 'Categoria',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'type',\n        label: 'Tipo',\n        sortable: true,\n        width: '10%',\n      },\n      {\n        key: 'status',\n        label: 'Status',\n        sortable: true,\n        width: '15%',\n      },\n    ];\n\n    if (this.variant() === 'detailed') {\n      return [\n        ...baseColumns,\n        {\n          key: 'account',\n          label: 'Conta',\n          sortable: true,\n          width: '10%',\n        },\n      ];\n    }\n\n    return baseColumns;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 377
                },
                {
                    "name": "totalItems",
                    "defaultValue": "computed(() => this.filteredTransactions().length)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 373
                },
                {
                    "name": "transactionListClasses",
                    "defaultValue": "computed(() => {\n    const base = 'os-transaction-list';\n    const variant = `os-transaction-list--${this.variant()}`;\n    const size = `os-transaction-list--${this.size()}`;\n    const theme = `os-transaction-list--${this.theme()}`;\n\n    return `${base} ${variant} ${size} ${theme}`.trim();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 323
                }
            ],
            "methodsClass": [
                {
                    "name": "getButtonSize",
                    "args": [],
                    "optional": false,
                    "returnType": "Record<TransactionListSize, \"small\" | \"medium\" | \"large\">",
                    "typeParameters": [],
                    "line": 510,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFilterBarSize",
                    "args": [],
                    "optional": false,
                    "returnType": "Record<TransactionListSize, \"small\" | \"medium\" | \"large\">",
                    "typeParameters": [],
                    "line": 528,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFilterBarVariant",
                    "args": [],
                    "optional": false,
                    "returnType": "OsFilterBarVariant",
                    "typeParameters": [],
                    "line": 519,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFilterValue",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 494,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getItemCountText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 499,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSpinnerSize",
                    "args": [],
                    "optional": false,
                    "returnType": "Record<TransactionListSize, \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\">",
                    "typeParameters": [],
                    "line": 555,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTableSize",
                    "args": [],
                    "optional": false,
                    "returnType": "Record<TransactionListSize, \"small\" | \"medium\" | \"large\">",
                    "typeParameters": [],
                    "line": 537,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTableVariant",
                    "args": [],
                    "optional": false,
                    "returnType": "Record<TransactionListVariant, \"default\" | \"striped\" | \"bordered\">",
                    "typeParameters": [],
                    "line": 546,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTransactionValue",
                    "args": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | number | Date",
                    "typeParameters": [],
                    "line": 452,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "transaction",
                            "type": "Transaction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "matchesFilter",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number | Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filterValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "operator",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 473,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number | Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filterValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "operator",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 573,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onApplyFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 603,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClearFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 598,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onExport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 569,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFilterChange",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 577,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "page",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 620,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRefresh",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 565,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRowClick",
                    "args": [
                        {
                            "name": "row",
                            "type": "OsDataTableRow",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 607,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "OsDataTableRow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSortChange",
                    "args": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 615,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTableActionClick",
                    "args": [
                        {
                            "name": "action",
                            "type": "OsDataTableAction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 611,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "OsDataTableAction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                },
                {
                    "name": "OsSpinnerComponent",
                    "type": "component"
                },
                {
                    "name": "OsDataTableComponent",
                    "type": "component"
                },
                {
                    "name": "OsFilterBarComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  input,\n  output,\n  signal,\n} from '@angular/core';\nimport { Sort } from '@angular/material/sort';\nimport { PageEvent } from '@angular/material/paginator';\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsSpinnerComponent } from '../../atoms/os-spinner/os-spinner.component';\nimport {\n  OsDataTableComponent,\n  OsDataTableColumn,\n  OsDataTableAction,\n  OsDataTableRow,\n} from '../../molecules/os-data-table/os-data-table.component';\nimport {\n  OsFilterBarComponent,\n  OsFilterOption,\n  OsFilterBarVariant,\n} from '../../molecules/os-filter-bar/os-filter-bar.component';\n\nexport interface Transaction {\n  id: string;\n  description: string;\n  amount: number;\n  date: Date;\n  category: string;\n  type: 'income' | 'expense' | 'transfer';\n  status: 'pending' | 'completed' | 'cancelled';\n  account?: string;\n  tags?: string[];\n  [key: string]: unknown;\n}\n\nexport interface TransactionListFilter {\n  key: string;\n  value: string;\n  operator: 'equals' | 'contains' | 'greater' | 'less' | 'between';\n}\n\nexport interface TransactionListSort {\n  column: string;\n  direction: 'asc' | 'desc';\n}\n\nexport interface TransactionListPagination {\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\nexport type TransactionListVariant = 'default' | 'compact' | 'detailed';\nexport type TransactionListSize = 'small' | 'medium' | 'large';\nexport type TransactionListTheme = 'light' | 'dark';\n\n@Component({\n  selector: 'os-transaction-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OsButtonComponent,\n    OsIconComponent,\n    OsSpinnerComponent,\n    OsDataTableComponent,\n    OsFilterBarComponent,\n  ],\n  template: `\n    <div class=\"os-transaction-list\" [class]=\"transactionListClasses()\">\n      <!-- Header -->\n      @if (title() || showHeaderActions()) {\n      <div class=\"os-transaction-list__header\">\n        @if (title()) {\n        <div class=\"os-transaction-list__title-section\">\n          <h2 class=\"os-transaction-list__title\">{{ title() }}</h2>\n          @if (subtitle()) {\n          <p class=\"os-transaction-list__subtitle\">{{ subtitle() }}</p>\n          }\n        </div>\n        } @if (showHeaderActions()) {\n        <div class=\"os-transaction-list__header-actions\">\n          @if (showRefreshButton()) {\n          <os-button\n            variant=\"tertiary\"\n            [size]=\"getButtonSize()\"\n            icon=\"refresh\"\n            [loading]=\"isLoading()\"\n            (buttonClick)=\"onRefresh()\"\n            [attr.aria-label]=\"'Atualizar transações'\"\n          >\n            Atualizar\n          </os-button>\n          } @if (showExportButton()) {\n          <os-button\n            variant=\"secondary\"\n            [size]=\"getButtonSize()\"\n            icon=\"download\"\n            (buttonClick)=\"onExport()\"\n            [attr.aria-label]=\"'Exportar transações'\"\n          >\n            Exportar\n          </os-button>\n          } @if (showAddButton()) {\n          <os-button\n            variant=\"primary\"\n            [size]=\"getButtonSize()\"\n            icon=\"add\"\n            (buttonClick)=\"onAdd()\"\n            [attr.aria-label]=\"'Adicionar nova transação'\"\n          >\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        }\n      </div>\n      }\n\n      <!-- Filters -->\n      @if (showFilters() && filterOptions().length > 0) {\n      <div class=\"os-transaction-list__filters\">\n        <os-filter-bar\n          [variant]=\"getFilterBarVariant()\"\n          [size]=\"getFilterBarSize()\"\n          [hasActiveFilters]=\"hasActiveFilters()\"\n          (clear)=\"onClearFilters()\"\n          (apply)=\"onApplyFilters()\"\n        >\n          <div class=\"os-transaction-list__filter-content\">\n            @for (option of filterOptions(); track option.key) {\n            <div class=\"os-transaction-list__filter-item\">\n              <label class=\"os-transaction-list__filter-label\" [for]=\"'filter-' + option.key\">{{\n                option.label\n              }}</label>\n              @switch (option.type) { @case ('text') {\n              <input\n                type=\"text\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('select') {\n              <select\n                class=\"os-transaction-list__filter-select\"\n                [id]=\"'filter-' + option.key\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              >\n                <option value=\"\">{{ 'Todos os ' + option.label }}</option>\n                @for (opt of option.options; track opt.value) {\n                <option [value]=\"opt.value\">{{ opt.label }}</option>\n                }\n              </select>\n              } @case ('date') {\n              <input\n                type=\"date\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [value]=\"getFilterValue(option.key)\"\n                (change)=\"onFilterChange(option.key, $event)\"\n              />\n              } @case ('number') {\n              <input\n                type=\"number\"\n                class=\"os-transaction-list__filter-input\"\n                [id]=\"'filter-' + option.key\"\n                [placeholder]=\"'Filtrar por ' + option.label\"\n                [value]=\"getFilterValue(option.key)\"\n                (input)=\"onFilterChange(option.key, $event)\"\n              />\n              } }\n            </div>\n            }\n          </div>\n        </os-filter-bar>\n      </div>\n      }\n\n      <!-- Transaction List -->\n      <div class=\"os-transaction-list__content\">\n        @if (isLoading()) {\n        <div class=\"os-transaction-list__loading\">\n          <os-spinner [variant]=\"'default'\" [size]=\"getSpinnerSize()\" />\n          <p class=\"os-transaction-list__loading-text\">Carregando transações...</p>\n        </div>\n        } @else if (paginatedTransactions().length === 0) {\n        <div class=\"os-transaction-list__empty\">\n          <os-icon name=\"receipt\" [size]=\"'lg'\" />\n          <h3 class=\"os-transaction-list__empty-title\">{{ noDataTitle() }}</h3>\n          <p class=\"os-transaction-list__empty-text\">{{ noDataText() }}</p>\n          @if (showAddButton()) {\n          <os-button variant=\"primary\" [size]=\"getButtonSize()\" icon=\"add\" (buttonClick)=\"onAdd()\">\n            {{ addButtonText() }}\n          </os-button>\n          }\n        </div>\n        } @else {\n        <div class=\"os-transaction-list__table\">\n          <os-data-table\n            [data]=\"paginatedTransactions()\"\n            [columns]=\"tableColumns()\"\n            [actions]=\"tableActions()\"\n            [size]=\"getTableSize()\"\n            [variant]=\"getTableVariant()\"\n            [showPagination]=\"showPagination()\"\n            [showNoData]=\"false\"\n            [pageSize]=\"pagination().pageSize\"\n            [pageIndex]=\"pagination().page\"\n            [totalItems]=\"totalItems()\"\n            [pageSizeOptions]=\"pageSizeOptions()\"\n            [showFirstLastButtons]=\"showFirstLastButtons()\"\n            (rowClick)=\"onRowClick($event)\"\n            (actionClick)=\"onTableActionClick($event)\"\n            (sortChange)=\"onSortChange($event)\"\n            (pageChange)=\"onPageChange($event)\"\n          />\n        </div>\n        }\n      </div>\n\n      <!-- Footer -->\n      @if (showFooter()) {\n      <div class=\"os-transaction-list__footer\">\n        <div class=\"os-transaction-list__footer-info\">\n          @if (showItemCount()) {\n          <span class=\"os-transaction-list__item-count\">\n            {{ getItemCountText() }}\n          </span>\n          } @if (showLastUpdated()) {\n          <span class=\"os-transaction-list__last-updated\">\n            Última atualização: {{ lastUpdated() | date : 'dd/MM/yyyy HH:mm' }}\n          </span>\n          }\n        </div>\n\n        @if (showFooterActions()) {\n        <div class=\"os-transaction-list__footer-actions\">\n          <ng-content select=\"[slot=footer-actions]\"></ng-content>\n        </div>\n        }\n      </div>\n      }\n    </div>\n  `,\n  styleUrl: './os-transaction-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'os-transaction-list-host',\n  },\n})\nexport class OsTransactionListComponent {\n  constructor() {\n    // Update pagination total when filtered transactions change\n    effect(() => {\n      const filteredLength = this.filteredTransactions().length;\n      this.pagination.update((p) => ({ ...p, total: filteredLength }));\n    });\n  }\n\n  // Inputs\n  transactions = input<Transaction[]>([]);\n  title = input<string>('');\n  subtitle = input<string>('');\n  size = input<TransactionListSize>('medium');\n  variant = input<TransactionListVariant>('default');\n  theme = input<TransactionListTheme>('light');\n\n  // Display options\n  showHeaderActions = input<boolean>(true);\n  showRefreshButton = input<boolean>(true);\n  showExportButton = input<boolean>(true);\n  showAddButton = input<boolean>(true);\n  addButtonText = input<string>('Nova Transação');\n  showFilters = input<boolean>(true);\n  showPagination = input<boolean>(true);\n  showFooter = input<boolean>(true);\n  showItemCount = input<boolean>(true);\n  showLastUpdated = input<boolean>(true);\n  showFooterActions = input<boolean>(false);\n\n  // Filter options\n  filterOptions = input<OsFilterOption[]>([]);\n\n  // Pagination\n  pageSizeOptions = input<number[]>([5, 10, 25, 50]);\n  showFirstLastButtons = input<boolean>(true);\n\n  // Loading state\n  isLoading = input<boolean>(false);\n  lastUpdated = input<Date>(new Date());\n\n  // No data state\n  noDataTitle = input<string>('Nenhuma transação encontrada');\n  noDataText = input<string>('Não há transações para exibir no momento.');\n\n  // Outputs\n  rowClick = output<Transaction>();\n  tableActionClick = output<OsDataTableAction>();\n  refresh = output<void>();\n  export = output<void>();\n  add = output<void>();\n  filterChange = output<TransactionListFilter[]>();\n  sortChange = output<TransactionListSort>();\n  pageChange = output<TransactionListPagination>();\n\n  // Internal state\n  private filters = signal<TransactionListFilter[]>([]);\n  private sort = signal<TransactionListSort | null>(null);\n  protected pagination = signal<TransactionListPagination>({\n    page: 0,\n    pageSize: 10,\n    total: 0,\n  });\n\n  // Computed properties\n  transactionListClasses = computed(() => {\n    const base = 'os-transaction-list';\n    const variant = `os-transaction-list--${this.variant()}`;\n    const size = `os-transaction-list--${this.size()}`;\n    const theme = `os-transaction-list--${this.theme()}`;\n\n    return `${base} ${variant} ${size} ${theme}`.trim();\n  });\n\n  filteredTransactions = computed(() => {\n    let filtered = [...this.transactions()];\n\n    // Apply filters\n    const activeFilters = this.filters();\n    if (activeFilters.length > 0) {\n      filtered = filtered.filter((transaction) => {\n        return activeFilters.every((filter) => {\n          const value = this.getTransactionValue(transaction, filter.key);\n          return this.matchesFilter(value, filter.value, filter.operator);\n        });\n      });\n    }\n\n    // Apply sorting\n    const sortConfig = this.sort();\n    if (sortConfig) {\n      filtered.sort((a, b) => {\n        const aValue = this.getTransactionValue(a, sortConfig.column);\n        const bValue = this.getTransactionValue(b, sortConfig.column);\n\n        if (sortConfig.direction === 'asc') {\n          return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;\n        } else {\n          return aValue < bValue ? 1 : aValue > bValue ? -1 : 0;\n        }\n      });\n    }\n\n    return filtered;\n  });\n\n  paginatedTransactions = computed(() => {\n    const filtered = this.filteredTransactions();\n    const pagination = this.pagination();\n    const start = pagination.page * pagination.pageSize;\n    const end = start + pagination.pageSize;\n\n    return filtered.slice(start, end);\n  });\n\n  totalItems = computed(() => this.filteredTransactions().length);\n\n  hasActiveFilters = computed(() => this.filters().length > 0);\n\n  tableColumns = computed(() => {\n    const baseColumns: OsDataTableColumn[] = [\n      {\n        key: 'description',\n        label: 'Descrição',\n        sortable: true,\n        width: '30%',\n      },\n      {\n        key: 'amount',\n        label: 'Valor',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'date',\n        label: 'Data',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'category',\n        label: 'Categoria',\n        sortable: true,\n        width: '15%',\n      },\n      {\n        key: 'type',\n        label: 'Tipo',\n        sortable: true,\n        width: '10%',\n      },\n      {\n        key: 'status',\n        label: 'Status',\n        sortable: true,\n        width: '15%',\n      },\n    ];\n\n    if (this.variant() === 'detailed') {\n      return [\n        ...baseColumns,\n        {\n          key: 'account',\n          label: 'Conta',\n          sortable: true,\n          width: '10%',\n        },\n      ];\n    }\n\n    return baseColumns;\n  });\n\n  tableActions = computed(() => {\n    const actions: OsDataTableAction[] = [\n      {\n        key: 'edit',\n        label: 'Editar',\n        icon: 'edit',\n        color: 'secondary',\n      },\n      {\n        key: 'delete',\n        label: 'Excluir',\n        icon: 'trash',\n        color: 'warn',\n      },\n    ];\n\n    return actions;\n  });\n\n  // Helper methods\n  getTransactionValue(transaction: Transaction, key: string): string | number | Date {\n    switch (key) {\n      case 'description':\n        return transaction.description;\n      case 'amount':\n        return transaction.amount;\n      case 'date':\n        return transaction.date;\n      case 'category':\n        return transaction.category;\n      case 'type':\n        return transaction.type;\n      case 'status':\n        return transaction.status;\n      case 'account':\n        return transaction.account || '';\n      default:\n        return '';\n    }\n  }\n\n  matchesFilter(value: string | number | Date, filterValue: string, operator: string): boolean {\n    if (!filterValue) return true;\n\n    switch (operator) {\n      case 'equals':\n        return value === filterValue;\n      case 'contains':\n        return String(value).toLowerCase().includes(filterValue.toLowerCase());\n      case 'greater':\n        return Number(value) > Number(filterValue);\n      case 'less':\n        return Number(value) < Number(filterValue);\n      case 'between': {\n        const [min, max] = filterValue.split('-').map(Number);\n        return Number(value) >= min && Number(value) <= max;\n      }\n      default:\n        return true;\n    }\n  }\n\n  getFilterValue(key: string): string {\n    const filter = this.filters().find((f) => f.key === key);\n    return filter ? filter.value : '';\n  }\n\n  getItemCountText(): string {\n    const total = this.totalItems();\n    const pageSize = this.pagination().pageSize;\n    const page = this.pagination().page;\n    const start = page * pageSize + 1;\n    const end = Math.min((page + 1) * pageSize, total);\n\n    return `${start}-${end} de ${total} transações`;\n  }\n\n  // Size mappings\n  getButtonSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getFilterBarVariant(): OsFilterBarVariant {\n    const variantMap: Record<TransactionListVariant, OsFilterBarVariant> = {\n      default: 'default',\n      compact: 'compact',\n      detailed: 'expanded',\n    };\n    return variantMap[this.variant()];\n  }\n\n  getFilterBarSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getTableSize() {\n    const sizeMap: Record<TransactionListSize, 'small' | 'medium' | 'large'> = {\n      small: 'small',\n      medium: 'medium',\n      large: 'large',\n    };\n    return sizeMap[this.size()];\n  }\n\n  getTableVariant() {\n    const variantMap: Record<TransactionListVariant, 'default' | 'striped' | 'bordered'> = {\n      default: 'default',\n      compact: 'striped',\n      detailed: 'bordered',\n    };\n    return variantMap[this.variant()];\n  }\n\n  getSpinnerSize() {\n    const sizeMap: Record<TransactionListSize, 'xs' | 'sm' | 'md' | 'lg' | 'xl'> = {\n      small: 'sm',\n      medium: 'md',\n      large: 'lg',\n    };\n    return sizeMap[this.size()];\n  }\n\n  // Event handlers\n  onRefresh(): void {\n    this.refresh.emit();\n  }\n\n  onExport(): void {\n    this.export.emit();\n  }\n\n  onAdd(): void {\n    this.add.emit();\n  }\n\n  onFilterChange(key: string, event: Event): void {\n    const target = event.target as HTMLInputElement | HTMLSelectElement;\n    const value = target.value;\n\n    this.filters.update((filters) => {\n      const existing = filters.find((f) => f.key === key);\n      if (existing) {\n        if (value) {\n          return filters.map((f) => (f.key === key ? { ...f, value } : f));\n        } else {\n          return filters.filter((f) => f.key !== key);\n        }\n      } else if (value) {\n        return [...filters, { key, value, operator: 'contains' as const }];\n      }\n      return filters;\n    });\n\n    this.filterChange.emit(this.filters());\n  }\n\n  onClearFilters(): void {\n    this.filters.set([]);\n    this.filterChange.emit([]);\n  }\n\n  onApplyFilters(): void {\n    this.filterChange.emit(this.filters());\n  }\n\n  onRowClick(row: OsDataTableRow): void {\n    this.rowClick.emit(row as Transaction);\n  }\n\n  onTableActionClick(action: OsDataTableAction): void {\n    this.tableActionClick.emit(action);\n  }\n\n  onSortChange(sort: Sort): void {\n    this.sort.set({ column: sort.active, direction: sort.direction as 'asc' | 'desc' });\n    this.sortChange.emit({ column: sort.active, direction: sort.direction as 'asc' | 'desc' });\n  }\n\n  onPageChange(page: PageEvent): void {\n    this.pagination.update((p) => ({ ...p, page: page.pageIndex, pageSize: page.pageSize }));\n    this.pageChange.emit({\n      page: page.pageIndex,\n      pageSize: page.pageSize,\n      total: this.totalItems(),\n    });\n  }\n}\n",
            "styleUrl": "./os-transaction-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 258
            },
            "extends": []
        },
        {
            "name": "OsWizardTemplateComponent",
            "id": "component-OsWizardTemplateComponent-9fe310bbbf10f68848c7194eeba5ed1828e3e6a5afcabcfe59775f109430b9f0d37bf1e9a692442119713ecb65157c6e7834bcdfc8bd5d819fba1573078c1407",
            "file": "src/app/shared/ui-components/templates/os-wizard-template/os-wizard-template.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "os-wizard-template",
            "styleUrls": [
                "./os-wizard-template.component.scss"
            ],
            "styles": [],
            "template": "<div [class]=\"templateClass()\">\n  @if (showHeader()) {\n  <os-page-header\n    [variant]=\"headerVariant()\"\n    [size]=\"size()\"\n    [title]=\"config().title\"\n    [subtitle]=\"config().subtitle || null\"\n    [actions]=\"headerActions()\"\n  />\n  }\n\n  <div class=\"os-wizard-template__content\">\n    @if (showProgress()) {\n    <div class=\"os-wizard-template__progress\">\n      <os-progress-bar\n        [variant]=\"'primary'\"\n        [size]=\"size()\"\n        [value]=\"progressValue()\"\n        [label]=\"'Passo ' + (currentStepIndex() + 1) + ' de ' + totalSteps()\"\n      />\n    </div>\n    } @if (showStepNavigation()) {\n    <div class=\"os-wizard-template__steps\">\n      @for (step of config().steps; track step.id; let i = $index) {\n      <div\n        [class]=\"stepClass(step, i)\"\n        [attr.aria-current]=\"i === currentStepIndex() ? 'step' : null\"\n        [attr.aria-disabled]=\"step.disabled || false\"\n        [tabindex]=\"step.disabled ? -1 : 0\"\n        role=\"button\"\n        (click)=\"onStepClick(step, i)\"\n        (keydown.enter)=\"onStepClick(step, i)\"\n        (keydown.space)=\"onStepClick(step, i)\"\n      >\n        @if (showStepNumbers()) {\n        <div class=\"os-wizard-template__step-number\">\n          @if (step.completed) {\n          <os-icon name=\"check\" [size]=\"iconSize()\" />\n          } @else {\n          <span class=\"os-wizard-template__step-number-text\">{{ i + 1 }}</span>\n          }\n        </div>\n        } @if (showStepIcons() && step.icon) {\n        <div class=\"os-wizard-template__step-icon\">\n          <os-icon [name]=\"step.icon\" [size]=\"iconSize()\" />\n        </div>\n        }\n\n        <div class=\"os-wizard-template__step-content\">\n          <h3 class=\"os-wizard-template__step-title\">{{ step.title }}</h3>\n          @if (step.subtitle) {\n          <p class=\"os-wizard-template__step-subtitle\">{{ step.subtitle }}</p>\n          } @if (step.description) {\n          <p class=\"os-wizard-template__step-description\">{{ step.description }}</p>\n          }\n        </div>\n\n        @if (step.optional) {\n        <os-badge variant=\"secondary\" [size]=\"badgeSize()\">Opcional</os-badge>\n        }\n      </div>\n      }\n    </div>\n    }\n\n    <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"cardClass()\">\n      <div class=\"os-wizard-template__step-content\">\n        <ng-content />\n      </div>\n\n      @if (showActions()) {\n      <div class=\"os-wizard-template__actions\">\n        @if (showPreviousButton() && currentStepIndex() > 0) {\n        <os-button\n          [variant]=\"'secondary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled()\"\n          (click)=\"previous.emit()\"\n        >\n          {{ config().previousButtonText || 'Anterior' }}\n        </os-button>\n        } @if (showNextButton() && !isLastStep()) {\n        <os-button\n          [variant]=\"'primary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled() || !isCurrentStepValid()\"\n          [loading]=\"loading()\"\n          (click)=\"next.emit()\"\n        >\n          {{ config().nextButtonText || 'Próximo' }}\n        </os-button>\n        } @if (showFinishButton() && isLastStep()) {\n        <os-button\n          [variant]=\"'primary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled() || !isCurrentStepValid()\"\n          [loading]=\"loading()\"\n          (click)=\"finishWizard.emit()\"\n        >\n          {{ config().finishButtonText || 'Finalizar' }}\n        </os-button>\n        } @if (allowSkipSteps() && !isLastStep()) {\n        <os-button\n          [variant]=\"'tertiary'\"\n          [size]=\"size()\"\n          [disabled]=\"disabled()\"\n          (click)=\"skip.emit()\"\n        >\n          Pular\n        </os-button>\n        }\n      </div>\n      }\n    </os-card>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "allowSkipSteps",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 189,
                    "required": false
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WizardTemplateConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 176,
                    "required": true
                },
                {
                    "name": "currentStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 177,
                    "required": true
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 181,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 182,
                    "required": false
                },
                {
                    "name": "showActions",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 186,
                    "required": false
                },
                {
                    "name": "showHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 183,
                    "required": false
                },
                {
                    "name": "showProgress",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 184,
                    "required": false
                },
                {
                    "name": "showStepIcons",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 188,
                    "required": false
                },
                {
                    "name": "showStepNavigation",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 185,
                    "required": false
                },
                {
                    "name": "showStepNumbers",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 187,
                    "required": false
                },
                {
                    "name": "showStepValidation",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 190,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 178,
                    "required": false
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"light\" | \"dark\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 180,
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"compact\" | \"detailed\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 179,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "finishWizard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 194,
                    "required": false
                },
                {
                    "name": "next",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 192,
                    "required": false
                },
                {
                    "name": "previous",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 193,
                    "required": false
                },
                {
                    "name": "skip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "void",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 195,
                    "required": false
                },
                {
                    "name": "stepClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "{ step: WizardStep; index: number }",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 196,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "badgeSize",
                    "defaultValue": "computed(() => {\n    const size = this.size();\n    return size === 'small' ? 'sm' : size === 'medium' ? 'md' : 'lg';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 301,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "cardClass",
                    "defaultValue": "computed(() => {\n    return ['os-wizard-template__card', `os-wizard-template__card--${this.variant()}`]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 211,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "cardVariant",
                    "defaultValue": "computed(() => {\n    const variant = this.variant();\n    return variant === 'detailed' ? 'elevated' : 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 222,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "currentStepIndex",
                    "defaultValue": "computed(() => {\n    const currentStep = this.currentStep();\n    return this.config().steps.findIndex((step) => step.id === currentStep);\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 227,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "headerActions",
                    "defaultValue": "computed(() => {\n    if (!this.showHeader()) return [];\n\n    const actions = [];\n\n    if (this.config().showBackButton && this.config().backUrl) {\n      actions.push({\n        label: 'Voltar',\n        variant: 'secondary' as const,\n        size: this.size(),\n        icon: 'arrow-left',\n      });\n    }\n\n    return actions;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 265,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "headerVariant",
                    "defaultValue": "computed(() => {\n    const variant = this.variant();\n    return variant === 'compact' ? 'compact' : 'default';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 217,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "iconSize",
                    "defaultValue": "computed(() => {\n    const size = this.size();\n    return size === 'small' ? 'sm' : size === 'medium' ? 'md' : 'lg';\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 296,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isCurrentStepValid",
                    "defaultValue": "computed(() => {\n    if (!this.showStepValidation()) return true;\n\n    const currentStep = this.config().steps[this.currentStepIndex()];\n    return currentStep ? !currentStep.disabled : true;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 258,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isLastStep",
                    "defaultValue": "computed(() => {\n    return this.currentStepIndex() === this.totalSteps() - 1;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 254,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "progressValue",
                    "defaultValue": "computed(() => {\n    const currentIndex = this.currentStepIndex();\n    const total = this.totalSteps();\n    return total > 0 ? Math.round((currentIndex / total) * 100) : 0;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 236,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "showFinishButton",
                    "defaultValue": "computed(() => {\n    return this.config().showFinishButton !== false;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 250,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "showNextButton",
                    "defaultValue": "computed(() => {\n    return this.config().showNextButton !== false;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 246,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "showPreviousButton",
                    "defaultValue": "computed(() => {\n    return this.config().showPreviousButton !== false;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 242,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "stepClass",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 282,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "templateClass",
                    "defaultValue": "computed(() => {\n    return [\n      'os-wizard-template',\n      `os-wizard-template--${this.variant()}`,\n      `os-wizard-template--${this.size()}`,\n      `os-wizard-template--${this.theme()}`,\n      this.disabled() ? 'os-wizard-template--disabled' : '',\n      this.loading() ? 'os-wizard-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 198,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "totalSteps",
                    "defaultValue": "computed(() => {\n    return this.config().steps.length;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 232,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onStepClick",
                    "args": [
                        {
                            "name": "step",
                            "type": "WizardStep",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 306,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "step",
                            "type": "WizardStep",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "OsButtonComponent",
                    "type": "component"
                },
                {
                    "name": "OsCardComponent",
                    "type": "component"
                },
                {
                    "name": "OsProgressBarComponent",
                    "type": "component"
                },
                {
                    "name": "OsPageHeaderComponent",
                    "type": "component"
                },
                {
                    "name": "OsIconComponent",
                    "type": "component"
                },
                {
                    "name": "OsBadgeComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { OsButtonComponent } from '../../atoms/os-button/os-button.component';\nimport { OsCardComponent } from '../../molecules/os-card/os-card.component';\nimport { OsProgressBarComponent } from '../../atoms/os-progress-bar/os-progress-bar.component';\nimport { OsPageHeaderComponent } from '../../organisms/os-page-header/os-page-header.component';\nimport { OsIconComponent } from '../../atoms/os-icon/os-icon.component';\nimport { OsBadgeComponent } from '../../atoms/os-badge/os-badge.component';\n\nexport interface WizardStep {\n  id: string;\n  title: string;\n  subtitle?: string;\n  description?: string;\n  icon?: string;\n  completed?: boolean;\n  disabled?: boolean;\n  optional?: boolean;\n}\n\nexport interface WizardTemplateConfig {\n  title: string;\n  subtitle?: string;\n  showBackButton?: boolean;\n  backUrl?: string;\n  showNextButton?: boolean;\n  showPreviousButton?: boolean;\n  showFinishButton?: boolean;\n  nextButtonText?: string;\n  previousButtonText?: string;\n  finishButtonText?: string;\n  showProgress?: boolean;\n  showStepNumbers?: boolean;\n  showStepIcons?: boolean;\n  allowSkipSteps?: boolean;\n  showStepValidation?: boolean;\n  steps: WizardStep[];\n}\n\n@Component({\n  selector: 'os-wizard-template',\n  template: `\n    <div [class]=\"templateClass()\">\n      @if (showHeader()) {\n      <os-page-header\n        [variant]=\"headerVariant()\"\n        [size]=\"size()\"\n        [title]=\"config().title\"\n        [subtitle]=\"config().subtitle || null\"\n        [actions]=\"headerActions()\"\n      />\n      }\n\n      <div class=\"os-wizard-template__content\">\n        @if (showProgress()) {\n        <div class=\"os-wizard-template__progress\">\n          <os-progress-bar\n            [variant]=\"'primary'\"\n            [size]=\"size()\"\n            [value]=\"progressValue()\"\n            [label]=\"'Passo ' + (currentStepIndex() + 1) + ' de ' + totalSteps()\"\n          />\n        </div>\n        } @if (showStepNavigation()) {\n        <div class=\"os-wizard-template__steps\">\n          @for (step of config().steps; track step.id; let i = $index) {\n          <div\n            [class]=\"stepClass(step, i)\"\n            [attr.aria-current]=\"i === currentStepIndex() ? 'step' : null\"\n            [attr.aria-disabled]=\"step.disabled || false\"\n            [tabindex]=\"step.disabled ? -1 : 0\"\n            role=\"button\"\n            (click)=\"onStepClick(step, i)\"\n            (keydown.enter)=\"onStepClick(step, i)\"\n            (keydown.space)=\"onStepClick(step, i)\"\n          >\n            @if (showStepNumbers()) {\n            <div class=\"os-wizard-template__step-number\">\n              @if (step.completed) {\n              <os-icon name=\"check\" [size]=\"iconSize()\" />\n              } @else {\n              <span class=\"os-wizard-template__step-number-text\">{{ i + 1 }}</span>\n              }\n            </div>\n            } @if (showStepIcons() && step.icon) {\n            <div class=\"os-wizard-template__step-icon\">\n              <os-icon [name]=\"step.icon\" [size]=\"iconSize()\" />\n            </div>\n            }\n\n            <div class=\"os-wizard-template__step-content\">\n              <h3 class=\"os-wizard-template__step-title\">{{ step.title }}</h3>\n              @if (step.subtitle) {\n              <p class=\"os-wizard-template__step-subtitle\">{{ step.subtitle }}</p>\n              } @if (step.description) {\n              <p class=\"os-wizard-template__step-description\">{{ step.description }}</p>\n              }\n            </div>\n\n            @if (step.optional) {\n            <os-badge variant=\"secondary\" [size]=\"badgeSize()\">Opcional</os-badge>\n            }\n          </div>\n          }\n        </div>\n        }\n\n        <os-card [variant]=\"cardVariant()\" [size]=\"size()\" [class]=\"cardClass()\">\n          <div class=\"os-wizard-template__step-content\">\n            <ng-content />\n          </div>\n\n          @if (showActions()) {\n          <div class=\"os-wizard-template__actions\">\n            @if (showPreviousButton() && currentStepIndex() > 0) {\n            <os-button\n              [variant]=\"'secondary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled()\"\n              (click)=\"previous.emit()\"\n            >\n              {{ config().previousButtonText || 'Anterior' }}\n            </os-button>\n            } @if (showNextButton() && !isLastStep()) {\n            <os-button\n              [variant]=\"'primary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled() || !isCurrentStepValid()\"\n              [loading]=\"loading()\"\n              (click)=\"next.emit()\"\n            >\n              {{ config().nextButtonText || 'Próximo' }}\n            </os-button>\n            } @if (showFinishButton() && isLastStep()) {\n            <os-button\n              [variant]=\"'primary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled() || !isCurrentStepValid()\"\n              [loading]=\"loading()\"\n              (click)=\"finishWizard.emit()\"\n            >\n              {{ config().finishButtonText || 'Finalizar' }}\n            </os-button>\n            } @if (allowSkipSteps() && !isLastStep()) {\n            <os-button\n              [variant]=\"'tertiary'\"\n              [size]=\"size()\"\n              [disabled]=\"disabled()\"\n              (click)=\"skip.emit()\"\n            >\n              Pular\n            </os-button>\n            }\n          </div>\n          }\n        </os-card>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./os-wizard-template.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RouterModule,\n    OsButtonComponent,\n    OsCardComponent,\n    OsProgressBarComponent,\n    OsPageHeaderComponent,\n    OsIconComponent,\n    OsBadgeComponent,\n  ],\n})\nexport class OsWizardTemplateComponent {\n  config = input.required<WizardTemplateConfig>();\n  currentStep = input.required<string>();\n  size = input<'small' | 'medium' | 'large'>('medium');\n  variant = input<'default' | 'compact' | 'detailed'>('default');\n  theme = input<'light' | 'dark'>('light');\n  disabled = input(false);\n  loading = input(false);\n  showHeader = input(true);\n  showProgress = input(true);\n  showStepNavigation = input(true);\n  showActions = input(true);\n  showStepNumbers = input(true);\n  showStepIcons = input(true);\n  allowSkipSteps = input(false);\n  showStepValidation = input(true);\n\n  next = output<void>();\n  previous = output<void>();\n  finishWizard = output<void>();\n  skip = output<void>();\n  stepClick = output<{ step: WizardStep; index: number }>();\n\n  protected templateClass = computed(() => {\n    return [\n      'os-wizard-template',\n      `os-wizard-template--${this.variant()}`,\n      `os-wizard-template--${this.size()}`,\n      `os-wizard-template--${this.theme()}`,\n      this.disabled() ? 'os-wizard-template--disabled' : '',\n      this.loading() ? 'os-wizard-template--loading' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected cardClass = computed(() => {\n    return ['os-wizard-template__card', `os-wizard-template__card--${this.variant()}`]\n      .filter(Boolean)\n      .join(' ');\n  });\n\n  protected headerVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'compact' ? 'compact' : 'default';\n  });\n\n  protected cardVariant = computed(() => {\n    const variant = this.variant();\n    return variant === 'detailed' ? 'elevated' : 'default';\n  });\n\n  protected currentStepIndex = computed(() => {\n    const currentStep = this.currentStep();\n    return this.config().steps.findIndex((step) => step.id === currentStep);\n  });\n\n  protected totalSteps = computed(() => {\n    return this.config().steps.length;\n  });\n\n  protected progressValue = computed(() => {\n    const currentIndex = this.currentStepIndex();\n    const total = this.totalSteps();\n    return total > 0 ? Math.round((currentIndex / total) * 100) : 0;\n  });\n\n  protected showPreviousButton = computed(() => {\n    return this.config().showPreviousButton !== false;\n  });\n\n  protected showNextButton = computed(() => {\n    return this.config().showNextButton !== false;\n  });\n\n  protected showFinishButton = computed(() => {\n    return this.config().showFinishButton !== false;\n  });\n\n  protected isLastStep = computed(() => {\n    return this.currentStepIndex() === this.totalSteps() - 1;\n  });\n\n  protected isCurrentStepValid = computed(() => {\n    if (!this.showStepValidation()) return true;\n\n    const currentStep = this.config().steps[this.currentStepIndex()];\n    return currentStep ? !currentStep.disabled : true;\n  });\n\n  protected headerActions = computed(() => {\n    if (!this.showHeader()) return [];\n\n    const actions = [];\n\n    if (this.config().showBackButton && this.config().backUrl) {\n      actions.push({\n        label: 'Voltar',\n        variant: 'secondary' as const,\n        size: this.size(),\n        icon: 'arrow-left',\n      });\n    }\n\n    return actions;\n  });\n\n  protected stepClass = (step: WizardStep, index: number) => {\n    const currentIndex = this.currentStepIndex();\n    return [\n      'os-wizard-template__step',\n      `os-wizard-template__step--${this.size()}`,\n      index === currentIndex ? 'os-wizard-template__step--current' : '',\n      step.completed ? 'os-wizard-template__step--completed' : '',\n      step.disabled ? 'os-wizard-template__step--disabled' : '',\n      step.optional ? 'os-wizard-template__step--optional' : '',\n    ]\n      .filter(Boolean)\n      .join(' ');\n  };\n\n  protected iconSize = computed(() => {\n    const size = this.size();\n    return size === 'small' ? 'sm' : size === 'medium' ? 'md' : 'lg';\n  });\n\n  protected badgeSize = computed(() => {\n    const size = this.size();\n    return size === 'small' ? 'sm' : size === 'medium' ? 'md' : 'lg';\n  });\n\n  protected onStepClick(step: WizardStep, index: number): void {\n    if (step.disabled) return;\n\n    this.stepClick.emit({ step, index });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".os-wizard-template {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: var(--os-color-background);\n  color: var(--os-color-text);\n\n  &--small {\n    .os-wizard-template__content {\n      padding: var(--os-spacing-sm);\n    }\n\n    .os-wizard-template__steps {\n      gap: var(--os-spacing-xs);\n    }\n\n    .os-wizard-template__step {\n      padding: var(--os-spacing-sm);\n    }\n  }\n\n  &--medium {\n    .os-wizard-template__content {\n      padding: var(--os-spacing-md);\n    }\n\n    .os-wizard-template__steps {\n      gap: var(--os-spacing-sm);\n    }\n\n    .os-wizard-template__step {\n      padding: var(--os-spacing-md);\n    }\n  }\n\n  &--large {\n    .os-wizard-template__content {\n      padding: var(--os-spacing-lg);\n    }\n\n    .os-wizard-template__steps {\n      gap: var(--os-spacing-md);\n    }\n\n    .os-wizard-template__step {\n      padding: var(--os-spacing-lg);\n    }\n  }\n\n  &--compact {\n    .os-wizard-template__steps {\n      display: none;\n    }\n\n    .os-wizard-template__progress {\n      margin-bottom: var(--os-spacing-md);\n    }\n  }\n\n  &--detailed {\n    .os-wizard-template__steps {\n      margin-bottom: var(--os-spacing-lg);\n    }\n\n    .os-wizard-template__step {\n      border: 1px solid var(--os-color-border);\n      border-radius: var(--os-border-radius-md);\n    }\n  }\n\n  &--disabled {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  &--loading {\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: rgba(255, 255, 255, 0.8);\n      z-index: 10;\n    }\n  }\n\n  &--dark {\n    background-color: var(--os-color-background-dark);\n    color: var(--os-color-text-dark);\n  }\n}\n\n.os-wizard-template__content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-md);\n}\n\n.os-wizard-template__progress {\n  margin-bottom: var(--os-spacing-md);\n}\n\n.os-wizard-template__steps {\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-sm);\n  margin-bottom: var(--os-spacing-lg);\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n}\n\n.os-wizard-template__step {\n  display: flex;\n  align-items: center;\n  gap: var(--os-spacing-sm);\n  padding: var(--os-spacing-md);\n  background-color: var(--os-color-surface);\n  border-radius: var(--os-border-radius-sm);\n  cursor: pointer;\n  transition: all 0.2s ease;\n  position: relative;\n\n  &:hover:not(&--disabled) {\n    background-color: var(--os-color-surface-hover);\n    transform: translateY(-1px);\n    box-shadow: var(--os-shadow-sm);\n  }\n\n  &--current {\n    background-color: var(--os-color-primary-light);\n    border: 2px solid var(--os-color-primary);\n    box-shadow: var(--os-shadow-md);\n\n    .os-wizard-template__step-title {\n      color: var(--os-color-primary);\n      font-weight: 600;\n    }\n  }\n\n  &--completed {\n    background-color: var(--os-color-success-light);\n    border: 1px solid var(--os-color-success);\n\n    .os-wizard-template__step-title {\n      color: var(--os-color-success);\n    }\n  }\n\n  &--disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    background-color: var(--os-color-surface-disabled);\n  }\n\n  &--optional {\n    border: 1px dashed var(--os-color-border);\n  }\n}\n\n.os-wizard-template__step-number {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  background-color: var(--os-color-primary);\n  color: white;\n  border-radius: 50%;\n  font-weight: 600;\n  font-size: 14px;\n  flex-shrink: 0;\n\n  &-text {\n    font-size: 14px;\n    font-weight: 600;\n  }\n}\n\n.os-wizard-template__step-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  background-color: var(--os-color-surface);\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.os-wizard-template__step-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: var(--os-spacing-xs);\n}\n\n.os-wizard-template__step-title {\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--os-color-text);\n  margin: 0;\n}\n\n.os-wizard-template__step-subtitle {\n  font-size: 14px;\n  color: var(--os-color-text-secondary);\n  margin: 0;\n}\n\n.os-wizard-template__step-description {\n  font-size: 12px;\n  color: var(--os-color-text-tertiary);\n  margin: 0;\n}\n\n.os-wizard-template__card {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 400px;\n}\n\n.os-wizard-template__step-content {\n  flex: 1;\n  padding: var(--os-spacing-lg);\n}\n\n.os-wizard-template__actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: var(--os-spacing-sm);\n  padding: var(--os-spacing-lg);\n  border-top: 1px solid var(--os-color-border);\n  background-color: var(--os-color-surface);\n\n  @media (max-width: 767px) {\n    flex-direction: column;\n    gap: var(--os-spacing-sm);\n\n    .os-button {\n      width: 100%;\n    }\n  }\n}\n\n// Responsive design\n@media (max-width: 767px) {\n  .os-wizard-template {\n    &--small,\n    &--medium,\n    &--large {\n      .os-wizard-template__content {\n        padding: var(--os-spacing-sm);\n      }\n\n      .os-wizard-template__steps {\n        gap: var(--os-spacing-xs);\n      }\n\n      .os-wizard-template__step {\n        padding: var(--os-spacing-sm);\n        flex-direction: column;\n        text-align: center;\n      }\n    }\n  }\n\n  .os-wizard-template__step {\n    &-number,\n    &-icon {\n      width: 24px;\n      height: 24px;\n      font-size: 12px;\n    }\n  }\n\n  .os-wizard-template__step-title {\n    font-size: 14px;\n  }\n\n  .os-wizard-template__step-subtitle {\n    font-size: 12px;\n  }\n\n  .os-wizard-template__step-description {\n    font-size: 11px;\n  }\n}\n\n// Dark theme\n.os-wizard-template--dark {\n  .os-wizard-template__step {\n    background-color: var(--os-color-surface-dark);\n    color: var(--os-color-text-dark);\n\n    &:hover:not(&--disabled) {\n      background-color: var(--os-color-surface-hover-dark);\n    }\n\n    &--current {\n      background-color: var(--os-color-primary-dark);\n      border-color: var(--os-color-primary);\n\n      .os-wizard-template__step-title {\n        color: var(--os-color-primary);\n      }\n    }\n\n    &--completed {\n      background-color: var(--os-color-success-dark);\n      border-color: var(--os-color-success);\n\n      .os-wizard-template__step-title {\n        color: var(--os-color-success);\n      }\n    }\n\n    &--disabled {\n      background-color: var(--os-color-surface-disabled-dark);\n    }\n  }\n\n  .os-wizard-template__actions {\n    background-color: var(--os-color-surface-dark);\n    border-color: var(--os-color-border-dark);\n  }\n}\n",
                    "styleUrl": "./os-wizard-template.component.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "accountHandlers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/accounts.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  http.get('/accounts', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const budgetId = url.searchParams.get('budgetId');\n\n    if (!budgetId) {\n      return HttpResponse.json({ error: 'budgetId is required' }, { status: 400 });\n    }\n\n    return HttpResponse.json({\n      data: mockAccounts,\n      meta: {\n        count: mockAccounts.length,\n      },\n    });\n  }),\n\n  http.post('/account/create-account', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.name || !body.type || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    const newAccount = {\n      id: 'account-' + Date.now(),\n      name: body.name,\n      type: body.type,\n      balance: body.initialBalance || 0,\n    };\n\n    return HttpResponse.json({ id: newAccount.id }, { status: 201 });\n  }),\n\n  http.post('/account/update-account', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.userId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/account/delete-account', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.accountId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/account/reconcile-account', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId || !body.accountId || body.realBalance === undefined) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/account/transfer-between-accounts', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.fromAccountId || !body.toAccountId || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZonelessChangeDetection(),\n    provideRouter(routes),\n    provideClientHydration(withEventReplay()),\n    provideHttpClient(withInterceptors([authInterceptor, errorInterceptor])),\n    provideFirebaseApp(() => initializeApp(firebaseConfig)),\n    provideAuth(() => getAuth()),\n    {\n      provide: EXTERNAL_AUTH_SERVICE_ADAPTER,\n      useClass: environment.authBypass ? MockAuthServiceAdapter : FirebaseAuthServiceAdapter,\n    },\n  ],\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.isAuthenticated()) {\n    return true;\n  }\n\n  router.navigate(['/login'], {\n    queryParams: { returnUrl: state.url },\n  });\n\n  return false;\n}"
            },
            {
                "name": "authHandlers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/auth.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  http.get('/api/me', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ anonymous: true }, { status: 200 });\n    }\n\n    const token = authHeader.replace('Bearer ', '');\n\n    if (token === 'valid-token') {\n      return HttpResponse.json({\n        userId: 'user-123',\n        email: 'user@example.com',\n        name: 'Usuário Teste',\n      });\n    }\n\n    return HttpResponse.json({ error: 'Invalid token' }, { status: 401 });\n  }),\n\n  http.get('/api/health', () => {\n    return HttpResponse.json({\n      status: 'ok',\n      traceId: 'trace-' + Date.now(),\n      timestamp: new Date().toISOString(),\n    });\n  }),\n\n  http.get('/api/ready', () => {\n    return HttpResponse.json({\n      status: 'ready',\n      traceId: 'trace-' + Date.now(),\n      timestamp: new Date().toISOString(),\n    });\n  }),\n]"
            },
            {
                "name": "authInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/interceptors/auth/auth.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(\n  req: HttpRequest<unknown>,\n  next: HttpHandlerFn\n) => {\n  const authService = inject(AuthService);\n\n  if (shouldSkipAuth(req.url)) {\n    return next(req);\n  }\n\n  return from(authService.getToken()).pipe(\n    switchMap((token) => {\n      if (!token) {\n        return next(req);\n      }\n\n      const authReq = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return next(authReq);\n    }),\n    catchError((error) => {\n      if (error.status === 401) {\n        authService.signOut();\n        return throwError(() => error);\n      }\n      return throwError(() => error);\n    })\n  );\n}"
            },
            {
                "name": "budgetHandlers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/budgets.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  http.get('/api/budget', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    return HttpResponse.json({\n      data: mockBudgets,\n      meta: {\n        count: mockBudgets.length,\n      },\n    });\n  }),\n\n  http.get('/api/budget/:budgetId/overview', ({ request, params }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { budgetId } = params;\n\n    if (budgetId === 'budget-1') {\n      return HttpResponse.json({\n        data: mockBudgetOverview,\n      });\n    }\n\n    return HttpResponse.json({ error: 'Budget not found' }, { status: 404 });\n  }),\n\n  http.post('/api/budget/create-budget', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.name || !body.ownerId || !body.type) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    const newBudget = {\n      id: 'budget-' + Date.now(),\n      name: body.name,\n      type: body.type,\n      participantsCount: 1,\n    };\n\n    return HttpResponse.json({ id: newBudget.id }, { status: 201 });\n  }),\n\n  http.post('/api/budget/update-budget', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId || !body.name) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/api/budget/delete-budget', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/api/budget/add-participant', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId || !body.participantId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/api/budget/remove-participant', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId || !body.participantId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
            },
            {
                "name": "categoryHandlers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/categories.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  http.get('/categories', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const budgetId = url.searchParams.get('budgetId');\n\n    // Categories are global, but we can filter by budgetId if needed\n    // For now, we'll return all categories regardless of budgetId\n    let filteredCategories = mockCategories;\n\n    if (budgetId) {\n      // In a real implementation, you might filter categories by budget\n      // For now, we'll return all categories\n      filteredCategories = mockCategories;\n    }\n\n    return HttpResponse.json({\n      data: filteredCategories,\n    });\n  }),\n]"
            },
            {
                "name": "creditCardHandlers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/credit-cards.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  // Credit Card endpoints\n  http.post('/credit-card/create-credit-card', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.name || !body.limit || !body.closingDay || !body.dueDay || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.limit <= 0) {\n      return HttpResponse.json({ error: 'Limit must be positive' }, { status: 400 });\n    }\n\n    if (body.closingDay < 1 || body.closingDay > 31) {\n      return HttpResponse.json({ error: 'Closing day must be between 1 and 31' }, { status: 400 });\n    }\n\n    if (body.dueDay < 1 || body.dueDay > 31) {\n      return HttpResponse.json({ error: 'Due day must be between 1 and 31' }, { status: 400 });\n    }\n\n    const newCreditCard = {\n      id: 'credit-card-' + Date.now(),\n      name: body.name,\n      limit: body.limit,\n      closingDay: body.closingDay,\n      dueDay: body.dueDay,\n      budgetId: body.budgetId,\n    };\n\n    return HttpResponse.json({ id: newCreditCard.id }, { status: 201 });\n  }),\n\n  http.post('/credit-card/update-credit-card', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.name || !body.limit || !body.closingDay || !body.dueDay) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.limit <= 0) {\n      return HttpResponse.json({ error: 'Limit must be positive' }, { status: 400 });\n    }\n\n    if (body.closingDay < 1 || body.closingDay > 31) {\n      return HttpResponse.json({ error: 'Closing day must be between 1 and 31' }, { status: 400 });\n    }\n\n    if (body.dueDay < 1 || body.dueDay > 31) {\n      return HttpResponse.json({ error: 'Due day must be between 1 and 31' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/credit-card/delete-credit-card', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  // Credit Card Bill endpoints\n  http.post('/credit-card-bill/create-credit-card-bill', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.creditCardId || !body.closingDate || !body.dueDate || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    const newBill = {\n      id: 'bill-' + Date.now(),\n      creditCardId: body.creditCardId,\n      closingDate: body.closingDate,\n      dueDate: body.dueDate,\n      amount: body.amount,\n      paid: false,\n    };\n\n    return HttpResponse.json({ id: newBill.id }, { status: 201 });\n  }),\n\n  http.post('/credit-card-bill/update-credit-card-bill', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.closingDate || !body.dueDate || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/credit-card-bill/delete-credit-card-bill', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/credit-card-bill/pay-credit-card-bill', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (\n      !body.creditCardBillId ||\n      !body.accountId ||\n      !body.userId ||\n      !body.budgetId ||\n      !body.amount ||\n      !body.paymentCategoryId\n    ) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/credit-card-bill/reopen-credit-card-bill', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.creditCardBillId || !body.userId || !body.budgetId || !body.justification) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
            },
            {
                "name": "envelopeHandlers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/envelopes.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  http.get('/envelopes', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const budgetId = url.searchParams.get('budgetId');\n\n    if (!budgetId) {\n      return HttpResponse.json({ error: 'budgetId is required' }, { status: 400 });\n    }\n\n    const filteredEnvelopes = mockEnvelopes.filter((envelope) => envelope.budgetId === budgetId);\n\n    return HttpResponse.json({\n      data: filteredEnvelopes,\n      meta: {\n        count: filteredEnvelopes.length,\n      },\n    });\n  }),\n\n  http.post('/envelope/create-envelope', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.name || !body.monthlyLimit || !body.budgetId || !body.categoryId || !body.userId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.monthlyLimit <= 0) {\n      return HttpResponse.json({ error: 'Monthly limit must be positive' }, { status: 400 });\n    }\n\n    const newEnvelope = {\n      id: 'envelope-' + Date.now(),\n      name: body.name,\n      monthlyLimit: body.monthlyLimit,\n      currentAmount: 0,\n      budgetId: body.budgetId,\n      categoryId: body.categoryId,\n    };\n\n    return HttpResponse.json({ id: newEnvelope.id }, { status: 201 });\n  }),\n\n  http.post('/envelope/update-envelope', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.envelopeId || !body.userId || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.monthlyLimit !== undefined && body.monthlyLimit <= 0) {\n      return HttpResponse.json({ error: 'Monthly limit must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/envelope/delete-envelope', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.envelopeId || !body.userId || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/envelope/add-amount-envelope', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.envelopeId || !body.userId || !body.budgetId || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/envelope/remove-amount-envelope', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.envelopeId || !body.userId || !body.budgetId || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/envelope/transfer-between-envelopes', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (\n      !body.sourceEnvelopeId ||\n      !body.targetEnvelopeId ||\n      !body.userId ||\n      !body.budgetId ||\n      !body.amount\n    ) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    if (body.sourceEnvelopeId === body.targetEnvelopeId) {\n      return HttpResponse.json(\n        { error: 'Source and target envelopes must be different' },\n        { status: 400 }\n      );\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Environment",
                "defaultValue": "{\n  production: true,\n  apiUrl: 'https://api.orca-sonhos.com',\n  version: '1.0.0',\n  debug: false,\n  enableLogging: false,\n  authBypass: false,\n  firebase: {\n    apiKey: 'AIzaSyCkQKwFo-txr5p7v_rMM56Tznj4V8vA9tc',\n    authDomain: 'orca-sonhos.firebaseapp.com',\n    projectId: 'orca-sonhos',\n    storageBucket: 'orca-sonhos.firebasestorage.app',\n    messagingSenderId: '211253976316',\n    appId: '1:211253976316:web:7d7981947785a2fa400b79',\n  },\n  features: {\n    offlineMode: false,\n    analytics: true,\n    errorReporting: true,\n  },\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Environment",
                "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:3001/api',\n  version: '1.0.0-test',\n  debug: true,\n  enableLogging: true,\n  authBypass: true,\n  firebase: {\n    apiKey: 'AIzaSyCkQKwFo-txr5p7v_rMM56Tznj4V8vA9tc',\n    authDomain: 'orca-sonhos.firebaseapp.com',\n    projectId: 'orca-sonhos',\n    storageBucket: 'orca-sonhos.firebasestorage.app',\n    messagingSenderId: '211253976316',\n    appId: '1:211253976316:web:7d7981947785a2fa400b79',\n  },\n  features: {\n    offlineMode: false,\n    analytics: false,\n    errorReporting: false,\n  },\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Environment",
                "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:4200/api',\n  version: '1.0.0',\n  debug: true,\n  enableLogging: true,\n  authBypass: true,\n  firebase: {\n    apiKey: 'AIzaSyCkQKwFo-txr5p7v_rMM56Tznj4V8vA9tc',\n    authDomain: 'orca-sonhos.firebaseapp.com',\n    projectId: 'orca-sonhos',\n    storageBucket: 'orca-sonhos.firebasestorage.app',\n    messagingSenderId: '211253976316',\n    appId: '1:211253976316:web:7d7981947785a2fa400b79',\n  },\n  features: {\n    offlineMode: false,\n    analytics: false,\n    errorReporting: false,\n  },\n}"
            },
            {
                "name": "errorInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/interceptors/error/error.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\n  const notificationService = inject(NotificationService);\n\n  return next(req).pipe(\n    catchError((error: HttpErrorResponse) => {\n      let errorMessage = 'Ocorreu um erro inesperado';\n      let errorTitle = 'Erro';\n\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = `Erro de cliente: ${error.error.message}`;\n        errorTitle = 'Erro de Rede';\n      } else {\n        switch (error.status) {\n          case 400:\n            errorMessage = 'Dados inválidos. Verifique as informações enviadas.';\n            errorTitle = 'Dados Inválidos';\n            break;\n          case 401:\n            errorMessage = 'Não autorizado. Faça login novamente.';\n            errorTitle = 'Não Autorizado';\n            break;\n          case 403:\n            errorMessage = 'Acesso negado. Você não tem permissão para esta ação.';\n            errorTitle = 'Acesso Negado';\n            break;\n          case 404:\n            errorMessage = 'Recurso não encontrado.';\n            errorTitle = 'Não Encontrado';\n            break;\n          case 409:\n            errorMessage = 'Conflito. O recurso já existe ou está em uso.';\n            errorTitle = 'Conflito';\n            break;\n          case 422:\n            errorMessage = 'Dados inválidos. Verifique os campos obrigatórios.';\n            errorTitle = 'Validação';\n            break;\n          case 429:\n            errorMessage = 'Muitas tentativas. Tente novamente em alguns minutos.';\n            errorTitle = 'Muitas Tentativas';\n            break;\n          case 500:\n            errorMessage = 'Erro interno do servidor. Tente novamente mais tarde.';\n            errorTitle = 'Erro do Servidor';\n            break;\n          case 502:\n            errorMessage = 'Servidor temporariamente indisponível.';\n            errorTitle = 'Servidor Indisponível';\n            break;\n          case 503:\n            errorMessage = 'Serviço temporariamente indisponível.';\n            errorTitle = 'Serviço Indisponível';\n            break;\n          case 504:\n            errorMessage = 'Timeout da requisição. Tente novamente.';\n            errorTitle = 'Timeout';\n            break;\n          default:\n            errorMessage = `Erro ${error.status}: ${error.message}`;\n            errorTitle = 'Erro';\n        }\n      }\n\n      console.error('HTTP Error:', {\n        status: error.status,\n        message: errorMessage,\n        url: req.url,\n        method: req.method,\n      });\n\n      notificationService.showError(errorMessage, errorTitle);\n\n      return throwError(() => new Error(errorMessage));\n    })\n  );\n}"
            },
            {
                "name": "EXTERNAL_AUTH_SERVICE_ADAPTER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/adapters/external-auth-service.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<ExternalAuthServiceAdapter>(\n  'ExternalAuthServiceAdapter'\n)"
            },
            {
                "name": "firebaseConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  apiKey: 'AIzaSyCkQKwFo-txr5p7v_rMM56Tznj4V8vA9tc',\n  authDomain: 'orca-sonhos.firebaseapp.com',\n  projectId: 'orca-sonhos',\n  storageBucket: 'orca-sonhos.firebasestorage.app',\n  messagingSenderId: '211253976316',\n  appId: '1:211253976316:web:7d7981947785a2fa400b79',\n}"
            },
            {
                "name": "goalHandlers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/goals.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  http.get('/goals', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const budgetId = url.searchParams.get('budgetId');\n\n    if (!budgetId) {\n      return HttpResponse.json({ error: 'budgetId is required' }, { status: 400 });\n    }\n\n    const filteredGoals = mockGoals.filter((goal) => goal.budgetId === budgetId);\n\n    return HttpResponse.json({\n      data: filteredGoals,\n      meta: {\n        count: filteredGoals.length,\n      },\n    });\n  }),\n\n  http.post('/goal/create-goal', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.name || !body.totalAmount || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.totalAmount <= 0) {\n      return HttpResponse.json({ error: 'Total amount must be positive' }, { status: 400 });\n    }\n\n    const newGoal = {\n      id: 'goal-' + Date.now(),\n      name: body.name,\n      totalAmount: body.totalAmount,\n      accumulatedAmount: body.accumulatedAmount || 0,\n      deadline: body.deadline,\n      budgetId: body.budgetId,\n    };\n\n    return HttpResponse.json({ id: newGoal.id }, { status: 201 });\n  }),\n\n  http.post('/goal/update-goal', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.name || !body.totalAmount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.totalAmount <= 0) {\n      return HttpResponse.json({ error: 'Total amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/goal/delete-goal', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/goal/add-amount-goal', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
            },
            {
                "name": "handlers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  ...authHandlers,\n  ...budgetHandlers,\n  ...accountHandlers,\n  ...transactionHandlers,\n  ...goalHandlers,\n  ...categoryHandlers,\n  ...envelopeHandlers,\n  ...creditCardHandlers,\n]"
            },
            {
                "name": "mockAccounts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/accounts.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    id: 'account-1',\n    name: 'Conta Corrente Principal',\n    type: 'CHECKING_ACCOUNT',\n    balance: 3000.0,\n  },\n  {\n    id: 'account-2',\n    name: 'Poupança',\n    type: 'SAVINGS_ACCOUNT',\n    balance: 2000.0,\n  },\n  {\n    id: 'account-3',\n    name: 'Carteira Física',\n    type: 'PHYSICAL_WALLET',\n    balance: 500.0,\n  },\n  {\n    id: 'account-4',\n    name: 'Pix',\n    type: 'DIGITAL_WALLET',\n    balance: 1000.0,\n  },\n  {\n    id: 'account-5',\n    name: 'Investimentos',\n    type: 'INVESTMENT_ACCOUNT',\n    balance: 5000.0,\n  },\n]"
            },
            {
                "name": "mockBudgetOverview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/budgets.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  id: 'budget-1',\n  name: 'Orçamento Pessoal',\n  type: 'PERSONAL',\n  participants: [{ id: 'user-123', name: 'Usuário Teste', email: 'user@example.com' }],\n  totals: {\n    accountsBalance: 5000.0,\n    monthIncome: 3000.0,\n    monthExpense: 2500.0,\n    netMonth: 500.0,\n  },\n  accounts: [\n    {\n      id: 'account-1',\n      name: 'Conta Corrente',\n      type: 'CHECKING_ACCOUNT',\n      balance: 3000.0,\n    },\n    {\n      id: 'account-2',\n      name: 'Poupança',\n      type: 'SAVINGS_ACCOUNT',\n      balance: 2000.0,\n    },\n  ],\n}"
            },
            {
                "name": "mockBudgets",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/budgets.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    id: 'budget-1',\n    name: 'Orçamento Pessoal',\n    type: 'PERSONAL',\n    participantsCount: 1,\n  },\n  {\n    id: 'budget-2',\n    name: 'Orçamento Familiar',\n    type: 'SHARED',\n    participantsCount: 3,\n  },\n]"
            },
            {
                "name": "mockCategories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/categories.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  // Income categories\n  {\n    id: 'category-salary',\n    name: 'Salário',\n    type: 'INCOME',\n  },\n  {\n    id: 'category-freelance',\n    name: 'Freelance',\n    type: 'INCOME',\n  },\n  {\n    id: 'category-investments',\n    name: 'Investimentos',\n    type: 'INCOME',\n  },\n  {\n    id: 'category-bonus',\n    name: 'Bônus',\n    type: 'INCOME',\n  },\n  // Expense categories\n  {\n    id: 'category-groceries',\n    name: 'Supermercado',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-utilities',\n    name: 'Contas',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-transport',\n    name: 'Transporte',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-health',\n    name: 'Saúde',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-education',\n    name: 'Educação',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-entertainment',\n    name: 'Entretenimento',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-clothing',\n    name: 'Roupas',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-home',\n    name: 'Casa',\n    type: 'EXPENSE',\n  },\n  // Transfer categories\n  {\n    id: 'category-transfer',\n    name: 'Transferência',\n    type: 'TRANSFER',\n  },\n  {\n    id: 'category-savings',\n    name: 'Poupança',\n    type: 'TRANSFER',\n  },\n]"
            },
            {
                "name": "mockCreditCardBills",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/credit-cards.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    id: 'bill-1',\n    creditCardId: 'credit-card-1',\n    closingDate: '2025-01-15T23:59:59Z',\n    dueDate: '2025-01-25T23:59:59Z',\n    amount: 1200.0,\n    paid: false,\n  },\n  {\n    id: 'bill-2',\n    creditCardId: 'credit-card-2',\n    closingDate: '2025-01-05T23:59:59Z',\n    dueDate: '2025-01-15T23:59:59Z',\n    amount: 450.0,\n    paid: true,\n  },\n]"
            },
            {
                "name": "mockCreditCards",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/credit-cards.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    id: 'credit-card-1',\n    name: 'Cartão Principal',\n    limit: 5000.0,\n    closingDay: 15,\n    dueDay: 25,\n    budgetId: 'budget-1',\n  },\n  {\n    id: 'credit-card-2',\n    name: 'Cartão de Emergência',\n    limit: 2000.0,\n    closingDay: 5,\n    dueDay: 15,\n    budgetId: 'budget-1',\n  },\n]"
            },
            {
                "name": "mockEnvelopes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/envelopes.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    id: 'envelope-1',\n    name: 'Alimentação',\n    monthlyLimit: 800.0,\n    currentAmount: 450.0,\n    budgetId: 'budget-1',\n    categoryId: 'category-groceries',\n  },\n  {\n    id: 'envelope-2',\n    name: 'Transporte',\n    monthlyLimit: 300.0,\n    currentAmount: 180.0,\n    budgetId: 'budget-1',\n    categoryId: 'category-transport',\n  },\n  {\n    id: 'envelope-3',\n    name: 'Entretenimento',\n    monthlyLimit: 200.0,\n    currentAmount: 75.0,\n    budgetId: 'budget-1',\n    categoryId: 'category-entertainment',\n  },\n  {\n    id: 'envelope-4',\n    name: 'Saúde',\n    monthlyLimit: 500.0,\n    currentAmount: 320.0,\n    budgetId: 'budget-1',\n    categoryId: 'category-health',\n  },\n  {\n    id: 'envelope-5',\n    name: 'Educação',\n    monthlyLimit: 400.0,\n    currentAmount: 0.0,\n    budgetId: 'budget-1',\n    categoryId: 'category-education',\n  },\n]"
            },
            {
                "name": "mockGoals",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/goals.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    id: 'goal-1',\n    name: 'Viagem para Europa',\n    totalAmount: 15000.0,\n    accumulatedAmount: 5000.0,\n    deadline: '2025-12-31T23:59:59Z',\n    budgetId: 'budget-1',\n  },\n  {\n    id: 'goal-2',\n    name: 'Reserva de emergência',\n    totalAmount: 10000.0,\n    accumulatedAmount: 7500.0,\n    deadline: '2025-06-30T23:59:59Z',\n    budgetId: 'budget-1',\n  },\n  {\n    id: 'goal-3',\n    name: 'Novo notebook',\n    totalAmount: 3000.0,\n    accumulatedAmount: 1200.0,\n    deadline: '2025-03-31T23:59:59Z',\n    budgetId: 'budget-1',\n  },\n  {\n    id: 'goal-4',\n    name: 'Casa própria',\n    totalAmount: 200000.0,\n    accumulatedAmount: 25000.0,\n    deadline: '2027-12-31T23:59:59Z',\n    budgetId: 'budget-2',\n  },\n]"
            },
            {
                "name": "mockTransactions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/transactions.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  {\n    id: 'transaction-1',\n    date: '2025-01-10T10:30:00Z',\n    description: 'Salário',\n    amount: 3000.0,\n    direction: 'INCOME',\n    accountId: 'account-1',\n    categoryId: 'category-salary',\n  },\n  {\n    id: 'transaction-2',\n    date: '2025-01-09T14:20:00Z',\n    description: 'Supermercado',\n    amount: 150.0,\n    direction: 'EXPENSE',\n    accountId: 'account-1',\n    categoryId: 'category-groceries',\n  },\n  {\n    id: 'transaction-3',\n    date: '2025-01-08T09:15:00Z',\n    description: 'Transferência para poupança',\n    amount: 500.0,\n    direction: 'TRANSFER',\n    accountId: 'account-1',\n    categoryId: 'category-transfer',\n  },\n  {\n    id: 'transaction-4',\n    date: '2025-01-07T16:45:00Z',\n    description: 'Conta de luz',\n    amount: 80.0,\n    direction: 'EXPENSE',\n    accountId: 'account-1',\n    categoryId: 'category-utilities',\n  },\n  {\n    id: 'transaction-5',\n    date: '2025-01-06T11:30:00Z',\n    description: 'Freelance',\n    amount: 800.0,\n    direction: 'INCOME',\n    accountId: 'account-4',\n    categoryId: 'category-freelance',\n  },\n]"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Routes",
                "defaultValue": "[\n  {\n    path: '',\n    redirectTo: '/dashboard',\n    pathMatch: 'full',\n  },\n  {\n    path: 'dashboard',\n    loadComponent: () =>\n      \"import('./features/dashboard/pages/dashboard.page').then((m) => m.DashboardPage)\",\n  },\n]"
            },
            {
                "name": "server",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "setupServer(...handlers)"
            },
            {
                "name": "transactionHandlers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/handlers/transactions.handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  http.get('/transactions', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const budgetId = url.searchParams.get('budgetId');\n    const accountId = url.searchParams.get('accountId');\n    const categoryId = url.searchParams.get('categoryId');\n    const dateFrom = url.searchParams.get('dateFrom');\n    const dateTo = url.searchParams.get('dateTo');\n    const page = parseInt(url.searchParams.get('page') || '1');\n    const pageSize = Math.min(parseInt(url.searchParams.get('pageSize') || '20'), 100);\n\n    if (!budgetId) {\n      return HttpResponse.json({ error: 'budgetId is required' }, { status: 400 });\n    }\n\n    let filteredTransactions = [...mockTransactions];\n\n    if (accountId) {\n      filteredTransactions = filteredTransactions.filter((t) => t.accountId === accountId);\n    }\n\n    if (categoryId) {\n      filteredTransactions = filteredTransactions.filter((t) => t.categoryId === categoryId);\n    }\n\n    if (dateFrom) {\n      const fromDate = new Date(dateFrom);\n      filteredTransactions = filteredTransactions.filter((t) => new Date(t.date) >= fromDate);\n    }\n\n    if (dateTo) {\n      const toDate = new Date(dateTo);\n      filteredTransactions = filteredTransactions.filter((t) => new Date(t.date) <= toDate);\n    }\n\n    const startIndex = (page - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedTransactions = filteredTransactions.slice(startIndex, endIndex);\n\n    return HttpResponse.json({\n      data: paginatedTransactions,\n      meta: {\n        page,\n        pageSize,\n        hasNext: endIndex < filteredTransactions.length,\n      },\n    });\n  }),\n\n  http.post('/transaction/create-transaction', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (\n      !body.userId ||\n      !body.description ||\n      !body.amount ||\n      !body.type ||\n      !body.accountId ||\n      !body.categoryId ||\n      !body.budgetId\n    ) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    const newTransaction = {\n      id: 'transaction-' + Date.now(),\n      description: body.description,\n      amount: body.amount,\n      type: body.type,\n      accountId: body.accountId,\n      categoryId: body.categoryId,\n      budgetId: body.budgetId,\n      transactionDate: body.transactionDate || new Date().toISOString(),\n    };\n\n    return HttpResponse.json({ id: newTransaction.id }, { status: 201 });\n  }),\n\n  http.post('/transaction/update-transaction', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.id) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount !== undefined && body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/transaction/delete-transaction', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.userId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/transaction/cancel-scheduled-transaction', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId || !body.transactionId || !body.cancellationReason) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/transaction/mark-transaction-late', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.transactionId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
            },
            {
                "name": "worker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/mocks/browser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "setupWorker(...handlers)"
            }
        ],
        "functions": [
            {
                "name": "shouldSkipAuth",
                "file": "src/app/core/interceptors/auth/auth.interceptor.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "url",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "boolean",
                "jsdoctags": [
                    {
                        "name": "url",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AccountType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"CHECKING_ACCOUNT\" | \"SAVINGS_ACCOUNT\" | \"PHYSICAL_WALLET\" | \"DIGITAL_WALLET\" | \"INVESTMENT_ACCOUNT\"",
                "file": "src/dtos/budget/budget-types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "BudgetType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"PERSONAL\" | \"SHARED\"",
                "file": "src/dtos/budget/budget-types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "GoalProgressMilestone",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"25\" | \"50\" | \"75\" | \"90\" | \"100\"",
                "file": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "GoalProgressSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "GoalProgressTheme",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "GoalProgressVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"compact\" | \"detailed\" | \"minimal\"",
                "file": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "NavigationOrientation",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"horizontal\" | \"vertical\"",
                "file": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "NavigationSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "NavigationVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"minimal\" | \"sidebar\" | \"tabs\"",
                "file": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsAlertRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"alert\" | \"status\" | \"alertdialog\"",
                "file": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsAlertSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsAlertType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"success\" | \"warning\" | \"error\" | \"info\"",
                "file": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsAvatarRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"img\" | \"button\" | \"presentation\"",
                "file": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsAvatarSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\"",
                "file": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsAvatarStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"online\" | \"offline\" | \"away\" | \"busy\" | \"invisible\"",
                "file": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsAvatarVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"circle\" | \"square\" | \"rounded\"",
                "file": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsBadgePosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\" | \"inline\"",
                "file": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsBadgeRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"status\" | \"alert\" | \"decorative\"",
                "file": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsBadgeSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
                "file": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsBadgeVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\" | \"goal-active\" | \"goal-completed\" | \"goal-overdue\"",
                "file": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-button/os-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"tertiary\" | \"danger\" | \"success\" | \"warning\"",
                "file": "src/app/shared/ui-components/atoms/os-button/os-button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsCardSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-card/os-card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsCardVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"outlined\" | \"elevated\" | \"flat\"",
                "file": "src/app/shared/ui-components/molecules/os-card/os-card.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsCheckboxRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"checkbox\" | \"switch\"",
                "file": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsCheckboxSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsCheckboxVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\"",
                "file": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsChipSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-chip/os-chip.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsChipVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"warning\" | \"danger\" | \"neutral\"",
                "file": "src/app/shared/ui-components/atoms/os-chip/os-chip.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDataGridSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDataGridVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"compact\" | \"detailed\"",
                "file": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDataTableRow",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Record<string | >",
                "file": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "OsDataTableSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDataTableVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"striped\" | \"bordered\"",
                "file": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDateInputSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-date-input/os-date-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDatePickerRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"presentation\" | \"dialog\" | \"group\"",
                "file": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDatePickerSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDatePickerVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"outlined\" | \"filled\"",
                "file": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDropdownAlignment",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"start\" | \"center\" | \"end\"",
                "file": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDropdownSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsDropdownVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"accent\"",
                "file": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFilterBarSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFilterBarVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"compact\" | \"expanded\"",
                "file": "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFormFieldSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFormFieldType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"email\" | \"password\" | \"number\" | \"tel\" | \"url\"",
                "file": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFormFieldValidationState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"pristine\" | \"dirty\" | \"touched\" | \"invalid\" | \"valid\"",
                "file": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFormFieldVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"outlined\" | \"filled\"",
                "file": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFormGroupColumns",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"1\" | \"2\" | \"3\"",
                "file": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFormGroupSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFormGroupVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"compact\" | \"spaced\"",
                "file": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFormSectionSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFormSectionTheme",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsFormSectionVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"card\" | \"outlined\" | \"minimal\"",
                "file": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsIconRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"decorative\" | \"informative\" | \"interactive\"",
                "file": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsIconSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\"",
                "file": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsIconVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\"",
                "file": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsInputSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-input/os-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsInputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"email\" | \"password\" | \"number\" | \"tel\" | \"url\" | \"search\"",
                "file": "src/app/shared/ui-components/atoms/os-input/os-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsLabelSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsLabelVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\"",
                "file": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsLabelWeight",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"regular\" | \"medium\" | \"semibold\" | \"bold\"",
                "file": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsModalSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\" | \"fullscreen\"",
                "file": "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsModalVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"confirmation\" | \"form\" | \"info\"",
                "file": "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsMoneyDisplaySize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-money-display/os-money-display.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsMoneyDisplayVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"positive\" | \"negative\" | \"neutral\" | \"success\" | \"warning\" | \"error\" | \"info\"",
                "file": "src/app/shared/ui-components/molecules/os-money-display/os-money-display.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsMoneyInputSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-money-input/os-money-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsNavigationItemRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"navigation\" | \"menuitem\" | \"tab\" | \"button\"",
                "file": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsNavigationItemSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsNavigationItemVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"accent\"",
                "file": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsRadioRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"radio\" | \"switch\"",
                "file": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsRadioSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsRadioVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\"",
                "file": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSearchBoxRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"searchbox\" | \"combobox\" | \"textbox\"",
                "file": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSearchBoxSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSearchBoxVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"outlined\" | \"filled\"",
                "file": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSelectSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-select/os-select.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSliderFormat",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"number\" | \"currency\" | \"percentage\"",
                "file": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSliderRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"slider\" | \"progressbar\"",
                "file": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSliderSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSpinnerRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"status\" | \"progressbar\" | \"presentation\"",
                "file": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSpinnerSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"",
                "file": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSpinnerType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"overlay\"",
                "file": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsSpinnerVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\"",
                "file": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsToggleRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"switch\" | \"checkbox\"",
                "file": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsToggleSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsToggleVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"warning\" | \"danger\"",
                "file": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsTooltipPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"above\" | \"below\" | \"left\" | \"right\" | \"before\" | \"after\"",
                "file": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsTooltipRole",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"tooltip\" | \"status\" | \"alert\"",
                "file": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsTooltipSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "OsTooltipVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"accent\" | \"error\" | \"warning\" | \"info\" | \"success\"",
                "file": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "SidebarSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "SidebarTheme",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "SidebarVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"minimal\" | \"compact\" | \"expanded\"",
                "file": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "TransactionListSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "TransactionListTheme",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "TransactionListVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"default\" | \"compact\" | \"detailed\"",
                "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "WidgetSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\" | \"full-width\"",
                "file": "src/app/features/dashboard/types/dashboard.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "WidgetType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"budget-summary\" | \"goal-progress\" | \"transaction-list\" | \"account-balance\" | \"monthly-trends\" | \"quick-actions\"",
                "file": "src/app/features/dashboard/types/dashboard.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/core/mocks/handlers/accounts.handlers.ts": [
                {
                    "name": "accountHandlers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/accounts.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  http.get('/accounts', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const budgetId = url.searchParams.get('budgetId');\n\n    if (!budgetId) {\n      return HttpResponse.json({ error: 'budgetId is required' }, { status: 400 });\n    }\n\n    return HttpResponse.json({\n      data: mockAccounts,\n      meta: {\n        count: mockAccounts.length,\n      },\n    });\n  }),\n\n  http.post('/account/create-account', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.name || !body.type || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    const newAccount = {\n      id: 'account-' + Date.now(),\n      name: body.name,\n      type: body.type,\n      balance: body.initialBalance || 0,\n    };\n\n    return HttpResponse.json({ id: newAccount.id }, { status: 201 });\n  }),\n\n  http.post('/account/update-account', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.userId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/account/delete-account', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.accountId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/account/reconcile-account', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId || !body.accountId || body.realBalance === undefined) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/account/transfer-between-accounts', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.fromAccountId || !body.toAccountId || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
                },
                {
                    "name": "mockAccounts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/accounts.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    id: 'account-1',\n    name: 'Conta Corrente Principal',\n    type: 'CHECKING_ACCOUNT',\n    balance: 3000.0,\n  },\n  {\n    id: 'account-2',\n    name: 'Poupança',\n    type: 'SAVINGS_ACCOUNT',\n    balance: 2000.0,\n  },\n  {\n    id: 'account-3',\n    name: 'Carteira Física',\n    type: 'PHYSICAL_WALLET',\n    balance: 500.0,\n  },\n  {\n    id: 'account-4',\n    name: 'Pix',\n    type: 'DIGITAL_WALLET',\n    balance: 1000.0,\n  },\n  {\n    id: 'account-5',\n    name: 'Investimentos',\n    type: 'INVESTMENT_ACCOUNT',\n    balance: 5000.0,\n  },\n]"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZonelessChangeDetection(),\n    provideRouter(routes),\n    provideClientHydration(withEventReplay()),\n    provideHttpClient(withInterceptors([authInterceptor, errorInterceptor])),\n    provideFirebaseApp(() => initializeApp(firebaseConfig)),\n    provideAuth(() => getAuth()),\n    {\n      provide: EXTERNAL_AUTH_SERVICE_ADAPTER,\n      useClass: environment.authBypass ? MockAuthServiceAdapter : FirebaseAuthServiceAdapter,\n    },\n  ],\n}"
                },
                {
                    "name": "firebaseConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  apiKey: 'AIzaSyCkQKwFo-txr5p7v_rMM56Tznj4V8vA9tc',\n  authDomain: 'orca-sonhos.firebaseapp.com',\n  projectId: 'orca-sonhos',\n  storageBucket: 'orca-sonhos.firebasestorage.app',\n  messagingSenderId: '211253976316',\n  appId: '1:211253976316:web:7d7981947785a2fa400b79',\n}"
                }
            ],
            "src/app/core/guards/auth/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.isAuthenticated()) {\n    return true;\n  }\n\n  router.navigate(['/login'], {\n    queryParams: { returnUrl: state.url },\n  });\n\n  return false;\n}"
                }
            ],
            "src/app/core/mocks/handlers/auth.handlers.ts": [
                {
                    "name": "authHandlers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/auth.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  http.get('/api/me', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ anonymous: true }, { status: 200 });\n    }\n\n    const token = authHeader.replace('Bearer ', '');\n\n    if (token === 'valid-token') {\n      return HttpResponse.json({\n        userId: 'user-123',\n        email: 'user@example.com',\n        name: 'Usuário Teste',\n      });\n    }\n\n    return HttpResponse.json({ error: 'Invalid token' }, { status: 401 });\n  }),\n\n  http.get('/api/health', () => {\n    return HttpResponse.json({\n      status: 'ok',\n      traceId: 'trace-' + Date.now(),\n      timestamp: new Date().toISOString(),\n    });\n  }),\n\n  http.get('/api/ready', () => {\n    return HttpResponse.json({\n      status: 'ready',\n      traceId: 'trace-' + Date.now(),\n      timestamp: new Date().toISOString(),\n    });\n  }),\n]"
                }
            ],
            "src/app/core/interceptors/auth/auth.interceptor.ts": [
                {
                    "name": "authInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/interceptors/auth/auth.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(\n  req: HttpRequest<unknown>,\n  next: HttpHandlerFn\n) => {\n  const authService = inject(AuthService);\n\n  if (shouldSkipAuth(req.url)) {\n    return next(req);\n  }\n\n  return from(authService.getToken()).pipe(\n    switchMap((token) => {\n      if (!token) {\n        return next(req);\n      }\n\n      const authReq = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      return next(authReq);\n    }),\n    catchError((error) => {\n      if (error.status === 401) {\n        authService.signOut();\n        return throwError(() => error);\n      }\n      return throwError(() => error);\n    })\n  );\n}"
                }
            ],
            "src/app/core/mocks/handlers/budgets.handlers.ts": [
                {
                    "name": "budgetHandlers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/budgets.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  http.get('/api/budget', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    return HttpResponse.json({\n      data: mockBudgets,\n      meta: {\n        count: mockBudgets.length,\n      },\n    });\n  }),\n\n  http.get('/api/budget/:budgetId/overview', ({ request, params }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { budgetId } = params;\n\n    if (budgetId === 'budget-1') {\n      return HttpResponse.json({\n        data: mockBudgetOverview,\n      });\n    }\n\n    return HttpResponse.json({ error: 'Budget not found' }, { status: 404 });\n  }),\n\n  http.post('/api/budget/create-budget', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.name || !body.ownerId || !body.type) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    const newBudget = {\n      id: 'budget-' + Date.now(),\n      name: body.name,\n      type: body.type,\n      participantsCount: 1,\n    };\n\n    return HttpResponse.json({ id: newBudget.id }, { status: 201 });\n  }),\n\n  http.post('/api/budget/update-budget', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId || !body.name) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/api/budget/delete-budget', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/api/budget/add-participant', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId || !body.participantId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/api/budget/remove-participant', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId || !body.participantId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
                },
                {
                    "name": "mockBudgetOverview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/budgets.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  id: 'budget-1',\n  name: 'Orçamento Pessoal',\n  type: 'PERSONAL',\n  participants: [{ id: 'user-123', name: 'Usuário Teste', email: 'user@example.com' }],\n  totals: {\n    accountsBalance: 5000.0,\n    monthIncome: 3000.0,\n    monthExpense: 2500.0,\n    netMonth: 500.0,\n  },\n  accounts: [\n    {\n      id: 'account-1',\n      name: 'Conta Corrente',\n      type: 'CHECKING_ACCOUNT',\n      balance: 3000.0,\n    },\n    {\n      id: 'account-2',\n      name: 'Poupança',\n      type: 'SAVINGS_ACCOUNT',\n      balance: 2000.0,\n    },\n  ],\n}"
                },
                {
                    "name": "mockBudgets",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/budgets.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    id: 'budget-1',\n    name: 'Orçamento Pessoal',\n    type: 'PERSONAL',\n    participantsCount: 1,\n  },\n  {\n    id: 'budget-2',\n    name: 'Orçamento Familiar',\n    type: 'SHARED',\n    participantsCount: 3,\n  },\n]"
                }
            ],
            "src/app/core/mocks/handlers/categories.handlers.ts": [
                {
                    "name": "categoryHandlers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/categories.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  http.get('/categories', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const budgetId = url.searchParams.get('budgetId');\n\n    // Categories are global, but we can filter by budgetId if needed\n    // For now, we'll return all categories regardless of budgetId\n    let filteredCategories = mockCategories;\n\n    if (budgetId) {\n      // In a real implementation, you might filter categories by budget\n      // For now, we'll return all categories\n      filteredCategories = mockCategories;\n    }\n\n    return HttpResponse.json({\n      data: filteredCategories,\n    });\n  }),\n]"
                },
                {
                    "name": "mockCategories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/categories.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  // Income categories\n  {\n    id: 'category-salary',\n    name: 'Salário',\n    type: 'INCOME',\n  },\n  {\n    id: 'category-freelance',\n    name: 'Freelance',\n    type: 'INCOME',\n  },\n  {\n    id: 'category-investments',\n    name: 'Investimentos',\n    type: 'INCOME',\n  },\n  {\n    id: 'category-bonus',\n    name: 'Bônus',\n    type: 'INCOME',\n  },\n  // Expense categories\n  {\n    id: 'category-groceries',\n    name: 'Supermercado',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-utilities',\n    name: 'Contas',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-transport',\n    name: 'Transporte',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-health',\n    name: 'Saúde',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-education',\n    name: 'Educação',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-entertainment',\n    name: 'Entretenimento',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-clothing',\n    name: 'Roupas',\n    type: 'EXPENSE',\n  },\n  {\n    id: 'category-home',\n    name: 'Casa',\n    type: 'EXPENSE',\n  },\n  // Transfer categories\n  {\n    id: 'category-transfer',\n    name: 'Transferência',\n    type: 'TRANSFER',\n  },\n  {\n    id: 'category-savings',\n    name: 'Poupança',\n    type: 'TRANSFER',\n  },\n]"
                }
            ],
            "src/app/core/mocks/handlers/credit-cards.handlers.ts": [
                {
                    "name": "creditCardHandlers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/credit-cards.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  // Credit Card endpoints\n  http.post('/credit-card/create-credit-card', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.name || !body.limit || !body.closingDay || !body.dueDay || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.limit <= 0) {\n      return HttpResponse.json({ error: 'Limit must be positive' }, { status: 400 });\n    }\n\n    if (body.closingDay < 1 || body.closingDay > 31) {\n      return HttpResponse.json({ error: 'Closing day must be between 1 and 31' }, { status: 400 });\n    }\n\n    if (body.dueDay < 1 || body.dueDay > 31) {\n      return HttpResponse.json({ error: 'Due day must be between 1 and 31' }, { status: 400 });\n    }\n\n    const newCreditCard = {\n      id: 'credit-card-' + Date.now(),\n      name: body.name,\n      limit: body.limit,\n      closingDay: body.closingDay,\n      dueDay: body.dueDay,\n      budgetId: body.budgetId,\n    };\n\n    return HttpResponse.json({ id: newCreditCard.id }, { status: 201 });\n  }),\n\n  http.post('/credit-card/update-credit-card', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.name || !body.limit || !body.closingDay || !body.dueDay) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.limit <= 0) {\n      return HttpResponse.json({ error: 'Limit must be positive' }, { status: 400 });\n    }\n\n    if (body.closingDay < 1 || body.closingDay > 31) {\n      return HttpResponse.json({ error: 'Closing day must be between 1 and 31' }, { status: 400 });\n    }\n\n    if (body.dueDay < 1 || body.dueDay > 31) {\n      return HttpResponse.json({ error: 'Due day must be between 1 and 31' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/credit-card/delete-credit-card', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  // Credit Card Bill endpoints\n  http.post('/credit-card-bill/create-credit-card-bill', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.creditCardId || !body.closingDate || !body.dueDate || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    const newBill = {\n      id: 'bill-' + Date.now(),\n      creditCardId: body.creditCardId,\n      closingDate: body.closingDate,\n      dueDate: body.dueDate,\n      amount: body.amount,\n      paid: false,\n    };\n\n    return HttpResponse.json({ id: newBill.id }, { status: 201 });\n  }),\n\n  http.post('/credit-card-bill/update-credit-card-bill', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.closingDate || !body.dueDate || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/credit-card-bill/delete-credit-card-bill', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/credit-card-bill/pay-credit-card-bill', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (\n      !body.creditCardBillId ||\n      !body.accountId ||\n      !body.userId ||\n      !body.budgetId ||\n      !body.amount ||\n      !body.paymentCategoryId\n    ) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/credit-card-bill/reopen-credit-card-bill', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.creditCardBillId || !body.userId || !body.budgetId || !body.justification) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
                },
                {
                    "name": "mockCreditCardBills",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/credit-cards.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    id: 'bill-1',\n    creditCardId: 'credit-card-1',\n    closingDate: '2025-01-15T23:59:59Z',\n    dueDate: '2025-01-25T23:59:59Z',\n    amount: 1200.0,\n    paid: false,\n  },\n  {\n    id: 'bill-2',\n    creditCardId: 'credit-card-2',\n    closingDate: '2025-01-05T23:59:59Z',\n    dueDate: '2025-01-15T23:59:59Z',\n    amount: 450.0,\n    paid: true,\n  },\n]"
                },
                {
                    "name": "mockCreditCards",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/credit-cards.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    id: 'credit-card-1',\n    name: 'Cartão Principal',\n    limit: 5000.0,\n    closingDay: 15,\n    dueDay: 25,\n    budgetId: 'budget-1',\n  },\n  {\n    id: 'credit-card-2',\n    name: 'Cartão de Emergência',\n    limit: 2000.0,\n    closingDay: 5,\n    dueDay: 15,\n    budgetId: 'budget-1',\n  },\n]"
                }
            ],
            "src/app/core/mocks/handlers/envelopes.handlers.ts": [
                {
                    "name": "envelopeHandlers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/envelopes.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  http.get('/envelopes', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const budgetId = url.searchParams.get('budgetId');\n\n    if (!budgetId) {\n      return HttpResponse.json({ error: 'budgetId is required' }, { status: 400 });\n    }\n\n    const filteredEnvelopes = mockEnvelopes.filter((envelope) => envelope.budgetId === budgetId);\n\n    return HttpResponse.json({\n      data: filteredEnvelopes,\n      meta: {\n        count: filteredEnvelopes.length,\n      },\n    });\n  }),\n\n  http.post('/envelope/create-envelope', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.name || !body.monthlyLimit || !body.budgetId || !body.categoryId || !body.userId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.monthlyLimit <= 0) {\n      return HttpResponse.json({ error: 'Monthly limit must be positive' }, { status: 400 });\n    }\n\n    const newEnvelope = {\n      id: 'envelope-' + Date.now(),\n      name: body.name,\n      monthlyLimit: body.monthlyLimit,\n      currentAmount: 0,\n      budgetId: body.budgetId,\n      categoryId: body.categoryId,\n    };\n\n    return HttpResponse.json({ id: newEnvelope.id }, { status: 201 });\n  }),\n\n  http.post('/envelope/update-envelope', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.envelopeId || !body.userId || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.monthlyLimit !== undefined && body.monthlyLimit <= 0) {\n      return HttpResponse.json({ error: 'Monthly limit must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/envelope/delete-envelope', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.envelopeId || !body.userId || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/envelope/add-amount-envelope', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.envelopeId || !body.userId || !body.budgetId || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/envelope/remove-amount-envelope', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.envelopeId || !body.userId || !body.budgetId || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/envelope/transfer-between-envelopes', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (\n      !body.sourceEnvelopeId ||\n      !body.targetEnvelopeId ||\n      !body.userId ||\n      !body.budgetId ||\n      !body.amount\n    ) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    if (body.sourceEnvelopeId === body.targetEnvelopeId) {\n      return HttpResponse.json(\n        { error: 'Source and target envelopes must be different' },\n        { status: 400 }\n      );\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
                },
                {
                    "name": "mockEnvelopes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/envelopes.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    id: 'envelope-1',\n    name: 'Alimentação',\n    monthlyLimit: 800.0,\n    currentAmount: 450.0,\n    budgetId: 'budget-1',\n    categoryId: 'category-groceries',\n  },\n  {\n    id: 'envelope-2',\n    name: 'Transporte',\n    monthlyLimit: 300.0,\n    currentAmount: 180.0,\n    budgetId: 'budget-1',\n    categoryId: 'category-transport',\n  },\n  {\n    id: 'envelope-3',\n    name: 'Entretenimento',\n    monthlyLimit: 200.0,\n    currentAmount: 75.0,\n    budgetId: 'budget-1',\n    categoryId: 'category-entertainment',\n  },\n  {\n    id: 'envelope-4',\n    name: 'Saúde',\n    monthlyLimit: 500.0,\n    currentAmount: 320.0,\n    budgetId: 'budget-1',\n    categoryId: 'category-health',\n  },\n  {\n    id: 'envelope-5',\n    name: 'Educação',\n    monthlyLimit: 400.0,\n    currentAmount: 0.0,\n    budgetId: 'budget-1',\n    categoryId: 'category-education',\n  },\n]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Environment",
                    "defaultValue": "{\n  production: true,\n  apiUrl: 'https://api.orca-sonhos.com',\n  version: '1.0.0',\n  debug: false,\n  enableLogging: false,\n  authBypass: false,\n  firebase: {\n    apiKey: 'AIzaSyCkQKwFo-txr5p7v_rMM56Tznj4V8vA9tc',\n    authDomain: 'orca-sonhos.firebaseapp.com',\n    projectId: 'orca-sonhos',\n    storageBucket: 'orca-sonhos.firebasestorage.app',\n    messagingSenderId: '211253976316',\n    appId: '1:211253976316:web:7d7981947785a2fa400b79',\n  },\n  features: {\n    offlineMode: false,\n    analytics: true,\n    errorReporting: true,\n  },\n}"
                }
            ],
            "src/environments/environment.test.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Environment",
                    "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:3001/api',\n  version: '1.0.0-test',\n  debug: true,\n  enableLogging: true,\n  authBypass: true,\n  firebase: {\n    apiKey: 'AIzaSyCkQKwFo-txr5p7v_rMM56Tznj4V8vA9tc',\n    authDomain: 'orca-sonhos.firebaseapp.com',\n    projectId: 'orca-sonhos',\n    storageBucket: 'orca-sonhos.firebasestorage.app',\n    messagingSenderId: '211253976316',\n    appId: '1:211253976316:web:7d7981947785a2fa400b79',\n  },\n  features: {\n    offlineMode: false,\n    analytics: false,\n    errorReporting: false,\n  },\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Environment",
                    "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:4200/api',\n  version: '1.0.0',\n  debug: true,\n  enableLogging: true,\n  authBypass: true,\n  firebase: {\n    apiKey: 'AIzaSyCkQKwFo-txr5p7v_rMM56Tznj4V8vA9tc',\n    authDomain: 'orca-sonhos.firebaseapp.com',\n    projectId: 'orca-sonhos',\n    storageBucket: 'orca-sonhos.firebasestorage.app',\n    messagingSenderId: '211253976316',\n    appId: '1:211253976316:web:7d7981947785a2fa400b79',\n  },\n  features: {\n    offlineMode: false,\n    analytics: false,\n    errorReporting: false,\n  },\n}"
                }
            ],
            "src/app/core/interceptors/error/error.interceptor.ts": [
                {
                    "name": "errorInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/interceptors/error/error.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\n  const notificationService = inject(NotificationService);\n\n  return next(req).pipe(\n    catchError((error: HttpErrorResponse) => {\n      let errorMessage = 'Ocorreu um erro inesperado';\n      let errorTitle = 'Erro';\n\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = `Erro de cliente: ${error.error.message}`;\n        errorTitle = 'Erro de Rede';\n      } else {\n        switch (error.status) {\n          case 400:\n            errorMessage = 'Dados inválidos. Verifique as informações enviadas.';\n            errorTitle = 'Dados Inválidos';\n            break;\n          case 401:\n            errorMessage = 'Não autorizado. Faça login novamente.';\n            errorTitle = 'Não Autorizado';\n            break;\n          case 403:\n            errorMessage = 'Acesso negado. Você não tem permissão para esta ação.';\n            errorTitle = 'Acesso Negado';\n            break;\n          case 404:\n            errorMessage = 'Recurso não encontrado.';\n            errorTitle = 'Não Encontrado';\n            break;\n          case 409:\n            errorMessage = 'Conflito. O recurso já existe ou está em uso.';\n            errorTitle = 'Conflito';\n            break;\n          case 422:\n            errorMessage = 'Dados inválidos. Verifique os campos obrigatórios.';\n            errorTitle = 'Validação';\n            break;\n          case 429:\n            errorMessage = 'Muitas tentativas. Tente novamente em alguns minutos.';\n            errorTitle = 'Muitas Tentativas';\n            break;\n          case 500:\n            errorMessage = 'Erro interno do servidor. Tente novamente mais tarde.';\n            errorTitle = 'Erro do Servidor';\n            break;\n          case 502:\n            errorMessage = 'Servidor temporariamente indisponível.';\n            errorTitle = 'Servidor Indisponível';\n            break;\n          case 503:\n            errorMessage = 'Serviço temporariamente indisponível.';\n            errorTitle = 'Serviço Indisponível';\n            break;\n          case 504:\n            errorMessage = 'Timeout da requisição. Tente novamente.';\n            errorTitle = 'Timeout';\n            break;\n          default:\n            errorMessage = `Erro ${error.status}: ${error.message}`;\n            errorTitle = 'Erro';\n        }\n      }\n\n      console.error('HTTP Error:', {\n        status: error.status,\n        message: errorMessage,\n        url: req.url,\n        method: req.method,\n      });\n\n      notificationService.showError(errorMessage, errorTitle);\n\n      return throwError(() => new Error(errorMessage));\n    })\n  );\n}"
                }
            ],
            "src/app/core/adapters/external-auth-service.adapter.ts": [
                {
                    "name": "EXTERNAL_AUTH_SERVICE_ADAPTER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/adapters/external-auth-service.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<ExternalAuthServiceAdapter>(\n  'ExternalAuthServiceAdapter'\n)"
                }
            ],
            "src/app/core/mocks/handlers/goals.handlers.ts": [
                {
                    "name": "goalHandlers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/goals.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  http.get('/goals', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const budgetId = url.searchParams.get('budgetId');\n\n    if (!budgetId) {\n      return HttpResponse.json({ error: 'budgetId is required' }, { status: 400 });\n    }\n\n    const filteredGoals = mockGoals.filter((goal) => goal.budgetId === budgetId);\n\n    return HttpResponse.json({\n      data: filteredGoals,\n      meta: {\n        count: filteredGoals.length,\n      },\n    });\n  }),\n\n  http.post('/goal/create-goal', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.name || !body.totalAmount || !body.budgetId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.totalAmount <= 0) {\n      return HttpResponse.json({ error: 'Total amount must be positive' }, { status: 400 });\n    }\n\n    const newGoal = {\n      id: 'goal-' + Date.now(),\n      name: body.name,\n      totalAmount: body.totalAmount,\n      accumulatedAmount: body.accumulatedAmount || 0,\n      deadline: body.deadline,\n      budgetId: body.budgetId,\n    };\n\n    return HttpResponse.json({ id: newGoal.id }, { status: 201 });\n  }),\n\n  http.post('/goal/update-goal', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.name || !body.totalAmount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.totalAmount <= 0) {\n      return HttpResponse.json({ error: 'Total amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/goal/delete-goal', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/goal/add-amount-goal', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.amount) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
                },
                {
                    "name": "mockGoals",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/goals.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    id: 'goal-1',\n    name: 'Viagem para Europa',\n    totalAmount: 15000.0,\n    accumulatedAmount: 5000.0,\n    deadline: '2025-12-31T23:59:59Z',\n    budgetId: 'budget-1',\n  },\n  {\n    id: 'goal-2',\n    name: 'Reserva de emergência',\n    totalAmount: 10000.0,\n    accumulatedAmount: 7500.0,\n    deadline: '2025-06-30T23:59:59Z',\n    budgetId: 'budget-1',\n  },\n  {\n    id: 'goal-3',\n    name: 'Novo notebook',\n    totalAmount: 3000.0,\n    accumulatedAmount: 1200.0,\n    deadline: '2025-03-31T23:59:59Z',\n    budgetId: 'budget-1',\n  },\n  {\n    id: 'goal-4',\n    name: 'Casa própria',\n    totalAmount: 200000.0,\n    accumulatedAmount: 25000.0,\n    deadline: '2027-12-31T23:59:59Z',\n    budgetId: 'budget-2',\n  },\n]"
                }
            ],
            "src/app/core/mocks/handlers/index.ts": [
                {
                    "name": "handlers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  ...authHandlers,\n  ...budgetHandlers,\n  ...accountHandlers,\n  ...transactionHandlers,\n  ...goalHandlers,\n  ...categoryHandlers,\n  ...envelopeHandlers,\n  ...creditCardHandlers,\n]"
                }
            ],
            "src/app/core/mocks/handlers/transactions.handlers.ts": [
                {
                    "name": "mockTransactions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/transactions.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  {\n    id: 'transaction-1',\n    date: '2025-01-10T10:30:00Z',\n    description: 'Salário',\n    amount: 3000.0,\n    direction: 'INCOME',\n    accountId: 'account-1',\n    categoryId: 'category-salary',\n  },\n  {\n    id: 'transaction-2',\n    date: '2025-01-09T14:20:00Z',\n    description: 'Supermercado',\n    amount: 150.0,\n    direction: 'EXPENSE',\n    accountId: 'account-1',\n    categoryId: 'category-groceries',\n  },\n  {\n    id: 'transaction-3',\n    date: '2025-01-08T09:15:00Z',\n    description: 'Transferência para poupança',\n    amount: 500.0,\n    direction: 'TRANSFER',\n    accountId: 'account-1',\n    categoryId: 'category-transfer',\n  },\n  {\n    id: 'transaction-4',\n    date: '2025-01-07T16:45:00Z',\n    description: 'Conta de luz',\n    amount: 80.0,\n    direction: 'EXPENSE',\n    accountId: 'account-1',\n    categoryId: 'category-utilities',\n  },\n  {\n    id: 'transaction-5',\n    date: '2025-01-06T11:30:00Z',\n    description: 'Freelance',\n    amount: 800.0,\n    direction: 'INCOME',\n    accountId: 'account-4',\n    categoryId: 'category-freelance',\n  },\n]"
                },
                {
                    "name": "transactionHandlers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/handlers/transactions.handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  http.get('/transactions', ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const url = new URL(request.url);\n    const budgetId = url.searchParams.get('budgetId');\n    const accountId = url.searchParams.get('accountId');\n    const categoryId = url.searchParams.get('categoryId');\n    const dateFrom = url.searchParams.get('dateFrom');\n    const dateTo = url.searchParams.get('dateTo');\n    const page = parseInt(url.searchParams.get('page') || '1');\n    const pageSize = Math.min(parseInt(url.searchParams.get('pageSize') || '20'), 100);\n\n    if (!budgetId) {\n      return HttpResponse.json({ error: 'budgetId is required' }, { status: 400 });\n    }\n\n    let filteredTransactions = [...mockTransactions];\n\n    if (accountId) {\n      filteredTransactions = filteredTransactions.filter((t) => t.accountId === accountId);\n    }\n\n    if (categoryId) {\n      filteredTransactions = filteredTransactions.filter((t) => t.categoryId === categoryId);\n    }\n\n    if (dateFrom) {\n      const fromDate = new Date(dateFrom);\n      filteredTransactions = filteredTransactions.filter((t) => new Date(t.date) >= fromDate);\n    }\n\n    if (dateTo) {\n      const toDate = new Date(dateTo);\n      filteredTransactions = filteredTransactions.filter((t) => new Date(t.date) <= toDate);\n    }\n\n    const startIndex = (page - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedTransactions = filteredTransactions.slice(startIndex, endIndex);\n\n    return HttpResponse.json({\n      data: paginatedTransactions,\n      meta: {\n        page,\n        pageSize,\n        hasNext: endIndex < filteredTransactions.length,\n      },\n    });\n  }),\n\n  http.post('/transaction/create-transaction', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (\n      !body.userId ||\n      !body.description ||\n      !body.amount ||\n      !body.type ||\n      !body.accountId ||\n      !body.categoryId ||\n      !body.budgetId\n    ) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    const newTransaction = {\n      id: 'transaction-' + Date.now(),\n      description: body.description,\n      amount: body.amount,\n      type: body.type,\n      accountId: body.accountId,\n      categoryId: body.categoryId,\n      budgetId: body.budgetId,\n      transactionDate: body.transactionDate || new Date().toISOString(),\n    };\n\n    return HttpResponse.json({ id: newTransaction.id }, { status: 201 });\n  }),\n\n  http.post('/transaction/update-transaction', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.id) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    if (body.amount !== undefined && body.amount <= 0) {\n      return HttpResponse.json({ error: 'Amount must be positive' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/transaction/delete-transaction', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.id || !body.userId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/transaction/cancel-scheduled-transaction', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.userId || !body.budgetId || !body.transactionId || !body.cancellationReason) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n\n  http.post('/transaction/mark-transaction-late', async ({ request }) => {\n    const authHeader = request.headers.get('authorization');\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return HttpResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = (await request.json()) as any;\n\n    if (!body.transactionId) {\n      return HttpResponse.json({ error: 'Missing required fields' }, { status: 400 });\n    }\n\n    return HttpResponse.json({ success: true }, { status: 200 });\n  }),\n]"
                }
            ],
            "src/app/app.routes.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Routes",
                    "defaultValue": "[\n  {\n    path: '',\n    redirectTo: '/dashboard',\n    pathMatch: 'full',\n  },\n  {\n    path: 'dashboard',\n    loadComponent: () =>\n      \"import('./features/dashboard/pages/dashboard.page').then((m) => m.DashboardPage)\",\n  },\n]"
                }
            ],
            "src/app/core/mocks/server.ts": [
                {
                    "name": "server",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "setupServer(...handlers)"
                }
            ],
            "src/app/core/mocks/browser.ts": [
                {
                    "name": "worker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/mocks/browser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "setupWorker(...handlers)"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/core/interceptors/auth/auth.interceptor.ts": [
                {
                    "name": "shouldSkipAuth",
                    "file": "src/app/core/interceptors/auth/auth.interceptor.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/dtos/budget/budget-types.ts": [
                {
                    "name": "AccountType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"CHECKING_ACCOUNT\" | \"SAVINGS_ACCOUNT\" | \"PHYSICAL_WALLET\" | \"DIGITAL_WALLET\" | \"INVESTMENT_ACCOUNT\"",
                    "file": "src/dtos/budget/budget-types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "BudgetType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"PERSONAL\" | \"SHARED\"",
                    "file": "src/dtos/budget/budget-types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts": [
                {
                    "name": "GoalProgressMilestone",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"25\" | \"50\" | \"75\" | \"90\" | \"100\"",
                    "file": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "GoalProgressSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "GoalProgressTheme",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "GoalProgressVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"compact\" | \"detailed\" | \"minimal\"",
                    "file": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts": [
                {
                    "name": "NavigationOrientation",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"horizontal\" | \"vertical\"",
                    "file": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "NavigationSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "NavigationVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"minimal\" | \"sidebar\" | \"tabs\"",
                    "file": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts": [
                {
                    "name": "OsAlertRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"alert\" | \"status\" | \"alertdialog\"",
                    "file": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsAlertSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsAlertType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"success\" | \"warning\" | \"error\" | \"info\"",
                    "file": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts": [
                {
                    "name": "OsAvatarRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"img\" | \"button\" | \"presentation\"",
                    "file": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsAvatarSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\"",
                    "file": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsAvatarStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"online\" | \"offline\" | \"away\" | \"busy\" | \"invisible\"",
                    "file": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsAvatarVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"circle\" | \"square\" | \"rounded\"",
                    "file": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts": [
                {
                    "name": "OsBadgePosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\" | \"inline\"",
                    "file": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsBadgeRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"status\" | \"alert\" | \"decorative\"",
                    "file": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsBadgeSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
                    "file": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsBadgeVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\" | \"goal-active\" | \"goal-completed\" | \"goal-overdue\"",
                    "file": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-button/os-button.component.ts": [
                {
                    "name": "OsButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-button/os-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"tertiary\" | \"danger\" | \"success\" | \"warning\"",
                    "file": "src/app/shared/ui-components/atoms/os-button/os-button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-card/os-card.component.ts": [
                {
                    "name": "OsCardSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-card/os-card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsCardVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"outlined\" | \"elevated\" | \"flat\"",
                    "file": "src/app/shared/ui-components/molecules/os-card/os-card.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts": [
                {
                    "name": "OsCheckboxRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"checkbox\" | \"switch\"",
                    "file": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsCheckboxSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsCheckboxVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\"",
                    "file": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-chip/os-chip.component.ts": [
                {
                    "name": "OsChipSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-chip/os-chip.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsChipVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"warning\" | \"danger\" | \"neutral\"",
                    "file": "src/app/shared/ui-components/atoms/os-chip/os-chip.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts": [
                {
                    "name": "OsDataGridSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsDataGridVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"compact\" | \"detailed\"",
                    "file": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts": [
                {
                    "name": "OsDataTableRow",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Record<string | >",
                    "file": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                },
                {
                    "name": "OsDataTableSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsDataTableVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"striped\" | \"bordered\"",
                    "file": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-date-input/os-date-input.component.ts": [
                {
                    "name": "OsDateInputSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-date-input/os-date-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts": [
                {
                    "name": "OsDatePickerRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"presentation\" | \"dialog\" | \"group\"",
                    "file": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsDatePickerSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsDatePickerVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"outlined\" | \"filled\"",
                    "file": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts": [
                {
                    "name": "OsDropdownAlignment",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"start\" | \"center\" | \"end\"",
                    "file": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsDropdownSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsDropdownVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"accent\"",
                    "file": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts": [
                {
                    "name": "OsFilterBarSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsFilterBarVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"compact\" | \"expanded\"",
                    "file": "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts": [
                {
                    "name": "OsFormFieldSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsFormFieldType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"email\" | \"password\" | \"number\" | \"tel\" | \"url\"",
                    "file": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsFormFieldValidationState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"pristine\" | \"dirty\" | \"touched\" | \"invalid\" | \"valid\"",
                    "file": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsFormFieldVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"outlined\" | \"filled\"",
                    "file": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts": [
                {
                    "name": "OsFormGroupColumns",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"1\" | \"2\" | \"3\"",
                    "file": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsFormGroupSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsFormGroupVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"compact\" | \"spaced\"",
                    "file": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts": [
                {
                    "name": "OsFormSectionSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsFormSectionTheme",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsFormSectionVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"card\" | \"outlined\" | \"minimal\"",
                    "file": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts": [
                {
                    "name": "OsIconRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"decorative\" | \"informative\" | \"interactive\"",
                    "file": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsIconSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\"",
                    "file": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsIconVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\"",
                    "file": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-input/os-input.component.ts": [
                {
                    "name": "OsInputSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-input/os-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsInputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"email\" | \"password\" | \"number\" | \"tel\" | \"url\" | \"search\"",
                    "file": "src/app/shared/ui-components/atoms/os-input/os-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-label/os-label.component.ts": [
                {
                    "name": "OsLabelSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsLabelVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\"",
                    "file": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsLabelWeight",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"regular\" | \"medium\" | \"semibold\" | \"bold\"",
                    "file": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts": [
                {
                    "name": "OsModalSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\" | \"fullscreen\"",
                    "file": "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsModalVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"confirmation\" | \"form\" | \"info\"",
                    "file": "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-money-display/os-money-display.component.ts": [
                {
                    "name": "OsMoneyDisplaySize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-money-display/os-money-display.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsMoneyDisplayVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"positive\" | \"negative\" | \"neutral\" | \"success\" | \"warning\" | \"error\" | \"info\"",
                    "file": "src/app/shared/ui-components/molecules/os-money-display/os-money-display.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-money-input/os-money-input.component.ts": [
                {
                    "name": "OsMoneyInputSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-money-input/os-money-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts": [
                {
                    "name": "OsNavigationItemRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"navigation\" | \"menuitem\" | \"tab\" | \"button\"",
                    "file": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsNavigationItemSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsNavigationItemVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"accent\"",
                    "file": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts": [
                {
                    "name": "OsRadioRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"radio\" | \"switch\"",
                    "file": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsRadioSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsRadioVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\"",
                    "file": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts": [
                {
                    "name": "OsSearchBoxRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"searchbox\" | \"combobox\" | \"textbox\"",
                    "file": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsSearchBoxSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsSearchBoxVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"outlined\" | \"filled\"",
                    "file": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-select/os-select.component.ts": [
                {
                    "name": "OsSelectSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-select/os-select.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts": [
                {
                    "name": "OsSliderFormat",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"number\" | \"currency\" | \"percentage\"",
                    "file": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsSliderRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"slider\" | \"progressbar\"",
                    "file": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsSliderSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts": [
                {
                    "name": "OsSpinnerRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"status\" | \"progressbar\" | \"presentation\"",
                    "file": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsSpinnerSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"",
                    "file": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsSpinnerType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"overlay\"",
                    "file": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsSpinnerVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\"",
                    "file": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts": [
                {
                    "name": "OsToggleRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"switch\" | \"checkbox\"",
                    "file": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsToggleSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsToggleVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"warning\" | \"danger\"",
                    "file": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts": [
                {
                    "name": "OsTooltipPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"above\" | \"below\" | \"left\" | \"right\" | \"before\" | \"after\"",
                    "file": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsTooltipRole",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"tooltip\" | \"status\" | \"alert\"",
                    "file": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsTooltipSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "OsTooltipVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"primary\" | \"secondary\" | \"accent\" | \"error\" | \"warning\" | \"info\" | \"success\"",
                    "file": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts": [
                {
                    "name": "SidebarSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "SidebarTheme",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "SidebarVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"minimal\" | \"compact\" | \"expanded\"",
                    "file": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts": [
                {
                    "name": "TransactionListSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "TransactionListTheme",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "TransactionListVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"default\" | \"compact\" | \"detailed\"",
                    "file": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/features/dashboard/types/dashboard.types.ts": [
                {
                    "name": "WidgetSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\" | \"full-width\"",
                    "file": "src/app/features/dashboard/types/dashboard.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "WidgetType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"budget-summary\" | \"goal-progress\" | \"transaction-list\" | \"account-balance\" | \"monthly-trends\" | \"quick-actions\"",
                    "file": "src/app/features/dashboard/types/dashboard.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "children": [
            {
                "name": "dashboard",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "/dashboard",
                "kind": "route-redirect",
                "filename": "src/app/app.routes.ts"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "firebaseConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/adapters/external-auth-service.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthCredentials",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/adapters/external-auth-service.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthResult",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/adapters/external-auth-service.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthUser",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/adapters/external-auth-service.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ExternalAuthServiceAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/adapters/external-auth-service.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXTERNAL_AUTH_SERVICE_ADAPTER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/auth/auth.interceptor.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "shouldSkipAuth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/auth/auth.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/error/error.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/browser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "worker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/accounts.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accountHandlers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/accounts.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockAccounts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/auth.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authHandlers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/budgets.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "budgetHandlers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/budgets.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockBudgetOverview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/budgets.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockBudgets",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/categories.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "categoryHandlers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/categories.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockCategories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/credit-cards.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "creditCardHandlers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/credit-cards.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockCreditCardBills",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/credit-cards.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockCreditCards",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/envelopes.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "envelopeHandlers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/envelopes.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockEnvelopes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/goals.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "goalHandlers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/goals.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockGoals",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "handlers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/transactions.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockTransactions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/handlers/transactions.handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "transactionHandlers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/mocks/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "server",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/api/api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiService",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/api/api.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ApiError",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/api/api.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ApiResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/auth/__mocks__/external-auth-service.adapter.mock.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockExternalAuthServiceAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/budget-selection/budget-selection.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BudgetSelectionService",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/config/config.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ConfigService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/config/config.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ApiConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/config/config.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FirebaseConfig",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/notification/notification.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NotificationService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/notification/notification.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Notification",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/budget-selector/budget-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BudgetSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/dashboard-widgets/dashboard-widgets.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardWidgetsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/pages/dashboard.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardPage",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/services/dashboard-data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DashboardDataService",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/types/dashboard.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BudgetSelection",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/types/dashboard.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DashboardData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/types/dashboard.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DashboardMetrics",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/types/dashboard.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DashboardState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/types/dashboard.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "QuickAction",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/types/dashboard.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WidgetConfiguration",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/types/dashboard.types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WidgetPosition",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/types/dashboard.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "WidgetSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/types/dashboard.types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "WidgetType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsAvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/35",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsAvatarRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsAvatarSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsAvatarStatus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-avatar/os-avatar.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsAvatarVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsBadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsBadgePosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsBadgeRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsBadgeSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-badge/os-badge.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsBadgeVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-button/os-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-button/os-button.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsButtonSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-button/os-button.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsButtonVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsCheckboxRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsCheckboxSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-checkbox/os-checkbox.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsCheckboxVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-chip/os-chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-chip/os-chip.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsChipSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-chip/os-chip.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsChipVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-date-input/os-date-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsDateInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/52",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-date-input/os-date-input.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDateInputSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsIconRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsIconSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-icon/os-icon.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsIconVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-input/os-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-input/os-input.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsInputSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-input/os-input.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsInputType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsLabelSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsLabelVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-label/os-label.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsLabelWeight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-money-input/os-money-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsMoneyInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/43",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-money-input/os-money-input.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsMoneyInputSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-progress-bar/os-progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsRadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsRadioRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsRadioSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-radio/os-radio.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsRadioVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-select/os-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/44",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-select/os-select.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsSelectOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-select/os-select.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSelectSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsSliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/58",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSliderFormat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSliderRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-slider/os-slider.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSliderSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSpinnerRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSpinnerSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSpinnerType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-spinner/os-spinner.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSpinnerVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsToggleRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsToggleSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/atoms/os-toggle/os-toggle.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsToggleVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsAlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsAlertRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsAlertSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-alert/os-alert.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsAlertType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-card/os-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-card/os-card.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsCardSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-card/os-card.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsCardVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsDataTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/36",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsDataTableAction",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsDataTableColumn",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDataTableRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDataTableSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-data-table/os-data-table.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDataTableVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsDatePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/63",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "QuickDateOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDatePickerRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDatePickerSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-date-picker/os-date-picker.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDatePickerVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/69",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsDropdownGroup",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsDropdownOption",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDropdownAlignment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDropdownSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-dropdown/os-dropdown.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDropdownVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsFilterBarComponent",
                "coveragePercent": 28,
                "coverageCount": "8/28",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsFilterOption",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFilterBarSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-filter-bar/os-filter-bar.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFilterBarVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsFormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/52",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFormFieldSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFormFieldType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFormFieldValidationState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-form-field/os-form-field.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFormFieldVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsFormGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFormGroupColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFormGroupSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-form-group/os-form-group.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFormGroupVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-money-display/os-money-display.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsMoneyDisplayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-money-display/os-money-display.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsMoneyDisplaySize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-money-display/os-money-display.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsMoneyDisplayVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsNavigationItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsNavigationItemRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsNavigationItemSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-navigation-item/os-navigation-item.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsNavigationItemVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsSearchBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/51",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsSearchSuggestion",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSearchBoxRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSearchBoxSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-search-box/os-search-box.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsSearchBoxVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsTooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/37",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsTooltipPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsTooltipRole",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsTooltipSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/molecules/os-tooltip/os-tooltip.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsTooltipVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/notification-container/notification-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-budget-summary/os-budget-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsBudgetSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-budget-summary/os-budget-summary.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BudgetSummaryData",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-budget-tracker/os-budget-tracker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsBudgetTrackerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-budget-tracker/os-budget-tracker.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BudgetTrackerData",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-budget-tracker/os-budget-tracker.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BudgetTrends",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-budget-tracker/os-budget-tracker.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MonthlySpending",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-category-manager/os-category-manager.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsCategoryManagerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/42",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-category-manager/os-category-manager.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Category",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-category-manager/os-category-manager.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CategoryFormData",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsDataGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/62",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsDataGridFilter",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsDataGridPagination",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsDataGridSort",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDataGridSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-data-grid/os-data-grid.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsDataGridVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-footer/os-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-footer/os-footer.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FooterLink",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-footer/os-footer.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FooterSection",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsFormSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FormSectionField",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFormSectionSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFormSectionTheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-form-section/os-form-section.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsFormSectionVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsGoalProgressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/46",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GoalProgressData",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "GoalProgressMilestone",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "GoalProgressSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "GoalProgressTheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-goal-progress/os-goal-progress.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "GoalProgressVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-goal-tracker/os-goal-tracker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsGoalTrackerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/37",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-goal-tracker/os-goal-tracker.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GoalTrackerData",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-goal-tracker/os-goal-tracker.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProgressHistory",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-header/os-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/51",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-header/os-header.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HeaderAction",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-header/os-header.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HeaderNavigationItem",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-header/os-header.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HeaderUserMenu",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/39",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OsModalAction",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsModalSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-modal/os-modal.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "OsModalVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavigationItem",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "NavigationOrientation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "NavigationSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-navigation/os-navigation.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "NavigationVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-page-header/os-page-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsPageHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-page-header/os-page-header.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BreadcrumbItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-page-header/os-page-header.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PageHeaderAction",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SidebarItem",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "SidebarSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "SidebarTheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-sidebar/os-sidebar.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "SidebarVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsTransactionListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/64",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Transaction",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TransactionListFilter",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TransactionListPagination",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TransactionListSort",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "TransactionListSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "TransactionListTheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/organisms/os-transaction-list/os-transaction-list.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "TransactionListVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-dashboard-template/os-dashboard-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsDashboardTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/68",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-dashboard-template/os-dashboard-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DashboardLayout",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-dashboard-template/os-dashboard-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DashboardWidget",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-detail-template/os-detail-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsDetailTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-detail-template/os-detail-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DetailTemplateAction",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-detail-template/os-detail-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DetailTemplateField",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-detail-template/os-detail-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DetailTemplateSection",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-drawer-template/os-drawer-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsDrawerTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-drawer-template/os-drawer-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DrawerTemplateConfig",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-form-template/os-form-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsFormTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-form-template/os-form-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FormTemplateConfig",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-list-template/os-list-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsListTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/77",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-list-template/os-list-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListTemplateAction",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-list-template/os-list-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListTemplateData",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-list-template/os-list-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListTemplateFilter",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-modal-template/os-modal-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsModalTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-modal-template/os-modal-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ModalTemplateConfig",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-panel-template/os-panel-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsPanelTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-panel-template/os-panel-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PanelTemplateConfig",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-wizard-template/os-wizard-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OsWizardTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-wizard-template/os-wizard-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WizardStep",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui-components/templates/os-wizard-template/os-wizard-template.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WizardTemplateConfig",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/budget-types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AccountDto",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/budget-types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BudgetDto",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/budget-types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BudgetOverviewDto",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/budget-types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BudgetParticipantDto",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/budget-types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BudgetTotalsDto",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/budget-types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "AccountType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/budget-types.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "BudgetType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/create-budget-request-dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateBudgetRequestDto",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/create-budget-response-dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateBudgetResponseDto",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/get-budget-overview-response-dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetBudgetOverviewResponseDto",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/get-budgets-response-dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetBudgetsResponseDto",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/update-budget-request-dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateBudgetRequestDto",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/dtos/budget/update-budget-response-dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateBudgetResponseDto",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Environment",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/infra/firebase/firebase-auth-service-adapter.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FirebaseAuthServiceAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/infra/mock/mock-auth-service-adapter.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MockAuthServiceAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            }
        ]
    }
}